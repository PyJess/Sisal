{
  "test_cases": [
    {
      "Title": "Verify Project Documentation Revision History is Accurate and Complete",
      "ID": "TC-001",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the project documentation for 'ZENIT -- GESTIONE FIDO CENTRALIZZATO -- FASE 1'.",
          "Expected Result": "Project documentation is accessible and displays the revision history section."
        },
        {
          "Step": 2,
          "Step Description": "Review the revision history table for completeness, including revision number, object of revision, and date.",
          "Expected Result": "Revision history table lists all revisions with corresponding numbers, descriptions, and dates."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the latest revision (0.4) includes updates for data source, user profiles, and privacy.",
          "Expected Result": "Revision 0.4 entry describes updates for data source, user profiles, and privacy, dated 24/04/2025."
        },
        {
          "Step": 4,
          "Step Description": "Check that all previous revisions (0.1, 0.2, 0.3) are present and correctly described.",
          "Expected Result": "All previous revisions are listed with accurate descriptions and dates."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Project Documentation",
      "Preconditions": "User has access to the latest version of the project documentation.",
      "Execution Mode": "Manual",
      "Functionality": "Revision History Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Project documentation file or system with revision history.",
      "Expected Result": "The revision history in the project documentation is accurate, complete, and up-to-date for all listed revisions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the revision history section of the documentation.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Project Documentation Approval and Signature Section",
      "ID": "TC-002",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the project documentation for 'ZENIT -- GESTIONE FIDO CENTRALIZZATO -- FASE 1'.",
          "Expected Result": "Project documentation is accessible and displays the approval and signature section."
        },
        {
          "Step": 2,
          "Step Description": "Review the approval and signature section for the presence of author, verifier(s), and approver(s) names and dates.",
          "Expected Result": "Section lists the names and dates for author, verifier(s), and approver(s) as per the documentation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the author is 'Brignoli Giancarlo' with the date '14-03-2025'.",
          "Expected Result": "Author is correctly listed as 'Brignoli Giancarlo' with the correct date."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the verifiers are 'Bernazzani Mauro', 'Gerosa Angelo' with the date '14-03-2025'.",
          "Expected Result": "Verifiers are correctly listed with the correct date."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the approver is 'Croce Alessandro'.",
          "Expected Result": "Approver is correctly listed as 'Croce Alessandro'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Project Documentation",
      "Preconditions": "User has access to the latest version of the project documentation.",
      "Execution Mode": "Manual",
      "Functionality": "Approval and Signature Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Project documentation file or system with approval and signature section.",
      "Expected Result": "The approval and signature section is accurate, complete, and up-to-date for all listed roles.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the approval and signature section of the documentation.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Project Documentation User Requirements Section Exists and is Clearly Identified",
      "ID": "TC-003",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the project documentation for 'ZENIT -- GESTIONE FIDO CENTRALIZZATO -- FASE 1'.",
          "Expected Result": "Project documentation is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Locate the section titled 'Documentazione di progetto: requisiti utente'.",
          "Expected Result": "Section 'Documentazione di progetto: requisiti utente' is present and clearly identified."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the section contains user requirements relevant to the project phase.",
          "Expected Result": "Section contains user requirements relevant to 'ZENIT -- GESTIONE FIDO CENTRALIZZATO -- FASE 1'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Project Documentation",
      "Preconditions": "User has access to the latest version of the project documentation.",
      "Execution Mode": "Manual",
      "Functionality": "User Requirements Documentation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Project documentation file or system with user requirements section.",
      "Expected Result": "The user requirements section exists, is clearly identified, and contains relevant requirements for the project phase.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the existence and identification of the user requirements section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify successful login with valid credentials (Full Access profile)",
      "ID": "TC-004",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the dashboard login page via desktop browser.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password for a Full Access profile user.",
          "Expected Result": "Credentials are entered."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User is authenticated and redirected to the dashboard main page with Full Access profile features visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Dashboard Authentication",
      "Preconditions": "User with Full Access profile exists in the system. User is logged out.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout/Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Full Access user credentials (e.g., username: fulluser, password: Passw0rd!)",
      "Expected Result": "User is logged in and Full Access dashboard is displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify login fails with invalid credentials",
      "ID": "TC-005",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the dashboard login page via desktop browser.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid username and/or password.",
          "Expected Result": "Credentials are entered."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "Authentication fails and an error message is displayed (e.g., 'Invalid username or password')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Dashboard Authentication",
      "Preconditions": "User is logged out.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout/Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid credentials (e.g., username: wronguser, password: wrongpass)",
      "Expected Result": "Login attempt is rejected and error message is shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify data collection from SAP system is performed and displayed correctly",
      "ID": "TC-006",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard with a Full Access profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection section for SAP data.",
          "Expected Result": "SAP data collection interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Trigger data collection from SAP system (e.g., click 'Collect Data' button).",
          "Expected Result": "System initiates data retrieval from SAP."
        },
        {
          "Step": 4,
          "Step Description": "Wait for data collection process to complete.",
          "Expected Result": "SAP data is displayed in the dashboard with correct values and format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection - SAP",
      "Preconditions": "User is logged in with Full Access profile. SAP system is available and contains test data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test SAP data available in SAP system.",
      "Expected Result": "SAP data is collected and displayed accurately in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify dashboard access and feature visibility for Consultatore profile",
      "ID": "TC-007",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the dashboard login page via desktop browser.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid credentials for a Consultatore profile user.",
          "Expected Result": "Credentials are entered."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User is authenticated and redirected to the dashboard main page."
        },
        {
          "Step": 4,
          "Step Description": "Verify that only features permitted for Consultatore profile are visible and accessible.",
          "Expected Result": "Consultatore profile features are visible; restricted features are hidden or disabled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Dashboard Profile Management",
      "Preconditions": "User with Consultatore profile exists in the system. User is logged out.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Consultatore user credentials (e.g., username: consult, password: Passw0rd!)",
      "Expected Result": "Consultatore profile user sees only authorized features on the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Verify data archiving for offline POS terminals",
      "ID": "TC-008",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard with a Full Access profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data archiving section for POS terminals.",
          "Expected Result": "POS data archiving interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a POS terminal that is currently offline.",
          "Expected Result": "Offline POS terminal is selected."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the data archiving process for the selected POS terminal.",
          "Expected Result": "System processes the archiving request."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the data from the offline POS terminal is archived and confirmation is displayed.",
          "Expected Result": "Data is archived and confirmation message is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving - POS Offline",
      "Preconditions": "User is logged in with Full Access profile. At least one POS terminal is offline and has data to be archived.",
      "Execution Mode": "Manual",
      "Functionality": "Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Offline POS terminal with test data.",
      "Expected Result": "Data from offline POS terminal is archived successfully and confirmation is displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Verify Automated Data Collection from Multiple Systems in Dashboard",
      "ID": "TC-009",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the automated data collection process (if not scheduled automatically).",
          "Expected Result": "System starts collecting data from all integrated systems."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the data aggregation process to complete.",
          "Expected Result": "Dashboard displays aggregated data for each customer as specified in the annex."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "User has valid credentials and access rights. All integrated systems are online and accessible. Data mapping as per annex is configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test customers and POS data available in all integrated systems.",
      "Expected Result": "Dashboard displays complete and accurate aggregated data for each customer as per the annex.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the data collection and aggregation phase (Phase I).",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Dashboard Data Accuracy and Completeness per Annex",
      "ID": "TC-010",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard after data collection is complete.",
          "Expected Result": "Dashboard loads with the latest aggregated data."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific customer from the dashboard.",
          "Expected Result": "Customer details and aggregated data are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Compare displayed data fields with those specified in the annex.",
          "Expected Result": "All required data fields are present and values match the source systems."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "Data collection process has completed successfully. Annex with required data fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data accuracy and completeness verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample customer data with known values in source systems.",
      "Expected Result": "All data fields required by the annex are present and accurate for each customer.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on data accuracy and completeness as per annex (Phase I).",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Error Handling When a Source System is Unavailable During Data Collection",
      "ID": "TC-011",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate unavailability of one integrated source system (e.g., disconnect network or stop service).",
          "Expected Result": "Source system is unreachable by the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the automated data collection process.",
          "Expected Result": "Dashboard attempts to collect data and detects the unavailable system."
        },
        {
          "Step": 3,
          "Step Description": "Observe dashboard behavior and error messages.",
          "Expected Result": "Dashboard displays a clear error message indicating which system is unavailable and which data could not be collected."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "At least one source system can be made unavailable for testing. User has access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling during data collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test customer data in all systems except the one made unavailable.",
      "Expected Result": "Dashboard provides clear error notification for unavailable systems and incomplete data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for data collection failures (Phase I).",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Data Refresh and Update Frequency in Dashboard",
      "ID": "TC-012",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard and note the timestamp of the last data update.",
          "Expected Result": "Dashboard displays the last update timestamp."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a new data update in one of the source systems (e.g., add a new transaction for a customer).",
          "Expected Result": "Source system data is updated."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the next scheduled or manual data collection cycle.",
          "Expected Result": "Dashboard refreshes and displays updated data."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the new data is reflected in the dashboard and the timestamp is updated.",
          "Expected Result": "Dashboard shows the latest data and correct update timestamp."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "Dashboard is operational. User has access. Data update in source system is possible.",
      "Execution Mode": "Manual",
      "Functionality": "Data refresh and update frequency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test customer with updatable data in source system.",
      "Expected Result": "Dashboard reflects updated data from source systems within the expected refresh interval.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data refresh and update mechanisms (Phase I).",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify extraction of historical daily and weekly credit usage for a POS",
      "ID": "TC-013",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an authorized user.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data section.",
          "Expected Result": "POS data section is displayed with search/filter options."
        },
        {
          "Step": 3,
          "Step Description": "Search for a specific POS using its unique identifier (e.g., ID RICE).",
          "Expected Result": "POS details are displayed, including historical credit usage."
        },
        {
          "Step": 4,
          "Step Description": "Select the option to view historical daily and weekly credit usage.",
          "Expected Result": "A detailed view of daily and weekly credit usage for the selected POS is shown."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Data Management",
      "Preconditions": "User has valid credentials and access rights. POS data is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Historical credit usage tracking and display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with historical credit usage data (e.g., POS ID: 12345)",
      "Expected Result": "The system displays accurate historical daily and weekly credit usage for the selected POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the extraction and display of historical usage, not report export.",
      "_polarion": "REQ-ZENIT-001"
    },
    {
      "Title": "Verify extraction of POS usage report in Excel format",
      "ID": "TC-014",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data section and search for a specific POS.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to export POS usage data to Excel.",
          "Expected Result": "System prompts for export parameters (e.g., date range, data type)."
        },
        {
          "Step": 4,
          "Step Description": "Enter a valid date range and confirm export.",
          "Expected Result": "System generates and downloads an Excel file containing the requested POS usage data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Data Management",
      "Preconditions": "User is logged in with export permissions. POS data exists for the selected period.",
      "Execution Mode": "Manual",
      "Functionality": "POS usage report export",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with usage data for the selected period (e.g., POS ID: 12345, Date Range: 01/01/2024-07/01/2024)",
      "Expected Result": "Excel file is generated and contains accurate POS usage data for the specified period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on export functionality, not on data accuracy within the application.",
      "_polarion": "REQ-ZENIT-002"
    },
    {
      "Title": "Verify retrieval of all POS data for a given owner (by VAT or fiscal code)",
      "ID": "TC-015",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data section.",
          "Expected Result": "POS data section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a POS using the owner's VAT number or fiscal code.",
          "Expected Result": "System retrieves and displays all POS associated with the provided VAT number or fiscal code."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Data Management",
      "Preconditions": "User is logged in. Multiple POS exist for the same owner in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Owner-based POS data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Owner with multiple POS (e.g., VAT: IT12345678901)",
      "Expected Result": "All POS linked to the specified VAT number or fiscal code are displayed with their respective data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover linked subjects beyond direct owner.",
      "_polarion": "REQ-ZENIT-003"
    },
    {
      "Title": "Verify real-time update of POS data after transaction",
      "ID": "TC-016",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a transaction on a POS (e.g., betting or VR).",
          "Expected Result": "Transaction is processed successfully."
        },
        {
          "Step": 3,
          "Step Description": "Immediately query the POS data for the affected POS.",
          "Expected Result": "POS data reflects the recent transaction in near real-time."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Data Management",
      "Preconditions": "User is logged in. POS is active and capable of processing transactions.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time data update",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Active POS with transaction capability (e.g., POS ID: 12345)",
      "Expected Result": "POS data is updated in near real-time after the transaction is completed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only real-time update, not delayed/batch updates.",
      "_polarion": "REQ-ZENIT-004"
    },
    {
      "Title": "Verify logging of access and data modification activities (SOX compliance)",
      "ID": "TC-017",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a data modification action (e.g., change credit limit for a POS).",
          "Expected Result": "Data modification is processed successfully."
        },
        {
          "Step": 3,
          "Step Description": "Access the audit log section as an admin user.",
          "Expected Result": "Audit log section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Search for the recent data modification event in the audit log.",
          "Expected Result": "The data modification event is logged with user, timestamp, and action details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Audit Logging",
      "Preconditions": "User has admin rights to view logs. Data modification permissions are granted.",
      "Execution Mode": "Manual",
      "Functionality": "Audit logging (SOX compliance)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User with admin rights, POS with modifiable data",
      "Expected Result": "All access and data modification activities are logged with required details for SOX compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on logging of modifications, not on log retention or export.",
      "_polarion": "REQ-ZENIT-005"
    },
    {
      "Title": "Verify alert notification upon data modification confirmation",
      "ID": "TC-018",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Modify a POS data field (e.g., credit limit, status).",
          "Expected Result": "System processes the modification."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system response after modification.",
          "Expected Result": "System displays an alert confirming the successful data modification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Data Modification",
      "Preconditions": "User is logged in with modification permissions. POS data is available for editing.",
      "Execution Mode": "Manual",
      "Functionality": "Alert notification on data modification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with editable data (e.g., POS ID: 12345)",
      "Expected Result": "User receives a clear alert confirming the data modification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only alert display, not notification delivery via other channels.",
      "_polarion": "REQ-ZENIT-006"
    },
    {
      "Title": "Verify workflow approval process for credit management",
      "ID": "TC-019",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an authorized user with approval rights.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a credit management request (e.g., credit extension or reduction) for a POS.",
          "Expected Result": "Request is created and pending approval."
        },
        {
          "Step": 3,
          "Step Description": "Access the approval workflow section as an approver.",
          "Expected Result": "Approval workflow section is displayed with pending requests."
        },
        {
          "Step": 4,
          "Step Description": "Approve or reject the pending credit management request.",
          "Expected Result": "System updates the request status and notifies relevant users."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Credit Management Workflow",
      "Preconditions": "User has approval rights. Credit management requests can be initiated.",
      "Execution Mode": "Manual",
      "Functionality": "Workflow approval for credit management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "POS with pending credit management request",
      "Expected Result": "Credit management requests follow the defined approval workflow and status updates are tracked.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers approval/rejection, not escalation or multi-level approval.",
      "_polarion": "REQ-ZENIT-007"
    },
    {
      "Title": "Verify AI-driven alert for unusual increase in POS collection",
      "ID": "TC-020",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate or identify a POS with an unusual increase in collection compared to historical data.",
          "Expected Result": "System processes the collection data."
        },
        {
          "Step": 3,
          "Step Description": "Monitor for AI-driven alerts in the credit team dashboard.",
          "Expected Result": "System generates an alert for the unusual increase in POS collection."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - AI Alerting",
      "Preconditions": "AI alerting is enabled. Sufficient historical data exists for anomaly detection.",
      "Execution Mode": "Manual",
      "Functionality": "AI-driven anomaly detection and alerting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "POS with simulated or real anomalous collection data",
      "Expected Result": "AI-driven alert is generated and visible to the credit team for unusual POS collection increases.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers alert generation, not subsequent actions or alert tuning.",
      "_polarion": "REQ-ZENIT-008"
    },
    {
      "Title": "Verify integration of new companies (e.g., Snai) into ZENIT system",
      "ID": "TC-021",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application as an admin user.",
          "Expected Result": "Admin user is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the integration process for a new company (e.g., Snai).",
          "Expected Result": "Integration wizard or interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Provide required company data and confirm integration.",
          "Expected Result": "System processes the integration and adds the new company to the ZENIT system."
        },
        {
          "Step": 4,
          "Step Description": "Verify that POS data from the new company is available and accessible.",
          "Expected Result": "POS data from the integrated company is visible and queryable in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Company Integration",
      "Preconditions": "Admin user with integration permissions. New company data is available for integration.",
      "Execution Mode": "Manual",
      "Functionality": "Company integration into ZENIT",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "New company data (e.g., Snai)",
      "Expected Result": "Newly integrated company and its POS data are accessible in the ZENIT system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers integration and data visibility, not data migration accuracy.",
      "_polarion": "REQ-ZENIT-009"
    },
    {
      "Title": "Fido Assignment at Point of Sale Activation (SIMP and GEO)",
      "ID": "TC-022",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate activation process for a new Point of Sale (PoS) with a specific terminal and contract.",
          "Expected Result": "Activation process is started for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Obtain the Cerved rating for the PoS.",
          "Expected Result": "Cerved rating is retrieved and available for assignment logic."
        },
        {
          "Step": 3,
          "Step Description": "Assign initial fido based on terminal type, contract, installed product, and Cerved rating as per Credit Policy table.",
          "Expected Result": "Fido is assigned to the PoS according to the policy and rating."
        },
        {
          "Step": 4,
          "Step Description": "If this is a transfer (voltura), ensure the fido on the old PoS ID is reset to zero and associated with the new PoS ID.",
          "Expected Result": "Old PoS fido is reset; new PoS receives the correct fido."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Credit Management",
      "Preconditions": "PoS is not yet active; Cerved rating is available; terminal and contract details are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Assignment at Activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data with various Cerved ratings and terminal types.",
      "Expected Result": "Fido is correctly assigned at activation or transfer, following Credit Policy and resetting old PoS fido if needed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-A"
    },
    {
      "Title": "Daily and Weekly Fido Recharge Logic (SIMP and GEO)",
      "ID": "TC-023",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "For a PoS managed by SIMP, verify the daily fido recharge at the start of a new day.",
          "Expected Result": "Fido is recharged to the initial set value every day."
        },
        {
          "Step": 2,
          "Step Description": "For a PoS managed by SIMP, verify the weekly fido recharge (rolling 7 days) based on the consumption of the same day in the previous week.",
          "Expected Result": "Fido is recharged according to the consumption of the corresponding day in the previous week."
        },
        {
          "Step": 3,
          "Step Description": "For a PoS managed by GEO, verify that the weekly fido is recharged every Monday to the base value set at activation.",
          "Expected Result": "Fido is reset to the base value every Monday."
        },
        {
          "Step": 4,
          "Step Description": "For VR games on SIMP terminal BEST, verify that the weekly recharge follows the GEO logic (reset to initial value every Monday).",
          "Expected Result": "Fido for VR on BEST terminal is reset to the initial value every Monday."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Credit Management",
      "Preconditions": "PoS is active with SIMP or GEO management; initial fido values are set; system date/time is controlled or simulated.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Recharge Logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with SIMP and GEO management, including VR on BEST terminal.",
      "Expected Result": "Fido is recharged according to the correct logic for each management system and product type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-A"
    },
    {
      "Title": "Fido Extension Request and Approval (SIMP and GEO)",
      "ID": "TC-024",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate fido exhaustion or near-exhaustion for a PoS.",
          "Expected Result": "System detects low or exhausted fido."
        },
        {
          "Step": 2,
          "Step Description": "Submit a fido extension request from FV, PoS, or Credit Management team.",
          "Expected Result": "Extension request is received by Credit Management."
        },
        {
          "Step": 3,
          "Step Description": "For SIMP, verify extension is granted based on red-list parameters (+50%, +1k, or KO).",
          "Expected Result": "Extension is processed according to red-list rules."
        },
        {
          "Step": 4,
          "Step Description": "For GEO, verify extension is evaluated based on scoring, payments, and red-list.",
          "Expected Result": "Extension is processed based on evaluation criteria."
        },
        {
          "Step": 5,
          "Step Description": "Verify approval workflow: up to 5k by Credit Coordinator Albania, 5k-10k by CM, 10k-50k by Director, over 50k by CFO.",
          "Expected Result": "Extension is approved by the correct authority based on amount."
        },
        {
          "Step": 6,
          "Step Description": "Check that extension can be temporary or definitive, depending on deposit type.",
          "Expected Result": "Extension type matches deposit type."
        },
        {
          "Step": 7,
          "Step Description": "Verify notification to relevant teams (SIMP: Customer Care B2B, GEO: Back Office Albania).",
          "Expected Result": "Relevant teams are notified of the extension."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Credit Management",
      "Preconditions": "PoS with low or exhausted fido; extension request process enabled; red-list and scoring data available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Extension Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with various fido levels, red-list statuses, and scoring values.",
      "Expected Result": "Fido extension is processed, approved, and communicated according to policy and workflow.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-B"
    },
    {
      "Title": "Fido Reduction Process (SIMP and GEO)",
      "ID": "TC-025",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with risk factors (e.g., client at risk, unpaid debts, decreasing scoring, or zeroed guarantee).",
          "Expected Result": "PoS is flagged for fido reduction."
        },
        {
          "Step": 2,
          "Step Description": "Credit Management decides to reduce the fido and notifies the relevant team.",
          "Expected Result": "Reduction request is sent to the appropriate team."
        },
        {
          "Step": 3,
          "Step Description": "For SIMP, verify that fido is set to 100€ symbolic (not zero).",
          "Expected Result": "Fido is set to 100€ for SIMP-managed PoS."
        },
        {
          "Step": 4,
          "Step Description": "For GEO, verify that fido can be reduced to zero.",
          "Expected Result": "Fido is set to zero for GEO-managed PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Credit Management",
      "Preconditions": "PoS with risk factors; Credit Management decision to reduce fido; system access to update fido values.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Reduction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with SIMP and GEO management, flagged for risk.",
      "Expected Result": "Fido is reduced according to management system rules and notifications are sent.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-B"
    },
    {
      "Title": "Fido Zeroing for Legal/Collection Cases (SIMP and GEO)",
      "ID": "TC-026",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS in legal/collection status (diffida/collection/legale).",
          "Expected Result": "PoS is flagged for fido zeroing."
        },
        {
          "Step": 2,
          "Step Description": "Credit Management signals the need to zero the fido to the relevant team.",
          "Expected Result": "Zeroing request is sent to the appropriate team."
        },
        {
          "Step": 3,
          "Step Description": "For SIMP, verify that fido is set to 100€ symbolic (not zero).",
          "Expected Result": "Fido is set to 100€ for SIMP-managed PoS."
        },
        {
          "Step": 4,
          "Step Description": "For GEO, verify that fido is set to zero.",
          "Expected Result": "Fido is set to zero for GEO-managed PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Credit Management",
      "Preconditions": "PoS in legal/collection status; Credit Management decision to zero fido; system access to update fido values.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Zeroing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with SIMP and GEO management in legal/collection status.",
      "Expected Result": "Fido is zeroed according to management system rules and notifications are sent.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-B"
    },
    {
      "Title": "Fido Restoration after Collection/Legal Resolution (SIMP and GEO)",
      "ID": "TC-027",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS previously zeroed due to legal/collection status, now resolved (positive closure).",
          "Expected Result": "PoS is eligible for fido restoration."
        },
        {
          "Step": 2,
          "Step Description": "Credit Management signals the restoration to the relevant team.",
          "Expected Result": "Restoration request is sent to the appropriate team."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the PoS is re-evaluated based on scoring or CM feedback before restoration.",
          "Expected Result": "PoS is re-evaluated and restoration method is determined."
        },
        {
          "Step": 4,
          "Step Description": "Restore fido according to the new evaluation and notify relevant teams (SIMP: Customer Care B2B, GEO: Back Office Albania).",
          "Expected Result": "Fido is restored and teams are notified."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Credit Management",
      "Preconditions": "PoS previously zeroed; legal/collection status resolved; scoring and feedback available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Restoration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with resolved legal/collection status and updated scoring.",
      "Expected Result": "Fido is restored based on new evaluation and notifications are sent.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-B"
    },
    {
      "Title": "No Fido Management for AWP Devices (IAG and NO IAG)",
      "ID": "TC-028",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an AWP device with IAG management.",
          "Expected Result": "AWP device is recognized as IAG."
        },
        {
          "Step": 2,
          "Step Description": "Verify that there is no fido management or limit applied to the device.",
          "Expected Result": "No fido is set or enforced for IAG AWP device."
        },
        {
          "Step": 3,
          "Step Description": "Identify an AWP device with NO IAG management and 'chiavi gestore'.",
          "Expected Result": "AWP device is recognized as NO IAG with 'chiavi gestore'."
        },
        {
          "Step": 4,
          "Step Description": "Verify that there is no fido management or limit applied to the device.",
          "Expected Result": "No fido is set or enforced for NO IAG AWP device with 'chiavi gestore'."
        },
        {
          "Step": 5,
          "Step Description": "Identify an AWP device with NO IAG management and 'chiavi esercente'.",
          "Expected Result": "AWP device is recognized as NO IAG with 'chiavi esercente'."
        },
        {
          "Step": 6,
          "Step Description": "Verify that there is no fido management or limit applied to the device.",
          "Expected Result": "No fido is set or enforced for NO IAG AWP device with 'chiavi esercente'."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Terminale",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Management",
      "Preconditions": "AWP devices with IAG and NO IAG management are available; device types are known.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Fido Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "AWP devices with various management types and key configurations.",
      "Expected Result": "No fido is managed or enforced for any AWP device, regardless of management type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-B"
    },
    {
      "Title": "Activation of Standard Generalist Fido Based on Product and Cerved Rating",
      "ID": "TC-029",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS activation interface for a new generalist standard customer.",
          "Expected Result": "PoS activation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the product type (GNTN or ONLINE) and enter the required PoS details.",
          "Expected Result": "Product type and PoS details are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Retrieve the Cerved rating for the customer.",
          "Expected Result": "Cerved rating is displayed and available for use."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fido amount is assigned according to the Credit Policy table based on the selected product and Cerved rating.",
          "Expected Result": "Fido amount is correctly calculated and displayed as per policy."
        },
        {
          "Step": 5,
          "Step Description": "Complete the PoS activation process.",
          "Expected Result": "PoS is activated with the assigned fido and confirmation is shown."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "User has access to the PoS activation interface. Cerved rating is available. Credit Policy table is up to date.",
      "Execution Mode": "Manual",
      "Functionality": "Fido assignment during PoS activation for standard generalists",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data, Cerved ratings (N/D, 10, 20, ..., 100), Credit Policy table",
      "Expected Result": "PoS is activated with the correct fido assigned based on product and Cerved rating.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-STD-ASSIGN"
    },
    {
      "Title": "Activation of Precaricato Generalist Fido with Default Value",
      "ID": "TC-030",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS activation interface for a new generalist precaricato customer.",
          "Expected Result": "PoS activation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the 'Precaricato' option and enter the required PoS details.",
          "Expected Result": "Precaricato option and PoS details are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Complete the PoS activation process without SDD alignment.",
          "Expected Result": "PoS is activated in precaricato mode."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fido is set to the default value of 300€ without requiring Gestione Crediti authorization.",
          "Expected Result": "Fido is set to 300€ and no authorization request is triggered."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "User has access to the PoS activation interface. Precaricato option is available. No SDD alignment yet.",
      "Execution Mode": "Manual",
      "Functionality": "Fido assignment for precaricato generalists",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data for precaricato, no SDD alignment",
      "Expected Result": "PoS is activated as precaricato with a default fido of 300€ and no Gestione Crediti authorization required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-PRECARICATO-ASSIGN"
    },
    {
      "Title": "Weekly Fido Recharge on Monday for Generalist PoS",
      "ID": "TC-031",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a generalist PoS is active with an assigned fido.",
          "Expected Result": "Generalist PoS is active and has a fido value."
        },
        {
          "Step": 2,
          "Step Description": "Simulate the passage of time to the next Monday.",
          "Expected Result": "System date is set to Monday."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fido is recharged to the base value set during activation.",
          "Expected Result": "Fido is reset to the base value as per configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Generalist PoS is active with a non-zero fido. System supports date simulation or test environment allows date manipulation.",
      "Execution Mode": "Manual",
      "Functionality": "Weekly fido recharge mechanism",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Active PoS with fido, base fido value, system date control",
      "Expected Result": "Fido is automatically recharged to the base value every Monday.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-WEEKLY-RECHARGE"
    },
    {
      "Title": "Fido Modification Based on Rating Change",
      "ID": "TC-032",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS management interface for an existing generalist PoS.",
          "Expected Result": "PoS management interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Change the Cerved rating for the PoS to a new value (e.g., from 40 to 60).",
          "Expected Result": "Cerved rating is updated."
        },
        {
          "Step": 3,
          "Step Description": "Request a fido modification based on the new rating.",
          "Expected Result": "Fido modification request is accepted."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fido is updated according to the Credit Policy table for the new rating.",
          "Expected Result": "Fido is recalculated and updated as per policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS exists with an initial rating and fido. Credit Policy table is available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido modification on rating change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with initial rating and fido, new rating value, Credit Policy table",
      "Expected Result": "Fido is updated according to the new rating as per policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-MODIFY-RATING"
    },
    {
      "Title": "Temporary Fido Increase After 18:00 or During Weekend with Red List Check",
      "ID": "TC-033",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS management interface after 18:00 or during the weekend.",
          "Expected Result": "PoS management interface is available."
        },
        {
          "Step": 2,
          "Step Description": "Request a temporary fido increase for a PoS.",
          "Expected Result": "Temporary fido increase request is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Verify if the PoS is present in the Red List.",
          "Expected Result": "System checks and displays Red List status."
        },
        {
          "Step": 4,
          "Step Description": "If PoS is not in Red List, approve the temporary fido increase.",
          "Expected Result": "Temporary fido increase is approved and applied."
        },
        {
          "Step": 5,
          "Step Description": "If PoS is in Red List, deny the temporary fido increase.",
          "Expected Result": "Temporary fido increase is denied with appropriate notification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS exists. System time is after 18:00 or weekend. Red List is available.",
      "Execution Mode": "Manual",
      "Functionality": "Temporary fido increase with Red List validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS data, Red List status, system time control",
      "Expected Result": "Temporary fido increase is only allowed if PoS is not in Red List after 18:00 or during weekend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-TEMP-INCREASE"
    },
    {
      "Title": "Fido Reset on Voltura (Transfer) of PoS",
      "ID": "TC-034",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS undergoing voltura (transfer to new ID).",
          "Expected Result": "PoS with old and new IDs is identified."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the voltura process in the system.",
          "Expected Result": "Voltura process is started."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fido on the old PoS ID is set to zero.",
          "Expected Result": "Fido on old PoS ID is zeroed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fido is associated with the new PoS ID as per policy.",
          "Expected Result": "Fido is assigned to new PoS ID according to policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS exists with old and new IDs. Voltura process is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Fido reset and reassignment on voltura",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with old and new IDs, Credit Policy table",
      "Expected Result": "Fido is zeroed on old PoS ID and correctly assigned to new PoS ID.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-VOLTURA"
    },
    {
      "Title": "Fido Azzeramento for ONLINE PoS Due to Insoluti and Restoration After Payment",
      "ID": "TC-035",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an ONLINE PoS with outstanding insoluti (unpaid items).",
          "Expected Result": "ONLINE PoS with insoluti is identified."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the fido azzeramento process due to insoluti.",
          "Expected Result": "Fido is set to zero for the ONLINE PoS."
        },
        {
          "Step": 3,
          "Step Description": "Simulate payment of the insoluti.",
          "Expected Result": "Insoluti are marked as paid."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fido is restored to its previous value after payment.",
          "Expected Result": "Fido is restored to the value before azzeramento."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "ONLINE PoS exists with fido and insoluti. System supports azzeramento and restoration processes.",
      "Execution Mode": "Manual",
      "Functionality": "Fido azzeramento and restoration for ONLINE PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ONLINE PoS with fido, insoluti records",
      "Expected Result": "Fido is set to zero on insoluti and restored after payment for ONLINE PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-AZZERAMENTO-ONLINE"
    },
    {
      "Title": "No Fido Management for AWP IAG and Non-IAG Devices",
      "ID": "TC-036",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the fido management interface for an AWP IAG device.",
          "Expected Result": "AWP IAG device is selectable in the interface."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to assign or modify a fido for the AWP IAG device.",
          "Expected Result": "System does not allow fido assignment or modification for AWP IAG."
        },
        {
          "Step": 3,
          "Step Description": "Repeat steps for a non-IAG AWP device (both gestore and esercente keys).",
          "Expected Result": "System does not allow fido assignment or modification for non-IAG AWP devices."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "AWP IAG and non-IAG devices are registered in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Fido management exclusion for AWP devices",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP IAG and non-IAG device records",
      "Expected Result": "System does not allow fido management for AWP IAG and non-IAG devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-AWP-EXCLUDE"
    },
    {
      "Title": "Fido Assignment Based on Product and Management System",
      "ID": "TC-037",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate PoS activation for a new terminal (e.g., Galileo) under the GNTN product using the GEO management system.",
          "Expected Result": "System prompts for fido assignment based on product and management system."
        },
        {
          "Step": 2,
          "Step Description": "Verify that only the weekly fido option is available for GEO management system.",
          "Expected Result": "Only weekly fido is selectable; daily fido is not available."
        },
        {
          "Step": 3,
          "Step Description": "Complete activation and confirm fido is assigned as per the Credit Policy rating table.",
          "Expected Result": "Fido is assigned correctly according to the rating and product type."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS terminal is ready for activation; Credit Policy rating table is available; user has activation permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Fido assignment during PoS activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS terminal data, Credit Policy rating values (e.g., N/D, 100)",
      "Expected Result": "Fido is assigned to the PoS based on the management system and product, following the Credit Policy rules.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-ASSIGN-001"
    },
    {
      "Title": "Fido Modification Based on Rating Change",
      "ID": "TC-038",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access an active PoS with an existing fido assigned.",
          "Expected Result": "PoS details and current fido are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a change in the Cerved rating for the PoS (e.g., from 50 to 80).",
          "Expected Result": "System receives updated rating information."
        },
        {
          "Step": 3,
          "Step Description": "Request a fido modification based on the new rating.",
          "Expected Result": "System recalculates and updates the fido according to the new rating and Credit Policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS is active with assigned fido; user has permission to modify fido; access to updated rating data.",
      "Execution Mode": "Manual",
      "Functionality": "Fido modification on rating change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with initial rating and fido, new rating value",
      "Expected Result": "Fido is updated according to the new rating as per Credit Policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-MODIFY-001"
    },
    {
      "Title": "Automatic Fido Extension at 90% Consumption for SIMP Products",
      "ID": "TC-039",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS using SIMP management system with a daily fido assigned.",
          "Expected Result": "PoS details show daily fido and current consumption."
        },
        {
          "Step": 2,
          "Step Description": "Simulate transactions to reach 90% of the assigned fido consumption.",
          "Expected Result": "Fido consumption reaches 90% threshold."
        },
        {
          "Step": 3,
          "Step Description": "Verify if the system automatically extends the fido by 50%.",
          "Expected Result": "System automatically increases the fido by 50% for 1 day (daily fido) or 7 days (weekly fido), unless PoS is in red list."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS with SIMP management and assigned fido; automation for extension is enabled; PoS is not in red list.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic fido extension",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with SIMP, daily/weekly fido, not in red list",
      "Expected Result": "Fido is automatically extended by 50% for the correct duration when 90% consumption is reached.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-EXTEND-001"
    },
    {
      "Title": "Fido Reset on Agency Transfer (Voltura)",
      "ID": "TC-040",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an agency undergoing a transfer (voltura) with an active PoS and assigned fido.",
          "Expected Result": "Agency and PoS details are displayed with current fido."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the voltura process, associating the PoS with a new agency ID.",
          "Expected Result": "System prompts for fido reset and reassignment."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fido is reset on the old agency ID and assigned to the new agency ID as per communicated parameters.",
          "Expected Result": "Fido is zeroed on the old ID and correctly assigned to the new ID."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Agency with active PoS and fido; voltura process is enabled; user has necessary permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Fido reset and reassignment on agency transfer",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Agency and PoS data before and after voltura",
      "Expected Result": "Fido is reset on the old agency and reassigned to the new agency as per policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-RESET-001"
    },
    {
      "Title": "No Fido Management for AWP IAG Devices",
      "ID": "TC-041",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system as an operator managing AWP IAG devices.",
          "Expected Result": "List of AWP IAG devices is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to assign or modify fido for an AWP IAG device.",
          "Expected Result": "System does not provide any option to assign or modify fido for AWP IAG devices."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "AWP IAG devices are registered in the system; user has device management permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Fido management restriction for AWP IAG",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP IAG device data",
      "Expected Result": "System prevents fido management for AWP IAG devices as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-AWP-001"
    },
    {
      "Title": "Alert Generation for VLT IAG Devices Exceeding Collection Threshold",
      "ID": "TC-042",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system as an operator managing VLT IAG devices.",
          "Expected Result": "List of VLT IAG devices is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate collection volumes for a VLT IAG device over the last 90 days.",
          "Expected Result": "System calculates the rolling 90-day average collection."
        },
        {
          "Step": 3,
          "Step Description": "Simulate a collection that exceeds three times the 90-day average for a VLT IAG device.",
          "Expected Result": "System generates an ALERT to FV as per policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "VLT IAG devices are registered; system tracks collection volumes; alerting mechanism is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Alerting for excessive VLT IAG collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "VLT IAG device data, simulated collection volumes",
      "Expected Result": "System generates an alert to FV when collection exceeds three times the 90-day average for VLT IAG devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-VLT-ALERT-001"
    },
    {
      "Title": "Verify presence and correctness of 'Definizioni e Abbreviazioni' table",
      "ID": "TC-043",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the section titled 'Definizioni e Abbreviazioni' in the document or application.",
          "Expected Result": "The section 'Definizioni e Abbreviazioni' is present and visible."
        },
        {
          "Step": 2,
          "Step Description": "Check that a table is present under this section.",
          "Expected Result": "A table is displayed under the section."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the table contains all the abbreviations and their corresponding definitions as specified in the requirement.",
          "Expected Result": "The table lists all abbreviations (BOA, BO, POS, GIC, CM, TCI, TCA, FV) with their correct definitions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Content Management",
      "Preconditions": "User has access to the document or application containing the 'Definizioni e Abbreviazioni' section.",
      "Execution Mode": "Manual",
      "Functionality": "Display of definitions and abbreviations table",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'Definizioni e Abbreviazioni' section contains a table listing all required abbreviations with their correct definitions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify alphabetical order of abbreviations in the table",
      "ID": "TC-044",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section.",
          "Expected Result": "Section is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Review the order of abbreviations listed in the table.",
          "Expected Result": "Abbreviations are listed in alphabetical order (BO, BOA, CM, FV, GIC, POS, TCA, TCI)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Content Management",
      "Preconditions": "The table of abbreviations is present in the section.",
      "Execution Mode": "Manual",
      "Functionality": "Ordering of abbreviations",
      "Test Type": "content",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "Abbreviations are listed in alphabetical order in the table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the ordering aspect, not content accuracy.",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify absence of undefined abbreviations in the table",
      "ID": "TC-045",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section.",
          "Expected Result": "Section is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Review the table for any abbreviations not listed in the requirement.",
          "Expected Result": "No abbreviations other than BOA, BO, POS, GIC, CM, TCI, TCA, FV are present."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Content Management",
      "Preconditions": "The table of abbreviations is present in the section.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of table content",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Only the specified abbreviations are present in the table; no extraneous abbreviations are listed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the absence of extra abbreviations.",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify correct formatting of the abbreviations table",
      "ID": "TC-046",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section.",
          "Expected Result": "Section is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Check that the table has two columns: one for abbreviations and one for definitions.",
          "Expected Result": "Table has two clearly labeled columns."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each abbreviation is aligned with its corresponding definition.",
          "Expected Result": "Each abbreviation is correctly paired with its definition in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Content Management",
      "Preconditions": "The table of abbreviations is present in the section.",
      "Execution Mode": "Manual",
      "Functionality": "Table formatting and alignment",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The table is formatted with two columns and all abbreviations are correctly aligned with their definitions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only formatting and alignment, not content accuracy.",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify handling of missing abbreviation definitions",
      "ID": "TC-047",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Remove the definition for one abbreviation from the table (simulate or check for missing data).",
          "Expected Result": "The table displays an abbreviation without a definition."
        },
        {
          "Step": 2,
          "Step Description": "Observe system behavior or error handling for missing definitions.",
          "Expected Result": "System displays a warning, error, or placeholder indicating the missing definition, or the issue is logged for correction."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Content Management",
      "Preconditions": "Ability to edit or simulate missing data in the table.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for incomplete data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Table with one abbreviation missing its definition (e.g., 'POS' with no definition).",
      "Expected Result": "System handles missing definitions gracefully, either by notifying the user or logging the issue.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on error handling for missing data.",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify Requirement Description Display",
      "ID": "TC-048",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the requirements documentation section of the application.",
          "Expected Result": "The requirements documentation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the section labeled 'Descrizione delle esigenze'.",
          "Expected Result": "The section labeled 'Descrizione delle esigenze' is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the description content is present and readable under the section.",
          "Expected Result": "The description content is present and clearly readable under 'Descrizione delle esigenze'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Requirements Documentation",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Display of requirements description section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'Descrizione delle esigenze' section is displayed with its content clearly readable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and readability of the requirements description section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Section Header Formatting for Requirements Description",
      "ID": "TC-049",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the requirements documentation page.",
          "Expected Result": "Requirements documentation page is loaded."
        },
        {
          "Step": 2,
          "Step Description": "Check the formatting of the section header 'Descrizione delle esigenze'.",
          "Expected Result": "The section header 'Descrizione delle esigenze' is formatted according to documentation standards (e.g., bold, larger font, or as a heading)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Requirements Documentation",
      "Preconditions": "User is on the requirements documentation page.",
      "Execution Mode": "Manual",
      "Functionality": "Section header formatting",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The section header 'Descrizione delle esigenze' is formatted according to documentation standards.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the formatting of the section header.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Absence of Requirements Description Section",
      "ID": "TC-050",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the requirements documentation section of the application.",
          "Expected Result": "The requirements documentation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Check for the presence of the 'Descrizione delle esigenze' section.",
          "Expected Result": "If the section is missing, an appropriate error message or placeholder is displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Requirements Documentation",
      "Preconditions": "The 'Descrizione delle esigenze' section is intentionally removed or not configured.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing requirements description",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "If the section is missing, an appropriate error message or placeholder is displayed to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the scenario where the requirements description section is missing.",
      "_polarion": "requirement"
    },
    {
      "Title": "Automated Data Collection from MDM (BOC) - POS Anagrafica",
      "ID": "TC-051",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the automated data collection process for MDM (BOC) system.",
          "Expected Result": "The system initiates a connection to the MDM (BOC) data source."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system retrieves the complete POS anagrafica data, including sales force association, for each POS ID.",
          "Expected Result": "All required anagrafica fields and sales force associations are retrieved for each POS ID."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is aggregated and made available for centralized visualization within the specified timing as per 'ZENIT - Elenco Dati'.",
          "Expected Result": "Aggregated data is available in the central system within the required timeframe."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Engine",
      "Preconditions": "MDM (BOC) system is online and accessible; data collection schedule is configured as per requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from MDM (BOC)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS IDs with known anagrafica and sales force associations in MDM (BOC).",
      "Expected Result": "The system successfully collects, aggregates, and displays complete POS anagrafica data from MDM (BOC) within the specified timing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only MDM (BOC) data collection and aggregation.",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Automated Data Collection from INVENTORY (ORION) - Terminal Types and Counts",
      "ID": "TC-052",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the automated data collection process for INVENTORY (ORION) system.",
          "Expected Result": "The system initiates a connection to the INVENTORY (ORION) data source."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system retrieves terminal types and counts for each POS.",
          "Expected Result": "Terminal types and counts are retrieved for each POS as specified."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is aggregated and available for centralized visualization within the specified timing.",
          "Expected Result": "Aggregated terminal data is available in the central system within the required timeframe."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Engine",
      "Preconditions": "INVENTORY (ORION) system is online and accessible; data collection schedule is configured as per requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from INVENTORY (ORION)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS with known terminal types and counts in INVENTORY (ORION).",
      "Expected Result": "The system successfully collects, aggregates, and displays terminal types and counts from INVENTORY (ORION) within the specified timing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only INVENTORY (ORION) data collection and aggregation.",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Automated Data Collection from COMMA 6 - AWP Status and Coin In",
      "ID": "TC-053",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the automated data collection process for COMMA 6 system.",
          "Expected Result": "The system initiates a connection to the COMMA 6 data source."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system retrieves AWP status, number of AWP, and average coin in (monthly and yearly).",
          "Expected Result": "AWP status, number, and coin in averages are retrieved as specified."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is aggregated and available for centralized visualization within the specified timing.",
          "Expected Result": "Aggregated AWP data is available in the central system within the required timeframe."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Engine",
      "Preconditions": "COMMA 6 system is online and accessible; data collection schedule is configured as per requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from COMMA 6",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample AWP data with known status, counts, and coin in values in COMMA 6.",
      "Expected Result": "The system successfully collects, aggregates, and displays AWP status, number, and coin in averages from COMMA 6 within the specified timing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only COMMA 6 data collection and aggregation.",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Automated Data Collection from CERVED - Scoring and Commercial Info with Alert",
      "ID": "TC-054",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the automated data collection process for CERVED system.",
          "Expected Result": "The system initiates a connection to the CERVED data source."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system retrieves scoring and commercial information for each relevant entity.",
          "Expected Result": "Scoring and commercial information are retrieved as specified."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system performs periodic risk analysis and generates an alert if the risk worsens.",
          "Expected Result": "Periodic risk analysis is performed and alerts are generated if risk conditions are met."
        },
        {
          "Step": 4,
          "Step Description": "Check that the data is aggregated and available for centralized visualization within the specified timing.",
          "Expected Result": "Aggregated CERVED data is available in the central system within the required timeframe."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Engine",
      "Preconditions": "CERVED system is online and accessible; data collection schedule and alert thresholds are configured as per requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection, risk analysis, and alerting from CERVED",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample entities with known scoring and commercial info in CERVED; risk thresholds for alerting.",
      "Expected Result": "The system successfully collects, analyzes, and displays scoring and commercial info from CERVED, and generates alerts if risk worsens, within the specified timing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only CERVED data collection, risk analysis, and alerting.",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Automated Data Collection from SAP - Insoluti, Media BC, Ageing, Payments, Guarantees",
      "ID": "TC-055",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the automated data collection process for SAP system.",
          "Expected Result": "The system initiates a connection to the SAP data source."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system retrieves data on insoluti, media BC, ageing, payments, overdue, guarantees, and related accounting mappings for each POS.",
          "Expected Result": "All required SAP data fields are retrieved as specified."
        },
        {
          "Step": 3,
          "Step Description": "Check that guarantee amounts, deposit requirements, and guarantee expiration dates are correctly retrieved and mapped.",
          "Expected Result": "Guarantee data is correctly retrieved and mapped as per requirements."
        },
        {
          "Step": 4,
          "Step Description": "Check that the data is aggregated and available for centralized visualization within the specified timing.",
          "Expected Result": "Aggregated SAP data is available in the central system within the required timeframe."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Engine",
      "Preconditions": "SAP system is online and accessible; data collection schedule is configured as per requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS with known SAP data for insoluti, media BC, ageing, payments, guarantees, and accounting mappings.",
      "Expected Result": "The system successfully collects, aggregates, and displays all required SAP data fields within the specified timing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only SAP data collection and aggregation.",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Automated Data Collection from SIMP - Fidi Data and Alert on Threshold",
      "ID": "TC-056",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the automated data collection process for SIMP system.",
          "Expected Result": "The system initiates a connection to the SIMP data source."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system retrieves all fidi data, including amount, % utilization, collection, number of extensions, paid/unpaid winnings, for the year.",
          "Expected Result": "All required fidi data fields are retrieved as specified."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system performs historical analysis of fidi collection and utilization trends.",
          "Expected Result": "Historical analysis is performed and available for review."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system sends a specific alert when a defined threshold is approached.",
          "Expected Result": "Alert is generated and sent when the threshold is reached or approached."
        },
        {
          "Step": 5,
          "Step Description": "Check that the data is aggregated and available for centralized visualization within the specified timing.",
          "Expected Result": "Aggregated SIMP data is available in the central system within the required timeframe."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Engine",
      "Preconditions": "SIMP system is online and accessible; data collection schedule and alert thresholds are configured as per requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection, trend analysis, and alerting from SIMP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample fidi data with known values and thresholds in SIMP.",
      "Expected Result": "The system successfully collects, analyzes, and displays all required fidi data from SIMP, and generates alerts when thresholds are approached, within the specified timing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only SIMP data collection, trend analysis, and alerting.",
      "_polarion": "REQ-006"
    },
    {
      "Title": "Verify Dashboard Data Aggregation and Display for Individual PoS",
      "ID": "TC-057",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific PoS from the dashboard interface.",
          "Expected Result": "Dashboard displays all data related to the selected PoS as indicated in requirement 3.1."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials and at least one PoS is configured in the system with data available as per requirement 3.1.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Aggregation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one PoS with complete data set as per 3.1.",
      "Expected Result": "Dashboard correctly displays all relevant data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Data Aggregation and Display for Aggregated PoS",
      "ID": "TC-058",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Select an aggregation type (e.g., by region, category) from the dashboard filters.",
          "Expected Result": "Dashboard displays aggregated data for the selected group of PoS as per requirement 3.1."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials and multiple PoS are configured with data available as per requirement 3.1.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Aggregation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; multiple PoS with complete data sets as per 3.1.",
      "Expected Result": "Dashboard correctly displays aggregated data for the selected group of PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Search Functionality in Dashboard",
      "ID": "TC-059",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid PoS identifier or keyword in the dashboard search bar and initiate the search.",
          "Expected Result": "Dashboard displays search results matching the entered criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials and at least one PoS exists matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known identifiers or keywords.",
      "Expected Result": "Dashboard returns accurate search results based on the input criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify PoS Management Functionality from Dashboard",
      "ID": "TC-060",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Select a PoS from the dashboard list.",
          "Expected Result": "PoS details are displayed with management options (e.g., edit, deactivate, view details)."
        },
        {
          "Step": 3,
          "Step Description": "Perform a management action (e.g., edit PoS details) and save changes.",
          "Expected Result": "Changes are saved and reflected in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials and at least one PoS is available for management.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Management from Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one PoS with editable details.",
      "Expected Result": "PoS management actions are successfully executed and reflected in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Report Request Functionality from Dashboard",
      "ID": "TC-061",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the report section or use the report request option for a specific PoS or aggregation.",
          "Expected Result": "Report request interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select report parameters (e.g., date range, PoS, aggregation type) and submit the request.",
          "Expected Result": "System processes the request and generates the report."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials and report generation functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Report Request from Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; available PoS and report parameters.",
      "Expected Result": "User can successfully request and receive reports from the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Alert Reception in Dashboard",
      "ID": "TC-062",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Trigger an alert condition for a PoS (e.g., simulate a threshold breach or error event).",
          "Expected Result": "Dashboard displays an alert notification corresponding to the triggered event."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials and alert conditions are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Alert Reception",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with alert conditions configured.",
      "Expected Result": "Dashboard displays alerts in real time when alert conditions are met.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Search with No Results",
      "ID": "TC-063",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Enter a non-existent PoS identifier or keyword in the dashboard search bar and initiate the search.",
          "Expected Result": "Dashboard displays a message indicating that no results were found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials and no PoS exists matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; search term with no matching PoS.",
      "Expected Result": "Dashboard clearly indicates when no search results are found.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Access Control for Unauthorized Users",
      "ID": "TC-064",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the dashboard without logging in or with invalid credentials.",
          "Expected Result": "Access to the dashboard is denied and the user is redirected to the login page or shown an error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "No valid user session exists.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid credentials or no session.",
      "Expected Result": "Unauthorized users cannot access the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Daily and Weekly Credit Usage History Storage",
      "ID": "TC-065",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with active credit usage.",
          "Expected Result": "User is successfully authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a credit usage transaction (e.g., use daily credit limit).",
          "Expected Result": "Transaction is processed and reflected in the user's account."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Usage History' section.",
          "Expected Result": "The section loads and displays historical data."
        },
        {
          "Step": 4,
          "Step Description": "Verify that today's transaction is recorded in the daily usage history.",
          "Expected Result": "The transaction appears with correct date, amount, and type."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the weekly usage history aggregates the transaction correctly.",
          "Expected Result": "The weekly summary includes the transaction in the correct week."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "User account exists with credit usage enabled. Historical data storage feature is active.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data storage for daily and weekly credit usage.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, test credit transaction data.",
      "Expected Result": "All credit usage transactions are accurately stored and retrievable in both daily and weekly history views.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers positive scenario for data storage and retrieval.",
      "_polarion": "REQ-STORICO-001"
    },
    {
      "Title": "Verify Historical Data Integrity Over Time",
      "ID": "TC-066",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user with several weeks of credit usage history.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Usage History' section.",
          "Expected Result": "Historical data is loaded and displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review daily and weekly usage records for the past month.",
          "Expected Result": "All records are present, with no missing or duplicated entries."
        },
        {
          "Step": 4,
          "Step Description": "Cross-check a sample of records with backend database or logs.",
          "Expected Result": "Displayed records match backend data exactly."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "User account with at least one month of historical credit usage data.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data retention and integrity.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User with historical data, backend access for verification.",
      "Expected Result": "Historical data is complete, accurate, and consistent with backend records over time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on data integrity and completeness.",
      "_polarion": "REQ-STORICO-002"
    },
    {
      "Title": "Verify Storage of Additional Functional Information in History",
      "ID": "TC-067",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user with recent activity involving additional functional information (e.g., credit limit changes, account status updates).",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Usage History' or equivalent section displaying functional history.",
          "Expected Result": "Section loads and displays historical records."
        },
        {
          "Step": 3,
          "Step Description": "Verify that additional functional information (e.g., credit limit changes, account status updates) is present in the historical records.",
          "Expected Result": "All relevant functional events are accurately recorded with correct timestamps and details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Functional History Module",
      "Preconditions": "User account with recent functional changes (e.g., credit limit adjustment).",
      "Execution Mode": "Manual",
      "Functionality": "Storage of additional functional information in history.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User with recent functional changes.",
      "Expected Result": "All relevant functional events are stored and retrievable in the historical data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers storage of non-transactional functional events.",
      "_polarion": "REQ-STORICO-003"
    },
    {
      "Title": "Verify System Behavior When Retrieving History with No Data",
      "ID": "TC-068",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a new user with no credit usage or functional history.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Usage History' section.",
          "Expected Result": "Section loads successfully."
        },
        {
          "Step": 3,
          "Step Description": "Observe the display when no historical data is present.",
          "Expected Result": "A clear message is shown indicating that no historical data is available."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "New user account with no historical data.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of empty historical data sets.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "New user credentials.",
      "Expected Result": "System gracefully handles absence of historical data and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Negative scenario for empty data sets.",
      "_polarion": "REQ-STORICO-004"
    },
    {
      "Title": "Verify Data Retention Policy for Historical Records",
      "ID": "TC-069",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user with historical data older than the defined retention period (e.g., 1 year).",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Usage History' section.",
          "Expected Result": "Section loads and displays available historical data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that records older than the retention period are not displayed or accessible.",
          "Expected Result": "Only records within the retention period are shown; older records are purged or archived as per policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "User account with historical data exceeding the retention policy period.",
      "Execution Mode": "Manual",
      "Functionality": "Data retention and purging of historical records.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User with historical data spanning multiple years.",
      "Expected Result": "System enforces data retention policy, displaying only records within the allowed period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data retention and purging logic.",
      "_polarion": "REQ-STORICO-005"
    },
    {
      "Title": "Verify Data Collection from SAP Source",
      "ID": "TC-070",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module as an authorized user.",
          "Expected Result": "User is authenticated and data collection module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate data collection from the SAP source system.",
          "Expected Result": "System connects to SAP and begins data retrieval."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data import process for completion and error messages.",
          "Expected Result": "Data is successfully imported from SAP without errors."
        },
        {
          "Step": 4,
          "Step Description": "Validate that the imported data matches the expected SAP dataset (sample record comparison).",
          "Expected Result": "Imported data is accurate and complete as per SAP records."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection",
      "Preconditions": "User has valid credentials and access to the data collection module. SAP source system is available and reachable.",
      "Execution Mode": "Manual",
      "Functionality": "SAP Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid SAP credentials, sample SAP data records for verification.",
      "Expected Result": "Data from SAP is collected and imported accurately without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Data Collection from SI VLT Source",
      "ID": "TC-071",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the data collection system as an authorized user.",
          "Expected Result": "User is authenticated and data collection interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Select SI VLT as the data source and initiate data collection.",
          "Expected Result": "System connects to SI VLT and starts data retrieval."
        },
        {
          "Step": 3,
          "Step Description": "Observe the process for any error or warning messages.",
          "Expected Result": "Data is imported from SI VLT without errors."
        },
        {
          "Step": 4,
          "Step Description": "Cross-check a sample of imported data with SI VLT source records.",
          "Expected Result": "Imported data matches SI VLT source records."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection",
      "Preconditions": "User has access to the system. SI VLT source is available and contains data.",
      "Execution Mode": "Manual",
      "Functionality": "SI VLT Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "SI VLT credentials, sample SI VLT data for validation.",
      "Expected Result": "Data from SI VLT is collected and imported accurately without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Login Functionality for Dashboard",
      "ID": "TC-072",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the dashboard login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password for a registered user.",
          "Expected Result": "Credentials are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Click the login button.",
          "Expected Result": "User is redirected to the dashboard main page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Dashboard Authentication",
      "Preconditions": "User is registered and has valid credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout/Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (username/password).",
      "Expected Result": "User is able to log in and access the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify Data Archiving Functionality",
      "ID": "TC-073",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data archiving module as an authorized user.",
          "Expected Result": "User is authenticated and archiving module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data archiving process for a selected dataset.",
          "Expected Result": "System starts the archiving process."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the process for completion and any error messages.",
          "Expected Result": "Data is archived successfully without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the archived data is retrievable and matches the original dataset.",
          "Expected Result": "Archived data is accessible and consistent with the original data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving",
      "Preconditions": "User has access to the archiving module. Data to be archived is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample dataset for archiving.",
      "Expected Result": "Data is archived successfully and can be retrieved without loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Error Handling When Data Source is Unavailable (SAP Example)",
      "ID": "TC-074",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module as an authorized user.",
          "Expected Result": "User is authenticated and data collection module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Simulate SAP source system being offline or unreachable.",
          "Expected Result": "System attempts to connect to SAP and fails."
        },
        {
          "Step": 3,
          "Step Description": "Initiate data collection from SAP.",
          "Expected Result": "System displays an appropriate error message indicating the source is unavailable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection",
      "Preconditions": "User has valid credentials. SAP source system is intentionally made unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "SAP Data Collection Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "SAP credentials, SAP system offline/unreachable.",
      "Expected Result": "System displays a clear error message when SAP source is unavailable and does not import data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify retrieval of unchanged store master data from MDM system",
      "ID": "TC-075",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module (FASE 1) of the application.",
          "Expected Result": "The data collection interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a store whose master data has not been modified recently.",
          "Expected Result": "The store's details are loaded for review."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the data retrieval process for the selected store.",
          "Expected Result": "The system fetches the store's master data from the MDM system."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all required master data fields are populated as per the 'ZENIT - Elenco dati' file.",
          "Expected Result": "All required fields are present and populated with data from MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection (FASE 1)",
      "Preconditions": "The MDM system is operational and contains up-to-date master data for stores. The tester has access to the data collection module.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval from MDM for unchanged store master data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store identifier for a store with unchanged master data; reference to 'ZENIT - Elenco dati' for required fields.",
      "Expected Result": "The system correctly retrieves and displays all required master data fields for stores with unchanged data from the MDM system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only stores with unchanged master data from MDM.",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify system behavior when MDM is unavailable during data retrieval",
      "ID": "TC-076",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate or ensure the MDM system is offline or unreachable.",
          "Expected Result": "MDM system is confirmed to be unavailable."
        },
        {
          "Step": 2,
          "Step Description": "Access the data collection module (FASE 1) and attempt to retrieve master data for a store.",
          "Expected Result": "The system attempts to connect to MDM and fails."
        },
        {
          "Step": 3,
          "Step Description": "Observe the error handling and user notification mechanisms.",
          "Expected Result": "The system displays a clear error message indicating MDM is unavailable and prevents further data collection for the affected store."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection (FASE 1)",
      "Preconditions": "MDM system is intentionally made unavailable. Tester has access to the data collection module.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for MDM unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store identifier; MDM system offline state.",
      "Expected Result": "The system gracefully handles MDM unavailability, informs the user, and prevents incomplete data collection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for MDM unavailability.",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify that only required fields as per 'ZENIT - Elenco dati' are retrieved and displayed",
      "ID": "TC-077",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module (FASE 1).",
          "Expected Result": "The data collection interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a store with unchanged master data.",
          "Expected Result": "The store's details are loaded."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the data retrieval process.",
          "Expected Result": "The system fetches data from MDM."
        },
        {
          "Step": 4,
          "Step Description": "Compare the displayed fields with the list in 'ZENIT - Elenco dati', including their frequency.",
          "Expected Result": "Only the fields specified in 'ZENIT - Elenco dati' are displayed, with correct frequency."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Collection (FASE 1)",
      "Preconditions": "Tester has access to the data collection module and the 'ZENIT - Elenco dati' file.",
      "Execution Mode": "Manual",
      "Functionality": "Field mapping and display according to specification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store identifier; 'ZENIT - Elenco dati' file.",
      "Expected Result": "The system displays only the required fields as per 'ZENIT - Elenco dati', with correct frequency.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers field mapping and display only.",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify system does not allow modification of unchanged store master data",
      "ID": "TC-078",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module (FASE 1).",
          "Expected Result": "The data collection interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a store with unchanged master data.",
          "Expected Result": "The store's details are loaded."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to edit any of the master data fields retrieved from MDM.",
          "Expected Result": "The system prevents editing of these fields and displays a message indicating they are read-only."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Collection (FASE 1)",
      "Preconditions": "Tester has access to the data collection module. Store master data is unchanged.",
      "Execution Mode": "Manual",
      "Functionality": "Data integrity and edit restrictions for unchanged data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store identifier with unchanged master data.",
      "Expected Result": "The system does not allow modification of unchanged master data fields and clearly indicates their read-only status.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers edit restrictions for unchanged data only.",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify SAP Data Flow: Insoluti Information Transmission on Variation",
      "ID": "TC-079",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Insoluti' data for a specific PoS in SAP.",
          "Expected Result": "The system detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are included in the outgoing data: IdRice (PoS Identifier), Numero Insoluti Totali, Numero Insoluti Anno Corrente, Numero Insoluti a 6 mesi Rolling, Numero Insoluti a 12 mesi Rolling.",
          "Expected Result": "All required fields are present and populated with correct values as per SAP data."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is transmitted from SAP to the receiving system.",
          "Expected Result": "Data is successfully transmitted and received by the target system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with existing 'Insoluti' data in SAP. Access to SAP and the receiving system. Data integration channel configured.",
      "Execution Mode": "Manual",
      "Functionality": "Insoluti Data Flow from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known 'Insoluti' values in SAP (e.g., IdRice: 12345, Numero Insoluti Totali: 5, etc.)",
      "Expected Result": "Upon any variation in 'Insoluti' for a PoS, all specified fields are transmitted from SAP to the receiving system with accurate values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1 DATI SAP"
    },
    {
      "Title": "Verify SAP Data Flow: Garanzie Information Transmission on Variation",
      "ID": "TC-080",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Garanzie' data for a specific PoS in SAP.",
          "Expected Result": "The system detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are included in the outgoing data: IdRice, Tipologia Garanzia, Importo Saldo Complessivo per tipologia Garanzie, Data Inizio Garanzia (for Fidejussioni), Data Scadenza Garanzia (for Fidejussioni).",
          "Expected Result": "All required fields are present and populated with correct values as per SAP data."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is transmitted from SAP to the receiving system.",
          "Expected Result": "Data is successfully transmitted and received by the target system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with existing 'Garanzie' data in SAP. Access to SAP and the receiving system. Data integration channel configured.",
      "Execution Mode": "Manual",
      "Functionality": "Garanzie Data Flow from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Garanzie types (e.g., Fidejussioni with start/end dates, Accantonamenti a Piano, Depositi) and values in SAP.",
      "Expected Result": "Upon any variation in 'Garanzie' for a PoS, all specified fields are transmitted from SAP to the receiving system with accurate values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1 DATI SAP"
    },
    {
      "Title": "Verify SAP Data Flow: Blocco al Sollecito Information Transmission on Variation",
      "ID": "TC-081",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Blocco al Sollecito' status for a specific PoS in SAP.",
          "Expected Result": "The system detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are included in the outgoing data: IdRice, Blocco al Sollecito (only the most severe block per customer, based on the defined hierarchy).",
          "Expected Result": "All required fields are present and populated with correct values as per SAP data, and only the most severe block is included."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is transmitted from SAP to the receiving system whenever the status of an open item changes.",
          "Expected Result": "Data is successfully transmitted and received by the target system upon each relevant status change."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with existing 'Blocco al Sollecito' data in SAP. Access to SAP and the receiving system. Data integration channel configured. Defined block severity hierarchy (e.g., legale > diffida > piano di rientro).",
      "Execution Mode": "Manual",
      "Functionality": "Blocco al Sollecito Data Flow from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with multiple block statuses in SAP, including at least one with multiple block types for severity testing.",
      "Expected Result": "Upon any variation in 'Blocco al Sollecito' for a PoS, only the most severe block is transmitted from SAP to the receiving system with accurate values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1 DATI SAP"
    },
    {
      "Title": "Verify SAP Data Flow: Crediti Aperti Information Transmission on Variation",
      "ID": "TC-082",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Crediti Aperti' data for a specific PoS in SAP.",
          "Expected Result": "The system detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are included in the outgoing data: IdRice, Importo Saldo Complessivo for each specified COGE and COMPANY combination.",
          "Expected Result": "All required fields are present and populated with correct values as per SAP data."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is transmitted from SAP to the receiving system, including open balances for the specified accounts (158001, 150005, 150001, 152001 for SISAL SPA/ITALIA SPA).",
          "Expected Result": "Data is successfully transmitted and received by the target system."
        },
        {
          "Step": 4,
          "Step Description": "Verify that 'IAG' credits, if present, are transmitted and remain open for a few hours after IAG as specified.",
          "Expected Result": "IAG credits are included and remain open for the expected duration post-IAG."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with open credits in SAP for the specified COGE/COMPANY combinations. Access to SAP and the receiving system. Data integration channel configured.",
      "Execution Mode": "Manual",
      "Functionality": "Crediti Aperti Data Flow from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits in SAP for accounts 158001, 150005, 150001, 152001 (SISAL SPA/ITALIA SPA), including IAG credits.",
      "Expected Result": "Upon any variation in 'Crediti Aperti' for a PoS, all specified fields are transmitted from SAP to the receiving system with accurate values, including correct handling of IAG credits.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1 DATI SAP"
    },
    {
      "Title": "Verify SAP Data Flow: Hopper and Cambia Monete Information Transmission on Variation",
      "ID": "TC-083",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the Hopper or Cambia Monete amounts for a specific PoS in SAP.",
          "Expected Result": "The system detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are included in the outgoing data: IdRice, Importo Saldo Hopper IAG - Fine Rapporto, Importo Saldo Hopper IAG - Recupero, Importo Saldo Cambia Monete.",
          "Expected Result": "All required fields are present and populated with correct values as per SAP data."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is transmitted from SAP to the receiving system.",
          "Expected Result": "Data is successfully transmitted and received by the target system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with Hopper and Cambia Monete data in SAP. Access to SAP and the receiving system. Data integration channel configured.",
      "Execution Mode": "Manual",
      "Functionality": "Hopper and Cambia Monete Data Flow from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known Hopper and Cambia Monete values in SAP (e.g., Importo Saldo Hopper IAG - Fine Rapporto: 1000€, Importo Saldo Hopper IAG - Recupero: 500€, Importo Saldo Cambia Monete: 200€).",
      "Expected Result": "Upon any variation in Hopper or Cambia Monete for a PoS, all specified fields are transmitted from SAP to the receiving system with accurate values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1 DATI SAP"
    },
    {
      "Title": "Verify Daily Data Flow Generation for Each PoS",
      "ID": "TC-084",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is operational and the daily data flow process is scheduled.",
          "Expected Result": "System is ready and scheduled process is visible in the scheduler."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data flow process to execute.",
          "Expected Result": "Daily data flow process starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Access the output data file or database table generated for the day.",
          "Expected Result": "Output data for all PoS is available for the current day."
        },
        {
          "Step": 4,
          "Step Description": "Verify that each PoS entry contains the fields: IdRice, ZonaRice, Nr VLT, Nr VLT Medie YTD.",
          "Expected Result": "All required fields are present for each PoS entry."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - SI VLT",
      "Preconditions": "System is configured with at least one PoS and the daily data flow process is scheduled.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation for PoS information",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with valid data in the system.",
      "Expected Result": "A daily data flow is generated containing IdRice, ZonaRice, Nr VLT, and Nr VLT Medie YTD for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Validate Data Accuracy in Daily Data Flow for PoS",
      "ID": "TC-085",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with known values for IdRice, ZonaRice, Nr VLT, and Nr VLT Medie YTD in the source system.",
          "Expected Result": "PoS with known data is identified."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data flow process to execute.",
          "Expected Result": "Daily data flow process completes successfully."
        },
        {
          "Step": 3,
          "Step Description": "Extract the corresponding PoS entry from the generated data flow.",
          "Expected Result": "PoS entry is located in the output."
        },
        {
          "Step": 4,
          "Step Description": "Compare the values of IdRice, ZonaRice, Nr VLT, and Nr VLT Medie YTD in the output with the source system.",
          "Expected Result": "Values in the data flow match the source system exactly."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - SI VLT",
      "Preconditions": "Known PoS data is available in the source system.",
      "Execution Mode": "Manual",
      "Functionality": "Data accuracy in daily data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known values for all required fields.",
      "Expected Result": "The data flow contains accurate values for IdRice, ZonaRice, Nr VLT, and Nr VLT Medie YTD for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Handling of Missing or Incomplete PoS Data",
      "ID": "TC-086",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure a PoS in the source system with one or more missing fields (e.g., missing ZonaRice).",
          "Expected Result": "PoS with incomplete data is present in the source system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data flow process to execute.",
          "Expected Result": "Daily data flow process completes (with or without errors, as per specification)."
        },
        {
          "Step": 3,
          "Step Description": "Check the generated data flow for the PoS with missing data.",
          "Expected Result": "System handles missing data as per requirements (e.g., field is empty, defaulted, or record is excluded)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - SI VLT",
      "Preconditions": "At least one PoS with missing or incomplete data in the source system.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for incomplete PoS data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing ZonaRice or other required fields.",
      "Expected Result": "System handles missing or incomplete PoS data according to requirements (e.g., empty fields, default values, or exclusion).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error and boundary scenarios for missing data.",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Data Flow Generation When No PoS Exists",
      "ID": "TC-087",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the source system contains no PoS records.",
          "Expected Result": "Source system has zero PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data flow process to execute.",
          "Expected Result": "Daily data flow process completes successfully."
        },
        {
          "Step": 3,
          "Step Description": "Check the generated data flow output for the day.",
          "Expected Result": "Output is empty or contains no PoS entries, as per requirements."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - SI VLT",
      "Preconditions": "No PoS records exist in the source system.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary condition for empty PoS list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No PoS records in the source system.",
      "Expected Result": "If no PoS exists, the daily data flow output is empty or as specified by requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers boundary scenario for empty data set.",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Data Flow Generation with Maximum Number of PoS",
      "ID": "TC-088",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate the source system with the maximum supported number of PoS records, each with valid data.",
          "Expected Result": "Source system contains the maximum number of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data flow process to execute.",
          "Expected Result": "Daily data flow process completes successfully."
        },
        {
          "Step": 3,
          "Step Description": "Check the generated data flow output for the day.",
          "Expected Result": "Output contains entries for all PoS with correct fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - SI VLT",
      "Preconditions": "System supports and is configured with the maximum number of PoS records.",
      "Execution Mode": "Manual",
      "Functionality": "Scalability of daily data flow generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Maximum number of PoS records with valid data.",
      "Expected Result": "The daily data flow is generated correctly for the maximum number of PoS supported by the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers scalability and performance boundary.",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Data Flow Creation for All Required Fields per Product Type",
      "ID": "TC-089",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend responsible for data flow creation.",
          "Expected Result": "System backend is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for a specific product type (e.g., 'Prodotto A').",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required fields: Id Rice, Alias, Zona/Rice, Prodotto, Soglia Base, Estensione, Totale, Consumato, % consumata, Residuo.",
          "Expected Result": "All fields accept input and display entered values correctly."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the data flow."
        },
        {
          "Step": 5,
          "Step Description": "Query the backend or use the UI to verify that the data flow contains all the specified fields with correct values.",
          "Expected Result": "All required fields are present in the data flow and values match the input."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has access to backend with permissions to create data flows. At least one product type is configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for SIMP data fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid product type, sample values for each required field (e.g., Id Rice: 12345, Alias: 'TestAlias', etc.)",
      "Expected Result": "A data flow is created containing all required fields with correct values for the selected product type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Validate Data Flow with Missing Required Field",
      "ID": "TC-090",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend for data flow creation.",
          "Expected Result": "System backend is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for a product type.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Leave one required field (e.g., 'Totale') empty while filling in the others with valid data.",
          "Expected Result": "System allows data entry with one field left blank."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to submit the data flow creation request.",
          "Expected Result": "System displays an error message indicating the missing required field and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and at least one product type is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid product type, valid values for all fields except one left empty (e.g., Totale: null)",
      "Expected Result": "System prevents data flow creation and displays an error for the missing required field.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Data Flow Field Value Types and Formats",
      "ID": "TC-091",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow creation interface.",
          "Expected Result": "Interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid data types for each field one at a time (e.g., text in numeric fields, negative values where not allowed, invalid percentage format).",
          "Expected Result": "System validates each field and highlights incorrect formats or types."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to submit the data flow with invalid data.",
          "Expected Result": "System prevents submission and displays appropriate error messages for each invalid field."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and knowledge of valid field formats/types.",
      "Execution Mode": "Manual",
      "Functionality": "Field type and format validation for data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid data samples: e.g., 'abc' for Totale, -10 for Consumato, '110%' for % consumata, etc.",
      "Expected Result": "System enforces correct data types and formats for all fields, preventing invalid data entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Calculation of Derived Fields in Data Flow",
      "ID": "TC-092",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow creation interface.",
          "Expected Result": "Interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid values for Soglia Base, Estensione, Consumato, and Totale fields.",
          "Expected Result": "Fields accept input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request."
        },
        {
          "Step": 4,
          "Step Description": "Query the created data flow and verify that '% consumata' and 'Residuo' are correctly calculated based on input values.",
          "Expected Result": "'% consumata' = (Consumato/Totale)*100 and 'Residuo' = Totale - Consumato."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and knowledge of calculation logic for derived fields.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation of derived fields in data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Soglia Base: 100, Estensione: 50, Totale: 150, Consumato: 60",
      "Expected Result": "'% consumata' is 40% and 'Residuo' is 90 in the created data flow.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Data Flow Creation for Multiple Product Types",
      "ID": "TC-093",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow creation interface.",
          "Expected Result": "Interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "For each available product type, initiate data flow creation and enter valid values for all required fields.",
          "Expected Result": "System accepts input for each product type."
        },
        {
          "Step": 3,
          "Step Description": "Submit the data flow creation request for each product type.",
          "Expected Result": "System confirms successful creation for each product type."
        },
        {
          "Step": 4,
          "Step Description": "Query the backend to verify that data flows are created for all product types with correct field values.",
          "Expected Result": "Data flows exist for all product types and contain correct data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and multiple product types are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for multiple product types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "List of all product types, valid field values for each",
      "Expected Result": "Data flows are created for all product types with all required fields populated correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Data Flow Creation for VLT Contract Type",
      "ID": "TC-094",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for POS contract data management.",
          "Expected Result": "Backend system is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a new data flow for contract types.",
          "Expected Result": "System displays options for contract type data flow creation."
        },
        {
          "Step": 3,
          "Step Description": "Select 'VLT' as the contract type for the data flow.",
          "Expected Result": "'VLT' contract type is selected and system prompts for required data fields."
        },
        {
          "Step": 4,
          "Step Description": "Enter all mandatory data fields for the VLT contract type (e.g., contract ID, start date, end date, status).",
          "Expected Result": "All mandatory fields are filled without errors."
        },
        {
          "Step": 5,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the VLT contract type data flow."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new VLT contract type data flow is present in the system and data is correctly stored.",
          "Expected Result": "VLT contract type data flow is listed and all entered data is accurate."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Contracts & Procedure",
      "Preconditions": "User has valid backend access and necessary permissions. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for VLT contract type",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample VLT contract data (e.g., contract ID: VLT123, start date: 2024-07-01, end date: 2025-07-01, status: Active)",
      "Expected Result": "A new data flow for the VLT contract type is successfully created and data is stored correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Data Flow Creation for Betting Contract Type",
      "ID": "TC-095",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for POS contract data management.",
          "Expected Result": "Backend system is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a new data flow for contract types.",
          "Expected Result": "System displays options for contract type data flow creation."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Betting' as the contract type for the data flow.",
          "Expected Result": "'Betting' contract type is selected and system prompts for required data fields."
        },
        {
          "Step": 4,
          "Step Description": "Enter all mandatory data fields for the Betting contract type (e.g., contract ID, start date, end date, status).",
          "Expected Result": "All mandatory fields are filled without errors."
        },
        {
          "Step": 5,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the Betting contract type data flow."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new Betting contract type data flow is present in the system and data is correctly stored.",
          "Expected Result": "Betting contract type data flow is listed and all entered data is accurate."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Contracts & Procedure",
      "Preconditions": "User has valid backend access and necessary permissions. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Betting contract type",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Betting contract data (e.g., contract ID: BET456, start date: 2024-08-01, end date: 2025-08-01, status: Active)",
      "Expected Result": "A new data flow for the Betting contract type is successfully created and data is stored correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Error Handling for Missing Mandatory Fields in Data Flow Creation",
      "ID": "TC-096",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for POS contract data management.",
          "Expected Result": "Backend system is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a new data flow for contract types.",
          "Expected Result": "System displays options for contract type data flow creation."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'VLT' or 'Betting' as the contract type for the data flow.",
          "Expected Result": "Contract type is selected and system prompts for required data fields."
        },
        {
          "Step": 4,
          "Step Description": "Leave one or more mandatory fields empty (e.g., omit contract ID or start date).",
          "Expected Result": "Mandatory fields are left blank."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to submit the data flow creation request.",
          "Expected Result": "System displays an error message indicating which mandatory fields are missing and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Contracts & Procedure",
      "Preconditions": "User has valid backend access and necessary permissions. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of mandatory fields during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Attempted contract data with missing fields (e.g., missing contract ID or start date)",
      "Expected Result": "System prevents creation of the data flow and displays appropriate error messages for missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Data Flow Creation with Invalid Data for Contract Types",
      "ID": "TC-097",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for POS contract data management.",
          "Expected Result": "Backend system is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a new data flow for contract types.",
          "Expected Result": "System displays options for contract type data flow creation."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'VLT' or 'Betting' as the contract type for the data flow.",
          "Expected Result": "Contract type is selected and system prompts for required data fields."
        },
        {
          "Step": 4,
          "Step Description": "Enter invalid data in one or more fields (e.g., invalid date format, special characters in contract ID).",
          "Expected Result": "Invalid data is entered in the fields."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to submit the data flow creation request.",
          "Expected Result": "System displays an error message indicating the invalid data and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "POS Contracts & Procedure",
      "Preconditions": "User has valid backend access and necessary permissions. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data format and integrity during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Attempted contract data with invalid values (e.g., contract ID: '!!!', start date: '32/13/2024')",
      "Expected Result": "System prevents creation of the data flow and displays appropriate error messages for invalid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Data Flow Creation for All Required Fields (Positive Path)",
      "ID": "TC-098",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution module as a user with appropriate permissions.",
          "Expected Result": "User is able to access the data distribution module."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "System presents a form or interface to input required data fields."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid and complete data for all required fields (e.g., Canale, Cluster, Codice SIMP MDM, ZnRice, ZnRice short, IDRICE, AM, KA, Stato, Attivazione, # AWP, Data ultima voltura, Zn, Rice, Concessione, Diritto Sport, Diritto Ippico, Tipologia Esercizio, Denominazione, Ragione Sociale, P. IVA, Titolare, Indirizzo, Comune, Frazione, CAP, Prov, Regione, Telefono 1, Telefono 2, Cell Titolare, Cell Titolare 2, E-mail).",
          "Expected Result": "All fields accept valid input and no validation errors are shown."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the data flow."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the data flow contains all the entered fields and values.",
          "Expected Result": "All required fields are present in the created data flow with correct values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User has access to the data distribution module. MDM data is available for reference. System is configured for data flow creation.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for network distribution fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Complete set of valid field values for all required fields.",
      "Expected Result": "A new data flow is created containing all required fields with correct values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Data Flow Excludes Fields Already Acquired from MDM",
      "ID": "TC-099",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution module as a user with appropriate permissions.",
          "Expected Result": "User is able to access the data distribution module."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "System presents a form or interface to input required data fields."
        },
        {
          "Step": 3,
          "Step Description": "Enter data for all required fields, ensuring some fields are already present in MDM.",
          "Expected Result": "System identifies fields already acquired from MDM."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System creates the data flow, excluding fields already acquired from MDM."
        },
        {
          "Step": 5,
          "Step Description": "Verify the created data flow does not duplicate fields already present in MDM.",
          "Expected Result": "Data flow contains only fields not already acquired from MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User has access to the data distribution module. MDM contains some of the required fields.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation excluding MDM-acquired fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Field values with overlap between input and MDM data.",
      "Expected Result": "Data flow is created with only the fields not already acquired from MDM.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Phone Number Fields Belong to PoS and Not Personal Numbers (Privacy Compliance)",
      "ID": "TC-100",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution module as a user with appropriate permissions.",
          "Expected Result": "User is able to access the data distribution module."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "System presents a form or interface to input required data fields."
        },
        {
          "Step": 3,
          "Step Description": "Enter phone numbers in Telefono 1, Telefono 2, Cell Titolare, and Cell Titolare 2 fields using known personal numbers.",
          "Expected Result": "System validates the numbers and flags any that are identified as personal rather than PoS numbers."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to submit the data flow with personal numbers in the phone fields.",
          "Expected Result": "System prevents submission and displays a privacy compliance error message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User has access to the data distribution module. System has logic or reference data to distinguish PoS numbers from personal numbers.",
      "Execution Mode": "Manual",
      "Functionality": "Privacy validation for phone number fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Personal and PoS phone numbers for validation.",
      "Expected Result": "System prevents use of personal phone numbers in PoS fields and enforces privacy compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Mandatory Fields Validation (Negative Path)",
      "ID": "TC-101",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution module as a user with appropriate permissions.",
          "Expected Result": "User is able to access the data distribution module."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "System presents a form or interface to input required data fields."
        },
        {
          "Step": 3,
          "Step Description": "Leave one or more mandatory fields (e.g., Canale, Codice SIMP MDM, Denominazione) empty.",
          "Expected Result": "System highlights the missing mandatory fields and prevents submission."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to submit the incomplete data flow.",
          "Expected Result": "System displays an error message indicating which mandatory fields are missing."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User has access to the data distribution module. List of mandatory fields is defined in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Mandatory field validation for data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Incomplete data sets with missing mandatory fields.",
      "Expected Result": "System prevents submission and clearly indicates missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Data Flow Creation with Invalid Data Types (Negative Path)",
      "ID": "TC-102",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution module as a user with appropriate permissions.",
          "Expected Result": "User is able to access the data distribution module."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "System presents a form or interface to input required data fields."
        },
        {
          "Step": 3,
          "Step Description": "Enter invalid data types in one or more fields (e.g., letters in numeric fields, invalid email format).",
          "Expected Result": "System validates the input and flags fields with invalid data types."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to submit the data flow with invalid data types.",
          "Expected Result": "System prevents submission and displays appropriate error messages for each invalid field."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User has access to the data distribution module. Field data type requirements are defined in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data type validation for data flow fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid data types for various fields (e.g., 'abc' in CAP, '123' in E-mail).",
      "Expected Result": "System prevents submission and displays clear error messages for invalid data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Daily Data Flow Generation for All Required PoS Fields",
      "ID": "TC-103",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for daily data flow generation.",
          "Expected Result": "System is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data flow process for all Points of Sale (PoS).",
          "Expected Result": "Daily data flow process is initiated or completed as per schedule."
        },
        {
          "Step": 3,
          "Step Description": "Retrieve the generated daily data file or dataset for a given PoS.",
          "Expected Result": "Daily data file/dataset is available for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present for each PoS: ZonaRice, Nr AWP altro concessionario, Crediti 'NOIAG', Hopper 'NOIAG', Chiavi Cassetto AWP, Chiavi Sportello AWP, Chiavi Cambia Monete AWP.",
          "Expected Result": "All required fields are present in the daily data for each PoS."
        },
        {
          "Step": 5,
          "Step Description": "Check that the data values for each field are populated and valid (not null or malformed).",
          "Expected Result": "All fields contain valid, non-null data for each PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "At least one PoS is configured in the system. Daily data flow process is scheduled or can be triggered manually.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation for PoS fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Configured PoS with sample data for all required fields.",
      "Expected Result": "The daily data flow contains all specified fields with valid data for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Real-Time Retrieval of ZonaRice, Crediti 'NOIAG', and Hopper 'NOIAG' for a PoS",
      "ID": "TC-104",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend or API interface that provides real-time data retrieval for PoS.",
          "Expected Result": "Real-time data retrieval interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request real-time data for a specific PoS, specifying the fields: ZonaRice, Crediti 'NOIAG', Hopper 'NOIAG'.",
          "Expected Result": "System processes the request and returns a response."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the response contains the requested fields: ZonaRice, Crediti 'NOIAG', Hopper 'NOIAG'.",
          "Expected Result": "All requested fields are present in the real-time response."
        },
        {
          "Step": 4,
          "Step Description": "Check that the values for each field are current, valid, and not null.",
          "Expected Result": "Field values are up-to-date, valid, and non-null."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "PoS exists and is active in the system. Real-time data retrieval service is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time data retrieval for PoS fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Active PoS with up-to-date data for ZonaRice, Crediti 'NOIAG', Hopper 'NOIAG'.",
      "Expected Result": "Requested fields are returned in real-time with valid, current data for the specified PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Error Handling When Real-Time Data is Requested for a Non-Existent PoS",
      "ID": "TC-105",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the real-time data retrieval interface (API or backend).",
          "Expected Result": "Interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request real-time data for a PoS identifier that does not exist in the system.",
          "Expected Result": "System processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the invalid PoS request.",
          "Expected Result": "System returns an appropriate error message indicating the PoS does not exist."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "No PoS exists with the specified identifier. Real-time data retrieval service is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for real-time data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-existent PoS identifier.",
      "Expected Result": "System returns a clear error message when real-time data is requested for a non-existent PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Daily Data Flow Excludes PoS with Incomplete Data",
      "ID": "TC-106",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure a PoS in the system with missing or incomplete required fields (e.g., missing Crediti 'NOIAG').",
          "Expected Result": "PoS with incomplete data is present in the system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data flow generation process.",
          "Expected Result": "Daily data flow process is executed."
        },
        {
          "Step": 3,
          "Step Description": "Retrieve the generated daily data file or dataset.",
          "Expected Result": "Daily data file/dataset is available."
        },
        {
          "Step": 4,
          "Step Description": "Verify whether the PoS with incomplete data is included in the daily data flow.",
          "Expected Result": "PoS with incomplete data is either excluded or flagged appropriately in the daily data flow."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "System allows creation of PoS with incomplete data. Daily data flow process is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data validation and integrity in daily data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing required field(s).",
      "Expected Result": "PoS with incomplete data is not included or is flagged in the daily data flow as per business rules.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Real-Time Data Retrieval Performance for Multiple Concurrent Requests",
      "ID": "TC-107",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a set of valid PoS identifiers for testing.",
          "Expected Result": "List of valid PoS identifiers is available."
        },
        {
          "Step": 2,
          "Step Description": "Initiate multiple concurrent real-time data retrieval requests for ZonaRice, Crediti 'NOIAG', and Hopper 'NOIAG' for each PoS.",
          "Expected Result": "System receives multiple concurrent requests."
        },
        {
          "Step": 3,
          "Step Description": "Measure the response time for each request.",
          "Expected Result": "Response times are recorded."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all responses are returned within the acceptable performance threshold (e.g., <2 seconds).",
          "Expected Result": "All responses are received within the defined performance threshold."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "System supports concurrent real-time data requests. Performance thresholds are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Performance of real-time data retrieval",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": true,
      "Dataset": "Multiple valid PoS identifiers.",
      "Expected Result": "System returns real-time data for all concurrent requests within the acceptable performance threshold.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify correct generation of GEO data flow for GNTN product",
      "ID": "TC-108",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system as a user with permissions to view GEO data for GNTN product.",
          "Expected Result": "User is authenticated and navigates to the GEO data section for GNTN."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the GEO data flow generation for the GNTN product.",
          "Expected Result": "System processes the request and displays the GEO data fields."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present: SIGLA ZONA, NUM RICE, FIDO BASE, ESTENS. FIDO, FIDO TOTALE, FIDO CONS., PERC. FIDO CONS., FIDO RESIDUO.",
          "Expected Result": "All required fields are displayed for the GNTN product."
        },
        {
          "Step": 4,
          "Step Description": "Check that each field contains valid and non-null data.",
          "Expected Result": "Each field is populated with correct data according to the product's configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "GNTN GEO Data Flow",
      "Preconditions": "User has valid credentials and access to GNTN product GEO data. GEO data is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "GNTN product with pre-populated GEO data records.",
      "Expected Result": "GEO data flow for GNTN product is generated with all required fields correctly populated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify correct generation of GEO data flow for CONTI GIOCO product",
      "ID": "TC-109",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system as a user with permissions to view GEO data for CONTI GIOCO product.",
          "Expected Result": "User is authenticated and navigates to the GEO data section for CONTI GIOCO."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the GEO data flow generation for the CONTI GIOCO product.",
          "Expected Result": "System processes the request and displays the GEO data fields."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present: SIGLA ZONA, NUM RICE, FIDO BASE, ESTENS. FIDO, FIDO TOTALE, FIDO CONS., PERC. FIDO CONS., FIDO RESIDUO.",
          "Expected Result": "All required fields are displayed for the CONTI GIOCO product."
        },
        {
          "Step": 4,
          "Step Description": "Check that each field contains valid and non-null data.",
          "Expected Result": "Each field is populated with correct data according to the product's configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "CONTI GIOCO GEO Data Flow",
      "Preconditions": "User has valid credentials and access to CONTI GIOCO product GEO data. GEO data is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "CONTI GIOCO product with pre-populated GEO data records.",
      "Expected Result": "GEO data flow for CONTI GIOCO product is generated with all required fields correctly populated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify correct generation of GEO data flow for CORNER product",
      "ID": "TC-110",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system as a user with permissions to view GEO data for CORNER product.",
          "Expected Result": "User is authenticated and navigates to the GEO data section for CORNER."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the GEO data flow generation for the CORNER product.",
          "Expected Result": "System processes the request and displays the GEO data fields."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present: SIGLA ZONA, NUM RICE, FIDO BASE, ESTENS. FIDO, FIDO TOTALE, FIDO CONS., PERC. FIDO CONS., FIDO RESIDUO.",
          "Expected Result": "All required fields are displayed for the CORNER product."
        },
        {
          "Step": 4,
          "Step Description": "Check that each field contains valid and non-null data.",
          "Expected Result": "Each field is populated with correct data according to the product's configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "CORNER GEO Data Flow",
      "Preconditions": "User has valid credentials and access to CORNER product GEO data. GEO data is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "CORNER product with pre-populated GEO data records.",
      "Expected Result": "GEO data flow for CORNER product is generated with all required fields correctly populated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify error handling when GEO data is missing for a product",
      "ID": "TC-111",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system as a user with permissions to view GEO data for a product with no GEO data available (e.g., GNTN).",
          "Expected Result": "User is authenticated and navigates to the GEO data section for the selected product."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the GEO data flow generation for the product with missing data.",
          "Expected Result": "System attempts to process the request."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the missing data scenario.",
          "Expected Result": "System displays an appropriate error message indicating that GEO data is not available for the selected product."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "GEO Data Flow Error Handling",
      "Preconditions": "User has valid credentials. Selected product has no GEO data in the system.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Product (e.g., GNTN) with no GEO data records in the system.",
      "Expected Result": "System displays a clear error message when GEO data is missing for a product.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify boundary values for FIDO BASE, ESTENS. FIDO, FIDO TOTALE, FIDO CONS., and FIDO RESIDUO fields",
      "ID": "TC-112",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system as a user with permissions to view GEO data for any product (e.g., GNTN).",
          "Expected Result": "User is authenticated and navigates to the GEO data section for the selected product."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the GEO data flow generation for the product with boundary values for FIDO-related fields (e.g., 0, maximum allowed value).",
          "Expected Result": "System processes the request and displays the GEO data fields."
        },
        {
          "Step": 3,
          "Step Description": "Verify that FIDO BASE, ESTENS. FIDO, FIDO TOTALE, FIDO CONS., and FIDO RESIDUO fields correctly display the boundary values.",
          "Expected Result": "Fields display 0 or maximum allowed value as per the test data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "GEO Data Flow Boundary Values",
      "Preconditions": "User has valid credentials. Test data includes records with boundary values for FIDO fields.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Product with GEO data records having FIDO fields set to 0 and maximum allowed values.",
      "Expected Result": "GEO data flow correctly handles and displays boundary values for FIDO fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify calculation of PERC. FIDO CONS. field",
      "ID": "TC-113",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system as a user with permissions to view GEO data for any product (e.g., CONTI GIOCO).",
          "Expected Result": "User is authenticated and navigates to the GEO data section for the selected product."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the GEO data flow generation for the product with known values for FIDO CONS. and FIDO TOTALE.",
          "Expected Result": "System processes the request and displays the GEO data fields."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the PERC. FIDO CONS. field is calculated as (FIDO CONS. / FIDO TOTALE) * 100 and matches the expected percentage.",
          "Expected Result": "PERC. FIDO CONS. field displays the correct calculated value."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "GEO Data Flow Calculation",
      "Preconditions": "User has valid credentials. Test data includes known values for FIDO CONS. and FIDO TOTALE.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Product with GEO data records where FIDO CONS. and FIDO TOTALE are set to known values (e.g., FIDO CONS. = 50, FIDO TOTALE = 200, expected PERC. FIDO CONS. = 25%).",
      "Expected Result": "PERC. FIDO CONS. field is correctly calculated and displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify DWH Flow Creation for Paid Tickets in Other Agencies",
      "ID": "TC-114",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the DWH system and navigate to the ticket flow creation module.",
          "Expected Result": "The ticket flow creation module is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the ticket type as 'Paid in Other Agencies'.",
          "Expected Result": "The system allows selection of 'Paid in Other Agencies' ticket type."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required fields: COD_AGENZIA, ZONA_RICE, COD_GIORNO_COMPETENZA, COD_GIORNO_CASSA, COD_GIORNO_PAGAMENTO, COD_AGENZIA_PAGAMENTO, ZONA_RICE_PAGAMENTO, IMP_GIOCATO, IMP_VINCITA.",
          "Expected Result": "All fields accept the input values without error."
        },
        {
          "Step": 4,
          "Step Description": "Submit the flow creation request.",
          "Expected Result": "The system processes the request and confirms successful creation of the ticket flow."
        },
        {
          "Step": 5,
          "Step Description": "Query the DWH to verify that the new ticket flow record exists with the correct data.",
          "Expected Result": "The ticket flow record is present in the DWH with all fields matching the input data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "User has access to the DWH system and necessary permissions to create ticket flows.",
      "Execution Mode": "Manual",
      "Functionality": "Ticket flow creation for paid tickets in other agencies",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Example: COD_AGENZIA=1234, ZONA_RICE=North, COD_GIORNO_COMPETENZA=20240601, COD_GIORNO_CASSA=20240601, COD_GIORNO_PAGAMENTO=20240602, COD_AGENZIA_PAGAMENTO=5678, ZONA_RICE_PAGAMENTO=South, IMP_GIOCATO=100.00, IMP_VINCITA=250.00",
      "Expected Result": "A new ticket flow for a ticket paid in another agency is correctly created and stored in the DWH with all specified fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify DWH Flow Creation for Winning Sports Tickets Not Paid",
      "ID": "TC-115",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the DWH system and navigate to the ticket flow creation module.",
          "Expected Result": "The ticket flow creation module is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the ticket type as 'Winning Sports Not Paid'.",
          "Expected Result": "The system allows selection of 'Winning Sports Not Paid' ticket type."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required fields: COD_AGENZIA, ZONA_RICE, COD_GIORNO_COMPETENZA, COD_GIORNO_CASSA, COD_GIORNO_PAGAMENTO, COD_AGENZIA_PAGAMENTO, ZONA_RICE_PAGAMENTO, IMP_GIOCATO, IMP_VINCITA.",
          "Expected Result": "All fields accept the input values without error."
        },
        {
          "Step": 4,
          "Step Description": "Submit the flow creation request.",
          "Expected Result": "The system processes the request and confirms successful creation of the ticket flow."
        },
        {
          "Step": 5,
          "Step Description": "Query the DWH to verify that the new ticket flow record exists with the correct data.",
          "Expected Result": "The ticket flow record is present in the DWH with all fields matching the input data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "User has access to the DWH system and necessary permissions to create ticket flows.",
      "Execution Mode": "Manual",
      "Functionality": "Ticket flow creation for winning sports tickets not paid",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Example: COD_AGENZIA=4321, ZONA_RICE=South, COD_GIORNO_COMPETENZA=20240603, COD_GIORNO_CASSA=20240603, COD_GIORNO_PAGAMENTO=, COD_AGENZIA_PAGAMENTO=, ZONA_RICE_PAGAMENTO=, IMP_GIOCATO=50.00, IMP_VINCITA=120.00",
      "Expected Result": "A new ticket flow for a winning sports ticket not paid is correctly created and stored in the DWH with all specified fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify DWH Flow Creation for Winning VR Tickets Not Paid",
      "ID": "TC-116",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the DWH system and navigate to the ticket flow creation module.",
          "Expected Result": "The ticket flow creation module is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the ticket type as 'Winning VR Not Paid'.",
          "Expected Result": "The system allows selection of 'Winning VR Not Paid' ticket type."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required fields: COD_AGENZIA, ZONA_RICE, COD_GIORNO_COMPETENZA, COD_GIORNO_CASSA, COD_GIORNO_PAGAMENTO, COD_AGENZIA_PAGAMENTO, ZONA_RICE_PAGAMENTO, IMP_GIOCATO, IMP_VINCITA.",
          "Expected Result": "All fields accept the input values without error."
        },
        {
          "Step": 4,
          "Step Description": "Submit the flow creation request.",
          "Expected Result": "The system processes the request and confirms successful creation of the ticket flow."
        },
        {
          "Step": 5,
          "Step Description": "Query the DWH to verify that the new ticket flow record exists with the correct data.",
          "Expected Result": "The ticket flow record is present in the DWH with all fields matching the input data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "User has access to the DWH system and necessary permissions to create ticket flows.",
      "Execution Mode": "Manual",
      "Functionality": "Ticket flow creation for winning VR tickets not paid",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Example: COD_AGENZIA=5678, ZONA_RICE=East, COD_GIORNO_COMPETENZA=20240605, COD_GIORNO_CASSA=20240605, COD_GIORNO_PAGAMENTO=, COD_AGENZIA_PAGAMENTO=, ZONA_RICE_PAGAMENTO=, IMP_GIOCATO=75.00, IMP_VINCITA=200.00",
      "Expected Result": "A new ticket flow for a winning VR ticket not paid is correctly created and stored in the DWH with all specified fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify Mandatory Field Validation During Ticket Flow Creation",
      "ID": "TC-117",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the DWH system and navigate to the ticket flow creation module.",
          "Expected Result": "The ticket flow creation module is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to submit the flow creation request with one or more mandatory fields left blank (e.g., leave COD_AGENZIA blank).",
          "Expected Result": "The system displays an error message indicating the missing mandatory field(s) and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "User has access to the DWH system and necessary permissions to create ticket flows.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of mandatory fields during ticket flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Example: COD_AGENZIA=, ZONA_RICE=North, COD_GIORNO_COMPETENZA=20240601, etc.",
      "Expected Result": "The system enforces mandatory field validation and prevents creation of ticket flows with missing required data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify Data Type and Format Validation for Ticket Flow Fields",
      "ID": "TC-118",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the DWH system and navigate to the ticket flow creation module.",
          "Expected Result": "The ticket flow creation module is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid data types or formats for one or more fields (e.g., enter letters in IMP_GIOCATO).",
          "Expected Result": "The system displays an error message indicating the invalid data type or format and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "User has access to the DWH system and necessary permissions to create ticket flows.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data types and formats for ticket flow fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Example: IMP_GIOCATO=abc (should be numeric), COD_GIORNO_COMPETENZA=2024-06-01 (should be yyyymmdd)",
      "Expected Result": "The system enforces correct data types and formats for all fields and prevents creation of ticket flows with invalid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify Boundary Values for Numeric Fields in Ticket Flow Creation",
      "ID": "TC-119",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the DWH system and navigate to the ticket flow creation module.",
          "Expected Result": "The ticket flow creation module is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter minimum, maximum, and out-of-range values for numeric fields (IMP_GIOCATO, IMP_VINCITA).",
          "Expected Result": "The system accepts valid boundary values and rejects out-of-range values with appropriate error messages."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "User has access to the DWH system and necessary permissions to create ticket flows.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value validation for numeric fields in ticket flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Example: IMP_GIOCATO=0, IMP_GIOCATO=999999.99, IMP_GIOCATO=-1, IMP_GIOCATO=1000000",
      "Expected Result": "The system correctly handles boundary values for numeric fields, accepting only valid ranges.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify DWH Flow Creation with Historical and Future Dates",
      "ID": "TC-120",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the DWH system and navigate to the ticket flow creation module.",
          "Expected Result": "The ticket flow creation module is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter historical, current, and future dates for date fields (COD_GIORNO_COMPETENZA, COD_GIORNO_CASSA, COD_GIORNO_PAGAMENTO).",
          "Expected Result": "The system accepts valid dates and rejects invalid or logically inconsistent dates (e.g., payment date before competence date) with appropriate error messages."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "User has access to the DWH system and necessary permissions to create ticket flows.",
      "Execution Mode": "Manual",
      "Functionality": "Date validation for ticket flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Example: COD_GIORNO_COMPETENZA=20230101, COD_GIORNO_CASSA=20240601, COD_GIORNO_PAGAMENTO=20240602, COD_GIORNO_PAGAMENTO=20220101 (invalid if before competence date)",
      "Expected Result": "The system enforces correct date logic and format for all date fields in ticket flow creation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp gestione IAG'",
      "ID": "TC-121",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard or report for AWP management.",
          "Expected Result": "Dashboard/report is displayed with all relevant data fields."
        },
        {
          "Step": 2,
          "Step Description": "Locate the field labeled 'Nr awp gestione IAG'.",
          "Expected Result": "Field is present and visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the value displayed matches the expected number of AWP managed by IAG (cross-check with backend or source data).",
          "Expected Result": "Displayed value matches the backend/source data for 'Nr awp gestione IAG'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data is populated with known values for 'Nr awp gestione IAG'.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known set of AWP managed by IAG in the database (e.g., 10 records).",
      "Expected Result": "'Nr awp gestione IAG' is correctly calculated and displayed as per the backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp gestione NO IAG'",
      "ID": "TC-122",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard or report for AWP management.",
          "Expected Result": "Dashboard/report is displayed with all relevant data fields."
        },
        {
          "Step": 2,
          "Step Description": "Locate the field labeled 'Nr awp gestione NO IAG'.",
          "Expected Result": "Field is present and visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the value displayed matches the expected number of AWP managed by non-IAG entities (cross-check with backend or source data).",
          "Expected Result": "Displayed value matches the backend/source data for 'Nr awp gestione NO IAG'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data is populated with known values for 'Nr awp gestione NO IAG'.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known set of AWP managed by non-IAG in the database (e.g., 5 records).",
      "Expected Result": "'Nr awp gestione NO IAG' is correctly calculated and displayed as per the backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp terze parti IAG'",
      "ID": "TC-123",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard or report for third-party AWP management.",
          "Expected Result": "Dashboard/report is displayed with all relevant data fields."
        },
        {
          "Step": 2,
          "Step Description": "Locate the field labeled 'Nr awp terze parti IAG'.",
          "Expected Result": "Field is present and visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the value displayed matches the expected number of third-party AWP managed by IAG (cross-check with backend or source data).",
          "Expected Result": "Displayed value matches the backend/source data for 'Nr awp terze parti IAG'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data is populated with known values for 'Nr awp terze parti IAG'.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known set of third-party AWP managed by IAG in the database (e.g., 3 records).",
      "Expected Result": "'Nr awp terze parti IAG' is correctly calculated and displayed as per the backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp terze parti NO IAG'",
      "ID": "TC-124",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard or report for third-party AWP management.",
          "Expected Result": "Dashboard/report is displayed with all relevant data fields."
        },
        {
          "Step": 2,
          "Step Description": "Locate the field labeled 'Nr awp terze parti NO IAG'.",
          "Expected Result": "Field is present and visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the value displayed matches the expected number of third-party AWP managed by non-IAG entities (cross-check with backend or source data).",
          "Expected Result": "Displayed value matches the backend/source data for 'Nr awp terze parti NO IAG'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data is populated with known values for 'Nr awp terze parti NO IAG'.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known set of third-party AWP managed by non-IAG in the database (e.g., 2 records).",
      "Expected Result": "'Nr awp terze parti NO IAG' is correctly calculated and displayed as per the backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr AWP medie YTD'",
      "ID": "TC-125",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard or report for AWP statistics.",
          "Expected Result": "Dashboard/report is displayed with all relevant data fields."
        },
        {
          "Step": 2,
          "Step Description": "Locate the field labeled 'Nr AWP medie YTD'.",
          "Expected Result": "Field is present and visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the value displayed matches the expected year-to-date average number of AWP (cross-check with backend or source data).",
          "Expected Result": "Displayed value matches the backend/source data for 'Nr AWP medie YTD'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data is populated with known values for 'Nr AWP medie YTD'.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known YTD average AWP value in the database (e.g., 7).",
      "Expected Result": "'Nr AWP medie YTD' is correctly calculated and displayed as per the backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify correct calculation and display of 'Coin medio awp'",
      "ID": "TC-126",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard or report for AWP statistics.",
          "Expected Result": "Dashboard/report is displayed with all relevant data fields."
        },
        {
          "Step": 2,
          "Step Description": "Locate the field labeled 'Coin medio awp'.",
          "Expected Result": "Field is present and visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the value displayed matches the expected average coin value for AWP (cross-check with backend or source data).",
          "Expected Result": "Displayed value matches the backend/source data for 'Coin medio awp'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data is populated with known values for 'Coin medio awp'.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known average coin value for AWP in the database (e.g., 1.50 EUR).",
      "Expected Result": "'Coin medio awp' is correctly calculated and displayed as per the backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify correct calculation and display of 'TIPO ESA awp'",
      "ID": "TC-127",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard or report for AWP statistics.",
          "Expected Result": "Dashboard/report is displayed with all relevant data fields."
        },
        {
          "Step": 2,
          "Step Description": "Locate the field labeled 'TIPO ESA awp'.",
          "Expected Result": "Field is present and visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the value displayed matches the expected ESA type for AWP (cross-check with backend or source data).",
          "Expected Result": "Displayed value matches the backend/source data for 'TIPO ESA awp'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data is populated with known values for 'TIPO ESA awp'.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known ESA type for AWP in the database (e.g., 'Standard').",
      "Expected Result": "'TIPO ESA awp' is correctly calculated and displayed as per the backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify system behavior when backend data is missing for any AWP field (negative test)",
      "ID": "TC-128",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Remove or set to null the backend data for one or more AWP fields (e.g., 'Nr awp gestione IAG').",
          "Expected Result": "Backend data for the selected field(s) is missing or null."
        },
        {
          "Step": 2,
          "Step Description": "Access the data flow dashboard or report.",
          "Expected Result": "Dashboard/report is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the field(s) with missing data.",
          "Expected Result": "Field(s) are present."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the system displays the missing data (e.g., empty, 'N/A', error message).",
          "Expected Result": "System displays a clear indication (e.g., 'N/A' or empty) for missing data without crashing or showing technical errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data for at least one AWP field is missing or set to null.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Backend with missing/null data for at least one AWP field.",
      "Expected Result": "System handles missing data gracefully, displaying a clear indication without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify system behavior with invalid data types for AWP fields (negative test)",
      "ID": "TC-129",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Inject invalid data types (e.g., string instead of integer) into backend for one or more AWP fields (e.g., 'Nr awp gestione IAG' = 'abc').",
          "Expected Result": "Backend contains invalid data types for selected field(s)."
        },
        {
          "Step": 2,
          "Step Description": "Access the data flow dashboard or report.",
          "Expected Result": "Dashboard/report is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the field(s) with invalid data.",
          "Expected Result": "Field(s) are present."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the system displays or handles the invalid data.",
          "Expected Result": "System displays a clear indication of invalid data (e.g., 'N/A', error message) and does not crash or display technical errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test user has access to the dashboard/report. Backend data for at least one AWP field contains invalid data types.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Calculation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Backend with invalid data types for at least one AWP field.",
      "Expected Result": "System handles invalid data types gracefully, displaying a clear indication without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9"
    },
    {
      "Title": "Verify Data Flow Creation for CGS Value from CERVED",
      "ID": "TC-130",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data integration with CERVED.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for 'CGS valore' from CERVED.",
          "Expected Result": "System prompts for configuration or displays the data flow creation interface."
        },
        {
          "Step": 3,
          "Step Description": "Configure the data flow parameters as required (e.g., source endpoint, data mapping, schedule).",
          "Expected Result": "Parameters are accepted and validated by the system."
        },
        {
          "Step": 4,
          "Step Description": "Save and activate the data flow for 'CGS valore'.",
          "Expected Result": "Data flow is saved and activated without errors."
        },
        {
          "Step": 5,
          "Step Description": "Trigger or wait for the first scheduled data flow execution.",
          "Expected Result": "Data is retrieved from CERVED and processed according to the configuration."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the 'CGS valore' data is correctly stored and available in the target system.",
          "Expected Result": "'CGS valore' data is present, accurate, and accessible in the target system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "Backend system is configured to connect with CERVED. Test environment contains valid CERVED credentials and endpoint access.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for CGS value from CERVED",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid CERVED credentials, endpoint URL, sample CGS valore data.",
      "Expected Result": "A data flow for 'CGS valore' is successfully created, executed, and the data is correctly integrated into the target system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Creation for Activity Status from CERVED",
      "ID": "TC-131",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data integration with CERVED.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for 'Stato attività' from CERVED.",
          "Expected Result": "System prompts for configuration or displays the data flow creation interface."
        },
        {
          "Step": 3,
          "Step Description": "Configure the data flow parameters as required (e.g., source endpoint, data mapping, schedule).",
          "Expected Result": "Parameters are accepted and validated by the system."
        },
        {
          "Step": 4,
          "Step Description": "Save and activate the data flow for 'Stato attività'.",
          "Expected Result": "Data flow is saved and activated without errors."
        },
        {
          "Step": 5,
          "Step Description": "Trigger or wait for the first scheduled data flow execution.",
          "Expected Result": "Data is retrieved from CERVED and processed according to the configuration."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the 'Stato attività' data is correctly stored and available in the target system.",
          "Expected Result": "'Stato attività' data is present, accurate, and accessible in the target system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "Backend system is configured to connect with CERVED. Test environment contains valid CERVED credentials and endpoint access.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Activity Status from CERVED",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid CERVED credentials, endpoint URL, sample Stato attività data.",
      "Expected Result": "A data flow for 'Stato attività' is successfully created, executed, and the data is correctly integrated into the target system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Negative Test: Data Flow Creation Fails with Invalid CERVED Credentials",
      "ID": "TC-132",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data integration with CERVED.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to create a data flow for 'CGS valore' using invalid CERVED credentials.",
          "Expected Result": "System attempts to validate credentials and fails."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the failed credential validation.",
          "Expected Result": "System displays an error message indicating invalid credentials and prevents data flow creation."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "Backend system is configured to connect with CERVED. Test environment contains invalid CERVED credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Credential validation for data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid CERVED credentials, endpoint URL.",
      "Expected Result": "System prevents data flow creation and displays a clear error message when invalid credentials are used.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Boundary Test: Data Flow Handles Empty Data from CERVED",
      "ID": "TC-133",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data integration with CERVED.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Configure and activate a data flow for 'Stato attività' with a CERVED endpoint that returns no data (empty response).",
          "Expected Result": "Data flow is configured and activated successfully."
        },
        {
          "Step": 3,
          "Step Description": "Trigger or wait for the data flow execution.",
          "Expected Result": "System processes the data flow and receives an empty response from CERVED."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the system handles the empty data scenario.",
          "Expected Result": "System logs the empty response, does not create erroneous records, and completes the process gracefully."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "Backend system is configured to connect with CERVED. CERVED endpoint is set up to return an empty dataset.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow handling of empty data from CERVED",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid CERVED credentials, endpoint URL returning empty data.",
      "Expected Result": "System handles empty data responses from CERVED gracefully without errors or incorrect data creation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Generation for 'Corner' Management Control Data",
      "ID": "TC-134",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log into the management control system as a user with appropriate permissions.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section for 'Corner' data flows.",
          "Expected Result": "The 'Corner' data flow section is displayed with all relevant options."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the generation of data flows for all listed 'Corner' data points (e.g., ZR SHORT, Rac Sport, Net Rev Sport, etc.).",
          "Expected Result": "System processes the request and begins generating the data flows."
        },
        {
          "Step": 4,
          "Step Description": "Verify that each data flow is generated and available for all required data points as per the requirement.",
          "Expected Result": "All specified 'Corner' data flows are present and populated with data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to management control data flow generation. Required data is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for 'Corner' management control data.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with appropriate permissions; sample data for all 'Corner' data points.",
      "Expected Result": "All specified 'Corner' data flows are generated and available with correct data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Generation for 'Gaming Hall' Management Control Data",
      "ID": "TC-135",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log into the management control system as a user with appropriate permissions.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section for 'Gaming Hall' data flows.",
          "Expected Result": "'Gaming Hall' data flow section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the generation of data flows for all listed 'Gaming Hall' data points (e.g., ZR, Raccolta VLT, EBITDA, etc.).",
          "Expected Result": "System processes the request and begins generating the data flows."
        },
        {
          "Step": 4,
          "Step Description": "Verify that each data flow is generated and available for all required data points as per the requirement.",
          "Expected Result": "All specified 'Gaming Hall' data flows are present and populated with data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to management control data flow generation. Required data is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for 'Gaming Hall' management control data.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with appropriate permissions; sample data for all 'Gaming Hall' data points.",
      "Expected Result": "All specified 'Gaming Hall' data flows are generated and available with correct data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Generation for 'Shops' Management Control Data",
      "ID": "TC-136",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log into the management control system as a user with appropriate permissions.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section for 'Shops' data flows.",
          "Expected Result": "'Shops' data flow section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the generation of data flows for all listed 'Shops' data points (e.g., Zona Rice, TOT Raccolta, GL EBITDA ADJ, etc.).",
          "Expected Result": "System processes the request and begins generating the data flows."
        },
        {
          "Step": 4,
          "Step Description": "Verify that each data flow is generated and available for all required data points as per the requirement.",
          "Expected Result": "All specified 'Shops' data flows are present and populated with data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to management control data flow generation. Required data is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for 'Shops' management control data.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with appropriate permissions; sample data for all 'Shops' data points.",
      "Expected Result": "All specified 'Shops' data flows are generated and available with correct data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Error Handling When Required Data is Missing for Data Flow Generation",
      "ID": "TC-137",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log into the management control system as a user with appropriate permissions.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow generation section for any of the categories (Corner, Gaming Hall, Shops).",
          "Expected Result": "Relevant data flow section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to generate a data flow for a data point where the underlying data is missing or incomplete.",
          "Expected Result": "System processes the request and detects missing data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system's response to the missing data scenario.",
          "Expected Result": "System displays a clear error message indicating which data is missing and prevents generation of incomplete data flows."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials. At least one required data point is missing in the system for the selected category.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing data during data flow generation.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; scenario with missing data for at least one data point.",
      "Expected Result": "System prevents data flow generation and displays a clear error message when required data is missing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Accuracy in Generated Management Control Data Flows",
      "ID": "TC-138",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log into the management control system as a user with appropriate permissions.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow section for any category (Corner, Gaming Hall, Shops).",
          "Expected Result": "Relevant data flow section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Generate data flows for all data points in the selected category.",
          "Expected Result": "System generates the data flows."
        },
        {
          "Step": 4,
          "Step Description": "Compare the generated data for each data point with the source data in the database or upstream systems.",
          "Expected Result": "Generated data matches the source data exactly for all data points."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials. Source data is available for comparison.",
      "Execution Mode": "Manual",
      "Functionality": "Data accuracy verification in management control data flows.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; access to source data for all data points.",
      "Expected Result": "All generated data flows contain accurate data matching the source.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Access Control for Management Control Data Flow Generation",
      "ID": "TC-139",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log into the management control system as a user without permissions to generate management control data flows.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the data flow generation section for any category (Corner, Gaming Hall, Shops).",
          "Expected Result": "System restricts access and displays an appropriate error or warning message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User account exists without permissions for data flow generation.",
      "Execution Mode": "Manual",
      "Functionality": "Access control enforcement for data flow generation.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials without data flow generation permissions.",
      "Expected Result": "Unauthorized users cannot access or generate management control data flows.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Creation for Business Analysis Fields Not Acquired from MDM",
      "ID": "TC-140",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Business Analysis data flow configuration interface as a user with appropriate permissions.",
          "Expected Result": "The configuration interface is displayed and accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for business analysis data.",
          "Expected Result": "A new data flow creation form is presented."
        },
        {
          "Step": 3,
          "Step Description": "Populate all required fields with valid data for each of the following attributes not already acquired from MDM: ID RICE + data, Zona RICE, DENO, RAG SOC, comu, COD_FISC, PIVA, Mysisal, NOME AM QX-XXXX, NOME KA QX-XXXX, STATUS (alla data), CANALE Q1 FdV, nome AM Q1 2025, NOME KA Q1 2025, CLUSTER_PV, TIPO_PV, codice simp MDM, tipologia commerciale, N° AWP Gestione, N° AWP Solo Providing, TOT N° AWP, N° VLT, GNTN Raccolta media settimanale 2025, TITOL, Cognome Titol, Nome Titol, INDI, PROV, FRAZ, CAP, REGIONE, Telefono, Telefono 2, cell_titol, cell_titol_2, email.",
          "Expected Result": "All fields are populated with valid data and no validation errors are shown."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation form.",
          "Expected Result": "The system processes the request and creates the data flow."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the data flow is created and all specified fields are present in the resulting data structure.",
          "Expected Result": "The data flow contains all the required fields with the correct data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to the Business Analysis data flow configuration interface. Fields not already acquired from MDM are identified.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for business analysis fields not present in MDM",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid sample data for each required field (see requirement list).",
      "Expected Result": "A new data flow is created containing all required business analysis fields not already acquired from MDM, with correct data mapping.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the creation of data flow for fields not present in MDM.",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Validate Privacy Compliance for PoS Phone Numbers in Data Flow",
      "ID": "TC-141",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow containing Telefono, Telefono 2, cell_titol, and cell_titol_2 fields.",
          "Expected Result": "Data flow with phone number fields is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Review the values populated in Telefono, Telefono 2, cell_titol, and cell_titol_2 fields.",
          "Expected Result": "Phone number fields are populated with data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each phone number corresponds to the PoS (Point of Sale) and not to personal numbers, in compliance with privacy requirements.",
          "Expected Result": "All phone numbers are verified as PoS numbers; no personal numbers are present."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "Data flow with phone number fields is available for review.",
      "Execution Mode": "Manual",
      "Functionality": "Privacy compliance for phone number fields in business analysis data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Sample data flow with phone number fields populated.",
      "Expected Result": "All phone number fields in the data flow contain only PoS numbers, ensuring privacy compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on privacy compliance for phone number fields only.",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Rejects Creation When Required Fields Are Missing",
      "ID": "TC-142",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Business Analysis data flow creation interface.",
          "Expected Result": "Data flow creation interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to create a new data flow, leaving one or more required fields (not acquired from MDM) empty.",
          "Expected Result": "Validation errors are displayed for each missing required field."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to submit the form with missing required fields.",
          "Expected Result": "The system prevents submission and displays appropriate error messages."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to the data flow creation interface. Required fields are known.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data with one or more required fields left empty.",
      "Expected Result": "The system does not allow creation of the data flow if any required field is missing, displaying clear validation errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for missing required fields.",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Field Mapping Consistency with Requirement List",
      "ID": "TC-143",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the created data flow for business analysis.",
          "Expected Result": "Data flow is accessible for review."
        },
        {
          "Step": 2,
          "Step Description": "Compare the fields present in the data flow with the list of required fields specified in RU 4.1.12.",
          "Expected Result": "All required fields are present in the data flow."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each field is mapped to the correct data source (either from MDM or newly acquired).",
          "Expected Result": "Field mapping is consistent with the requirement and data sources."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "Data flow has been created and is available for review.",
      "Execution Mode": "Manual",
      "Functionality": "Field mapping consistency in business analysis data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Created data flow and requirement field list.",
      "Expected Result": "All required fields are present and correctly mapped in the data flow as per the requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers field mapping and completeness verification.",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Handles Invalid Data Formats Gracefully",
      "ID": "TC-144",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Business Analysis data flow creation interface.",
          "Expected Result": "Data flow creation interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid data formats for one or more fields (e.g., non-numeric values in numeric fields, invalid email format, incorrect date format).",
          "Expected Result": "Validation errors are displayed for fields with invalid data formats."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to submit the form with invalid data formats.",
          "Expected Result": "The system prevents submission and displays appropriate error messages."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to the data flow creation interface.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data formats during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data with invalid formats for various fields (e.g., 'abc' for PIVA, 'notanemail' for email, '32/13/2025' for date).",
      "Expected Result": "The system does not allow creation of the data flow if any field contains invalid data formats, displaying clear validation errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for invalid data formats.",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto PGS (\"REV\") in Back Office Albania",
      "ID": "TC-145",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User is successfully logged into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for PGS contracts.",
          "Expected Result": "Data flow management interface for PGS contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto PGS.",
          "Expected Result": "Data flow creation form for PGS contract type is presented."
        },
        {
          "Step": 4,
          "Step Description": "Select or enter 'REV' as the Tipo Contratto value.",
          "Expected Result": "'REV' is accepted as the Tipo Contratto value."
        },
        {
          "Step": 5,
          "Step Description": "Save and activate the new data flow.",
          "Expected Result": "The data flow for Tipo Contratto PGS with value 'REV' is successfully created and activated."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid access to Back Office Albania; system is operational; no existing data flow for Tipo Contratto PGS with value 'REV'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto PGS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; contract type value: 'REV'.",
      "Expected Result": "A new data flow for Tipo Contratto PGS with value 'REV' is created and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto PGI (\"REV\") in Back Office Albania",
      "ID": "TC-146",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User is successfully logged into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for PGI contracts.",
          "Expected Result": "Data flow management interface for PGI contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto PGI.",
          "Expected Result": "Data flow creation form for PGI contract type is presented."
        },
        {
          "Step": 4,
          "Step Description": "Select or enter 'REV' as the Tipo Contratto value.",
          "Expected Result": "'REV' is accepted as the Tipo Contratto value."
        },
        {
          "Step": 5,
          "Step Description": "Save and activate the new data flow.",
          "Expected Result": "The data flow for Tipo Contratto PGI with value 'REV' is successfully created and activated."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid access to Back Office Albania; system is operational; no existing data flow for Tipo Contratto PGI with value 'REV'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto PGI",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; contract type value: 'REV'.",
      "Expected Result": "A new data flow for Tipo Contratto PGI with value 'REV' is created and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto AWP (\"REV\") in Back Office Albania",
      "ID": "TC-147",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User is successfully logged into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for AWP contracts.",
          "Expected Result": "Data flow management interface for AWP contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto AWP.",
          "Expected Result": "Data flow creation form for AWP contract type is presented."
        },
        {
          "Step": 4,
          "Step Description": "Select or enter 'REV' as the Tipo Contratto value.",
          "Expected Result": "'REV' is accepted as the Tipo Contratto value."
        },
        {
          "Step": 5,
          "Step Description": "Save and activate the new data flow.",
          "Expected Result": "The data flow for Tipo Contratto AWP with value 'REV' is successfully created and activated."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid access to Back Office Albania; system is operational; no existing data flow for Tipo Contratto AWP with value 'REV'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; contract type value: 'REV'.",
      "Expected Result": "A new data flow for Tipo Contratto AWP with value 'REV' is created and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify System Rejects Invalid Tipo Contratto Values for Data Flow Creation",
      "ID": "TC-148",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User is successfully logged into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for any contract type (PGS, PGI, or AWP).",
          "Expected Result": "Data flow management interface for the selected contract type is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow.",
          "Expected Result": "Data flow creation form is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter an invalid value (e.g., 'INVALID') for Tipo Contratto.",
          "Expected Result": "System displays an error message indicating the value is invalid and does not allow saving."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid access to Back Office Albania; system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Tipo Contratto values during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; invalid contract type value: 'INVALID'.",
      "Expected Result": "System prevents creation of data flows with invalid Tipo Contratto values and displays an appropriate error message.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify successful creation of credit flow between ZENIT and MST for horse betting",
      "ID": "TC-149",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend system with valid administrator credentials.",
          "Expected Result": "Access to the ZENIT backend dashboard is granted."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section for managing horse betting credit (fido) flows.",
          "Expected Result": "Horse betting credit management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new credit flow to MST, entering valid parameters (e.g., user ID, credit amount, product type: horse betting).",
          "Expected Result": "System accepts the input and displays a summary of the new credit flow to be created."
        },
        {
          "Step": 4,
          "Step Description": "Confirm and submit the credit flow creation request.",
          "Expected Result": "System processes the request and sends the credit flow data to MST."
        },
        {
          "Step": 5,
          "Step Description": "Verify in MST that the new credit flow is received and correctly registered for the specified user and product.",
          "Expected Result": "MST displays the new credit flow with correct details matching the ZENIT submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Horse Betting Credit Management",
      "Preconditions": "ZENIT and MST systems are operational and integrated. Test user exists in both systems. Tester has administrator access.",
      "Execution Mode": "Manual",
      "Functionality": "Credit flow management between ZENIT and MST for horse betting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, valid credit amount, product type: horse betting",
      "Expected Result": "A new credit flow for horse betting is successfully created in ZENIT and correctly registered in MST.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify error handling when creating credit flow with invalid data",
      "ID": "TC-150",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend system with valid administrator credentials.",
          "Expected Result": "Access to the ZENIT backend dashboard is granted."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section for managing horse betting credit (fido) flows.",
          "Expected Result": "Horse betting credit management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to create a new credit flow to MST with invalid parameters (e.g., negative credit amount, missing user ID).",
          "Expected Result": "System displays validation errors and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Horse Betting Credit Management",
      "Preconditions": "ZENIT and MST systems are operational and integrated. Tester has administrator access.",
      "Execution Mode": "Manual",
      "Functionality": "Credit flow management between ZENIT and MST for horse betting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid credit amount (e.g., -100), missing user ID",
      "Expected Result": "System rejects invalid input and displays appropriate error messages. No data is sent to MST.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify synchronization of credit flow status updates from ZENIT to MST",
      "ID": "TC-151",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend system with valid administrator credentials.",
          "Expected Result": "Access to the ZENIT backend dashboard is granted."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the horse betting credit flow management section and select an existing credit flow.",
          "Expected Result": "Details of the selected credit flow are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Update the status of the credit flow (e.g., set to 'closed' or 'suspended').",
          "Expected Result": "System accepts the status update and displays the new status."
        },
        {
          "Step": 4,
          "Step Description": "Verify in MST that the status of the corresponding credit flow is updated accordingly.",
          "Expected Result": "MST reflects the updated status for the credit flow."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Horse Betting Credit Management",
      "Preconditions": "At least one credit flow exists between ZENIT and MST. Tester has administrator access.",
      "Execution Mode": "Manual",
      "Functionality": "Credit flow status synchronization between ZENIT and MST",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Existing credit flow, status values (e.g., closed, suspended)",
      "Expected Result": "Status updates in ZENIT are correctly synchronized and reflected in MST.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify audit logging for credit flow operations between ZENIT and MST",
      "ID": "TC-152",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend system with valid administrator credentials.",
          "Expected Result": "Access to the ZENIT backend dashboard is granted."
        },
        {
          "Step": 2,
          "Step Description": "Create, update, and delete a credit flow for horse betting between ZENIT and MST.",
          "Expected Result": "Each operation is processed successfully."
        },
        {
          "Step": 3,
          "Step Description": "Access the audit log or transaction history for credit flow operations.",
          "Expected Result": "Audit log displays entries for each operation (create, update, delete) with correct timestamps, user, and operation details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Horse Betting Credit Management",
      "Preconditions": "ZENIT and MST systems are operational and integrated. Tester has administrator access.",
      "Execution Mode": "Manual",
      "Functionality": "Audit logging for credit flow operations",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, credit flow operations (create, update, delete)",
      "Expected Result": "All credit flow operations are logged with accurate details in the audit log.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify retrieval of Borderò medio rolling 12 mesi",
      "ID": "TC-153",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface as an authorized user.",
          "Expected Result": "User is authenticated and data flow interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò medio rolling 12 mesi' data from the system.",
          "Expected Result": "System processes the request and returns the 'Borderò medio rolling 12 mesi' value."
        },
        {
          "Step": 3,
          "Step Description": "Validate that the returned value matches the expected calculation for the last 12 months.",
          "Expected Result": "Returned value is correct and reflects the average Borderò over the last 12 months."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "User is authenticated and has access to valorizzatore data flow. System contains at least 12 months of Borderò data.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò medio rolling 12 mesi",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with valorizzatore access; Borderò data for at least 12 months.",
      "Expected Result": "System correctly retrieves and displays the Borderò medio rolling 12 mesi value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Borderò medio anno",
      "ID": "TC-154",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface as an authorized user.",
          "Expected Result": "User is authenticated and data flow interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò medio anno' data from the system.",
          "Expected Result": "System processes the request and returns the 'Borderò medio anno' value."
        },
        {
          "Step": 3,
          "Step Description": "Validate that the returned value matches the expected calculation for the current year.",
          "Expected Result": "Returned value is correct and reflects the average Borderò for the current year."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "User is authenticated and has access to valorizzatore data flow. System contains Borderò data for the current year.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò medio anno",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with valorizzatore access; Borderò data for the current year.",
      "Expected Result": "System correctly retrieves and displays the Borderò medio anno value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Borderò settimanale",
      "ID": "TC-155",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface as an authorized user.",
          "Expected Result": "User is authenticated and data flow interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò settimanale' data for a specific week (e.g., week 10 of the current year).",
          "Expected Result": "System processes the request and returns the 'Borderò settimanale' value for the specified week."
        },
        {
          "Step": 3,
          "Step Description": "Validate that the returned value matches the expected calculation for the selected week.",
          "Expected Result": "Returned value is correct and reflects the average Borderò for the specified week."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "User is authenticated and has access to valorizzatore data flow. System contains weekly Borderò data.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with valorizzatore access; Borderò data for the selected week.",
      "Expected Result": "System correctly retrieves and displays the Borderò settimanale value for the specified week.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Numero Borderò settimanale",
      "ID": "TC-156",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface as an authorized user.",
          "Expected Result": "User is authenticated and data flow interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Numero Borderò settimanale' data for a specific week (e.g., week 10 of the current year).",
          "Expected Result": "System processes the request and returns the 'Numero Borderò settimanale' value for the specified week."
        },
        {
          "Step": 3,
          "Step Description": "Validate that the returned value matches the expected count of Borderò for the selected week.",
          "Expected Result": "Returned value is correct and reflects the number of Borderò for the specified week."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "User is authenticated and has access to valorizzatore data flow. System contains weekly Borderò data.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Numero Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with valorizzatore access; Borderò data for the selected week.",
      "Expected Result": "System correctly retrieves and displays the Numero Borderò settimanale value for the specified week.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Periodo Contabile del Borderò settimanale",
      "ID": "TC-157",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface as an authorized user.",
          "Expected Result": "User is authenticated and data flow interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Periodo Contabile del Borderò settimanale' data for a specific week (e.g., week 10 of the current year).",
          "Expected Result": "System processes the request and returns the 'Periodo Contabile' for the specified week."
        },
        {
          "Step": 3,
          "Step Description": "Validate that the returned value matches the expected accounting period for the selected week.",
          "Expected Result": "Returned value is correct and reflects the accounting period for the specified week."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "User is authenticated and has access to valorizzatore data flow. System contains weekly Borderò data with accounting period information.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Periodo Contabile del Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with valorizzatore access; Borderò data with accounting period for the selected week.",
      "Expected Result": "System correctly retrieves and displays the Periodo Contabile del Borderò settimanale for the specified week.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify error handling when requesting Borderò data for a week with no data",
      "ID": "TC-158",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface as an authorized user.",
          "Expected Result": "User is authenticated and data flow interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò settimanale' data for a week where no data exists (e.g., a future week or a week before system start date).",
          "Expected Result": "System processes the request and identifies that no data is available for the specified week."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the request for missing data.",
          "Expected Result": "System returns a clear error message or indication that no data is available for the requested week."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "User is authenticated and has access to valorizzatore data flow. The requested week has no Borderò data in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing Borderò data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with valorizzatore access; week with no Borderò data.",
      "Expected Result": "System gracefully handles missing data and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify Data Flow Creation for Anagraphic Data from Network Distribution and Business Analysis Sources",
      "ID": "TC-159",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data flow management.",
          "Expected Result": "Backend system dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow creation module.",
          "Expected Result": "Data flow creation interface is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for anagraphic data.",
          "Expected Result": "New data flow configuration screen is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Configure the data flow to source data from 'Network Distribution' (RU 4.1.5) and 'Business Analysis' (RU 4.1.12) modules.",
          "Expected Result": "Data sources are correctly selected and displayed in the configuration."
        },
        {
          "Step": 5,
          "Step Description": "Map the required anagraphic fields as per the requirements from both sources.",
          "Expected Result": "All required anagraphic fields are mapped without errors."
        },
        {
          "Step": 6,
          "Step Description": "Save and activate the data flow.",
          "Expected Result": "Data flow is saved and activated successfully."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Anagraphic Data Management",
      "Preconditions": "User has admin access to the backend system. Network Distribution and Business Analysis modules are available and populated with sample data.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation and configuration for anagraphic data sourcing.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample anagraphic data in Network Distribution and Business Analysis modules.",
      "Expected Result": "A new data flow is created and activated, sourcing all required anagraphic data from both Network Distribution and Business Analysis modules as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16, RU 4.1.5, RU 4.1.12"
    },
    {
      "Title": "Validate Data Consistency and Completeness in Anagraphic Data Flow",
      "ID": "TC-160",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the execution of the configured anagraphic data flow.",
          "Expected Result": "Data flow execution starts without errors."
        },
        {
          "Step": 2,
          "Step Description": "Access the destination where the anagraphic data is stored after the flow execution.",
          "Expected Result": "Destination data repository is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Compare the anagraphic data in the destination with the source data from Network Distribution and Business Analysis modules.",
          "Expected Result": "All required fields are present and values match the source data."
        },
        {
          "Step": 4,
          "Step Description": "Check for missing, duplicated, or inconsistent records in the destination data.",
          "Expected Result": "No missing, duplicated, or inconsistent records are found."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Anagraphic Data Management",
      "Preconditions": "Anagraphic data flow is configured and active. Source modules contain valid and complete data.",
      "Execution Mode": "Manual",
      "Functionality": "Data consistency and completeness validation for anagraphic data flow.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known set of anagraphic records in source modules for comparison.",
      "Expected Result": "Anagraphic data in the destination is complete, consistent, and matches the source data from both modules.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16, RU 4.1.5, RU 4.1.12"
    },
    {
      "Title": "Verify Error Handling When Source Data is Incomplete or Unavailable",
      "ID": "TC-161",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where the Network Distribution module is unavailable or returns incomplete data.",
          "Expected Result": "System detects the issue with the Network Distribution source."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the execution of the anagraphic data flow.",
          "Expected Result": "Data flow execution fails gracefully with an appropriate error message."
        },
        {
          "Step": 3,
          "Step Description": "Check system logs or notifications for error reporting.",
          "Expected Result": "Error is logged and/or notification is sent to the administrator."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Anagraphic Data Management",
      "Preconditions": "Anagraphic data flow is configured. Network Distribution module is intentionally made unavailable or contains incomplete data.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing or incomplete source data in anagraphic data flow.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Network Distribution module unavailable or with missing fields.",
      "Expected Result": "System detects the missing/incomplete source data, fails gracefully, and provides clear error reporting.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16, RU 4.1.5"
    },
    {
      "Title": "Verify Data Flow Handles Boundary and Special Characters in Anagraphic Fields",
      "ID": "TC-162",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate source modules with anagraphic records containing boundary values (e.g., maximum field lengths, empty strings, special characters).",
          "Expected Result": "Source modules accept and store the records."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the execution of the anagraphic data flow.",
          "Expected Result": "Data flow executes without errors."
        },
        {
          "Step": 3,
          "Step Description": "Access the destination data repository and review the imported records.",
          "Expected Result": "Records with boundary and special character values are present and correctly imported."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Anagraphic Data Management",
      "Preconditions": "Anagraphic data flow is configured and active. Source modules are populated with test records containing boundary and special character values.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of boundary and special character values in anagraphic data flow.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Anagraphic records with maximum field lengths, empty strings, and special characters in source modules.",
      "Expected Result": "Data flow correctly processes and imports records with boundary and special character values without data loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16, RU 4.1.5, RU 4.1.12"
    },
    {
      "Title": "Verify data flow retrieves terminal type for each PoS",
      "ID": "TC-163",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system or interface responsible for providing PoS terminal data.",
          "Expected Result": "System is accessible and ready for data retrieval."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data flow to retrieve terminal information for all PoS.",
          "Expected Result": "Data flow is executed without errors."
        },
        {
          "Step": 3,
          "Step Description": "Inspect the retrieved data for each PoS and locate the 'Tipo Terminale' (Terminal Type) field.",
          "Expected Result": "Each PoS record contains a 'Tipo Terminale' field populated with a valid terminal type value."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Terminal Data Management",
      "Preconditions": "System contains at least one PoS with terminal information configured. Data flow mechanism is implemented and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for terminal type per PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with known terminal type(s) in the database.",
      "Expected Result": "For every PoS, the data flow returns a record with the correct terminal type specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify data flow retrieves the number of terminals per type for each PoS",
      "ID": "TC-164",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system or interface responsible for providing PoS terminal data.",
          "Expected Result": "System is accessible and ready for data retrieval."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data flow to retrieve terminal information for all PoS.",
          "Expected Result": "Data flow is executed without errors."
        },
        {
          "Step": 3,
          "Step Description": "Inspect the retrieved data for each PoS and locate the 'Numero Terminali per tipo' (Number of Terminals per Type) field.",
          "Expected Result": "Each PoS record contains a 'Numero Terminali per tipo' field populated with a valid integer value."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Terminal Data Management",
      "Preconditions": "System contains at least one PoS with multiple terminal types configured. Data flow mechanism is implemented and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for number of terminals per type per PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with multiple terminal types and known quantities in the database.",
      "Expected Result": "For every PoS, the data flow returns the correct number of terminals for each terminal type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify data flow handles PoS with no terminals configured",
      "ID": "TC-165",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure there is a PoS in the system with no terminals configured.",
          "Expected Result": "PoS with no terminals exists in the system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data flow to retrieve terminal information for all PoS.",
          "Expected Result": "Data flow is executed without errors."
        },
        {
          "Step": 3,
          "Step Description": "Inspect the retrieved data for the PoS with no terminals.",
          "Expected Result": "The PoS record indicates no terminal types and zero terminals per type, or the fields are empty/null as per specification."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Terminal Data Management",
      "Preconditions": "At least one PoS exists in the system with no terminals configured. Data flow mechanism is implemented and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for PoS with no terminals",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no terminals in the database.",
      "Expected Result": "For PoS with no terminals, the data flow returns empty or zero values for terminal type and number of terminals per type, as per specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify data flow accuracy with multiple terminal types per PoS",
      "ID": "TC-166",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure there is a PoS in the system with multiple terminal types configured (e.g., 'Type A' and 'Type B').",
          "Expected Result": "PoS with multiple terminal types exists in the system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data flow to retrieve terminal information for all PoS.",
          "Expected Result": "Data flow is executed without errors."
        },
        {
          "Step": 3,
          "Step Description": "Inspect the retrieved data for the PoS with multiple terminal types.",
          "Expected Result": "The PoS record lists each terminal type and the correct number of terminals for each type."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Terminal Data Management",
      "Preconditions": "At least one PoS exists in the system with multiple terminal types and known quantities. Data flow mechanism is implemented and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for multiple terminal types per PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with at least two terminal types and known quantities in the database.",
      "Expected Result": "For PoS with multiple terminal types, the data flow returns each type and the correct number of terminals for each.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify error handling when data flow encounters invalid PoS data",
      "ID": "TC-167",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert or simulate a PoS record with invalid or corrupted terminal data (e.g., missing type, negative number of terminals).",
          "Expected Result": "System contains a PoS with invalid terminal data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data flow to retrieve terminal information for all PoS.",
          "Expected Result": "Data flow is executed and handles invalid data gracefully."
        },
        {
          "Step": 3,
          "Step Description": "Inspect the system's response or error logs for the invalid PoS data.",
          "Expected Result": "System logs an error or flags the invalid data, and does not crash or return incorrect results for other PoS."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Terminal Data Management",
      "Preconditions": "At least one PoS with invalid terminal data exists in the system. Data flow mechanism is implemented and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling in terminal data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with invalid terminal data (e.g., missing type, negative number) in the database.",
      "Expected Result": "System handles invalid PoS terminal data gracefully, logs errors, and continues processing valid records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify Dashboard Loads Successfully for Authenticated User",
      "ID": "TC-168",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard page."
        },
        {
          "Step": 2,
          "Step Description": "Observe the dashboard page for loading and display of widgets or data.",
          "Expected Result": "Dashboard loads completely without errors, displaying all expected widgets and data relevant to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User account exists and is active. User is not already logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user1@example.com / Password123)",
      "Expected Result": "Dashboard page loads successfully and displays all relevant widgets and data for the authenticated user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Access Denied for Unauthenticated User",
      "ID": "TC-169",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the dashboard URL directly without logging in.",
          "Expected Result": "System redirects the user to the login page or displays an access denied message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User is not logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Unauthenticated users are prevented from accessing the dashboard and are redirected to the login page or shown an access denied message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Widgets Display Correct Data",
      "ID": "TC-170",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Review each widget on the dashboard for data accuracy (e.g., statistics, charts, recent activity).",
          "Expected Result": "Each widget displays data that matches the expected values from the backend or test dataset."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User account exists with relevant data in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; backend data for widgets (e.g., user statistics, recent activity logs)",
      "Expected Result": "All dashboard widgets display accurate and up-to-date data as per the backend or test dataset.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Responsiveness on Different Screen Sizes",
      "ID": "TC-171",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the dashboard.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Resize the browser window to various common resolutions (e.g., 1920x1080, 1366x768, 1024x768, 768x1024).",
          "Expected Result": "Dashboard layout adjusts appropriately for each resolution without overlapping or missing elements."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User is logged in and on the dashboard page.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "Dashboard remains usable and visually consistent across different screen sizes and resolutions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Error Handling When Dashboard Data Fails to Load",
      "ID": "TC-172",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a backend failure or disconnect the network before loading the dashboard.",
          "Expected Result": "Dashboard attempts to load data but encounters an error."
        },
        {
          "Step": 2,
          "Step Description": "Observe the error message or fallback behavior displayed to the user.",
          "Expected Result": "User is shown a clear, user-friendly error message indicating that dashboard data could not be loaded."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User is logged in. Network or backend service is unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "User receives a clear error message if dashboard data fails to load due to backend or network issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Successful Login with Multi-Factor Authentication (MFA)",
      "ID": "TC-173",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password for a registered user.",
          "Expected Result": "System prompts for MFA verification (e.g., code sent via SMS/email/app)."
        },
        {
          "Step": 3,
          "Step Description": "Enter the correct MFA code received.",
          "Expected Result": "User is successfully authenticated and redirected to the home/dashboard page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User account is registered and MFA is enabled for the account.",
      "Execution Mode": "Manual",
      "Functionality": "Login with MFA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username, password, and access to MFA code (e.g., SMS, email, authenticator app).",
      "Expected Result": "User is logged in successfully after passing MFA.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Unsuccessful Login with Invalid Credentials",
      "ID": "TC-174",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid username and/or password.",
          "Expected Result": "System displays an error message indicating invalid credentials. MFA prompt is not shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is on the login page.",
      "Execution Mode": "Manual",
      "Functionality": "Login with invalid credentials",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and/or password.",
      "Expected Result": "User is not authenticated and receives an error message. No MFA is triggered.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Unsuccessful Login with Incorrect MFA Code",
      "ID": "TC-175",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password.",
          "Expected Result": "System prompts for MFA verification."
        },
        {
          "Step": 3,
          "Step Description": "Enter an incorrect MFA code.",
          "Expected Result": "System displays an error message indicating invalid MFA code. User is not logged in."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User account is registered and MFA is enabled for the account.",
      "Execution Mode": "Manual",
      "Functionality": "Login with MFA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password, invalid MFA code.",
      "Expected Result": "User is not authenticated and receives an error message for invalid MFA code.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Logout Functionality",
      "ID": "TC-176",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application successfully (with MFA if required).",
          "Expected Result": "User is authenticated and on the home/dashboard page."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Logout' button or link.",
          "Expected Result": "User is logged out and redirected to the login page. Session is terminated."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged in to the application.",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials for login.",
      "Expected Result": "User is logged out and session is terminated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Consistent Information Display Across User Profiles",
      "ID": "TC-177",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login as User Profile A (e.g., Admin) using valid credentials and MFA.",
          "Expected Result": "User A is authenticated and directed to the home/dashboard page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the information display and search screens.",
          "Expected Result": "Information and search screens are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Logout from User Profile A.",
          "Expected Result": "User is logged out and redirected to the login page."
        },
        {
          "Step": 4,
          "Step Description": "Login as User Profile B (e.g., Standard User) using valid credentials and MFA.",
          "Expected Result": "User B is authenticated and directed to the home/dashboard page."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the same information display and search screens as in Step 2.",
          "Expected Result": "Information and search screens are displayed identically to those seen by User Profile A."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Profile Management",
      "Preconditions": "At least two user profiles (e.g., Admin and Standard User) exist with valid credentials and MFA enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Management and UI Consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Credentials for User Profile A and User Profile B, both with MFA enabled.",
      "Expected Result": "Information and search screens are identical for different user profiles.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Session Expiry and Automatic Logout",
      "ID": "TC-178",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application successfully (with MFA if required).",
          "Expected Result": "User is authenticated and on the home/dashboard page."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for the session timeout duration (e.g., 15 minutes).",
          "Expected Result": "Session expires after the configured timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform any action (e.g., navigate to another page).",
          "Expected Result": "User is redirected to the login page and prompted to re-authenticate."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged in. Session timeout is configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials for login.",
      "Expected Result": "User is automatically logged out after session timeout and must re-authenticate.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify Full Access Profile: View All Data",
      "ID": "TC-179",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to all available PoS management sections (e.g., PoS list, transaction history, configuration, etc.).",
          "Expected Result": "All sections and data are visible and accessible without restriction."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "User with FULL ACCESS profile exists and is assigned via SailPoint. User is not locked or disabled.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Full Access - Data Consultation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; populated PoS data.",
      "Expected Result": "User with FULL ACCESS profile can view all PoS-related data and sections without restriction.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data consultation aspect of FULL ACCESS profile.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Perform All Allowed Modifications",
      "ID": "TC-180",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to PoS management section.",
          "Expected Result": "PoS management section is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform all available modifications (e.g., edit PoS details, update configurations, etc.) as permitted in phase 1.",
          "Expected Result": "All permitted modifications are available and can be performed successfully. Unauthorized modifications (dispositive) are not available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "User with FULL ACCESS profile exists and is assigned via SailPoint. Modifiable PoS records exist.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Full Access - Modifications",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; PoS records available for modification.",
      "Expected Result": "User with FULL ACCESS profile can perform all modifications allowed in phase 1; dispositive modifications are not available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only modifications allowed in phase 1.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Data Extraction Capability",
      "ID": "TC-181",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction section for PoS management.",
          "Expected Result": "Data extraction section is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Initiate a full data extraction (e.g., export all PoS data to CSV or Excel).",
          "Expected Result": "System allows extraction of all available PoS data without restriction. Exported file contains complete data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Extraction",
      "Preconditions": "User with FULL ACCESS profile exists and is assigned via SailPoint. Sufficient PoS data is present.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Full Access - Data Extraction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; PoS data available for extraction.",
      "Expected Result": "User with FULL ACCESS profile can extract all PoS data without restriction.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data extraction aspect.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Massive Upload Capability",
      "ID": "TC-182",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the massive upload section for PoS management.",
          "Expected Result": "Massive upload section is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid file containing multiple PoS records for bulk processing.",
          "Expected Result": "System accepts the file and processes all records successfully. Confirmation message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Upload",
      "Preconditions": "User with FULL ACCESS profile exists and is assigned via SailPoint. Valid bulk upload file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Full Access - Massive Upload",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; valid bulk upload file.",
      "Expected Result": "User with FULL ACCESS profile can perform massive uploads of PoS data successfully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only massive upload functionality.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Access Authorization via SailPoint for Full Access Profile",
      "ID": "TC-183",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to assign FULL ACCESS profile to a user directly within ZENIT.",
          "Expected Result": "System does not allow direct assignment of FULL ACCESS profile within ZENIT."
        },
        {
          "Step": 2,
          "Step Description": "Assign FULL ACCESS profile to a user via SailPoint.",
          "Expected Result": "User is assigned FULL ACCESS profile successfully via SailPoint."
        },
        {
          "Step": 3,
          "Step Description": "Login to ZENIT with the user assigned FULL ACCESS via SailPoint.",
          "Expected Result": "User is granted FULL ACCESS privileges in ZENIT."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Access Authorization",
      "Preconditions": "User exists in both SailPoint and ZENIT. SailPoint integration is active.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Full Access - Access Authorization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; SailPoint admin access.",
      "Expected Result": "FULL ACCESS profile can only be assigned via SailPoint and not directly in ZENIT. User receives correct privileges after assignment.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access authorization flow.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify SOX Compliance for Full Access Profile Assignment",
      "ID": "TC-184",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to assign FULL ACCESS profile to a user in a manner not compliant with SOX (e.g., bypassing SailPoint or using unauthorized methods).",
          "Expected Result": "System prevents assignment and logs the attempt as per SOX compliance requirements."
        },
        {
          "Step": 2,
          "Step Description": "Review audit logs for the attempted assignment.",
          "Expected Result": "Audit logs contain a record of the unauthorized attempt, as required by SOX."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SOX Compliance",
      "Preconditions": "SOX compliance monitoring is enabled. User with admin privileges attempts assignment.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Full Access - SOX Compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin credentials; access to audit logs.",
      "Expected Result": "System enforces SOX compliance by preventing unauthorized profile assignments and logging all attempts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only SOX compliance aspect for profile assignment.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Access to OPERATORE and CONSULTATORE Profiles",
      "ID": "TC-185",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access functionalities available to OPERATORE and CONSULTATORE profiles.",
          "Expected Result": "All functionalities available to OPERATORE and CONSULTATORE profiles are accessible to the FULL ACCESS user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Profile Access",
      "Preconditions": "User with FULL ACCESS profile exists and is assigned via SailPoint. OPERATORE and CONSULTATORE functionalities are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Profile Full Access - Access to Other Profiles",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile.",
      "Expected Result": "User with FULL ACCESS profile can access all functionalities of OPERATORE and CONSULTATORE profiles.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access to other profiles' functionalities.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Consultatore Profile: Data Consultation Limitation Enforcement",
      "ID": "TC-186",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard/homepage."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation section (e.g., reports, user data, analytics).",
          "Expected Result": "Consultatore-specific data consultation interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to view data that is within the allowed scope for the Consultatore profile.",
          "Expected Result": "Data is displayed as per the Consultatore's permissions."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to view data that should be restricted for the Consultatore profile (e.g., sensitive or admin-only data).",
          "Expected Result": "Access is denied or data is masked/unavailable, and an appropriate message is shown to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A valid Consultatore user account exists. The system is configured with data access restrictions for the Consultatore profile.",
      "Execution Mode": "Manual",
      "Functionality": "Data consultation with profile-based limitations",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; sample data with both allowed and restricted records.",
      "Expected Result": "The Consultatore user can only view data permitted by their profile, and is prevented from accessing restricted data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Consultatore Profile: Data Extraction Limitation Enforcement",
      "ID": "TC-187",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard/homepage."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction/export section (e.g., export reports, download data).",
          "Expected Result": "Consultatore-specific data extraction interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to extract data that is within the allowed scope for the Consultatore profile.",
          "Expected Result": "Data extraction is successful and only permitted data is included in the export."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to extract data that should be restricted for the Consultatore profile (e.g., sensitive or admin-only data).",
          "Expected Result": "Extraction is denied or restricted data is excluded from the export, and an appropriate message is shown to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A valid Consultatore user account exists. The system is configured with data extraction restrictions for the Consultatore profile.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction with profile-based limitations",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; sample data with both allowed and restricted records.",
      "Expected Result": "The Consultatore user can only extract data permitted by their profile, and is prevented from extracting restricted data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Consultatore Profile: Attempt to Bypass Data Consultation Restrictions (Negative Test)",
      "ID": "TC-188",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard/homepage."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access restricted data via direct URL manipulation or API calls.",
          "Expected Result": "System denies access and logs the attempt. An appropriate error message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A valid Consultatore user account exists. The system is configured with data access restrictions for the Consultatore profile.",
      "Execution Mode": "Manual",
      "Functionality": "Security enforcement for data consultation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; restricted data endpoints or URLs.",
      "Expected Result": "Consultatore users cannot bypass consultation restrictions through unauthorized methods.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Consultatore Profile: Attempt to Bypass Data Extraction Restrictions (Negative Test)",
      "ID": "TC-189",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard/homepage."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to extract restricted data via direct API calls, URL manipulation, or unauthorized export tools.",
          "Expected Result": "System denies extraction and logs the attempt. An appropriate error message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A valid Consultatore user account exists. The system is configured with data extraction restrictions for the Consultatore profile.",
      "Execution Mode": "Manual",
      "Functionality": "Security enforcement for data extraction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; restricted data endpoints or export functions.",
      "Expected Result": "Consultatore users cannot bypass extraction restrictions through unauthorized methods.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Operator Profile - Data Consultation with View Limitations",
      "ID": "TC-190",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as an OPERATORE user.",
          "Expected Result": "Login is successful and the OPERATORE dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation section (e.g., customer records, transaction history).",
          "Expected Result": "Data consultation interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to view all available data fields for a record.",
          "Expected Result": "Only permitted data fields are visible; restricted fields are hidden or masked."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to access a restricted data field (e.g., via direct URL or advanced search).",
          "Expected Result": "Access is denied or the field remains hidden/masked; an appropriate message is displayed if applicable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "OPERATORE user account exists with valid credentials. User is assigned the OPERATORE role with standard permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Data consultation with view restrictions for OPERATORE profile.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "OPERATORE user credentials; sample data records with both permitted and restricted fields.",
      "Expected Result": "OPERATORE can only view permitted data fields; restricted fields are not accessible or visible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data consultation limitations as per RU 4.2.4.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Operator Profile - Data Extraction with Export Limitations",
      "ID": "TC-191",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as an OPERATORE user.",
          "Expected Result": "Login is successful and the OPERATORE dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction/export section (e.g., export customer list, transaction reports).",
          "Expected Result": "Data extraction interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to export data using the available export functionality.",
          "Expected Result": "Export is initiated with only permitted data fields included in the output file."
        },
        {
          "Step": 4,
          "Step Description": "Open the exported file and verify its contents.",
          "Expected Result": "Exported file contains only the data fields allowed for OPERATORE; restricted fields are omitted."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to export data using advanced or custom export options (if available).",
          "Expected Result": "Advanced export options do not allow inclusion of restricted fields; system enforces export limitations."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "OPERATORE user account exists with valid credentials. User is assigned the OPERATORE role with standard permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction/export with field restrictions for OPERATORE profile.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "OPERATORE user credentials; sample data records with both permitted and restricted fields.",
      "Expected Result": "OPERATORE can only export permitted data fields; restricted fields are not included in any export.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data extraction/export limitations as per RU 4.2.4.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Operator Profile - Attempt Unauthorized Data Modification (Phase 1)",
      "ID": "TC-192",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as an OPERATORE user.",
          "Expected Result": "Login is successful and the OPERATORE dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a section where data modification is possible (e.g., customer management, PoS management).",
          "Expected Result": "Modification interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform a modification not permitted in Phase 1 (e.g., try to change a field outside of fidi or PoS block/unblock).",
          "Expected Result": "Modification option is disabled or not visible; if attempted, system displays an error or access denied message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "OPERATORE user account exists with valid credentials. User is assigned the OPERATORE role with standard permissions. System is in Phase 1 (partial modifications not yet implemented).",
      "Execution Mode": "Manual",
      "Functionality": "Restriction of unauthorized data modifications for OPERATORE profile in Phase 1.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "OPERATORE user credentials; sample records for modification attempt.",
      "Expected Result": "OPERATORE cannot perform unauthorized modifications; system prevents such actions and provides appropriate feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers modification restrictions in Phase 1 as per RU 4.2.4.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Verify Search Fields Display After Login",
      "ID": "TC-193",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the search screen."
        },
        {
          "Step": 2,
          "Step Description": "Observe the search screen for available input fields.",
          "Expected Result": "The following fields are visible: ID RICE, ZONA RICE, P.IVA, COD FISC Titolare, RAGIONE SOCIALE, DENOMINAZIONE (Insegna), CLUSTER_PV, CANALE I, CANALE II, COMUNE."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Access/Search Screen",
      "Preconditions": "User has valid credentials and access to ZENIT; ZENIT application is running.",
      "Execution Mode": "Manual",
      "Functionality": "Search screen field display after login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials",
      "Expected Result": "All required search fields are displayed after login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Single Field Search Functionality",
      "ID": "TC-194",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid value in only one of the search fields (e.g., ID RICE).",
          "Expected Result": "The selected field is populated with the test value."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "Search results are displayed for the entered value, showing one or more PoS matching the criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Access/Search Screen",
      "Preconditions": "User is logged in and on the search screen.",
      "Execution Mode": "Manual",
      "Functionality": "Single field search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid value for one search field (e.g., ID RICE: 12345)",
      "Expected Result": "Search can be performed with only one field filled; results are shown accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Multiple Fields Search Functionality",
      "ID": "TC-195",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid values in two or more search fields (e.g., ZONA RICE and COMUNE).",
          "Expected Result": "The selected fields are populated with the test values."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "Search results are displayed for PoS matching all entered criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Access/Search Screen",
      "Preconditions": "User is logged in and on the search screen.",
      "Execution Mode": "Manual",
      "Functionality": "Multiple fields search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid values for two or more fields (e.g., ZONA RICE: 'North', COMUNE: 'Milan')",
      "Expected Result": "Search can be performed with multiple fields filled; results match all criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Search for Linked PoS (pos collegati)",
      "ID": "TC-196",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select or activate the 'pos collegati' search type (if available).",
          "Expected Result": "'pos collegati' search mode is activated."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid value in a relevant field (e.g., COD FISC Titolare).",
          "Expected Result": "The field is populated with the test value."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "Search results display all PoS linked to the entered value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Access/Search Screen",
      "Preconditions": "User is logged in and on the search screen; 'pos collegati' search type is available.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid COD FISC Titolare value with linked PoS",
      "Expected Result": "All PoS linked to the entered value are displayed in the results.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Access to Report Section from Search Screen",
      "ID": "TC-197",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate and click the 'Report' section link or button.",
          "Expected Result": "User is redirected to the 'Report' section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Access/Search Screen",
      "Preconditions": "User is logged in and on the search screen.",
      "Execution Mode": "Manual",
      "Functionality": "Access to Report section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials",
      "Expected Result": "User can access the 'Report' section from the search screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Negative Test: Search with No Fields Filled",
      "ID": "TC-198",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Leave all search fields empty.",
          "Expected Result": "No fields are populated."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System displays an error message or disables the search action, indicating that at least one field must be filled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Access/Search Screen",
      "Preconditions": "User is logged in and on the search screen.",
      "Execution Mode": "Manual",
      "Functionality": "Input validation for search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No input data",
      "Expected Result": "System prevents search with no fields filled and provides appropriate feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Boundary Test: Search with Maximum Field Lengths",
      "ID": "TC-199",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter maximum allowed characters in each search field (one at a time).",
          "Expected Result": "Each field accepts input up to its maximum length."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button after entering maximum length data in a field.",
          "Expected Result": "Search is performed successfully, or system handles input gracefully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Access/Search Screen",
      "Preconditions": "User is logged in and on the search screen; knowledge of maximum field lengths.",
      "Execution Mode": "Manual",
      "Functionality": "Field length validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Maximum length values for each field (e.g., ID RICE: 20 chars, P.IVA: 11 digits, etc.)",
      "Expected Result": "System accepts maximum allowed input and performs search or provides appropriate validation feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Verify all required fields are displayed in Single Search Result",
      "ID": "TC-200",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search using valid criteria in the application.",
          "Expected Result": "The system navigates to the single search result screen."
        },
        {
          "Step": 2,
          "Step Description": "Observe the fields displayed on the result screen.",
          "Expected Result": "All required fields (id rice, zona rice, denominazione, località, canale I, canale II, n° awp totale, n° vlt totale, coin in medio, bc medio rolling 12 mesi, bc medio anno in corso, garanzie presenti, am, ka, scoring cerved, n° insoluti rolling 12 mesi, n° inso anno in corso, red list, credito, blocco sollecito, fidi impostati per il PoS, consumo dei fidi, cassa disponibile pdv) are present and visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated and has access to the single search functionality. At least one valid record exists for the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Display of all required fields in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one record matching search criteria.",
      "Expected Result": "All specified fields are present and visible on the single search result screen after performing a search.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify correct data is displayed for each field in Single Search Result",
      "ID": "TC-201",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search using criteria that matches a known record with predefined data.",
          "Expected Result": "The system navigates to the single search result screen."
        },
        {
          "Step": 2,
          "Step Description": "Compare the displayed values for each field with the expected values from the known record.",
          "Expected Result": "Each field displays the correct value as per the known record (id rice, zona rice, denominazione, etc.)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. Known record with all fields populated is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Correctness of data displayed in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; known record with all fields populated.",
      "Expected Result": "All fields display the correct data corresponding to the searched record.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify extraction (export) functionality for Single Search Result data",
      "ID": "TC-202",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search to display the result screen with all required fields.",
          "Expected Result": "Single search result screen is displayed with all fields."
        },
        {
          "Step": 2,
          "Step Description": "Click on the option to extract or export the displayed data (e.g., 'Export' button).",
          "Expected Result": "System prompts to download or save the data in a supported format (e.g., CSV, Excel)."
        },
        {
          "Step": 3,
          "Step Description": "Open the exported file and verify its contents.",
          "Expected Result": "Exported file contains all the fields and values as displayed on the result screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. At least one record is available for search. Export functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction/export from single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one record matching search criteria.",
      "Expected Result": "User can successfully extract all displayed data, and the exported file matches the on-screen data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify behavior when no matching record is found in Single Search",
      "ID": "TC-203",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search using criteria that do not match any record in the system.",
          "Expected Result": "System processes the search request."
        },
        {
          "Step": 2,
          "Step Description": "Observe the result displayed by the system.",
          "Expected Result": "System displays a clear message indicating that no matching records were found. No data fields are shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. No record exists for the search criteria used.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of no-result scenario in single search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; search criteria with no matching records.",
      "Expected Result": "System displays an appropriate 'no results found' message and does not show any data fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify field formatting and data types in Single Search Result",
      "ID": "TC-204",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search to display the result screen with all required fields.",
          "Expected Result": "Single search result screen is displayed with all fields."
        },
        {
          "Step": 2,
          "Step Description": "Review the formatting and data type of each field (e.g., numeric fields, dates, yes/no values).",
          "Expected Result": "Each field is displayed with the correct format and data type (e.g., numbers with correct decimal places, dates in correct format, 'red list' as 'si/no')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. At least one record is available for search.",
      "Execution Mode": "Manual",
      "Functionality": "Field formatting and data type validation in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one record matching search criteria.",
      "Expected Result": "All fields are displayed with correct formatting and data types as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify system handles missing or null values gracefully in Single Search Result",
      "ID": "TC-205",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search for a record where some fields have missing or null values in the database.",
          "Expected Result": "Single search result screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe how the system displays fields with missing or null values.",
          "Expected Result": "System displays a placeholder (e.g., '-', 'N/A') or leaves the field blank, without causing errors or misalignment in the UI."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. At least one record with missing/null field values exists.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing/null values in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; record with missing/null values in some fields.",
      "Expected Result": "System displays missing/null values gracefully, maintaining UI integrity and without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify presence and correct labeling of 'Export to Excel' button in report section (Phase 1)",
      "ID": "TC-206",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials and navigate to the report section where the 'Export to Excel' functionality should be available.",
          "Expected Result": "User successfully accesses the report section."
        },
        {
          "Step": 2,
          "Step Description": "Observe the available action buttons in the report section interface.",
          "Expected Result": "A button labeled 'Export to Excel' (or equivalent) is visible and enabled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Report Section UI",
      "Preconditions": "User has valid credentials and access to the report section. Application is in Phase 1 deployment.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel button presence and labeling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one report available for export.",
      "Expected Result": "The 'Export to Excel' button is present, correctly labeled, and enabled in the report section during Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (Excel export button presence).",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify immediate Excel export functionality from report section (Phase 1)",
      "ID": "TC-207",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application and navigate to the report section with at least one report available.",
          "Expected Result": "User is in the report section with data displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "System initiates the download of an Excel file."
        },
        {
          "Step": 3,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The file opens successfully and contains the expected report data as displayed in the application."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Report Section Export",
      "Preconditions": "User is logged in and has access to the report section with data available. Application is in Phase 1.",
      "Execution Mode": "Manual",
      "Functionality": "Immediate Excel export",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; report data available for export.",
      "Expected Result": "Clicking the 'Export to Excel' button immediately downloads an Excel file containing the current report data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (Excel export functionality).",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify absence of 'PoS Management' button in report section during Phase 1",
      "ID": "TC-208",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application and navigate to the report section.",
          "Expected Result": "User is in the report section."
        },
        {
          "Step": 2,
          "Step Description": "Observe the available action buttons in the report section interface.",
          "Expected Result": "No button or link related to 'PoS Management' is present in the interface."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Report Section UI",
      "Preconditions": "User has valid credentials and access to the report section. Application is in Phase 1 deployment.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Management button absence",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "The 'PoS Management' button is not present in the report section during Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (PoS Management button absence).",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify Excel export button is disabled or hidden when no report data is available (Phase 1)",
      "ID": "TC-209",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application and navigate to the report section where no report data is available (e.g., apply filters that return no results).",
          "Expected Result": "User is in the report section with no data displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the state of the 'Export to Excel' button.",
          "Expected Result": "The 'Export to Excel' button is either disabled or hidden when there is no data to export."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Report Section UI",
      "Preconditions": "User is logged in and report section is accessible. No report data is available for export. Application is in Phase 1.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel button state with no data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; filters or conditions that result in no report data.",
      "Expected Result": "The 'Export to Excel' button is not enabled or visible when there is no report data to export.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (Excel export button state with no data).",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify Multiple PoS Search Results Display and Count",
      "ID": "TC-210",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the PoS search screen.",
          "Expected Result": "PoS search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter search criteria that will return multiple PoS (excluding geographic search).",
          "Expected Result": "Search criteria are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the search.",
          "Expected Result": "System displays a table with all PoS matching the criteria, including closed PoS, and shows the total number of PoS found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Search Module",
      "Preconditions": "User is authenticated and has access to the PoS search functionality. At least two PoS exist in the system matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Multiple PoS search and result display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least two PoS records matching the search criteria (including closed PoS).",
      "Expected Result": "The system displays a table with all matching PoS, including closed PoS, and shows the total number of PoS found. No data aggregation is performed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Excel Export Functionality for Multiple PoS Results",
      "ID": "TC-211",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a PoS search that returns multiple results (excluding geographic search).",
          "Expected Result": "Multiple PoS are displayed in a table."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Export to Excel' option/button.",
          "Expected Result": "System generates and downloads an Excel file containing the displayed PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "Excel file contains all PoS data as displayed in the table, with a minimum set of data for each PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Search Module",
      "Preconditions": "User is authenticated and has performed a search returning multiple PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Excel export of PoS search results",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, search criteria returning multiple PoS.",
      "Expected Result": "Excel file is generated and contains all PoS data as displayed in the table, with no missing or extra records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Selection and Navigation to Single PoS from Multiple Results",
      "ID": "TC-212",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a PoS search that returns multiple results (excluding geographic search).",
          "Expected Result": "Multiple PoS are displayed in a table."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific PoS from the displayed list.",
          "Expected Result": "Selected PoS is highlighted or otherwise indicated as selected."
        },
        {
          "Step": 3,
          "Step Description": "Click to enter the detailed view (Riscontro Singolo) for the selected PoS.",
          "Expected Result": "System navigates to the detailed view for the selected PoS, displaying relevant information and options."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Search Module",
      "Preconditions": "User is authenticated and has performed a search returning multiple PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Selection and navigation to single PoS detail",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, search criteria returning multiple PoS.",
      "Expected Result": "User can select a PoS from the list and is navigated to the detailed view for that PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Excel Export Functionality in Single PoS Detail View",
      "ID": "TC-213",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "From the multiple PoS search results, select a specific PoS to enter the detailed view (Riscontro Singolo).",
          "Expected Result": "Detailed view for the selected PoS is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Export to Excel' option/button in the detailed view.",
          "Expected Result": "System generates and downloads an Excel file containing the detailed data for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "Excel file contains the detailed data for the selected PoS as displayed in the detailed view."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Search Module",
      "Preconditions": "User is authenticated and has navigated to the detailed view of a PoS from the multiple results list.",
      "Execution Mode": "Manual",
      "Functionality": "Excel export from single PoS detail view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one PoS with detailed data available.",
      "Expected Result": "Excel file is generated and contains the detailed data for the selected PoS as displayed in the detailed view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Exclusion of Geographic Search and Inclusion of Closed PoS",
      "ID": "TC-214",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS search screen.",
          "Expected Result": "PoS search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to perform a search using geographic criteria.",
          "Expected Result": "System does not allow or ignores geographic search criteria."
        },
        {
          "Step": 3,
          "Step Description": "Perform a search using non-geographic criteria that returns closed PoS.",
          "Expected Result": "Closed PoS are included in the search results table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Search Module",
      "Preconditions": "User is authenticated. At least one closed PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Search criteria validation and closed PoS inclusion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one closed PoS, search criteria for both geographic and non-geographic searches.",
      "Expected Result": "System excludes geographic search and includes closed PoS in the results when using non-geographic criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Report Selection Options in Phase 2 of Multiple PoS Results",
      "ID": "TC-215",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a PoS search that returns multiple results (excluding geographic search).",
          "Expected Result": "Multiple PoS are displayed in a table."
        },
        {
          "Step": 2,
          "Step Description": "Check for the presence of report selection options as described in the referenced 'Report' paragraph.",
          "Expected Result": "Report selection options are visible and accessible."
        },
        {
          "Step": 3,
          "Step Description": "Select a report option and confirm the selection.",
          "Expected Result": "System processes the selection and displays or generates the corresponding report."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Search Module",
      "Preconditions": "User is authenticated and has performed a search returning multiple PoS. Report options are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Report selection in multiple PoS results",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, search criteria returning multiple PoS, available report options.",
      "Expected Result": "User can select and generate reports from the multiple PoS results as per system configuration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify extraction of all PoS data and display of linked PoS based on matching fields",
      "ID": "TC-216",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface (e.g., via ID RICE).",
          "Expected Result": "The PoS information request interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid PoS identifier (ID RICE) for a PoS that has at least one other PoS linked by a matching field (e.g., same P.IVA POS).",
          "Expected Result": "The system accepts the input and initiates the search."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system retrieves and displays all data related to the requested PoS as specified in RU 4.2.6."
        },
        {
          "Step": 4,
          "Step Description": "Observe the section displaying linked PoS.",
          "Expected Result": "All PoS linked to the requested PoS by any of the specified fields are listed. For each linked PoS, the field(s) that generated the association are clearly indicated."
        },
        {
          "Step": 5,
          "Step Description": "Verify that each linked PoS is selectable (e.g., via checkbox or clickable row).",
          "Expected Result": "Each linked PoS is selectable by the user."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "At least two PoS exist in the system with at least one matching field among the specified list (e.g., same P.IVA POS). User has access to the PoS information request interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS extraction and display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with overlapping values in at least one of the following fields: P.IVA POS, COD. FISCALE POS, NOMINATIVO TITOLARE, P.IVA TITOLARE, COD. FISC. TITOLARE, EMAIL, RAGIONE SOCIALE, DENOMINAZIONE.",
      "Expected Result": "All data for the requested PoS are displayed, all linked PoS are listed with the association field(s) indicated, and each linked PoS is selectable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify indication of association field for each linked PoS",
      "ID": "TC-217",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a PoS identifier (ID RICE) for a PoS that has multiple linked PoS, each linked by a different field (e.g., one by EMAIL, another by RAGIONE SOCIALE).",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system retrieves and displays the requested PoS data."
        },
        {
          "Step": 4,
          "Step Description": "Review the list of linked PoS and the indicated association fields.",
          "Expected Result": "For each linked PoS, the specific field(s) that generated the association are clearly indicated (e.g., 'Linked by EMAIL', 'Linked by RAGIONE SOCIALE')."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "PoS records exist with links via different fields. User has access to the PoS information request interface.",
      "Execution Mode": "Manual",
      "Functionality": "Display of association field for linked PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with links via different fields (e.g., EMAIL, RAGIONE SOCIALE).",
      "Expected Result": "Each linked PoS displays the correct field(s) that generated the association.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify system behavior when no linked PoS exist",
      "ID": "TC-218",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a PoS identifier (ID RICE) for a PoS that does not share any of the specified fields with other PoS.",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system retrieves and displays the requested PoS data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the section for linked PoS.",
          "Expected Result": "No linked PoS are displayed. The system indicates that there are no linked PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "A PoS exists with unique values for all specified fields. User has access to the PoS information request interface.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of PoS with no links",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record with unique values for all specified fields.",
      "Expected Result": "No linked PoS are displayed and an appropriate message is shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify selection functionality for linked PoS",
      "ID": "TC-219",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a PoS identifier (ID RICE) for a PoS with at least one linked PoS.",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system retrieves and displays the requested PoS data and the list of linked PoS."
        },
        {
          "Step": 4,
          "Step Description": "Select one or more linked PoS from the displayed list.",
          "Expected Result": "The system allows selection of one or more linked PoS (e.g., highlights the selection or marks checkboxes)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "At least two PoS exist with a link via one of the specified fields. User has access to the PoS information request interface.",
      "Execution Mode": "Manual",
      "Functionality": "Selection of linked PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with at least one link via the specified fields.",
      "Expected Result": "Linked PoS are selectable by the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify system behavior with invalid PoS identifier",
      "ID": "TC-220",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid or non-existent PoS identifier (ID RICE).",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system displays an error message indicating that the PoS was not found. No PoS data or linked PoS are displayed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "User has access to the PoS information request interface. The entered PoS identifier does not exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for invalid PoS identifier",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid or non-existent PoS identifier.",
      "Expected Result": "An appropriate error message is displayed and no PoS data or linked PoS are shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify presence and functionality of 'Extract in Excel' button for POS report in ZENIT (Phase 1)",
      "ID": "TC-221",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section where POS reports are available (refer to 'Report' section).",
          "Expected Result": "The POS report section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify the presence of the 'Extract in Excel' button.",
          "Expected Result": "The 'Extract in Excel' button is visible and enabled."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Extract in Excel' button.",
          "Expected Result": "The system generates and downloads the POS report in Excel format immediately."
        },
        {
          "Step": 5,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The Excel file opens successfully and contains the expected POS report data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Report Extraction",
      "Preconditions": "User has valid credentials and access to ZENIT; POS report data is available.",
      "Execution Mode": "Manual",
      "Functionality": "POS Report Extraction in Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; POS report data present in the system.",
      "Expected Result": "The 'Extract in Excel' button is present, functional, and the downloaded Excel file contains the correct POS report data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 functionality (Excel extraction button).",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify absence of other report and POS management buttons in Phase 1",
      "ID": "TC-222",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS report and management section.",
          "Expected Result": "The section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of any report extraction buttons other than 'Extract in Excel' (e.g., PDF, CSV, etc.).",
          "Expected Result": "No other report extraction buttons are present except 'Extract in Excel'."
        },
        {
          "Step": 4,
          "Step Description": "Check for the presence of POS management buttons (refer to 'Gestione PoS' section).",
          "Expected Result": "No POS management buttons are present in Phase 1."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Report and Management",
      "Preconditions": "User has valid credentials and access to ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "POS Report and Management Button Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "Only the 'Extract in Excel' button is present; no other report extraction or POS management buttons are visible in Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Ensures compliance with Phase 1 scope (only Excel extraction button present).",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify error handling when POS report data is unavailable during Excel extraction",
      "ID": "TC-223",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS report section.",
          "Expected Result": "The POS report section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Ensure that no POS report data is available (simulate or use a test environment with no data).",
          "Expected Result": "The POS report section indicates no data is available."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Extract in Excel' button.",
          "Expected Result": "The system displays an appropriate error message (e.g., 'No data available for extraction') and does not generate an Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Report Extraction",
      "Preconditions": "User has valid credentials; POS report section contains no data.",
      "Execution Mode": "Manual",
      "Functionality": "POS Report Extraction Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; POS report section with no data.",
      "Expected Result": "If no POS report data is available, the system prevents extraction and displays a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for Excel extraction with no data.",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify Access and Display of Data History (Storico Dati) Section",
      "ID": "TC-224",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' (Data History) section from the main menu or dashboard.",
          "Expected Result": "The 'Storico Dati' section is displayed to the user."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the data history records are displayed in a tabular or list format.",
          "Expected Result": "A list or table of historical data records is visible, showing relevant columns such as date, type, and value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User account exists and has access to the Storico Dati feature. Application is running and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Data History Access and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; historical data records present in the system.",
      "Expected Result": "User can access the 'Storico Dati' section and view a list of historical data records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Data History Filtering Functionality",
      "ID": "TC-225",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid user credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Apply a filter (e.g., by date range or data type) using the available filter controls.",
          "Expected Result": "The data history list updates to show only records matching the selected filter criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User is logged in and has access to the Storico Dati section. Historical data records exist for multiple dates/types.",
      "Execution Mode": "Manual",
      "Functionality": "Data History Filtering",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; historical data records with varying dates/types.",
      "Expected Result": "User can filter historical data records and view only those matching the selected criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify No Data Scenario in Data History",
      "ID": "TC-226",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid user credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify the display when there are no historical data records for the user.",
          "Expected Result": "A clear message is shown indicating that no historical data is available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User is logged in. No historical data records exist for the user.",
      "Execution Mode": "Manual",
      "Functionality": "Data History No Data Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; no historical data records for the user.",
      "Expected Result": "If no data is present, the system displays an appropriate message (e.g., 'No historical data available').",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Pagination in Data History Section",
      "ID": "TC-227",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid user credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that pagination controls are present when the number of historical records exceeds the page limit.",
          "Expected Result": "Pagination controls (e.g., next, previous, page numbers) are visible."
        },
        {
          "Step": 4,
          "Step Description": "Navigate through multiple pages using the pagination controls.",
          "Expected Result": "The data history list updates to show records for the selected page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User is logged in. Sufficient historical data records exist to require pagination (e.g., more than 20 records).",
      "Execution Mode": "Manual",
      "Functionality": "Data History Pagination",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; more than 20 historical data records.",
      "Expected Result": "User can navigate through multiple pages of historical data records using pagination controls.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Error Handling When Data History Service is Unavailable",
      "ID": "TC-228",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid user credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section while the data history backend service is intentionally made unavailable (simulate service outage).",
          "Expected Result": "The application attempts to retrieve historical data but encounters a service error."
        },
        {
          "Step": 3,
          "Step Description": "Observe the error message or behavior presented to the user.",
          "Expected Result": "A clear, user-friendly error message is displayed indicating that the data history service is temporarily unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User is logged in. Data history backend service is offline or unreachable.",
      "Execution Mode": "Manual",
      "Functionality": "Data History Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; data history service offline.",
      "Expected Result": "If the data history service is unavailable, the user is shown an appropriate error message and the application handles the error gracefully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Daily Archiving of Data Snapshot at 00:00",
      "ID": "TC-229",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system clock is set to 23:59 of a test day.",
          "Expected Result": "System is ready to transition to the next day."
        },
        {
          "Step": 2,
          "Step Description": "Wait until 00:00 and trigger the daily archiving process (manually or automatically).",
          "Expected Result": "Archiving process is initiated at 00:00."
        },
        {
          "Step": 3,
          "Step Description": "Verify that a snapshot of all required data (as per 'ZENIT - elenco dati' Excel file) for the previous day is archived.",
          "Expected Result": "A complete and accurate snapshot of the previous day's data is stored in the archive."
        },
        {
          "Step": 4,
          "Step Description": "Query the archive for the snapshot just created.",
          "Expected Result": "Archived data is retrievable and matches the source data as of 23:59."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving Module",
      "Preconditions": "System is live; test data for the day is available; archiving schedule is configured; access to 'ZENIT - elenco dati' Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data archiving and snapshot creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data for a full day; 'ZENIT - elenco dati' Excel file; system clock control.",
      "Expected Result": "System archives a complete daily snapshot of all required data at 00:00, and the data is retrievable and accurate.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Retention and Deletion After Contract Termination (No Pending Issues)",
      "ID": "TC-230",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS (Point of Sale) with no pending issues or disputes and with a terminated contract.",
          "Expected Result": "PoS with terminated contract and no pending issues is selected."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data deletion process for the identified PoS.",
          "Expected Result": "System initiates deletion process for the PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all data related to the PoS is deleted from the archive.",
          "Expected Result": "No data for the PoS is present in the archive."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving Module",
      "Preconditions": "PoS with terminated contract and no pending issues exists; user has permission to trigger deletion.",
      "Execution Mode": "Manual",
      "Functionality": "Data deletion after contract termination",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with terminated contract and no pending issues.",
      "Expected Result": "All data for PoS with terminated contract and no pending issues is deleted from the archive.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Retention for PoS with Pending Issues or Disputes",
      "ID": "TC-231",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with pending issues or disputes and a terminated contract.",
          "Expected Result": "PoS with terminated contract and pending issues is selected."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to trigger the data deletion process for the identified PoS.",
          "Expected Result": "System checks for pending issues or disputes."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the data is not deleted and is retained according to the 10-year retention policy from the last accounting movement.",
          "Expected Result": "PoS data is retained and not deleted; retention period is correctly calculated."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving Module",
      "Preconditions": "PoS with terminated contract and pending issues exists; user has permission to trigger deletion.",
      "Execution Mode": "Manual",
      "Functionality": "Data retention for PoS with pending issues",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with terminated contract and pending issues.",
      "Expected Result": "PoS data is retained for 10 years from the last accounting movement if there are pending issues or disputes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Accessibility for Future Queries",
      "ID": "TC-232",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Archive data for multiple PoS and products over several days.",
          "Expected Result": "Data is archived for each day as per requirements."
        },
        {
          "Step": 2,
          "Step Description": "Query the archive for a specific PoS, product, and date (e.g., a single day of the week).",
          "Expected Result": "System returns the correct data snapshot for the specified PoS, product, and date."
        },
        {
          "Step": 3,
          "Step Description": "Query the archive for the number of unpaid items (n° insoluti) for a specific PoS and date.",
          "Expected Result": "System returns the correct count of unpaid items for the specified criteria."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving Module",
      "Preconditions": "Archived data for multiple PoS and products is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data accessibility and query capability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Archived data for multiple PoS, products, and dates.",
      "Expected Result": "Archived data is accessible and can be queried accurately for any PoS, product, and date as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Archiving Frequency as per 'ZENIT - elenco dati' Excel File",
      "ID": "TC-233",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review the 'ZENIT - elenco dati' Excel file to identify data elements and their required archiving frequency.",
          "Expected Result": "List of data elements and their frequencies is available."
        },
        {
          "Step": 2,
          "Step Description": "Verify that each data element is archived according to its specified frequency (e.g., daily, weekly, monthly).",
          "Expected Result": "Each data element is archived at the correct frequency."
        },
        {
          "Step": 3,
          "Step Description": "Check the archive for the presence of data snapshots as per the defined schedule.",
          "Expected Result": "Archived data matches the expected frequency for each element."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving Module",
      "Preconditions": "Access to 'ZENIT - elenco dati' Excel file; system configured for archiving.",
      "Execution Mode": "Manual",
      "Functionality": "Archiving frequency compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "'ZENIT - elenco dati' Excel file; test data for various frequencies.",
      "Expected Result": "All data elements are archived according to the frequencies defined in the 'ZENIT - elenco dati' Excel file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Visibility Restrictions After 10-Year Retention Period",
      "ID": "TC-234",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify PoS data with pending issues or disputes and last accounting movement older than 10 years.",
          "Expected Result": "PoS data with expired retention period is selected."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data review and deletion process for the identified PoS.",
          "Expected Result": "System evaluates which data to delete and which to retain for specific user profiles."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only authorized profiles can view the retained data, and deleted data is no longer accessible.",
          "Expected Result": "Data visibility is restricted as per requirements; deleted data is inaccessible."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving Module",
      "Preconditions": "PoS data with last accounting movement older than 10 years and pending issues exists; user profiles with different permissions are available.",
      "Execution Mode": "Manual",
      "Functionality": "Data visibility and retention after 10 years",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS data with last accounting movement >10 years; user profiles with varying permissions.",
      "Expected Result": "After 10 years, only authorized profiles can view retained data; deleted data is inaccessible to all users.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Importazione manuale file dati PoS fuori rete in Zenit - Caso positivo",
      "ID": "TC-235",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con tutti i campi richiesti (ID RICE, ZONA RICE, DENOMINAZIONE, RAGIONE SOCIALE, INDIRIZZO, COMUNE, P.IVA, COD. FISCALE, IMPORTO CREDITO, STATUS, PASSAGGIO A PERDITA) e dati validi.",
          "Expected Result": "Il file è pronto e conforme alle specifiche."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit con credenziali valide e permessi di importazione.",
          "Expected Result": "Accesso a Zenit effettuato con successo."
        },
        {
          "Step": 3,
          "Step Description": "Navigare alla sezione di importazione dati PoS fuori rete.",
          "Expected Result": "La sezione di importazione è visibile e accessibile."
        },
        {
          "Step": 4,
          "Step Description": "Caricare il file preparato e avviare la procedura di importazione.",
          "Expected Result": "Il sistema accetta il file e avvia l'importazione."
        },
        {
          "Step": 5,
          "Step Description": "Verificare che i dati siano stati importati correttamente consultando l'elenco PoS fuori rete.",
          "Expected Result": "Tutti i record del file sono presenti e corretti in Zenit."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Importazione PoS fuori rete",
      "Preconditions": "Utente con permessi di importazione; file di test conforme disponibile.",
      "Execution Mode": "Manual",
      "Functionality": "Importazione dati PoS fuori rete",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con dati validi per tutti i campi richiesti.",
      "Expected Result": "I dati PoS fuori rete vengono importati correttamente in Zenit senza errori.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Importazione file dati PoS fuori rete con campi obbligatori mancanti",
      "ID": "TC-236",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione omettendo uno o più campi obbligatori (es. ID RICE o IMPORTO CREDITO).",
          "Expected Result": "Il file è pronto con dati mancanti."
        },
        {
          "Step": 2,
          "Step Description": "Accedere a Zenit e navigare alla sezione di importazione dati PoS fuori rete.",
          "Expected Result": "Accesso e navigazione riusciti."
        },
        {
          "Step": 3,
          "Step Description": "Caricare il file incompleto e avviare l'importazione.",
          "Expected Result": "Il sistema rileva la mancanza di campi obbligatori e blocca l'importazione."
        },
        {
          "Step": 4,
          "Step Description": "Verificare la presenza di un messaggio di errore dettagliato che indichi i campi mancanti.",
          "Expected Result": "Viene visualizzato un messaggio di errore chiaro e specifico."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Importazione PoS fuori rete",
      "Preconditions": "Utente con permessi di importazione; file di test con campi mancanti.",
      "Execution Mode": "Manual",
      "Functionality": "Gestione errori importazione dati PoS fuori rete",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con uno o più campi obbligatori mancanti.",
      "Expected Result": "L'importazione viene bloccata e l'utente riceve un messaggio di errore dettagliato.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Modifica dati PoS fuori rete importati in Zenit",
      "ID": "TC-237",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Importare un file valido di dati PoS fuori rete in Zenit.",
          "Expected Result": "I dati vengono importati correttamente."
        },
        {
          "Step": 2,
          "Step Description": "Accedere alla sezione di gestione PoS fuori rete e selezionare un record appena importato.",
          "Expected Result": "Il record è selezionato e modificabile."
        },
        {
          "Step": 3,
          "Step Description": "Modificare uno o più campi (es. STATUS o IMPORTO CREDITO) e salvare le modifiche.",
          "Expected Result": "Le modifiche vengono salvate senza errori."
        },
        {
          "Step": 4,
          "Step Description": "Verificare che le modifiche siano correttamente riflesse nel sistema.",
          "Expected Result": "I dati aggiornati sono visibili e corretti."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Gestione PoS fuori rete",
      "Preconditions": "Dati PoS fuori rete già importati in Zenit.",
      "Execution Mode": "Manual",
      "Functionality": "Modifica dati PoS fuori rete",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Record PoS fuori rete già presenti in Zenit.",
      "Expected Result": "Le modifiche ai dati PoS fuori rete vengono salvate e visualizzate correttamente.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Importazione file dati PoS fuori rete con valori non validi nei campi",
      "ID": "TC-238",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con valori non validi (es. testo in IMPORTO CREDITO, formato errato per P.IVA).",
          "Expected Result": "Il file è pronto con dati non validi."
        },
        {
          "Step": 2,
          "Step Description": "Accedere a Zenit e navigare alla sezione di importazione dati PoS fuori rete.",
          "Expected Result": "Accesso e navigazione riusciti."
        },
        {
          "Step": 3,
          "Step Description": "Caricare il file e avviare l'importazione.",
          "Expected Result": "Il sistema rileva i valori non validi e blocca l'importazione."
        },
        {
          "Step": 4,
          "Step Description": "Verificare la presenza di un messaggio di errore che indichi i valori errati e i campi coinvolti.",
          "Expected Result": "Viene visualizzato un messaggio di errore dettagliato."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Importazione PoS fuori rete",
      "Preconditions": "Utente con permessi di importazione; file di test con valori non validi.",
      "Execution Mode": "Manual",
      "Functionality": "Validazione dati importazione PoS fuori rete",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con valori non validi nei campi.",
      "Expected Result": "L'importazione viene bloccata e l'utente riceve un messaggio di errore dettagliato sui valori non validi.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Importazione file dati PoS fuori rete con campo PASSAGGIO A PERDITA valorizzato si/no",
      "ID": "TC-239",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare due file di importazione: uno con PASSAGGIO A PERDITA impostato a 'si', uno a 'no'.",
          "Expected Result": "I file sono pronti con i valori richiesti."
        },
        {
          "Step": 2,
          "Step Description": "Accedere a Zenit e navigare alla sezione di importazione dati PoS fuori rete.",
          "Expected Result": "Accesso e navigazione riusciti."
        },
        {
          "Step": 3,
          "Step Description": "Caricare e importare il primo file (PASSAGGIO A PERDITA = 'si').",
          "Expected Result": "Il sistema importa correttamente il record e valorizza il campo come 'si'."
        },
        {
          "Step": 4,
          "Step Description": "Caricare e importare il secondo file (PASSAGGIO A PERDITA = 'no').",
          "Expected Result": "Il sistema importa correttamente il record e valorizza il campo come 'no'."
        },
        {
          "Step": 5,
          "Step Description": "Verificare che il campo PASSAGGIO A PERDITA sia correttamente valorizzato nei record importati.",
          "Expected Result": "Il campo PASSAGGIO A PERDITA risulta valorizzato correttamente in entrambi i casi."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Importazione PoS fuori rete",
      "Preconditions": "Utente con permessi di importazione; file di test con valori 'si' e 'no' per PASSAGGIO A PERDITA.",
      "Execution Mode": "Manual",
      "Functionality": "Gestione campo PASSAGGIO A PERDITA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con campo PASSAGGIO A PERDITA valorizzato 'si' e 'no'.",
      "Expected Result": "Il campo PASSAGGIO A PERDITA viene importato e visualizzato correttamente in Zenit.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    }
  ],
  "total_count": 239
}