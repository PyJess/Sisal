{
  "test_cases": [
    {
      "Title": "Verify Project Documentation Accessibility and Versioning",
      "ID": "TC-001",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT project documentation portal.",
          "Expected Result": "The documentation portal loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'Documentazione di progetto: requisiti utente' section.",
          "Expected Result": "The section is visible and accessible."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of the latest revision (e.g., Rev. 0.4) and its details (object, date, author).",
          "Expected Result": "The latest revision and its metadata are displayed correctly."
        },
        {
          "Step": 4,
          "Step Description": "Verify that previous revisions (e.g., 0.3, 0.2, 0.1) are also listed with correct details.",
          "Expected Result": "All previous revisions are listed with accurate information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Documentation Management",
      "Preconditions": "User has valid credentials and access to the documentation portal.",
      "Execution Mode": "Manual",
      "Functionality": "Documentation versioning and accessibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The project documentation is accessible, and all revisions are correctly listed with their respective details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only documentation accessibility and versioning, not content validation.",
      "_polarion": "RU-DOC-001"
    },
    {
      "Title": "Validate Revision Metadata Integrity",
      "ID": "TC-002",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the revision history section of the ZENIT documentation.",
          "Expected Result": "Revision history is displayed."
        },
        {
          "Step": 2,
          "Step Description": "For each revision entry, verify the presence of revision number, object of revision, and date.",
          "Expected Result": "Each revision entry contains all required metadata fields."
        },
        {
          "Step": 3,
          "Step Description": "Check that the author and approver fields are populated for each revision.",
          "Expected Result": "Author and approver information is present for all revisions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Documentation Management",
      "Preconditions": "User is authenticated and has access to the documentation revision history.",
      "Execution Mode": "Manual",
      "Functionality": "Revision metadata management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "All revision entries display complete and accurate metadata.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not validate the content of the revisions, only metadata presence and correctness.",
      "_polarion": "RU-DOC-002"
    },
    {
      "Title": "Check Privacy and User Profile Update in Documentation",
      "ID": "TC-003",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the latest revision (0.4) of the ZENIT documentation.",
          "Expected Result": "Latest revision is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Review the section regarding data source updates, user profiles, and privacy.",
          "Expected Result": "Section is present and clearly describes updates."
        },
        {
          "Step": 3,
          "Step Description": "Verify that privacy-related changes are documented as per compliance requirements.",
          "Expected Result": "Privacy updates are documented and compliant with standards."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Documentation Management",
      "Preconditions": "User has access to the latest documentation revision.",
      "Execution Mode": "Manual",
      "Functionality": "Documentation content validation (privacy and user profile)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "Documentation accurately reflects updates to data sources, user profiles, and privacy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on privacy and user profile documentation only.",
      "_polarion": "RU-DOC-003"
    },
    {
      "Title": "Verify Data Collection from SAP System",
      "ID": "TC-004",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection section.",
          "Expected Result": "Data collection interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate data collection from the SAP system.",
          "Expected Result": "System starts the data collection process from SAP."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the process to complete and observe the status.",
          "Expected Result": "System confirms successful data collection from SAP and displays the collected data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection Module",
      "Preconditions": "User has access to the application and SAP integration is configured.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; SAP system with available data.",
      "Expected Result": "Data from SAP is successfully collected and displayed in the application.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Dashboard Access for Full Access Profile",
      "ID": "TC-005",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application using a user with Full Access profile.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all dashboard features are visible and accessible.",
          "Expected Result": "All dashboard features (data visualization, reports, management tools) are available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Dashboard Module",
      "Preconditions": "User account with Full Access profile exists.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Full Access user credentials.",
      "Expected Result": "Full Access user can view and use all dashboard features.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Data Archiving Functionality",
      "ID": "TC-006",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data archiving section.",
          "Expected Result": "Data archiving interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select data to be archived and initiate the archiving process.",
          "Expected Result": "System processes the archiving request."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the selected data is no longer available in the active dataset and is present in the archive.",
          "Expected Result": "Data is successfully moved to the archive and is retrievable from the archive section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving Module",
      "Preconditions": "User has access to data archiving functionality.",
      "Execution Mode": "Manual",
      "Functionality": "Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample data for archiving.",
      "Expected Result": "Selected data is archived and retrievable from the archive.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Login Failure with Invalid Credentials",
      "ID": "TC-007",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid username and/or password and attempt to login.",
          "Expected Result": "System displays an error message indicating invalid credentials and denies access."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication Module",
      "Preconditions": "Application is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Login Security",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and password.",
      "Expected Result": "User is not authenticated and receives an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify Data Collection Failure Handling for Unavailable Source (e.g., SI VLT)",
      "ID": "TC-008",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection section.",
          "Expected Result": "Data collection interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate data collection from SI VLT when the source system is unavailable.",
          "Expected Result": "System attempts to collect data and detects the source is unavailable."
        },
        {
          "Step": 4,
          "Step Description": "Observe the error handling and messages displayed to the user.",
          "Expected Result": "System displays a clear error message indicating the data source is unavailable and logs the failure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection Module",
      "Preconditions": "SI VLT system is intentionally made unavailable for the test.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; SI VLT system offline.",
      "Expected Result": "System gracefully handles the unavailability of the data source and informs the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Automated Data Collection and Aggregation in Dashboard (Fase I)",
      "ID": "TC-009",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the automated data collection process from all integrated systems.",
          "Expected Result": "Dashboard initiates or displays ongoing data collection from all connected systems."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the dashboard displays aggregated customer data as specified in the referenced attachment.",
          "Expected Result": "All required customer data fields are present and populated with up-to-date values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "User has valid credentials and access rights. All source systems are online and integrated. Data mapping as per attachment is configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample customer data in all integrated systems as per attachment.",
      "Expected Result": "Dashboard displays all required customer data fields, aggregated and up-to-date, as per the specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data collection and aggregation, not data correctness or completeness in source systems.",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify POS Credit Limit Increase via Dashboard (Fase Dispositiva)",
      "ID": "TC-010",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user with POS management permissions.",
          "Expected Result": "Dashboard is accessible and user is authenticated with correct permissions."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS terminal from the list.",
          "Expected Result": "POS terminal details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate a credit limit increase for the selected POS terminal.",
          "Expected Result": "System prompts for new credit limit value."
        },
        {
          "Step": 4,
          "Step Description": "Enter a valid new credit limit and confirm the operation.",
          "Expected Result": "System processes the request and updates the credit limit."
        },
        {
          "Step": 5,
          "Step Description": "Verify that a CRM ticket is automatically created for the update.",
          "Expected Result": "A new CRM ticket is generated and linked to the POS update."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "User has POS management permissions. POS terminal exists and is active. CRM integration is configured.",
      "Execution Mode": "Manual",
      "Functionality": "POS credit limit management and CRM ticket creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Existing POS terminal with current credit limit; valid user credentials.",
      "Expected Result": "Credit limit is increased, and a CRM ticket is created for the update.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only credit limit increase and CRM ticket creation, not decrease or terminal suspension.",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Automatic POS Suspension Based on Detected Parameters (Fase Dispositiva)",
      "ID": "TC-011",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Simulate or configure a POS terminal to meet the automatic suspension criteria (e.g., exceeding risk threshold).",
          "Expected Result": "POS terminal status meets the predefined automatic suspension parameters."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the dashboard to detect the condition and trigger the automatic suspension process.",
          "Expected Result": "Dashboard detects the condition and initiates POS suspension automatically."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the POS terminal status is updated to 'Suspended' in the dashboard.",
          "Expected Result": "POS terminal status is displayed as 'Suspended'."
        },
        {
          "Step": 5,
          "Step Description": "Verify that a CRM ticket is automatically created for the suspension event.",
          "Expected Result": "A new CRM ticket is generated and linked to the suspension event."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "Automatic management rules are configured. POS terminal exists and is eligible for automatic suspension. CRM integration is active.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic POS management and CRM ticketing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS terminal configured to trigger automatic suspension; valid user credentials.",
      "Expected Result": "POS is automatically suspended and a CRM ticket is created when parameters are met.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only automatic suspension, not manual actions or other automatic processes.",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Verify Alert Generation When Predictive Thresholds Are Reached (Fase Predittiva)",
      "ID": "TC-012",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Simulate or input data so that a monitored index/parameter reaches the predictive threshold.",
          "Expected Result": "Dashboard processes the data and recognizes the threshold breach."
        },
        {
          "Step": 3,
          "Step Description": "Verify that an alert or proposal is generated and displayed/sent as per system configuration.",
          "Expected Result": "Alert or proposal is generated and visible to the user or sent via configured channels (e.g., email, notification)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "Predictive analytics and alerting rules are configured. User has access to alerting features.",
      "Execution Mode": "Manual",
      "Functionality": "Predictive analytics and alerting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Data set that triggers predictive threshold (e.g., simulated customer activity).",
      "Expected Result": "Alert or proposal is generated and delivered when predictive thresholds are reached.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only alert generation, not the accuracy of predictive models.",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Verify Extraction of Historical Credit Usage Data for POS",
      "ID": "TC-013",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data section.",
          "Expected Result": "POS data section is displayed with search and filter options."
        },
        {
          "Step": 3,
          "Step Description": "Search for a specific POS using its unique identifier (e.g., ID RICE).",
          "Expected Result": "POS details are displayed, including current and historical credit usage."
        },
        {
          "Step": 4,
          "Step Description": "Select a custom date range (e.g., specific week or custom period) for credit usage history.",
          "Expected Result": "System displays daily and weekly credit usage for the selected period."
        },
        {
          "Step": 5,
          "Step Description": "Click on the option to export the displayed data to Excel.",
          "Expected Result": "An Excel file named 'ZENIT - Elenco Dati' is generated and downloaded, containing the selected historical data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Data Management",
      "Preconditions": "User has valid credentials and access rights. POS data is available in the system for the selected period.",
      "Execution Mode": "Manual",
      "Functionality": "Historical credit usage extraction and reporting for POS.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID (e.g., 12345), date range (e.g., 2024-05-01 to 2024-05-07)",
      "Expected Result": "User can view and export historical daily and weekly credit usage for a POS in Excel format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-001"
    },
    {
      "Title": "Verify Aggregation of Data for All POS Under Same Owner",
      "ID": "TC-014",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data section.",
          "Expected Result": "POS data section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a POS using its ID RICE.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system also retrieves and displays data for all other POS with the same VAT number or tax code as the selected POS.",
          "Expected Result": "Data for all POS under the same owner is displayed in a consolidated view."
        },
        {
          "Step": 5,
          "Step Description": "If available, verify that data for linked subjects is also displayed.",
          "Expected Result": "Data for linked subjects is included in the results."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Data Aggregation",
      "Preconditions": "Multiple POS exist in the system with the same VAT number or tax code. User has access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Aggregation of POS data by owner and linked subjects.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID (e.g., 12345), VAT number (e.g., IT12345678901)",
      "Expected Result": "System displays and aggregates data for all POS under the same owner and linked subjects.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-002"
    },
    {
      "Title": "Verify Real-Time Update of POS Data",
      "ID": "TC-015",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data section and select a POS.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Perform a transaction or update credit usage for the POS via an external system or API.",
          "Expected Result": "Transaction is processed successfully."
        },
        {
          "Step": 4,
          "Step Description": "Refresh the POS data view in ZENIT.",
          "Expected Result": "Updated credit usage is reflected in the POS data view in near real-time (within system-defined latency, e.g., <1 minute)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Data Real-Time Update",
      "Preconditions": "POS exists and is active. User has access rights. External system/API is available for transaction simulation.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time update of POS data after transactions.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "POS ID, transaction details (e.g., credit usage increment)",
      "Expected Result": "POS data is updated in near real-time after a transaction is performed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Latency tolerance may vary based on system configuration.",
      "_polarion": "REQ-ZENIT-003"
    },
    {
      "Title": "Verify Logging of Access and Data Modification Activities (SOX Compliance)",
      "ID": "TC-016",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data section and select a POS.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Modify a data field (e.g., update credit limit) for the POS and save changes.",
          "Expected Result": "System processes the update and displays a confirmation alert."
        },
        {
          "Step": 4,
          "Step Description": "Access the system logs as an auditor or admin user.",
          "Expected Result": "System logs are accessible with appropriate permissions."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the log contains an entry for the data modification, including user ID, timestamp, action performed, and affected data.",
          "Expected Result": "Log entry is present and contains all required information for SOX compliance."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Audit Logging",
      "Preconditions": "User has edit permissions. Logging and alerting features are enabled. Auditor/admin user exists.",
      "Execution Mode": "Manual",
      "Functionality": "Audit logging and confirmation alerts for data modifications.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID, user credentials, data modification details",
      "Expected Result": "All access and data modification activities are logged with required details and confirmation alerts are shown to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-004"
    },
    {
      "Title": "Verify Alert Generation for Anomalous POS Activity (AI-Driven)",
      "ID": "TC-017",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate or upload historical data for a POS with normal activity patterns.",
          "Expected Result": "POS activity is recorded in the system."
        },
        {
          "Step": 3,
          "Step Description": "Simulate an abnormal activity (e.g., sudden spike in collection amount) for the POS.",
          "Expected Result": "Abnormal activity is processed by the system."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the AI/alerting engine to process the new data.",
          "Expected Result": "System processes the data and evaluates for anomalies."
        },
        {
          "Step": 5,
          "Step Description": "Check if an alert is generated and sent to the Credit team regarding the anomalous activity.",
          "Expected Result": "Alert is generated and visible to the Credit team with relevant details (POS ID, anomaly type, timestamp, suggested action)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AI-Driven Alerting",
      "Preconditions": "AI/alerting engine is enabled. Sufficient historical data is available for anomaly detection.",
      "Execution Mode": "Manual",
      "Functionality": "AI-driven alerting for anomalous POS activity.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "POS ID, historical activity data, simulated anomaly data",
      "Expected Result": "System generates and delivers alerts for anomalous POS activity to the Credit team.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Test covers only one type of anomaly; additional cases required for other scenarios.",
      "_polarion": "REQ-ZENIT-005"
    },
    {
      "Title": "Verify Integration of POS Data Across Multiple Companies (Sisal, Snai, etc.)",
      "ID": "TC-018",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user with cross-company access.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data section.",
          "Expected Result": "POS data section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a POS belonging to Sisal Spa.",
          "Expected Result": "POS data for Sisal Spa is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Search for a POS belonging to Snai (acquired company).",
          "Expected Result": "POS data for Snai is displayed and integrated with Sisal data if applicable."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the system provides a unified view of POS data across all integrated companies.",
          "Expected Result": "Unified and complete POS data is displayed, covering all companies in scope."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Multi-Company Data Integration",
      "Preconditions": "User has cross-company access. POS data for multiple companies is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Integration and unified view of POS data across multiple companies.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS IDs from Sisal Spa and Snai",
      "Expected Result": "System displays integrated POS data from all relevant companies in a unified view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-006"
    },
    {
      "Title": "Fido Assignment at PoS Activation Based on Terminal and Cerved Rating",
      "ID": "TC-019",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate activation process for a new PoS (Point of Sale) with a specific terminal type (e.g., Galileo, Microlot, Leonardo, Best, Self, Selfy, Aio, Wave).",
          "Expected Result": "Activation process starts and terminal type is recorded."
        },
        {
          "Step": 2,
          "Step Description": "Obtain the Cerved rating for the PoS (e.g., N/D, 10, 20, ..., 100).",
          "Expected Result": "Cerved rating is available for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Request the initial fido assignment from Gestione Crediti based on the terminal type, contract, installed product, and Cerved rating.",
          "Expected Result": "Gestione Crediti provides the fido amount according to the Credit Policy table."
        },
        {
          "Step": 4,
          "Step Description": "Assign the provided fido to the PoS in the system.",
          "Expected Result": "PoS is activated with the correct fido value as per policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS is not yet activated. Cerved rating is available. Terminal type and contract details are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Fido assignment at PoS activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data with various terminal types and Cerved ratings (e.g., Galileo+N/D, Best+50, etc.)",
      "Expected Result": "PoS is assigned a fido at activation according to terminal type, contract, installed product, and Cerved rating as per Credit Policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-ACTIVATION"
    },
    {
      "Title": "Fido Extension Request When Limit is Reached (SIMP and GEO)",
      "ID": "TC-020",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate fido consumption on a PoS until the fido is exhausted or near exhaustion.",
          "Expected Result": "System detects that the fido is at or near its limit."
        },
        {
          "Step": 2,
          "Step Description": "Trigger an extension request from one of the allowed sources (FV, PoS, Gestione Crediti, or automatic alert for SIMP).",
          "Expected Result": "Extension request is received by Gestione Crediti."
        },
        {
          "Step": 3,
          "Step Description": "Gestione Crediti evaluates the extension request (for GEO: based on scoring, payments, red-list; for SIMP: based on red-list parameters).",
          "Expected Result": "Gestione Crediti determines the extension amount or denies the request."
        },
        {
          "Step": 4,
          "Step Description": "If approved, Gestione Crediti communicates the extension to the relevant team (SIMP: Customer Care B2B; GEO: Back Office Albania).",
          "Expected Result": "Relevant team receives the extension approval."
        },
        {
          "Step": 5,
          "Step Description": "Update the PoS fido in the system to reflect the new limit (temporary or definitive as per deposit type).",
          "Expected Result": "PoS fido is updated and available for further transactions."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS is active and has a fido assigned. Fido is near or at exhaustion. For SIMP, automatic alert system is configured.",
      "Execution Mode": "Manual",
      "Functionality": "Fido extension process",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with exhausted fido, extension request data, red-list parameters, scoring data.",
      "Expected Result": "Fido extension is processed according to policy, with correct approval workflow and updated fido value for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-EXTENSION"
    },
    {
      "Title": "Fido Reduction Due to Risk Factors (SIMP and GEO)",
      "ID": "TC-021",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with risk factors (e.g., client at risk, outstanding payments, decreasing scoring, or guarantee removal).",
          "Expected Result": "PoS is flagged for fido reduction."
        },
        {
          "Step": 2,
          "Step Description": "Gestione Crediti decides to reduce the fido and communicates the reduction to the relevant team (SIMP: Customer Care B2B; GEO: Back Office Albania).",
          "Expected Result": "Relevant team receives the reduction instruction."
        },
        {
          "Step": 3,
          "Step Description": "For SIMP, set the fido to 100€ symbolic (not zero); for GEO, set the fido to zero if required.",
          "Expected Result": "PoS fido is updated as per policy (100€ for SIMP, zero for GEO if applicable)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS is active with an assigned fido. Risk factors are present and documented.",
      "Execution Mode": "Manual",
      "Functionality": "Fido reduction process",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS flagged for risk, reduction instructions, system access for fido update.",
      "Expected Result": "Fido is reduced according to policy and system reflects the new limit (100€ for SIMP, zero for GEO if required).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-REDUCTION"
    },
    {
      "Title": "Fido Zeroing for Legal/Collection Cases (SIMP and GEO)",
      "ID": "TC-022",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS in legal, collection, or warning status as flagged by Gestione Crediti.",
          "Expected Result": "PoS is marked for fido zeroing."
        },
        {
          "Step": 2,
          "Step Description": "Gestione Crediti communicates the zeroing instruction to the relevant team (SIMP: Customer Care B2B; GEO: Back Office Albania).",
          "Expected Result": "Relevant team receives the zeroing instruction."
        },
        {
          "Step": 3,
          "Step Description": "For SIMP, set the fido to 100€ symbolic; for GEO, set the fido to zero.",
          "Expected Result": "PoS fido is updated as per policy (100€ for SIMP, zero for GEO)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS is active and flagged for legal/collection action. System access for fido update is available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido zeroing process",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS in legal/collection status, zeroing instructions, system access.",
      "Expected Result": "Fido is set to 100€ for SIMP and zero for GEO as per policy for legal/collection cases.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-ZEROING"
    },
    {
      "Title": "Fido Restoration After Collection/Legal Resolution (SIMP and GEO)",
      "ID": "TC-023",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS previously set to symbolic/zero fido due to collection/legal status.",
          "Expected Result": "PoS is eligible for fido restoration after positive resolution."
        },
        {
          "Step": 2,
          "Step Description": "Confirm that the outstanding issue (e.g., insolvency, legal case) has been resolved and the PoS is reopened.",
          "Expected Result": "PoS is cleared for fido restoration."
        },
        {
          "Step": 3,
          "Step Description": "Gestione Crediti evaluates the PoS (scoring, CM feedback) and determines the restoration amount.",
          "Expected Result": "Restoration amount is defined according to policy."
        },
        {
          "Step": 4,
          "Step Description": "Gestione Crediti communicates the restoration to the relevant team (SIMP: Customer Care B2B; GEO: Back Office Albania).",
          "Expected Result": "Relevant team receives the restoration instruction."
        },
        {
          "Step": 5,
          "Step Description": "Update the PoS fido in the system to the restored value.",
          "Expected Result": "PoS fido is restored and available for transactions."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS previously had fido set to symbolic/zero due to collection/legal. Issue is now resolved.",
      "Execution Mode": "Manual",
      "Functionality": "Fido restoration process",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with resolved collection/legal status, restoration instructions, scoring data.",
      "Expected Result": "Fido is restored according to policy and system reflects the new limit for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-RESTORATION"
    },
    {
      "Title": "Fido Management Not Applicable to AWP Devices (IAG and NO IAG)",
      "ID": "TC-024",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with AWP IAG or NO IAG devices (with 'chiavi gestore' or 'chiavi esercente').",
          "Expected Result": "PoS with AWP device is selected."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to assign, extend, reduce, or zero a fido for the AWP device.",
          "Expected Result": "System does not allow fido management for AWP devices."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS with AWP IAG or NO IAG device is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "AWP device fido management restriction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with AWP IAG and NO IAG devices.",
      "Expected Result": "System does not permit any fido management actions for AWP devices, confirming no limits are applied.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-AWP"
    },
    {
      "Title": "Daily and Weekly Fido Recharge Logic for SIMP and GEO",
      "ID": "TC-025",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Assign a daily fido to a PoS managed by SIMP and a weekly fido to a PoS managed by GEO.",
          "Expected Result": "PoS have correct fido types assigned (daily for SIMP, weekly for GEO)."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a day passing for SIMP PoS and a week passing for GEO PoS.",
          "Expected Result": "Time period elapses as per fido type."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the SIMP PoS fido is recharged daily to the initial set value.",
          "Expected Result": "SIMP PoS fido is reset to the initial value each day."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the GEO PoS fido is recharged weekly (every Monday) to the base value set at activation.",
          "Expected Result": "GEO PoS fido is reset to the base value every Monday."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS with SIMP and GEO management are active with correct fido types assigned.",
      "Execution Mode": "Manual",
      "Functionality": "Fido recharge logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with daily and weekly fido, initial values, time simulation capability.",
      "Expected Result": "SIMP PoS fido is recharged daily; GEO PoS fido is recharged weekly as per policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-RECHARGE"
    },
    {
      "Title": "Special Case: VR Bets on TG BEST Terminal (SIMP) Fido Logic",
      "ID": "TC-026",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Assign a VR bet to a PoS using a TG BEST terminal managed by SIMP.",
          "Expected Result": "VR bet is associated with the correct terminal and management system."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a week passing, including VR bet activity.",
          "Expected Result": "Week elapses with VR bet transactions recorded."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fido for VR bets on TG BEST is managed as per GEO logic (only on collection, reset to initial value every Monday).",
          "Expected Result": "Fido for VR bets on TG BEST is reset to the initial value every Monday, matching GEO logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS with TG BEST terminal managed by SIMP is active. VR bets are enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Special fido logic for VR bets on TG BEST",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with TG BEST terminal, VR bet transactions, initial fido value.",
      "Expected Result": "Fido for VR bets on TG BEST is managed as per GEO logic: reset to initial value weekly, only on collection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-1.1.1-VRBEST"
    },
    {
      "Title": "Fido Association on PoS Activation for GNTN and ONLINE Products",
      "ID": "TC-027",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate PoS activation for a new terminal (Galileo, Microlot, or Leonardo) with product type GNTN.",
          "Expected Result": "System prompts for fido association based on product type."
        },
        {
          "Step": 2,
          "Step Description": "Complete activation process and verify fido is associated only if gestionale is GEO.",
          "Expected Result": "Fido is associated to PoS only if gestionale is GEO; otherwise, no fido is assigned."
        },
        {
          "Step": 3,
          "Step Description": "Repeat activation for ONLINE product with gestionale GEO.",
          "Expected Result": "Fido is associated to PoS for ONLINE product with gestionale GEO."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS not previously activated; gestionale GEO available; terminal type is Galileo, Microlot, or Leonardo.",
      "Execution Mode": "Manual",
      "Functionality": "Fido association during PoS activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS data, product type (GNTN/ONLINE), gestionale type (GEO), terminal type (Galileo/Microlot/Leonardo)",
      "Expected Result": "Fido is associated to PoS only for GNTN and ONLINE products with gestionale GEO during activation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover fido weekly recharge or rating-based assignment.",
      "_polarion": "REQ-FIDO-001"
    },
    {
      "Title": "Weekly Fido Recharge on Mondays",
      "ID": "TC-028",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a PoS with an active fido is present in the system.",
          "Expected Result": "PoS has a fido value set as per base configuration."
        },
        {
          "Step": 2,
          "Step Description": "Advance system date/time to the next Monday.",
          "Expected Result": "System triggers weekly fido recharge process."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fido is recharged to the base value set for the PoS.",
          "Expected Result": "Fido is reset to the base value as configured for the PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS with active fido; base fido value configured; system supports date/time manipulation for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Weekly fido recharge",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with active fido, base fido value, system date/time controls",
      "Expected Result": "Fido is automatically recharged to the base value every Monday.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover fido assignment or modification.",
      "_polarion": "REQ-FIDO-002"
    },
    {
      "Title": "Default Fido Assignment for Precaricato Generalist PoS",
      "ID": "TC-029",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate PoS activation as a Generalista Precaricato (pre-SDD alignment).",
          "Expected Result": "System recognizes PoS as Precaricato type."
        },
        {
          "Step": 2,
          "Step Description": "Complete activation process without SDD alignment confirmation.",
          "Expected Result": "PoS is activated as Precaricato with default fido of 300€."
        },
        {
          "Step": 3,
          "Step Description": "Verify that no authorization from Gestione Crediti is required and BOA handles the process.",
          "Expected Result": "Fido is set to 300€ by default, no Gestione Crediti authorization requested."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS not previously activated; Precaricato activation flow available; SDD alignment not yet confirmed.",
      "Execution Mode": "Manual",
      "Functionality": "Default fido assignment for Precaricato PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS data, Precaricato activation flag, SDD alignment status",
      "Expected Result": "Precaricato PoS receives default fido of 300€ without Gestione Crediti authorization.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover transition to standard generalist or SDD alignment.",
      "_polarion": "REQ-FIDO-003"
    },
    {
      "Title": "Fido Assignment Based on Cerved Rating for Standard Generalist PoS",
      "ID": "TC-030",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate PoS activation as a Generalista Standard with a specific Cerved rating (e.g., 80).",
          "Expected Result": "System retrieves Cerved rating for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Complete activation process and verify fido is assigned according to the Credit Policy table for the given rating.",
          "Expected Result": "Fido is set as per policy for the provided rating."
        },
        {
          "Step": 3,
          "Step Description": "Repeat for other ratings (e.g., N/D, 100) to verify correct fido assignment for all rating bands.",
          "Expected Result": "Fido assignment matches policy table for each rating."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS not previously activated; Cerved rating available; Credit Policy table accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Fido assignment based on rating",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS data, Cerved ratings (N/D, 80, 100, etc.), Credit Policy table",
      "Expected Result": "Fido is assigned according to the Credit Policy table based on Cerved rating.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover Precaricato or SDD alignment scenarios.",
      "_polarion": "REQ-FIDO-004"
    },
    {
      "Title": "Fido Transfer and Zeroing on PoS Voltura (Ownership Change)",
      "ID": "TC-031",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an active PoS with an assigned fido.",
          "Expected Result": "PoS has a non-zero fido value."
        },
        {
          "Step": 2,
          "Step Description": "Initiate voltura process (ownership change) for the PoS, assigning a new PoS ID.",
          "Expected Result": "System processes voltura and assigns new PoS ID."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fido on the old PoS ID is set to zero.",
          "Expected Result": "Old PoS ID has fido value of zero."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fido is associated with the new PoS ID as per activation rules.",
          "Expected Result": "New PoS ID receives fido assignment as per activation policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Active PoS with fido; voltura process enabled; new PoS ID available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido transfer and zeroing on voltura",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with fido, voltura request, new PoS ID",
      "Expected Result": "Fido is zeroed on old PoS ID and reassigned to new PoS ID as per policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover fido assignment logic for new PoS ID.",
      "_polarion": "REQ-FIDO-005"
    },
    {
      "Title": "Fido Modification Based on Rating, Volume, or Payment Regularity",
      "ID": "TC-032",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an active PoS with assigned fido and known rating, volume, and payment history.",
          "Expected Result": "PoS has current fido, rating, volume, and payment data."
        },
        {
          "Step": 2,
          "Step Description": "Submit a request to modify fido due to a change in rating (e.g., rating drops from 80 to 60).",
          "Expected Result": "System processes rating change and updates fido as per policy."
        },
        {
          "Step": 3,
          "Step Description": "Submit a request to modify fido due to increased/decreased volume of play.",
          "Expected Result": "System processes volume change and updates fido accordingly."
        },
        {
          "Step": 4,
          "Step Description": "Submit a request to modify fido due to payment irregularity (e.g., number of unpaid invoices increases).",
          "Expected Result": "System processes payment irregularity and updates fido as per policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Active PoS with fido; ability to simulate changes in rating, volume, and payment status.",
      "Execution Mode": "Manual",
      "Functionality": "Fido modification based on business parameters",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with fido, rating values, volume data, payment history",
      "Expected Result": "Fido is modified according to changes in rating, volume, or payment regularity as per policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover temporary fido increases or Red List checks.",
      "_polarion": "REQ-FIDO-006"
    },
    {
      "Title": "Temporary Fido Increase After 18:00 or During Weekend with Red List Check",
      "ID": "TC-033",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an active PoS with assigned fido and verify current time is after 18:00 or during weekend.",
          "Expected Result": "PoS is eligible for temporary fido increase based on time."
        },
        {
          "Step": 2,
          "Step Description": "Submit a request for temporary fido increase.",
          "Expected Result": "System checks if PoS is present in Red List."
        },
        {
          "Step": 3,
          "Step Description": "If PoS is not in Red List, approve temporary fido increase.",
          "Expected Result": "Temporary fido increase is applied to PoS."
        },
        {
          "Step": 4,
          "Step Description": "If PoS is in Red List, reject temporary fido increase request.",
          "Expected Result": "Temporary fido increase is denied for PoS in Red List."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Active PoS with fido; system clock after 18:00 or weekend; Red List data available.",
      "Execution Mode": "Manual",
      "Functionality": "Temporary fido increase with Red List validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with fido, Red List status, system time controls",
      "Expected Result": "Temporary fido increase is granted only if PoS is not in Red List and request is after 18:00 or during weekend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover permanent fido modifications.",
      "_polarion": "REQ-FIDO-007"
    },
    {
      "Title": "Fido Zeroing for ONLINE PoS in Case of Insolvency Block",
      "ID": "TC-034",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an ONLINE PoS with active fido and simulate an insolvency event (unpaid invoice).",
          "Expected Result": "System detects insolvency and blocks PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that fido for the ONLINE PoS is set to zero upon block.",
          "Expected Result": "Fido value for ONLINE PoS is zeroed."
        },
        {
          "Step": 3,
          "Step Description": "Simulate payment of the outstanding invoice and unblock the PoS.",
          "Expected Result": "PoS is unblocked and fido can be restored as per policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "ONLINE PoS with active fido; ability to simulate insolvency and payment events.",
      "Execution Mode": "Manual",
      "Functionality": "Fido zeroing and restoration for ONLINE PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ONLINE PoS, insolvency event, payment event",
      "Expected Result": "Fido is zeroed for ONLINE PoS on insolvency block and can be restored after payment.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover GNTN PoS behavior on insolvency.",
      "_polarion": "REQ-FIDO-008"
    },
    {
      "Title": "No Fido Reduction for GNTN PoS in Case of Insolvency Block",
      "ID": "TC-035",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a GNTN PoS with active fido and simulate an insolvency event (unpaid invoice).",
          "Expected Result": "System detects insolvency and blocks GNTN PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that fido for the GNTN PoS is not reduced despite the block.",
          "Expected Result": "Fido value for GNTN PoS remains unchanged."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the block inhibits the ability to collect GNTN.",
          "Expected Result": "GNTN collection is disabled for the blocked PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "GNTN PoS with active fido; ability to simulate insolvency and block events.",
      "Execution Mode": "Manual",
      "Functionality": "GNTN PoS fido behavior on insolvency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "GNTN PoS, insolvency event",
      "Expected Result": "Fido is not reduced for GNTN PoS on insolvency; collection is inhibited.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover ONLINE PoS behavior on insolvency.",
      "_polarion": "REQ-FIDO-009"
    },
    {
      "Title": "No Fido Management for AWP IAG and Non-IAG Devices",
      "ID": "TC-036",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to assign or modify fido for an AWP IAG device.",
          "Expected Result": "System does not allow fido management for AWP IAG; no fido limits are set."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to assign or modify fido for an AWP non-IAG device (gestore or esercente keys).",
          "Expected Result": "System does not allow fido management for AWP non-IAG; no fido limits are set."
        },
        {
          "Step": 3,
          "Step Description": "Verify that collection is not limited by fido for any AWP device.",
          "Expected Result": "AWP devices operate without fido limits."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "AWP IAG and non-IAG devices available in system.",
      "Execution Mode": "Manual",
      "Functionality": "AWP device fido management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP IAG and non-IAG device data",
      "Expected Result": "No fido management or limits are applied to AWP devices (IAG or non-IAG).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover other device types or PoS fido management.",
      "_polarion": "REQ-FIDO-010"
    },
    {
      "Title": "Fido Assignment at PoS Activation Based on Product and Rating",
      "ID": "TC-037",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate PoS activation for a new terminal (e.g., Galileo) with product type GNTN and gestionale GEO.",
          "Expected Result": "System prompts for Cerved rating input."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid Cerved rating (e.g., 80).",
          "Expected Result": "System calculates and displays the corresponding weekly fido according to the Credit Policy table."
        },
        {
          "Step": 3,
          "Step Description": "Complete the activation process.",
          "Expected Result": "PoS is activated with the assigned fido value. Notification is sent to the Network Distribution Team."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Cerved rating table and product-terminal mapping are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Fido assignment at PoS activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data, Cerved ratings (e.g., 60, 80, 100), product-terminal mapping.",
      "Expected Result": "PoS is assigned the correct fido based on product and rating at activation. Notification is sent as per process.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-ASSIGN-001"
    },
    {
      "Title": "Fido Modification Based on Rating Change",
      "ID": "TC-038",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an active PoS with an assigned fido and a current Cerved rating (e.g., 80).",
          "Expected Result": "PoS details and current fido are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a change in Cerved rating (e.g., from 80 to 60).",
          "Expected Result": "System prompts for fido review."
        },
        {
          "Step": 3,
          "Step Description": "Submit a fido modification request via Gestione Crediti.",
          "Expected Result": "System updates the fido according to the new rating and notifies Team B2B and BO."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS is active with an assigned fido and Cerved rating. Credit Policy table is available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido modification based on rating change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with initial rating 80, new rating 60.",
      "Expected Result": "Fido is updated according to the new rating and notifications are sent as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-MODIFY-001"
    },
    {
      "Title": "Automatic Fido Extension for SIMP Products at 90% Consumption",
      "ID": "TC-039",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with SIMP gestionale and daily fido (e.g., 1000 EUR).",
          "Expected Result": "PoS details and current fido consumption are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate transactions to reach 90% of the fido consumption (e.g., 900 EUR).",
          "Expected Result": "System detects threshold reached."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system automatically extends the fido by 50% (e.g., new fido is 1500 EUR) for 1 day (if daily fido).",
          "Expected Result": "Fido is extended by 50% for 1 day. Extension is not applied if PoS is in red list."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS with SIMP gestionale, not in red list, daily fido assigned.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic fido extension at threshold",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with SIMP, daily fido 1000 EUR, not in red list.",
      "Expected Result": "Fido is automatically extended by 50% for 1 day when 90% consumption is reached, unless PoS is in red list.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-EXTEND-001"
    },
    {
      "Title": "Fido Zeroing for ONLINE Product in Case of Insolvency Block",
      "ID": "TC-040",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an active PoS with ONLINE product and assigned fido.",
          "Expected Result": "PoS details and current fido are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate an insolvency event that triggers a block on the PoS.",
          "Expected Result": "System blocks the PoS for insoluti."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system sets the fido to zero and sends notification to GEO.",
          "Expected Result": "Fido is set to zero and notification is sent to GEO."
        },
        {
          "Step": 4,
          "Step Description": "Simulate payment of the outstanding amount.",
          "Expected Result": "System restores the fido to the previous value."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS with ONLINE product, assigned fido, and insolvency handling enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Fido zeroing and restoration for ONLINE product",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with ONLINE, assigned fido, insolvency event.",
      "Expected Result": "Fido is zeroed on block and restored on payment for ONLINE product. Notification is sent to GEO.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-ZERO-001"
    },
    {
      "Title": "No Fido Management for AWP IAG Devices",
      "ID": "TC-041",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an AWP IAG device in the system.",
          "Expected Result": "Device details are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to assign or modify a fido for the device.",
          "Expected Result": "System does not allow fido assignment or modification for AWP IAG devices."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "AWP IAG device exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Fido management exclusion for AWP IAG",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP IAG device data.",
      "Expected Result": "System prevents fido management for AWP IAG devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-AWP-001"
    },
    {
      "Title": "VLT IAG Collection Volume Alert Generation",
      "ID": "TC-042",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a VLT IAG device with collection data for the last 90 days.",
          "Expected Result": "Device and collection data are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a collection volume in the current period that exceeds three times the 90-day rolling average.",
          "Expected Result": "System detects the threshold breach."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system generates an ALERT to FV and logs the event.",
          "Expected Result": "ALERT is sent to FV and event is logged."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "VLT IAG device with at least 90 days of collection data.",
      "Execution Mode": "Manual",
      "Functionality": "VLT IAG collection volume alert",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "VLT IAG device, 90-day collection data, simulated high collection.",
      "Expected Result": "ALERT is generated and logged when collection exceeds three times the 90-day average.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-VLT-001"
    },
    {
      "Title": "Fido Assignment Reset on Agency Transfer (Voltura)",
      "ID": "TC-043",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an agency with an active PoS and assigned fido.",
          "Expected Result": "Agency and PoS details are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a voltura process for the agency, assigning a new PoS ID.",
          "Expected Result": "System prompts for fido reassignment."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system zeros the fido on the old PoS ID and assigns the fido to the new PoS ID based on communicated parameters.",
          "Expected Result": "Old PoS fido is zeroed, new PoS receives correct fido assignment."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Agency with active PoS and assigned fido. Voltura process enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Fido reset and reassignment on agency transfer",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Agency with PoS, voltura event, new PoS ID.",
      "Expected Result": "Fido is zeroed on old PoS and reassigned to new PoS during voltura.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-VOLTURA-001"
    },
    {
      "Title": "Verify presence and correctness of all abbreviations in the Definitions and Abbreviations table",
      "ID": "TC-044",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section of the document or application.",
          "Expected Result": "The section is displayed to the user."
        },
        {
          "Step": 2,
          "Step Description": "Locate the table listing all abbreviations and their definitions.",
          "Expected Result": "The table is visible and clearly formatted."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following abbreviations are present: BOA, BO, POS, GIC, CM, TCI, TCA, FV.",
          "Expected Result": "All listed abbreviations are present in the table."
        },
        {
          "Step": 4,
          "Step Description": "Check that each abbreviation matches its correct definition as per the requirement.",
          "Expected Result": "Each abbreviation is paired with the correct definition: BOA - BACK OFFICE ALBANIA, BO - BACK OFFICE ITALIA, POS - POINT OF SALES, GIC - TEAM CREDITO (Cimnaghi -- Gerosa -- Del Monte), CM - CREDIT MANAGER, TCI - TEAM CREDITO ITALIA (Cimnaghi -- Tancredi -- Del Monte), TCA - TEAM CREDITO ALBANIA, FV - FORZA VENDITA."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Definitions and Abbreviations Table",
      "Preconditions": "User has access to the document or application containing the Definitions and Abbreviations section.",
      "Execution Mode": "Manual",
      "Functionality": "Display and accuracy of abbreviations and definitions table",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "All required abbreviations are present and correctly defined in the table, matching the requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify that no undefined abbreviations are present in the Definitions and Abbreviations table",
      "ID": "TC-045",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section of the document or application.",
          "Expected Result": "The section is displayed to the user."
        },
        {
          "Step": 2,
          "Step Description": "Review the table for any abbreviations not listed in the requirement (BOA, BO, POS, GIC, CM, TCI, TCA, FV).",
          "Expected Result": "No abbreviations other than those specified are present in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Definitions and Abbreviations Table",
      "Preconditions": "User has access to the document or application containing the Definitions and Abbreviations section.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of table content against requirements",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The table contains only the abbreviations specified in the requirement, with no extraneous entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify table formatting and readability in the Definitions and Abbreviations section",
      "ID": "TC-046",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section of the document or application.",
          "Expected Result": "The section is displayed to the user."
        },
        {
          "Step": 2,
          "Step Description": "Check that the table is properly formatted with two columns: one for abbreviations and one for definitions.",
          "Expected Result": "The table has two clearly labeled columns: 'Abbreviazione' and 'Definizione' (or equivalent)."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each abbreviation and its definition are aligned correctly in their respective columns.",
          "Expected Result": "Each abbreviation is aligned with its corresponding definition, and the table is easy to read."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Definitions and Abbreviations Table",
      "Preconditions": "User has access to the document or application containing the Definitions and Abbreviations section.",
      "Execution Mode": "Manual",
      "Functionality": "Table formatting and readability",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The table is clearly formatted, with correct alignment and readability for all abbreviations and definitions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify that all abbreviations used in the document are listed in the Definitions and Abbreviations table",
      "ID": "TC-047",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review the entire document for any usage of abbreviations.",
          "Expected Result": "All abbreviations used in the document are identified."
        },
        {
          "Step": 2,
          "Step Description": "Cross-check each abbreviation found in the document with the entries in the Definitions and Abbreviations table.",
          "Expected Result": "Each abbreviation used in the document is present in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Definitions and Abbreviations Table",
      "Preconditions": "User has access to the full document and the Definitions and Abbreviations section.",
      "Execution Mode": "Manual",
      "Functionality": "Consistency of abbreviation usage and listing",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Full document containing all references to abbreviations.",
      "Expected Result": "Every abbreviation used in the document is included in the Definitions and Abbreviations table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify Requirement Description Display",
      "ID": "TC-048",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the requirements documentation section of the application.",
          "Expected Result": "The requirements documentation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the section titled 'Descrizione delle esigenze'.",
          "Expected Result": "The section with the title 'Descrizione delle esigenze' is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the section contains a header labeled '# Descrizione delle esigenze'.",
          "Expected Result": "The header '# Descrizione delle esigenze' is present and correctly formatted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Requirements Documentation",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The requirements documentation displays the section and header as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and presence of the requirements description section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Absence of Unintended Content in Requirements Section",
      "ID": "TC-049",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the requirements documentation section of the application.",
          "Expected Result": "The requirements documentation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Review the content under 'Descrizione delle esigenze' and '# Descrizione delle esigenze'.",
          "Expected Result": "Only the intended description and header are present; no extraneous or unrelated content is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Requirements Documentation",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "No unintended or unrelated content is present in the requirements section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for content display.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Automated Data Collection from MDM System (Anagrafica Completa POS)",
      "ID": "TC-050",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the data collection service is running and configured to connect to the MDM system.",
          "Expected Result": "Service is active and connection parameters are set for MDM."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled data collection event as per the timing specified in 'ZENIT - Elenco Dati'.",
          "Expected Result": "Data collection process initiates at the correct scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system retrieves the complete POS anagrafica data, including sales force association, for each POS ID.",
          "Expected Result": "All required anagrafica data is retrieved for each POS ID, including sales force association."
        },
        {
          "Step": 4,
          "Step Description": "Check that the collected data is aggregated and made available for visualization in the central management system.",
          "Expected Result": "Aggregated anagrafica data is visible and accessible in the central system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "MDM Data Collection",
      "Preconditions": "Data collection service is deployed and configured. MDM system is accessible. Test POS IDs exist in MDM.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from MDM system.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test POS IDs with complete anagrafica in MDM.",
      "Expected Result": "The system automatically collects, aggregates, and displays complete POS anagrafica data (including sales force association) from MDM as per the defined schedule.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only MDM data collection and aggregation.",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Automated Data Collection from INVENTORY System (Terminal Types and Counts)",
      "ID": "TC-051",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the data collection service is configured to connect to the INVENTORY system (ORION).",
          "Expected Result": "Service is active and connection parameters are set for INVENTORY."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled data collection event as per the timing specified in 'ZENIT - Elenco Dati'.",
          "Expected Result": "Data collection process initiates at the correct scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system retrieves terminal types and counts for each POS.",
          "Expected Result": "Terminal types and counts are retrieved for each POS."
        },
        {
          "Step": 4,
          "Step Description": "Check that the collected data is correctly aggregated and available for visualization.",
          "Expected Result": "Aggregated terminal data is visible in the central system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "INVENTORY Data Collection",
      "Preconditions": "Data collection service is deployed and configured. INVENTORY system is accessible. Test POS IDs exist in INVENTORY.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from INVENTORY system.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test POS IDs with terminal data in INVENTORY.",
      "Expected Result": "The system automatically collects, aggregates, and displays terminal types and counts for each POS from INVENTORY as per the defined schedule.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only INVENTORY data collection and aggregation.",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Data Aggregation and Visualization Timing Compliance",
      "ID": "TC-052",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review the data collection schedule as defined in 'ZENIT - Elenco Dati' for all connected systems.",
          "Expected Result": "Schedule is available and specifies timing for each system."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data collection process for each system over a complete cycle (e.g., daily, weekly, monthly as specified).",
          "Expected Result": "Data collection events occur at the correct intervals for each system."
        },
        {
          "Step": 3,
          "Step Description": "Verify that data from each system is available for analysis and visualization within the expected timeframe after collection.",
          "Expected Result": "Data is available for analysis and visualization within the required timeframe post-collection."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Aggregation and Visualization",
      "Preconditions": "All data collection services are configured and operational. Access to 'ZENIT - Elenco Dati' schedule.",
      "Execution Mode": "Manual",
      "Functionality": "Data aggregation and visualization timing compliance.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Data collection schedule from 'ZENIT - Elenco Dati'.",
      "Expected Result": "Data from all systems is aggregated and visualized according to the timing requirements specified in 'ZENIT - Elenco Dati'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers timing compliance for aggregation and visualization.",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Verify Error Handling for Unavailable Source System During Data Collection",
      "ID": "TC-053",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate unavailability of a source system (e.g., disconnect MDM or INVENTORY).",
          "Expected Result": "Source system is not reachable by the data collection service."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the scheduled data collection event for the unavailable system.",
          "Expected Result": "Data collection process attempts to connect and fails."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system logs the error and generates an alert as per requirements.",
          "Expected Result": "Error is logged and alert is generated for the failure."
        },
        {
          "Step": 4,
          "Step Description": "Check that the system retries data collection as per retry policy (if defined).",
          "Expected Result": "System retries data collection according to the configured retry policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Error Handling",
      "Preconditions": "Data collection service is deployed. Ability to simulate source system unavailability.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for unavailable source systems during data collection.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated unavailable source system (e.g., MDM offline).",
      "Expected Result": "System logs errors, generates alerts, and retries data collection as per policy when a source system is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for source system unavailability.",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Verify Data Integrity and Completeness After Aggregation",
      "ID": "TC-054",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or wait for the scheduled data collection and aggregation process for all systems.",
          "Expected Result": "Data collection and aggregation process completes successfully."
        },
        {
          "Step": 2,
          "Step Description": "Compare the aggregated data in the central system with the source data from each connected system for a sample period.",
          "Expected Result": "Aggregated data matches the source data for all required fields and records."
        },
        {
          "Step": 3,
          "Step Description": "Check for missing, duplicate, or inconsistent records in the aggregated data.",
          "Expected Result": "No missing, duplicate, or inconsistent records are found."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Integrity",
      "Preconditions": "All systems contain test data. Data collection and aggregation services are operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data integrity and completeness verification after aggregation.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data in all source systems for a defined period.",
      "Expected Result": "Aggregated data in the central system is complete, accurate, and consistent with the source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data integrity and completeness after aggregation.",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Verify Dashboard Data Aggregation and Display for Individual PoS",
      "ID": "TC-055",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed with data for all PoS as per requirement 3.1."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the dashboard view.",
          "Expected Result": "Dashboard updates to show detailed data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials and at least one PoS is configured in the system with data available as per requirement 3.1.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Aggregation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS data as per requirement 3.1",
      "Expected Result": "Dashboard displays all relevant data for the selected PoS, allowing analysis as per requirement 3.1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data aggregation and display for individual PoS.",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Data Aggregation and Filtering by Specific Nature",
      "ID": "TC-056",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed with all PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Apply a filter for a specific nature (e.g., region, type, status) on the dashboard.",
          "Expected Result": "Dashboard updates to show aggregated data for PoS matching the selected nature."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. Multiple PoS exist with different natures as per requirement 3.1.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Filtering and Aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS data with various natures",
      "Expected Result": "Dashboard correctly aggregates and displays data for PoS matching the selected nature.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers filtering and aggregation by nature.",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Search Functionality on Dashboard for PoS",
      "ID": "TC-057",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid PoS identifier or name in the search bar and initiate the search.",
          "Expected Result": "Dashboard displays results matching the search criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. At least one PoS exists with a known identifier or name.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Search Functionality",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier or name",
      "Expected Result": "Search returns accurate and relevant PoS results on the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers positive search scenario.",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify PoS Management Actions from Dashboard",
      "ID": "TC-058",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS and initiate a management action (e.g., edit, disable, or update details).",
          "Expected Result": "PoS management interface is displayed for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Perform a valid management action and save changes.",
          "Expected Result": "Changes are saved and reflected on the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. At least one PoS exists and user has management permissions.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Management from Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS data, management permissions",
      "Expected Result": "PoS management actions are successfully performed and reflected on the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers positive management scenario.",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Report Request Functionality from Dashboard",
      "ID": "TC-059",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS or aggregated view and initiate a report request (e.g., click 'Request Report').",
          "Expected Result": "Report request dialog or interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Specify report parameters (e.g., date range, type) and submit the request.",
          "Expected Result": "System processes the request and confirms report generation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. At least one PoS exists. Reporting functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Report Request",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS data, report parameters",
      "Expected Result": "Report is successfully requested and user receives confirmation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers positive report request scenario.",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Alert Reception on Dashboard for PoS Events",
      "ID": "TC-060",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Trigger an alert event for a PoS (e.g., simulate a threshold breach or error condition).",
          "Expected Result": "Dashboard displays an alert notification for the relevant PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. At least one PoS exists. Alert conditions are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Alert Reception",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS data, alert configuration",
      "Expected Result": "Dashboard displays alerts in real time for relevant PoS events.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers alert reception scenario.",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Search with Invalid or Non-Existent PoS",
      "ID": "TC-061",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid or non-existent PoS identifier in the search bar and initiate the search.",
          "Expected Result": "Dashboard displays a 'No results found' message or equivalent feedback."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. No PoS exists with the entered identifier.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Search Negative Scenario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, invalid PoS identifier",
      "Expected Result": "System provides clear feedback when no PoS matches the search criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative search scenario.",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Access Control for Unauthorized Users",
      "ID": "TC-062",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the dashboard without logging in or with insufficient permissions.",
          "Expected Result": "Access is denied and user is redirected to the login page or shown an error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User is not authenticated or lacks dashboard access permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid or unauthorized user credentials",
      "Expected Result": "Unauthorized users cannot access the dashboard and receive appropriate feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control for unauthorized users.",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify daily and weekly credit usage history is stored correctly",
      "ID": "TC-063",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user with an active account and available credit limit.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a transaction that utilizes part of the daily credit limit.",
          "Expected Result": "Transaction is completed and daily credit usage is updated."
        },
        {
          "Step": 3,
          "Step Description": "Perform additional transactions to reach or exceed the daily credit limit.",
          "Expected Result": "System records each transaction and updates the daily usage accordingly."
        },
        {
          "Step": 4,
          "Step Description": "Repeat transactions over several days to accumulate weekly usage data.",
          "Expected Result": "System records each day's usage and aggregates weekly usage data."
        },
        {
          "Step": 5,
          "Step Description": "Access the historical data section for credit usage.",
          "Expected Result": "Historical data displays accurate daily and weekly usage for the user."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico dati",
      "Preconditions": "User account exists with credit limit enabled. System is configured to store historical data.",
      "Execution Mode": "Manual",
      "Functionality": "Credit usage history storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, credit limit settings, transaction data",
      "Expected Result": "The system maintains and displays accurate historical records of daily and weekly credit usage for the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify historical data retention after system restart or failure",
      "ID": "TC-064",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user and perform several transactions to generate credit usage data.",
          "Expected Result": "Transactions are completed and usage data is recorded."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a system restart or controlled shutdown and restart the system.",
          "Expected Result": "System restarts successfully."
        },
        {
          "Step": 3,
          "Step Description": "Log in again as the same user and access the historical data section.",
          "Expected Result": "Historical credit usage data from before the restart is still available and accurate."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Storico dati",
      "Preconditions": "User account exists. System is configured to persist historical data. Backup and restore mechanisms are in place.",
      "Execution Mode": "Manual",
      "Functionality": "Data persistence and recovery",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, transaction data",
      "Expected Result": "Historical credit usage data is retained and accessible after a system restart or failure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify access to historical data for analysis purposes",
      "ID": "TC-065",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized analyst or admin user.",
          "Expected Result": "User is authenticated and has access to analysis tools."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the historical data analysis section.",
          "Expected Result": "Historical data analysis interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Query for daily and weekly credit usage over a specified period (e.g., last 3 months).",
          "Expected Result": "System returns accurate historical usage data for the specified period."
        },
        {
          "Step": 4,
          "Step Description": "Export the historical data to a supported format (e.g., CSV, Excel).",
          "Expected Result": "Data is exported successfully and matches the queried results."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Storico dati",
      "Preconditions": "Analyst/admin user exists with appropriate permissions. Historical data is available for the period queried.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data analysis and export",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Analyst/admin credentials, historical data records",
      "Expected Result": "Authorized users can access, analyze, and export historical credit usage data accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify system behavior when querying historical data with no records",
      "ID": "TC-066",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user who has not performed any transactions.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Access the historical data section for credit usage.",
          "Expected Result": "System displays a message indicating that no historical data is available."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Storico dati",
      "Preconditions": "User account exists but has not performed any transactions.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data retrieval - empty state",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with no transaction history",
      "Expected Result": "System gracefully handles empty historical data queries and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify data integrity for historical credit usage information",
      "ID": "TC-067",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user and perform a known set of transactions with specific amounts over several days.",
          "Expected Result": "Transactions are completed and usage data is recorded."
        },
        {
          "Step": 2,
          "Step Description": "Access the historical data section and review the recorded daily and weekly usage.",
          "Expected Result": "Historical data matches the known transaction amounts and dates."
        },
        {
          "Step": 3,
          "Step Description": "Compare the displayed historical data with the raw transaction logs or database records.",
          "Expected Result": "No discrepancies exist between the historical data and the underlying transaction records."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico dati",
      "Preconditions": "User account exists. Access to transaction logs or database is available for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Data integrity and consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, transaction data, access to logs",
      "Expected Result": "Historical credit usage data is accurate and consistent with underlying transaction records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Data Collection from SAP Source",
      "ID": "TC-068",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module as an authorized user.",
          "Expected Result": "User is authenticated and data collection module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate data collection from the SAP data source.",
          "Expected Result": "System connects to SAP and begins data retrieval."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data import process for completion and error messages.",
          "Expected Result": "Data is successfully imported from SAP without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the imported SAP data is present and accurate in the target system.",
          "Expected Result": "All expected SAP data records are available and match the source."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection Module",
      "Preconditions": "User has valid credentials and access rights. SAP source is available and contains test data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection - SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test SAP data records available in source system.",
      "Expected Result": "SAP data is collected, imported, and available in the system without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Data Collection from SI VLT Source",
      "ID": "TC-069",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module as an authorized user.",
          "Expected Result": "User is authenticated and data collection module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate data collection from the SI VLT data source.",
          "Expected Result": "System connects to SI VLT and begins data retrieval."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data import process for completion and error messages.",
          "Expected Result": "Data is successfully imported from SI VLT without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the imported SI VLT data is present and accurate in the target system.",
          "Expected Result": "All expected SI VLT data records are available and match the source."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection Module",
      "Preconditions": "User has valid credentials and access rights. SI VLT source is available and contains test data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection - SI VLT",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test SI VLT data records available in source system.",
      "Expected Result": "SI VLT data is collected, imported, and available in the system without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Login Functionality for Dashboard",
      "ID": "TC-070",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the dashboard login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password credentials.",
          "Expected Result": "Credentials are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User is authenticated and redirected to the dashboard home screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Dashboard",
      "Preconditions": "User account exists with valid credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout/Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials for all profile types.",
      "Expected Result": "User is able to log in and access the dashboard successfully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify Data Archiving Functionality",
      "ID": "TC-071",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data archiving module as an authorized user.",
          "Expected Result": "User is authenticated and data archiving module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data archiving process for a selected data set.",
          "Expected Result": "System begins the archiving process."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the archiving process for completion and error messages.",
          "Expected Result": "Data is archived successfully without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the archived data is retrievable and intact.",
          "Expected Result": "Archived data can be retrieved and matches the original data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving Module",
      "Preconditions": "User has valid credentials and access rights. Data to be archived is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data set available for archiving.",
      "Expected Result": "Data is archived and retrievable without loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Collection Failure Handling for Unavailable Source",
      "ID": "TC-072",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module as an authorized user.",
          "Expected Result": "User is authenticated and data collection module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to initiate data collection from a source that is currently unavailable (e.g., SAP offline).",
          "Expected Result": "System attempts to connect and detects the source is unavailable."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's error handling and user notification.",
          "Expected Result": "System displays a clear error message indicating the source is unavailable and logs the failure."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection Module",
      "Preconditions": "User has valid credentials. At least one data source is intentionally made unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection - Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Unavailable data source (e.g., SAP offline).",
      "Expected Result": "System gracefully handles the failure, notifies the user, and logs the error.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for all data sources.",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify Dashboard Access Denied for Invalid Credentials",
      "ID": "TC-073",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the dashboard login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid username and/or password.",
          "Expected Result": "Credentials are rejected."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User is not authenticated and receives an error message indicating invalid credentials."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Dashboard",
      "Preconditions": "No valid user credentials provided.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout/Profile Management - Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid user credentials.",
      "Expected Result": "User is denied access and receives a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative login scenario.",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify retrieval of unchanged store master data from MDM system",
      "ID": "TC-074",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module for store information.",
          "Expected Result": "The module is accessible and ready for data retrieval."
        },
        {
          "Step": 2,
          "Step Description": "Identify a store whose master data does not require modification (as per 'ZENIT - Elenco dati').",
          "Expected Result": "A store with unchanged master data is identified."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the data retrieval process for the selected store.",
          "Expected Result": "The system queries the MDM system for the store's master data."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the retrieved data matches the records in the MDM system.",
          "Expected Result": "All master data fields for the store are correctly populated and match the MDM records."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection - Store Master Data",
      "Preconditions": "The MDM system is operational and contains up-to-date master data for stores. The tester has access to both the data collection module and the MDM system for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Retrieval of store master data from MDM for unchanged records",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store identifier for a store with unchanged master data; access to MDM records for cross-verification.",
      "Expected Result": "The system retrieves and displays the correct, unmodified master data for the store from the MDM system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the scenario where store data does not require modification.",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify data source attribution for each required field as per 'ZENIT - Elenco dati'",
      "ID": "TC-075",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the data collection interface for store information.",
          "Expected Result": "The interface displays all required data fields for store information."
        },
        {
          "Step": 2,
          "Step Description": "For each field, check the indicated data source and frequency as specified in 'ZENIT - Elenco dati'.",
          "Expected Result": "Each field displays or is associated with the correct data source and frequency information."
        },
        {
          "Step": 3,
          "Step Description": "Select a sample field and trace its data back to the specified source system.",
          "Expected Result": "The field's value matches the data in the indicated source system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Collection - Field Source Mapping",
      "Preconditions": "Access to the data collection interface and the 'ZENIT - Elenco dati' file. Access to all relevant source systems for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Field-level data source attribution and verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Sample fields from 'ZENIT - Elenco dati' with their source systems and frequencies.",
      "Expected Result": "Each required field is correctly attributed to its data source and frequency, and the data matches the source system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers verification of data source mapping for required fields.",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify system behavior when store master data in MDM is unavailable",
      "ID": "TC-076",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate or identify a store whose master data is missing or unavailable in the MDM system.",
          "Expected Result": "A store with missing master data in MDM is identified."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to retrieve the master data for the selected store via the data collection module.",
          "Expected Result": "The system attempts to query the MDM system for the store's master data."
        },
        {
          "Step": 3,
          "Step Description": "Observe and record the system's response to the missing data scenario.",
          "Expected Result": "The system displays an appropriate error message or notification indicating that the store's master data is unavailable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection - Error Handling",
      "Preconditions": "The MDM system is operational but does not contain master data for the selected store. The tester has access to the data collection module.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing store master data in MDM",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store identifier for a store with missing master data in MDM.",
      "Expected Result": "The system gracefully handles the absence of store master data in MDM and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for missing data in MDM.",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify SAP Data Flow: Insoluti - All Required Fields Sent on Variation",
      "ID": "TC-077",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Insoluti' data for a specific PoS in SAP.",
          "Expected Result": "System detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the outgoing data flow contains the following fields: IdRice, Numero Insoluti Totali, Numero Insoluti Anno Corrente, Numero Insoluti a 6 mesi Rolling, Numero Insoluti a 12 mesi Rolling.",
          "Expected Result": "All required fields are present and populated with correct values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with existing 'Insoluti' data in SAP. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Insoluti Data Flow Extraction and Transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known 'Insoluti' values and ability to trigger a variation.",
      "Expected Result": "Upon any variation in 'Insoluti' for a PoS, the system sends all required fields with correct values from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify SAP Data Flow: Garanzie - Fidejussioni Includes Dates",
      "ID": "TC-078",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Garanzie' data for a PoS where the guarantee type is 'Fidejussioni'.",
          "Expected Result": "System detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the outgoing data flow contains: IdRice, Tipologia Garanzia, Importo Saldo Complessivo, Data Inizio Garanzia, Data Scadenza Garanzia.",
          "Expected Result": "All required fields, including start and end dates for 'Fidejussioni', are present and correct."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with 'Fidejussioni' type guarantee in SAP. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Garanzie Data Flow Extraction and Transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'Fidejussioni' guarantee and known dates.",
      "Expected Result": "Upon any variation in 'Garanzie' for a PoS with 'Fidejussioni', the system sends all required fields including dates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify SAP Data Flow: Garanzie - Non-Fidejussioni Excludes Dates",
      "ID": "TC-079",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Garanzie' data for a PoS where the guarantee type is NOT 'Fidejussioni' (e.g., 'Accantonamenti a Piano' or 'Depositi').",
          "Expected Result": "System detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the outgoing data flow contains: IdRice, Tipologia Garanzia, Importo Saldo Complessivo, and does NOT include Data Inizio Garanzia or Data Scadenza Garanzia.",
          "Expected Result": "Only the required fields for non-'Fidejussioni' are present; date fields are omitted."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with non-'Fidejussioni' guarantee in SAP. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Garanzie Data Flow Extraction and Transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'Accantonamenti a Piano' or 'Depositi' guarantee.",
      "Expected Result": "Upon any variation in 'Garanzie' for a PoS with non-'Fidejussioni', the system sends only the required fields, omitting date fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify SAP Data Flow: Blocco al Sollecito - Most Severe Block Sent",
      "ID": "TC-080",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Blocco al Sollecito' status for a PoS with multiple block types (e.g., 'legale', 'diffida', 'piano di rientro').",
          "Expected Result": "System detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that only the most severe block (according to the hierarchy: legale > diffida > piano di rientro) is included in the outgoing data flow, regardless of company distinction.",
          "Expected Result": "Data flow contains IdRice and only the most severe block type for the PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with multiple block statuses in SAP. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Blocco al Sollecito Data Flow Extraction and Transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with multiple block statuses set in SAP.",
      "Expected Result": "Upon any variation, only the most severe block is sent for each PoS, ignoring company distinctions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify SAP Data Flow: Crediti Aperti - Only Specified Accounts Included",
      "ID": "TC-081",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Crediti Aperti' for a PoS with open items in multiple accounts.",
          "Expected Result": "System detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the outgoing data flow contains only the balances of open items for the specified accounts (COGE 158001, 150005, 150001 for SISAL SPA 3030; 152001, 158001 for SISAL ITALIA SPA 1012).",
          "Expected Result": "Data flow contains IdRice and Importo Saldo Complessivo only for the specified accounts."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with open items in both specified and non-specified accounts in SAP. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Crediti Aperti Data Flow Extraction and Transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open items in various accounts, including those specified in the requirement.",
      "Expected Result": "Upon any variation, only balances for the specified accounts are sent in the data flow.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify SAP Data Flow: Crediti Aperti - IAG Credits Remain Open Temporarily",
      "ID": "TC-082",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger an IAG event for a PoS, creating an open credit marked as 'IAG'.",
          "Expected Result": "System detects the IAG event and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the 'IAG' credit remains open and is included in the outgoing data flow for several hours after the IAG event.",
          "Expected Result": "Data flow contains IdRice and Importo Saldo Complessivo including the 'IAG' credit for the expected duration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with an IAG credit event in SAP. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Crediti Aperti Data Flow Extraction and Transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with an IAG credit event and expected open duration.",
      "Expected Result": "After an IAG event, the 'IAG' credit remains open and is transmitted for the expected period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify SAP Data Flow: Hopper/Cambia Monete - All Required Fields Sent on Variation",
      "ID": "TC-083",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the Hopper or Cambia Monete amounts for a PoS in SAP.",
          "Expected Result": "System detects the variation and prepares the data flow for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the outgoing data flow contains: IdRice, Importo Saldo Hopper IAG - Fine Rapporto, Importo Saldo Hopper IAG - Recupero, Importo Saldo Cambia Monete.",
          "Expected Result": "All required fields are present and populated with correct values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with Hopper and Cambia Monete data in SAP. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Hopper/Cambia Monete Data Flow Extraction and Transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known Hopper and Cambia Monete values and ability to trigger a variation.",
      "Expected Result": "Upon any variation in Hopper or Cambia Monete, all required fields are sent with correct values from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify SAP Data Flow: No Data Sent When No Variation Occurs",
      "ID": "TC-084",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no variation occurs in any of the monitored SAP data flows (Insoluti, Garanzie, Blocco al Sollecito, Crediti Aperti, Hopper/Cambia Monete) for a PoS.",
          "Expected Result": "System monitors for changes but detects none."
        },
        {
          "Step": 2,
          "Step Description": "Verify that no data flow is sent from SAP for the PoS in the absence of any variation.",
          "Expected Result": "No outgoing data flow is generated or transmitted."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "A PoS with stable data in all relevant SAP flows. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Data Flow Triggering Logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no changes in monitored SAP data.",
      "Expected Result": "No data is sent when there are no variations in the monitored SAP data flows.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify daily data flow generation for all PoS with required fields",
      "ID": "TC-085",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or wait for the scheduled daily data flow process to execute.",
          "Expected Result": "The data flow process is initiated as per schedule."
        },
        {
          "Step": 2,
          "Step Description": "Access the generated data flow file or output for the current day.",
          "Expected Result": "The data flow file/output is available and accessible."
        },
        {
          "Step": 3,
          "Step Description": "For each PoS entry in the data flow, verify the presence of the following fields: IdRice, ZonaRice, Nr VLT, Nr VLT Medie YTD.",
          "Expected Result": "Each PoS entry contains all four required fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - VLT",
      "Preconditions": "System is configured to generate daily data flows. At least one PoS is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation for VLT PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with valid data for all required fields.",
      "Expected Result": "A daily data flow is generated containing, for each PoS, the fields: IdRice, ZonaRice, Nr VLT, and Nr VLT Medie YTD.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify data accuracy for each field in the daily data flow",
      "ID": "TC-086",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or wait for the scheduled daily data flow process to execute.",
          "Expected Result": "The data flow process is initiated as per schedule."
        },
        {
          "Step": 2,
          "Step Description": "Access the generated data flow file or output for the current day.",
          "Expected Result": "The data flow file/output is available and accessible."
        },
        {
          "Step": 3,
          "Step Description": "For a sample PoS, compare the values of IdRice, ZonaRice, Nr VLT, and Nr VLT Medie YTD in the data flow with the source system/database.",
          "Expected Result": "The values in the data flow match exactly with the source system/database for each field."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - VLT",
      "Preconditions": "System is configured to generate daily data flows. Access to both the data flow output and the source database is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data accuracy in daily data flow for VLT PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS with known values in the source database.",
      "Expected Result": "All fields in the data flow for each PoS accurately reflect the source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify handling of missing or incomplete PoS data in daily data flow",
      "ID": "TC-087",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure at least one PoS in the source system has missing or null values for one or more required fields (IdRice, ZonaRice, Nr VLT, Nr VLT Medie YTD).",
          "Expected Result": "PoS with incomplete data is present in the source system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data flow process to execute.",
          "Expected Result": "The data flow process is initiated as per schedule."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated data flow file or output for the current day.",
          "Expected Result": "The data flow file/output is available and accessible."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the system handles PoS entries with missing or incomplete data in the data flow (e.g., are they excluded, flagged, or included with null/default values).",
          "Expected Result": "System handles missing/incomplete data according to specification (e.g., logs error, flags entry, or uses default values)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - VLT",
      "Preconditions": "At least one PoS with missing or incomplete data in the source system.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling in daily data flow for VLT PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing/null values for required fields.",
      "Expected Result": "The system handles missing or incomplete PoS data in the daily data flow as per requirements (e.g., exclusion, flagging, or default values).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify daily data flow generation for large number of PoS (performance test)",
      "ID": "TC-088",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate the source system with a large number of PoS records (e.g., 10,000+).",
          "Expected Result": "Source system contains a large dataset of PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data flow process to execute.",
          "Expected Result": "The data flow process is initiated as per schedule."
        },
        {
          "Step": 3,
          "Step Description": "Measure the time taken to generate and make available the daily data flow file/output.",
          "Expected Result": "Data flow is generated within acceptable performance thresholds."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all PoS entries are present and complete in the data flow.",
          "Expected Result": "All PoS are included with required fields and no data loss."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - VLT",
      "Preconditions": "System supports bulk data. Performance monitoring tools are available.",
      "Execution Mode": "Manual",
      "Functionality": "Performance of daily data flow generation for VLT PoS",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large dataset of PoS (e.g., 10,000+ records).",
      "Expected Result": "The daily data flow is generated within acceptable time limits and includes all PoS with required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify daily data flow file/output format and structure",
      "ID": "TC-089",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or wait for the scheduled daily data flow process to execute.",
          "Expected Result": "The data flow process is initiated as per schedule."
        },
        {
          "Step": 2,
          "Step Description": "Access the generated data flow file or output for the current day.",
          "Expected Result": "The data flow file/output is available and accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the file/output format (e.g., CSV, JSON, XML) matches the documented specification.",
          "Expected Result": "File/output format matches the specification."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the structure (field order, delimiters, encoding) is as per requirements.",
          "Expected Result": "File/output structure is correct and consistent."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Integration - VLT",
      "Preconditions": "Documentation of expected file/output format and structure is available.",
      "Execution Mode": "Manual",
      "Functionality": "File/output format and structure of daily data flow for VLT PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one generated data flow file/output.",
      "Expected Result": "The daily data flow file/output format and structure comply with the documented specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Data Flow Creation for All Required Fields per Product Type",
      "ID": "TC-090",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend or data flow configuration interface.",
          "Expected Result": "System backend or configuration interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for a specific product type (e.g., 'Prodotto A').",
          "Expected Result": "Data flow creation interface for the selected product type is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required fields: Id Rice, Alias, Zona/Rice, Prodotto, Soglia Base, Estensione, Totale, Consumato, % consumata, Residuo.",
          "Expected Result": "All fields accept input and display entered values correctly."
        },
        {
          "Step": 4,
          "Step Description": "Save or submit the data flow configuration.",
          "Expected Result": "Data flow is created and saved successfully without errors."
        },
        {
          "Step": 5,
          "Step Description": "Retrieve and review the created data flow for the selected product type.",
          "Expected Result": "All entered values are correctly stored and displayed for each required field."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has access to backend/data flow configuration interface. At least one product type is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for product information",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid product type, sample values for all required fields (e.g., Id Rice: 12345, Alias: 'TestAlias', etc.)",
      "Expected Result": "Data flow is created with all required fields populated and retrievable for the selected product type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3"
    },
    {
      "Title": "Verify Data Flow Handles Missing Required Fields (Negative Test)",
      "ID": "TC-091",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend or data flow configuration interface.",
          "Expected Result": "System backend or configuration interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for a specific product type.",
          "Expected Result": "Data flow creation interface for the selected product type is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Leave one or more required fields (e.g., 'Id Rice' or 'Prodotto') empty and attempt to save the data flow.",
          "Expected Result": "System displays an error message indicating that required fields are missing and prevents saving."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has access to backend/data flow configuration interface. At least one product type is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields in data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Product type, attempt with missing required fields (e.g., Id Rice: [empty], Alias: 'TestAlias', etc.)",
      "Expected Result": "System prevents creation of data flow and displays appropriate error messages for missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3"
    },
    {
      "Title": "Verify Data Flow Calculation for % Consumed and Residual Values",
      "ID": "TC-092",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend or data flow configuration interface.",
          "Expected Result": "System backend or configuration interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for a specific product type.",
          "Expected Result": "Data flow creation interface for the selected product type is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter values for Totale (e.g., 100) and Consumato (e.g., 40).",
          "Expected Result": "Fields accept numeric input."
        },
        {
          "Step": 4,
          "Step Description": "Save or submit the data flow configuration.",
          "Expected Result": "Data flow is created successfully."
        },
        {
          "Step": 5,
          "Step Description": "Retrieve the created data flow and verify that '% consumata' is calculated as (Consumato/Totale)*100 (e.g., 40%) and 'Residuo' is calculated as (Totale-Consumato) (e.g., 60).",
          "Expected Result": "'% consumata' and 'Residuo' fields display correct calculated values based on input."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has access to backend/data flow configuration interface. At least one product type is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation of percentage consumed and residual values in data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Totale: 100, Consumato: 40, other required fields with valid values.",
      "Expected Result": "'% consumata' and 'Residuo' are correctly calculated and displayed in the data flow.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3"
    },
    {
      "Title": "Verify Data Flow Creation for Multiple Product Types",
      "ID": "TC-093",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend or data flow configuration interface.",
          "Expected Result": "System backend or configuration interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of new data flows for at least two different product types (e.g., 'Prodotto A' and 'Prodotto B').",
          "Expected Result": "Data flow creation interface for each selected product type is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required fields for each product type.",
          "Expected Result": "All fields accept input and display entered values correctly for each product type."
        },
        {
          "Step": 4,
          "Step Description": "Save or submit each data flow configuration.",
          "Expected Result": "Data flows are created and saved successfully for each product type."
        },
        {
          "Step": 5,
          "Step Description": "Retrieve and review the created data flows for each product type.",
          "Expected Result": "All entered values are correctly stored and displayed for each required field and product type."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has access to backend/data flow configuration interface. At least two product types are available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for multiple product types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid values for all required fields for at least two product types.",
      "Expected Result": "Data flows are created and retrievable for each product type with all required fields populated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3"
    },
    {
      "Title": "Verify Data Flow Handles Invalid Data Types (Negative Test)",
      "ID": "TC-094",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend or data flow configuration interface.",
          "Expected Result": "System backend or configuration interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for a specific product type.",
          "Expected Result": "Data flow creation interface for the selected product type is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter invalid data types in numeric fields (e.g., enter text in 'Totale' or 'Consumato').",
          "Expected Result": "System displays an error message or prevents entry of invalid data types."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to save the data flow with invalid data types.",
          "Expected Result": "System prevents saving and displays appropriate error messages."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has access to backend/data flow configuration interface. At least one product type is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data types in data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid data types for numeric fields (e.g., Totale: 'abc', Consumato: 'xyz').",
      "Expected Result": "System prevents creation of data flow with invalid data types and displays appropriate error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3"
    },
    {
      "Title": "Verify Data Flow Creation for VLT Contract Type",
      "ID": "TC-095",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for managing POS contracts and procedures.",
          "Expected Result": "Backend system is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a new data flow for contract types.",
          "Expected Result": "System displays options for contract types."
        },
        {
          "Step": 3,
          "Step Description": "Select 'TIPO CONTRATTO VLT' as the contract type.",
          "Expected Result": "System accepts the selection and displays relevant fields for VLT contract data flow creation."
        },
        {
          "Step": 4,
          "Step Description": "Enter all required data for the VLT contract type (e.g., contract ID, start date, end date, status).",
          "Expected Result": "All required fields are filled with valid data."
        },
        {
          "Step": 5,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the data flow for VLT contract type."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new data flow for 'TIPO CONTRATTO VLT' is present in the system and data is correctly stored.",
          "Expected Result": "Data flow for VLT contract type is correctly created and visible in the system with accurate data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Contracts & Procedure",
      "Preconditions": "User has valid backend access and necessary permissions. System is operational. No existing data flow for the same VLT contract type.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for VLT contract type",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid VLT contract data (e.g., contract ID: VLT123, start date: 2024-07-01, end date: 2025-07-01, status: Active)",
      "Expected Result": "A new data flow for 'TIPO CONTRATTO VLT' is successfully created and stored in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Data Flow Creation for Betting Contract Type",
      "ID": "TC-096",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for managing POS contracts and procedures.",
          "Expected Result": "Backend system is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a new data flow for contract types.",
          "Expected Result": "System displays options for contract types."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Tipo Contratto Betting' as the contract type.",
          "Expected Result": "System accepts the selection and displays relevant fields for Betting contract data flow creation."
        },
        {
          "Step": 4,
          "Step Description": "Enter all required data for the Betting contract type (e.g., contract ID, start date, end date, status).",
          "Expected Result": "All required fields are filled with valid data."
        },
        {
          "Step": 5,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the data flow for Betting contract type."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new data flow for 'Tipo Contratto Betting' is present in the system and data is correctly stored.",
          "Expected Result": "Data flow for Betting contract type is correctly created and visible in the system with accurate data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Contracts & Procedure",
      "Preconditions": "User has valid backend access and necessary permissions. System is operational. No existing data flow for the same Betting contract type.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Betting contract type",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Betting contract data (e.g., contract ID: BET456, start date: 2024-07-01, end date: 2025-07-01, status: Active)",
      "Expected Result": "A new data flow for 'Tipo Contratto Betting' is successfully created and stored in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Error Handling for Missing Required Fields in Data Flow Creation",
      "ID": "TC-097",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for managing POS contracts and procedures.",
          "Expected Result": "Backend system is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a new data flow for contract types.",
          "Expected Result": "System displays options for contract types."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'TIPO CONTRATTO VLT' or 'Tipo Contratto Betting' as the contract type.",
          "Expected Result": "System accepts the selection and displays relevant fields for contract data flow creation."
        },
        {
          "Step": 4,
          "Step Description": "Leave one or more required fields (e.g., contract ID or start date) empty.",
          "Expected Result": "Required fields are left blank."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to submit the data flow creation request.",
          "Expected Result": "System displays an error message indicating that required fields are missing and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "POS Contracts & Procedure",
      "Preconditions": "User has valid backend access and necessary permissions. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Incomplete contract data (e.g., missing contract ID or start date)",
      "Expected Result": "System prevents creation of the data flow and displays appropriate error messages for missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify System Behavior When Creating Duplicate Data Flow for Same Contract Type",
      "ID": "TC-098",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for managing POS contracts and procedures.",
          "Expected Result": "Backend system is accessible and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Create a data flow for a specific contract type (e.g., 'TIPO CONTRATTO VLT') with a unique contract ID.",
          "Expected Result": "Data flow is created successfully."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to create another data flow for the same contract type using the same contract ID.",
          "Expected Result": "System detects the duplicate and displays an error or warning message, preventing duplicate creation."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "POS Contracts & Procedure",
      "Preconditions": "User has valid backend access and necessary permissions. System is operational. At least one data flow for the contract type already exists.",
      "Execution Mode": "Manual",
      "Functionality": "Duplicate data flow prevention for contract types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Duplicate contract data (e.g., contract ID: VLT123 already exists)",
      "Expected Result": "System prevents creation of duplicate data flows for the same contract type and contract ID, displaying an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Data Flow Creation for All Required Fields Not Present in MDM",
      "ID": "TC-099",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for a new record where none of the required fields are present in MDM.",
          "Expected Result": "System prompts for all required fields as per RU 4.1.5."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid data for each required field (e.g., Canale, Cluster, Codice SIMP MDM, etc.).",
          "Expected Result": "All fields accept input and validate format where applicable."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "Data flow is created successfully and all entered fields are stored and distributed as per system design."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated and has permissions to create data flows. MDM does not contain the required fields for the test record.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for missing MDM fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test record with all required fields missing in MDM. Example: Canale='Retail', Cluster='A1', Codice SIMP MDM='12345', etc.",
      "Expected Result": "System creates a data flow containing all required fields not present in MDM.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Data Flow Skips Fields Already Present in MDM",
      "ID": "TC-100",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for a record where some required fields are already present in MDM (e.g., Canale, Cluster).",
          "Expected Result": "System identifies fields already present in MDM."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid data for the remaining fields not present in MDM.",
          "Expected Result": "System only prompts for missing fields."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "Data flow is created containing only the fields not present in MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated. MDM contains some of the required fields for the test record.",
      "Execution Mode": "Manual",
      "Functionality": "Selective data flow creation based on MDM presence",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test record with Canale and Cluster present in MDM, other fields missing.",
      "Expected Result": "System creates a data flow with only the fields not present in MDM.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Field Format and Validation for Phone Numbers (Privacy Check)",
      "ID": "TC-101",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for a new record.",
          "Expected Result": "System prompts for all required fields."
        },
        {
          "Step": 3,
          "Step Description": "Enter a personal phone number (not PoS) in the 'Telefono 1', 'Telefono 2', 'Cell Titolare', or 'Cell Titolare 2' fields.",
          "Expected Result": "System validates the phone number and displays a warning or error if the number is not associated with the PoS, as per privacy requirements."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated. System has access to PoS phone number validation logic or database.",
      "Execution Mode": "Manual",
      "Functionality": "Phone number privacy validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Personal phone number (e.g., '3331234567') entered in phone fields.",
      "Expected Result": "System rejects personal phone numbers and enforces entry of PoS phone numbers only.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Data Flow Creation with Invalid or Missing Mandatory Fields",
      "ID": "TC-102",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for a new record.",
          "Expected Result": "System prompts for all required fields."
        },
        {
          "Step": 3,
          "Step Description": "Leave one or more mandatory fields blank or enter invalid data (e.g., invalid email format, missing P. IVA).",
          "Expected Result": "System displays validation errors for each invalid or missing field and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated.",
      "Execution Mode": "Manual",
      "Functionality": "Field validation for mandatory data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Missing P. IVA, invalid email (e.g., 'test@'), blank Denominazione.",
      "Expected Result": "System enforces mandatory field validation and prevents data flow creation until all errors are resolved.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Data Flow Creation with Maximum and Minimum Field Lengths (Boundary Test)",
      "ID": "TC-103",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for a new record.",
          "Expected Result": "System prompts for all required fields."
        },
        {
          "Step": 3,
          "Step Description": "Enter minimum and maximum allowed values for each field (e.g., Denominazione with 1 and 255 characters, CAP with 5 digits, etc.).",
          "Expected Result": "System accepts values within allowed boundaries and rejects those outside."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated. Field length and format specifications are defined in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value analysis for data fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Denominazione='A', Denominazione='A...A' (255 chars), CAP='00000', CAP='12345', etc.",
      "Expected Result": "System enforces field length and format boundaries for all fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Daily Data Flow Generation for All Required PoS Fields",
      "ID": "TC-104",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system date is set to a typical business day.",
          "Expected Result": "System is ready to process daily data flow."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data flow process for all PoS.",
          "Expected Result": "Daily data flow process is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated daily data flow output for a sample PoS.",
          "Expected Result": "Daily data flow output is accessible for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present and populated: ZonaRice, Nr AWP altro concessionario, Crediti 'NOIAG', Hopper 'NOIAG', Chiavi Cassetto AWP, Chiavi Sportello AWP, Chiavi Cambia Monete AWP.",
          "Expected Result": "All required fields are present and populated with valid data for the PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Gestorete Data Flow",
      "Preconditions": "At least one PoS is active and has valid data for all required fields. Daily data flow process is scheduled or can be triggered manually.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation for PoS information",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS with complete data set for all required fields.",
      "Expected Result": "The daily data flow for each PoS contains all specified fields with valid, up-to-date data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Real-Time Retrieval of ZonaRice, Crediti 'NOIAG', and Hopper 'NOIAG' for a PoS",
      "ID": "TC-105",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Select a PoS for which real-time data retrieval is required.",
          "Expected Result": "PoS is selected and ready for data retrieval."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a real-time data request for ZonaRice, Crediti 'NOIAG', and Hopper 'NOIAG'.",
          "Expected Result": "System processes the real-time data request."
        },
        {
          "Step": 3,
          "Step Description": "Observe the response returned by the system.",
          "Expected Result": "System returns current values for ZonaRice, Crediti 'NOIAG', and Hopper 'NOIAG' for the selected PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Gestorete Data Flow",
      "Preconditions": "PoS is active and has up-to-date data for the requested fields. Real-time data retrieval interface is available.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time data retrieval for PoS information",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known values for ZonaRice, Crediti 'NOIAG', and Hopper 'NOIAG'.",
      "Expected Result": "System provides real-time, accurate values for the requested fields for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Handling of Missing Data in Daily Data Flow",
      "ID": "TC-106",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a PoS exists with one or more required fields missing (e.g., Crediti 'NOIAG' is null).",
          "Expected Result": "PoS with incomplete data is available in the system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the daily data flow process for all PoS.",
          "Expected Result": "Daily data flow process is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated daily data flow output for the PoS with missing data.",
          "Expected Result": "Daily data flow output is accessible for the PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the system represents missing or null values in the output (e.g., empty, null, error message).",
          "Expected Result": "System handles missing data gracefully and represents it according to specification (e.g., empty field, 'N/A', or null)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Gestorete Data Flow",
      "Preconditions": "At least one PoS with missing data for a required field exists.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation with incomplete PoS data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with at least one missing required field.",
      "Expected Result": "System generates the daily data flow and handles missing data according to specification without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Real-Time Data Retrieval Error Handling for Inactive or Non-Existent PoS",
      "ID": "TC-107",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to retrieve real-time data for a PoS that is inactive or does not exist in the system.",
          "Expected Result": "System receives a request for an invalid PoS."
        },
        {
          "Step": 2,
          "Step Description": "Observe the system's response to the invalid request.",
          "Expected Result": "System returns an appropriate error message or status indicating the PoS is inactive or not found."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Gestorete Data Flow",
      "Preconditions": "At least one PoS is inactive or does not exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for real-time data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Inactive or non-existent PoS identifier.",
      "Expected Result": "System does not return data and provides a clear error message for invalid PoS requests.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Daily Data Flow Generation at Boundary Time (End of Day)",
      "ID": "TC-108",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set the system time to just before the daily data flow process is scheduled (e.g., 23:59).",
          "Expected Result": "System time is set to the boundary condition."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data flow process to execute at the scheduled time.",
          "Expected Result": "Daily data flow process executes at the boundary time."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated daily data flow output for a PoS.",
          "Expected Result": "Daily data flow output is accessible for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all required fields are present and populated with data as of the end of the day.",
          "Expected Result": "Data reflects the correct end-of-day values for all required fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Gestorete Data Flow",
      "Preconditions": "System allows manipulation of system time or test environment supports time simulation. PoS data is updated up to the end of the day.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary condition testing for daily data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with data updates close to end-of-day.",
      "Expected Result": "Daily data flow at boundary time contains accurate, up-to-date values for all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify correct data flow creation for GNTN product with all required GEO fields",
      "ID": "TC-109",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend as an authorized user.",
          "Expected Result": "User is authenticated and has access to the backend interface."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for the GNTN product.",
          "Expected Result": "System displays the data flow creation form for GNTN."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required GEO fields: SIGLA ZONA, NUM RICE, FIDO BASE, ESTENS. FIDO, FIDO TOTALE, FIDO CONS., PERC. FIDO CONS., FIDO RESIDUO.",
          "Expected Result": "All fields accept the input and display no validation errors."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation form.",
          "Expected Result": "System processes the request and confirms successful creation of the data flow."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the created data flow contains all the entered GEO fields with correct values.",
          "Expected Result": "Data flow for GNTN product contains all required GEO fields with the correct values as entered."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated with permissions to create data flows. GNTN product is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Creation for GNTN",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "SIGLA ZONA: 'MI', NUM RICE: '12345', FIDO BASE: '1000', ESTENS. FIDO: '500', FIDO TOTALE: '1500', FIDO CONS.: '200', PERC. FIDO CONS.: '13.33', FIDO RESIDUO: '1300'",
      "Expected Result": "Data flow for GNTN product is created with all required GEO fields populated correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7"
    },
    {
      "Title": "Verify error handling when mandatory GEO fields are missing during data flow creation for CONTI GIOCO",
      "ID": "TC-110",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend as an authorized user.",
          "Expected Result": "User is authenticated and has access to the backend interface."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for the CONTI GIOCO product.",
          "Expected Result": "System displays the data flow creation form for CONTI GIOCO."
        },
        {
          "Step": 3,
          "Step Description": "Leave one or more mandatory GEO fields (e.g., FIDO BASE) empty.",
          "Expected Result": "System highlights the missing mandatory fields."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to submit the form with missing fields.",
          "Expected Result": "System prevents submission and displays appropriate error messages for each missing field."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated with permissions to create data flows. CONTI GIOCO product is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Mandatory GEO Fields for CONTI GIOCO",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "SIGLA ZONA: 'RM', NUM RICE: '54321', FIDO BASE: '', ESTENS. FIDO: '300', FIDO TOTALE: '1300', FIDO CONS.: '100', PERC. FIDO CONS.: '7.69', FIDO RESIDUO: '1200'",
      "Expected Result": "System prevents data flow creation and displays error messages for missing mandatory GEO fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7"
    },
    {
      "Title": "Verify correct calculation and storage of PERC. FIDO CONS. for CORNER product",
      "ID": "TC-111",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend as an authorized user.",
          "Expected Result": "User is authenticated and has access to the backend interface."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for the CORNER product.",
          "Expected Result": "System displays the data flow creation form for CORNER."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for FIDO TOTALE and FIDO CONS. (e.g., FIDO TOTALE: 2000, FIDO CONS.: 400).",
          "Expected Result": "Fields accept the input values."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system automatically calculates PERC. FIDO CONS. as (FIDO CONS. / FIDO TOTALE) * 100.",
          "Expected Result": "PERC. FIDO CONS. is calculated as 20.00 and displayed in the form."
        },
        {
          "Step": 5,
          "Step Description": "Submit the form and verify that the stored value for PERC. FIDO CONS. is correct.",
          "Expected Result": "Data flow is created and PERC. FIDO CONS. is stored as 20.00."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated with permissions to create data flows. CORNER product is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic Calculation of PERC. FIDO CONS. for CORNER",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "FIDO TOTALE: '2000', FIDO CONS.: '400'",
      "Expected Result": "PERC. FIDO CONS. is correctly calculated and stored as 20.00 for the CORNER product.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7"
    },
    {
      "Title": "Verify data flow creation with boundary values for FIDO BASE and FIDO RESIDUO for GNTN product",
      "ID": "TC-112",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend as an authorized user.",
          "Expected Result": "User is authenticated and has access to the backend interface."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for the GNTN product.",
          "Expected Result": "System displays the data flow creation form for GNTN."
        },
        {
          "Step": 3,
          "Step Description": "Enter minimum allowed value for FIDO BASE (e.g., 0) and maximum allowed value for FIDO RESIDUO (e.g., 999999).",
          "Expected Result": "Fields accept the boundary values without validation errors."
        },
        {
          "Step": 4,
          "Step Description": "Fill in all other required GEO fields with valid data.",
          "Expected Result": "All fields are populated and no validation errors are shown."
        },
        {
          "Step": 5,
          "Step Description": "Submit the form and verify that the data flow is created with the boundary values.",
          "Expected Result": "Data flow is created and stores the boundary values for FIDO BASE and FIDO RESIDUO correctly."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated with permissions to create data flows. GNTN product is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary Value Handling for FIDO BASE and FIDO RESIDUO",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "FIDO BASE: '0', FIDO RESIDUO: '999999', other fields with valid data",
      "Expected Result": "Data flow for GNTN product is created and stores the boundary values for FIDO BASE and FIDO RESIDUO without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7"
    },
    {
      "Title": "Verify system rejects invalid data types for NUM RICE and FIDO fields during data flow creation for CONTI GIOCO",
      "ID": "TC-113",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend as an authorized user.",
          "Expected Result": "User is authenticated and has access to the backend interface."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow creation process for the CONTI GIOCO product.",
          "Expected Result": "System displays the data flow creation form for CONTI GIOCO."
        },
        {
          "Step": 3,
          "Step Description": "Enter alphabetic characters in the NUM RICE field and non-numeric values in FIDO BASE, ESTENS. FIDO, FIDO TOTALE, FIDO CONS., PERC. FIDO CONS., and FIDO RESIDUO fields.",
          "Expected Result": "System displays validation errors for each field with invalid data type."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to submit the form with invalid data types.",
          "Expected Result": "System prevents submission and displays error messages for each invalid field."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated with permissions to create data flows. CONTI GIOCO product is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Input Validation for Numeric Fields in CONTI GIOCO",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "NUM RICE: 'ABC', FIDO BASE: 'one thousand', ESTENS. FIDO: 'five hundred', FIDO TOTALE: 'fifteen hundred', FIDO CONS.: 'two hundred', PERC. FIDO CONS.: 'thirteen', FIDO RESIDUO: 'thirteen hundred'",
      "Expected Result": "System rejects invalid data types and displays appropriate error messages for each field.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7"
    },
    {
      "Title": "Verify DWH Flow Creation for Paid Tickets in Other Agencies",
      "ID": "TC-114",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "Backend system is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record marked as 'paid in another agency' with all required fields populated (COD_AGENZIA, ZONA_RICE, COD_GIORNO_COMPETENZA, COD_GIORNO_CASSA, COD_GIORNO_PAGAMENTO, COD_AGENZIA_PAGAMENTO, ZONA_RICE_PAGAMENTO, IMP_GIOCATO, IMP_VINCITA).",
          "Expected Result": "Ticket record is successfully inserted."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for ticket extraction and transformation.",
          "Expected Result": "DWH flow process is executed without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the ticket appears in the DWH output with all fields correctly mapped and populated.",
          "Expected Result": "Ticket is present in the DWH output with accurate field values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "Backend system and DWH flow process are operational. Test ticket data is available.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow for tickets paid in other agencies",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Ticket with 'paid in another agency' status and all required fields populated.",
      "Expected Result": "Ticket with 'paid in another agency' status is correctly processed and present in the DWH output with all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8 DATI DWH"
    },
    {
      "Title": "Verify DWH Flow Creation for Unpaid Winning Sports Tickets",
      "ID": "TC-115",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "Backend system is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record marked as 'winning sports ticket not paid' with all required fields populated.",
          "Expected Result": "Ticket record is successfully inserted."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for ticket extraction and transformation.",
          "Expected Result": "DWH flow process is executed without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the ticket appears in the DWH output with all fields correctly mapped and populated.",
          "Expected Result": "Ticket is present in the DWH output with accurate field values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "Backend system and DWH flow process are operational. Test ticket data is available.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow for unpaid winning sports tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Ticket with 'winning sports ticket not paid' status and all required fields populated.",
      "Expected Result": "Unpaid winning sports ticket is correctly processed and present in the DWH output with all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8 DATI DWH"
    },
    {
      "Title": "Verify DWH Flow Creation for Unpaid Winning VR Tickets",
      "ID": "TC-116",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "Backend system is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record marked as 'winning VR ticket not paid' with all required fields populated.",
          "Expected Result": "Ticket record is successfully inserted."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for ticket extraction and transformation.",
          "Expected Result": "DWH flow process is executed without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the ticket appears in the DWH output with all fields correctly mapped and populated.",
          "Expected Result": "Ticket is present in the DWH output with accurate field values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "Backend system and DWH flow process are operational. Test ticket data is available.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow for unpaid winning VR tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Ticket with 'winning VR ticket not paid' status and all required fields populated.",
      "Expected Result": "Unpaid winning VR ticket is correctly processed and present in the DWH output with all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8 DATI DWH"
    },
    {
      "Title": "Verify Field Mapping and Data Integrity in DWH Output",
      "ID": "TC-117",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a ticket record with known values for all required fields (e.g., COD_AGENZIA=123, ZONA_RICE='A1', COD_GIORNO_COMPETENZA='20240601', COD_GIORNO_CASSA='20240602', COD_GIORNO_PAGAMENTO='20240603', COD_AGENZIA_PAGAMENTO=456, ZONA_RICE_PAGAMENTO='B2', IMP_GIOCATO=100.00, IMP_VINCITA=250.00).",
          "Expected Result": "Ticket record is successfully inserted."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the DWH flow process for ticket extraction and transformation.",
          "Expected Result": "DWH flow process is executed without errors."
        },
        {
          "Step": 3,
          "Step Description": "Extract the DWH output and verify that each field matches the input values exactly.",
          "Expected Result": "All fields in the DWH output match the input values for the ticket."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "Backend system and DWH flow process are operational. Test ticket data with known values is available.",
      "Execution Mode": "Manual",
      "Functionality": "Field mapping and data integrity in DWH flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Ticket with known values for all required fields.",
      "Expected Result": "All fields in the DWH output match the input values for the ticket, ensuring correct mapping and data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8 DATI DWH"
    },
    {
      "Title": "Verify DWH Flow Handling of Missing Mandatory Fields (Negative Test)",
      "ID": "TC-118",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a ticket record with one or more mandatory fields missing (e.g., missing COD_AGENZIA or IMP_GIOCATO).",
          "Expected Result": "System rejects the ticket record or flags it as invalid."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the DWH flow process for ticket extraction and transformation.",
          "Expected Result": "DWH flow process completes, and the invalid ticket is not present in the DWH output or is flagged appropriately."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "Backend system and DWH flow process are operational. Test ticket data with missing fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of mandatory fields in DWH flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Ticket with missing mandatory fields (e.g., missing COD_AGENZIA or IMP_GIOCATO).",
      "Expected Result": "Tickets with missing mandatory fields are not processed or are flagged as invalid in the DWH output.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8 DATI DWH"
    },
    {
      "Title": "Verify DWH Flow with Boundary Values for Numeric Fields",
      "ID": "TC-119",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a ticket record with boundary values for IMP_GIOCATO and IMP_VINCITA (e.g., 0, maximum allowed value).",
          "Expected Result": "Ticket record is successfully inserted."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the DWH flow process for ticket extraction and transformation.",
          "Expected Result": "DWH flow process is executed without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the ticket appears in the DWH output with correct boundary values for IMP_GIOCATO and IMP_VINCITA.",
          "Expected Result": "Ticket is present in the DWH output with accurate boundary values for numeric fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "Backend system and DWH flow process are operational. Test ticket data with boundary values is available.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value handling for numeric fields in DWH flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Ticket with IMP_GIOCATO and IMP_VINCITA set to 0 and maximum allowed value.",
      "Expected Result": "Tickets with boundary values for numeric fields are correctly processed and present in the DWH output.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8 DATI DWH"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp gestione IAG'",
      "ID": "TC-120",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'Nr awp gestione IAG' data field.",
          "Expected Result": "'Nr awp gestione IAG' field is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify the value displayed matches the expected value from the backend data source for the current reporting period.",
          "Expected Result": "Displayed value matches the backend data source for 'Nr awp gestione IAG'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Backend data source is populated with test data.",
      "Execution Mode": "Manual",
      "Functionality": "Display and calculation of 'Nr awp gestione IAG'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with known 'Nr awp gestione IAG' value.",
      "Expected Result": "'Nr awp gestione IAG' is correctly calculated and displayed as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp gestione NO IAG'",
      "ID": "TC-121",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'Nr awp gestione NO IAG' data field.",
          "Expected Result": "'Nr awp gestione NO IAG' field is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify the value displayed matches the expected value from the backend data source for the current reporting period.",
          "Expected Result": "Displayed value matches the backend data source for 'Nr awp gestione NO IAG'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Backend data source is populated with test data.",
      "Execution Mode": "Manual",
      "Functionality": "Display and calculation of 'Nr awp gestione NO IAG'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with known 'Nr awp gestione NO IAG' value.",
      "Expected Result": "'Nr awp gestione NO IAG' is correctly calculated and displayed as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp terze parti IAG'",
      "ID": "TC-122",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'Nr awp terze parti IAG' data field.",
          "Expected Result": "'Nr awp terze parti IAG' field is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify the value displayed matches the expected value from the backend data source for the current reporting period.",
          "Expected Result": "Displayed value matches the backend data source for 'Nr awp terze parti IAG'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Backend data source is populated with test data.",
      "Execution Mode": "Manual",
      "Functionality": "Display and calculation of 'Nr awp terze parti IAG'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with known 'Nr awp terze parti IAG' value.",
      "Expected Result": "'Nr awp terze parti IAG' is correctly calculated and displayed as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp terze parti NO IAG'",
      "ID": "TC-123",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'Nr awp terze parti NO IAG' data field.",
          "Expected Result": "'Nr awp terze parti NO IAG' field is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify the value displayed matches the expected value from the backend data source for the current reporting period.",
          "Expected Result": "Displayed value matches the backend data source for 'Nr awp terze parti NO IAG'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Backend data source is populated with test data.",
      "Execution Mode": "Manual",
      "Functionality": "Display and calculation of 'Nr awp terze parti NO IAG'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with known 'Nr awp terze parti NO IAG' value.",
      "Expected Result": "'Nr awp terze parti NO IAG' is correctly calculated and displayed as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr AWP medie YTD'",
      "ID": "TC-124",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'Nr AWP medie YTD' data field.",
          "Expected Result": "'Nr AWP medie YTD' field is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify the value displayed matches the expected YTD average from the backend data source.",
          "Expected Result": "Displayed value matches the backend YTD average for 'Nr AWP medie YTD'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Backend data source is populated with test data.",
      "Execution Mode": "Manual",
      "Functionality": "Display and calculation of 'Nr AWP medie YTD'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with known YTD average value.",
      "Expected Result": "'Nr AWP medie YTD' is correctly calculated and displayed as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct calculation and display of 'Coin medio awp'",
      "ID": "TC-125",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'Coin medio awp' data field.",
          "Expected Result": "'Coin medio awp' field is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify the value displayed matches the expected average coin value from the backend data source.",
          "Expected Result": "Displayed value matches the backend average for 'Coin medio awp'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Backend data source is populated with test data.",
      "Execution Mode": "Manual",
      "Functionality": "Display and calculation of 'Coin medio awp'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with known average coin value.",
      "Expected Result": "'Coin medio awp' is correctly calculated and displayed as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct display and allowed values for 'TIPO ESA awp'",
      "ID": "TC-126",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'TIPO ESA awp' data field.",
          "Expected Result": "'TIPO ESA awp' field is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the displayed value is among the allowed types as per the requirements documentation.",
          "Expected Result": "Displayed value for 'TIPO ESA awp' is valid and matches allowed types."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Allowed types for 'TIPO ESA awp' are defined in requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Display and validation of 'TIPO ESA awp'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with known 'TIPO ESA awp' values.",
      "Expected Result": "'TIPO ESA awp' is displayed and matches one of the allowed types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify error handling when backend data is missing for any AWP field",
      "ID": "TC-127",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate missing data for one or more AWP fields in the backend data source.",
          "Expected Result": "Backend data for selected AWP field(s) is missing."
        },
        {
          "Step": 2,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 3,
          "Step Description": "Locate the affected AWP data field(s) on the dashboard.",
          "Expected Result": "Field(s) are visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the dashboard displays an appropriate error message or placeholder (e.g., 'N/A') for the missing data field(s).",
          "Expected Result": "Dashboard displays 'N/A' or a clear error message for missing data fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Backend data for at least one AWP field is intentionally missing.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing AWP data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with missing field(s).",
      "Expected Result": "Dashboard handles missing data gracefully and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify boundary values for numeric AWP fields (e.g., zero, maximum allowed)",
      "ID": "TC-128",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate backend data source with boundary values (e.g., 0, maximum allowed) for all numeric AWP fields.",
          "Expected Result": "Backend data source contains boundary values."
        },
        {
          "Step": 2,
          "Step Description": "Access the data flow dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each numeric AWP field displays the correct boundary value as per the backend data.",
          "Expected Result": "Each field displays the correct boundary value (e.g., 0, maximum allowed)."
        },
        {
          "Step": 4,
          "Step Description": "Check for any display or calculation errors (e.g., negative numbers, overflow).",
          "Expected Result": "No display or calculation errors are present."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User is authenticated and has access to the dashboard. Backend data is set to boundary values.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value handling for numeric AWP fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; backend data with boundary values for all numeric fields.",
      "Expected Result": "Dashboard correctly displays and handles boundary values for all numeric AWP fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify Data Flow Creation for CGS Valore",
      "ID": "TC-129",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data flow management.",
          "Expected Result": "System dashboard is displayed with data flow management options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for 'CGS valore'.",
          "Expected Result": "Data flow creation form for 'CGS valore' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter all required configuration parameters for the 'CGS valore' data flow (e.g., source, destination, schedule, transformation rules).",
          "Expected Result": "All required fields are filled with valid data."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the 'CGS valore' data flow."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the new data flow appears in the list of active data flows.",
          "Expected Result": "'CGS valore' data flow is listed as active and correctly configured."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access with permissions to create and manage data flows. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "CGS valore data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid configuration parameters for 'CGS valore' data flow (e.g., source system, destination, schedule).",
      "Expected Result": "A new data flow for 'CGS valore' is successfully created, configured, and listed as active in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Creation for Stato Attività",
      "ID": "TC-130",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data flow management.",
          "Expected Result": "System dashboard is displayed with data flow management options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for 'Stato attività'.",
          "Expected Result": "Data flow creation form for 'Stato attività' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter all required configuration parameters for the 'Stato attività' data flow (e.g., source, destination, schedule, transformation rules).",
          "Expected Result": "All required fields are filled with valid data."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the 'Stato attività' data flow."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the new data flow appears in the list of active data flows.",
          "Expected Result": "'Stato attività' data flow is listed as active and correctly configured."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access with permissions to create and manage data flows. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Stato attività data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid configuration parameters for 'Stato attività' data flow (e.g., source system, destination, schedule).",
      "Expected Result": "A new data flow for 'Stato attività' is successfully created, configured, and listed as active in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Negative Test: Attempt Data Flow Creation with Missing Required Fields (CGS Valore)",
      "ID": "TC-131",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data flow management.",
          "Expected Result": "System dashboard is displayed with data flow management options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for 'CGS valore'.",
          "Expected Result": "Data flow creation form for 'CGS valore' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Leave one or more required configuration fields empty (e.g., source or destination).",
          "Expected Result": "Required fields are left blank."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to submit the data flow creation request.",
          "Expected Result": "System displays validation error messages indicating missing required fields and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access with permissions to create and manage data flows. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "CGS valore data flow creation validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Incomplete configuration parameters for 'CGS valore' data flow (e.g., missing source or destination).",
      "Expected Result": "System prevents creation of the data flow and displays appropriate validation errors for missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Execution and Data Delivery for CGS Valore",
      "ID": "TC-132",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the 'CGS valore' data flow is created and active.",
          "Expected Result": "'CGS valore' data flow is present and active in the system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the execution of the 'CGS valore' data flow manually or wait for scheduled execution.",
          "Expected Result": "Data flow execution is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the execution status and logs for the data flow.",
          "Expected Result": "Execution status is updated and logs are generated."
        },
        {
          "Step": 4,
          "Step Description": "Verify that data is delivered to the configured destination as per the flow definition.",
          "Expected Result": "Data is present at the destination and matches expected format and content."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "'CGS valore' data flow is already created and active. Destination system is reachable.",
      "Execution Mode": "Manual",
      "Functionality": "CGS valore data flow execution and delivery",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data for 'CGS valore' flow; access to destination system for verification.",
      "Expected Result": "Data is successfully transferred from source to destination as per the 'CGS valore' data flow definition.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Execution and Data Delivery for Stato Attività",
      "ID": "TC-133",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the 'Stato attività' data flow is created and active.",
          "Expected Result": "'Stato attività' data flow is present and active in the system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the execution of the 'Stato attività' data flow manually or wait for scheduled execution.",
          "Expected Result": "Data flow execution is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the execution status and logs for the data flow.",
          "Expected Result": "Execution status is updated and logs are generated."
        },
        {
          "Step": 4,
          "Step Description": "Verify that data is delivered to the configured destination as per the flow definition.",
          "Expected Result": "Data is present at the destination and matches expected format and content."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "'Stato attività' data flow is already created and active. Destination system is reachable.",
      "Execution Mode": "Manual",
      "Functionality": "Stato attività data flow execution and delivery",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data for 'Stato attività' flow; access to destination system for verification.",
      "Expected Result": "Data is successfully transferred from source to destination as per the 'Stato attività' data flow definition.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Generation for 'ZR SHORT' in Corner",
      "ID": "TC-134",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the management control data module for 'Corner'.",
          "Expected Result": "The module loads successfully and displays available data flow options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow generation for 'ZR SHORT'.",
          "Expected Result": "The system processes the request and generates the 'ZR SHORT' data flow."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data flow for completeness and accuracy.",
          "Expected Result": "The 'ZR SHORT' data flow contains all expected data fields and values as per business logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has access to the management control data module with appropriate permissions. Test environment contains sample data for 'Corner'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for 'ZR SHORT' in Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample 'Corner' data including ZR SHORT values.",
      "Expected Result": "The system generates a complete and accurate 'ZR SHORT' data flow for 'Corner'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'ZR SHORT' data flow for 'Corner'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Generation for All 'Corner' Data Points",
      "ID": "TC-135",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the management control data module for 'Corner'.",
          "Expected Result": "The module loads successfully and displays available data flow options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow generation for all listed 'Corner' data points (e.g., Rac Sport, Rac CPS, Rac Ippica, etc.).",
          "Expected Result": "The system processes the request and generates data flows for all specified data points."
        },
        {
          "Step": 3,
          "Step Description": "Review each generated data flow for completeness and accuracy.",
          "Expected Result": "Each data flow contains all expected data fields and values as per business logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has access to the management control data module with appropriate permissions. Test environment contains sample data for all 'Corner' data points.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for all 'Corner' data points",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample 'Corner' data for all listed data points.",
      "Expected Result": "The system generates complete and accurate data flows for all specified 'Corner' data points.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers all 'Corner' data points as listed in the requirement.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Generation for 'ZR' in Gaming Hall",
      "ID": "TC-136",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the management control data module for 'Gaming Hall'.",
          "Expected Result": "The module loads successfully and displays available data flow options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow generation for 'ZR'.",
          "Expected Result": "The system processes the request and generates the 'ZR' data flow."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data flow for completeness and accuracy.",
          "Expected Result": "The 'ZR' data flow contains all expected data fields and values as per business logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has access to the management control data module with appropriate permissions. Test environment contains sample data for 'Gaming Hall'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for 'ZR' in Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample 'Gaming Hall' data including ZR values.",
      "Expected Result": "The system generates a complete and accurate 'ZR' data flow for 'Gaming Hall'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'ZR' data flow for 'Gaming Hall'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Generation for All 'Gaming Hall' Data Points",
      "ID": "TC-137",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the management control data module for 'Gaming Hall'.",
          "Expected Result": "The module loads successfully and displays available data flow options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow generation for all listed 'Gaming Hall' data points (e.g., Raccolta VLT, Raccolta AWP, EBITDA, etc.).",
          "Expected Result": "The system processes the request and generates data flows for all specified data points."
        },
        {
          "Step": 3,
          "Step Description": "Review each generated data flow for completeness and accuracy.",
          "Expected Result": "Each data flow contains all expected data fields and values as per business logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has access to the management control data module with appropriate permissions. Test environment contains sample data for all 'Gaming Hall' data points.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for all 'Gaming Hall' data points",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample 'Gaming Hall' data for all listed data points.",
      "Expected Result": "The system generates complete and accurate data flows for all specified 'Gaming Hall' data points.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers all 'Gaming Hall' data points as listed in the requirement.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Generation for 'Zona Rice' in Shops",
      "ID": "TC-138",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the management control data module for 'Shops'.",
          "Expected Result": "The module loads successfully and displays available data flow options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow generation for 'Zona Rice'.",
          "Expected Result": "The system processes the request and generates the 'Zona Rice' data flow."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data flow for completeness and accuracy.",
          "Expected Result": "The 'Zona Rice' data flow contains all expected data fields and values as per business logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has access to the management control data module with appropriate permissions. Test environment contains sample data for 'Shops'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for 'Zona Rice' in Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample 'Shops' data including Zona Rice values.",
      "Expected Result": "The system generates a complete and accurate 'Zona Rice' data flow for 'Shops'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'Zona Rice' data flow for 'Shops'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Generation for All 'Shops' Data Points",
      "ID": "TC-139",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the management control data module for 'Shops'.",
          "Expected Result": "The module loads successfully and displays available data flow options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data flow generation for all listed 'Shops' data points (e.g., TOT Raccolta, GL EBITDA ADJ, etc.).",
          "Expected Result": "The system processes the request and generates data flows for all specified data points."
        },
        {
          "Step": 3,
          "Step Description": "Review each generated data flow for completeness and accuracy.",
          "Expected Result": "Each data flow contains all expected data fields and values as per business logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has access to the management control data module with appropriate permissions. Test environment contains sample data for all 'Shops' data points.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow generation for all 'Shops' data points",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample 'Shops' data for all listed data points.",
      "Expected Result": "The system generates complete and accurate data flows for all specified 'Shops' data points.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers all 'Shops' data points as listed in the requirement.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Error Handling for Missing Data in Data Flow Generation",
      "ID": "TC-140",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the management control data module for any of the three categories (Corner, Gaming Hall, Shops).",
          "Expected Result": "The module loads successfully and displays available data flow options."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to generate a data flow for a data point with missing or incomplete source data.",
          "Expected Result": "The system detects the missing data and displays an appropriate error message or warning."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has access to the management control data module. At least one data point has missing or incomplete source data in the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling in data flow generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data with missing or incomplete values for at least one data point.",
      "Expected Result": "The system prevents data flow generation for missing data and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing data scenario.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Generation with Boundary Values",
      "ID": "TC-141",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the management control data module for any category (Corner, Gaming Hall, Shops).",
          "Expected Result": "The module loads successfully and displays available data flow options."
        },
        {
          "Step": 2,
          "Step Description": "Initiate data flow generation for a data point using minimum, maximum, and zero values in the source data.",
          "Expected Result": "The system processes the request and generates the data flow reflecting the boundary values accurately."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data flow for correct handling of boundary values.",
          "Expected Result": "The data flow correctly represents minimum, maximum, and zero values as per business rules."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has access to the management control data module. Test environment contains data points with minimum, maximum, and zero values.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value handling in data flow generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data with minimum, maximum, and zero values for selected data points.",
      "Expected Result": "The system generates data flows that accurately reflect boundary values for all data points.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers boundary value scenarios for data flow generation.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Creation for All Required Business Analysis Fields",
      "ID": "TC-142",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation module for Business Analysis data.",
          "Expected Result": "The data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for Business Analysis information.",
          "Expected Result": "A new data flow configuration form is presented."
        },
        {
          "Step": 3,
          "Step Description": "Populate the data flow with all required fields as per RU 4.1.12 (e.g., ID RICE + data, Zona RICE, DENO, RAG SOC, etc.), ensuring none are omitted.",
          "Expected Result": "All required fields are present in the data flow configuration."
        },
        {
          "Step": 4,
          "Step Description": "Save and activate the data flow.",
          "Expected Result": "The data flow is saved and activated without errors."
        },
        {
          "Step": 5,
          "Step Description": "Trigger the data flow with a sample data set containing all required fields.",
          "Expected Result": "The data flow processes the sample data successfully."
        },
        {
          "Step": 6,
          "Step Description": "Verify that all required fields are correctly transferred and available in the target system or output.",
          "Expected Result": "All required fields are present and correctly populated in the output."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to the data flow creation module. Required permissions are granted. MDM data is available for reference.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation and field mapping for Business Analysis",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data set with all required fields populated with valid values.",
      "Expected Result": "A data flow is created and activated that includes all required fields as specified in RU 4.1.12, and all fields are correctly transferred to the target system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Exclusion of Fields Already Acquired from MDM in Data Flow",
      "ID": "TC-143",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify which fields from the RU 4.1.12 list are already acquired from MDM.",
          "Expected Result": "A list of fields already present in MDM is available."
        },
        {
          "Step": 2,
          "Step Description": "Access the data flow creation module for Business Analysis data.",
          "Expected Result": "The data flow creation interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to include a field already acquired from MDM in the new data flow.",
          "Expected Result": "The system prevents duplication or notifies the user that the field is already managed by MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "MDM system is integrated and contains some of the required fields. User has access to both MDM and data flow modules.",
      "Execution Mode": "Manual",
      "Functionality": "Field exclusion logic for MDM-acquired data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "MDM with pre-populated fields matching some required fields.",
      "Expected Result": "Fields already acquired from MDM are not duplicated in the new data flow, and the system handles such cases gracefully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Type and Format for Each Business Analysis Field",
      "ID": "TC-144",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow configuration for Business Analysis data.",
          "Expected Result": "The data flow configuration interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "For each required field (e.g., ID RICE + data, Zona RICE, etc.), enter data in the correct format and save.",
          "Expected Result": "The system accepts correctly formatted data for each field."
        },
        {
          "Step": 3,
          "Step Description": "For each field, attempt to enter data in an incorrect format (e.g., letters in numeric fields, invalid date formats).",
          "Expected Result": "The system rejects incorrectly formatted data and displays appropriate error messages."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to data flow configuration. Field format specifications are available.",
      "Execution Mode": "Manual",
      "Functionality": "Field validation for data type and format",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test values for each field, both valid and invalid formats (e.g., valid/invalid dates, numbers, strings).",
      "Expected Result": "The system enforces correct data types and formats for all fields, rejecting invalid entries with clear error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Privacy Compliance for Phone Number Fields",
      "ID": "TC-145",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow configuration for Business Analysis data.",
          "Expected Result": "The data flow configuration interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a personal phone number (not associated with the PoS) in the 'Telefono', 'Telefono 2', 'cell_titol', or 'cell_titol_2' fields.",
          "Expected Result": "The system detects that the phone number is not a PoS number and displays a privacy warning or error."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid PoS phone number in the same fields.",
          "Expected Result": "The system accepts the PoS phone number without errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "System has logic or reference data to distinguish PoS numbers from personal numbers.",
      "Execution Mode": "Manual",
      "Functionality": "Privacy validation for phone number fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS and personal phone numbers for testing.",
      "Expected Result": "The system enforces privacy rules by accepting only PoS phone numbers and rejecting personal numbers in the specified fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Handling of Missing Mandatory Fields in Data Flow",
      "ID": "TC-146",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation module for Business Analysis data.",
          "Expected Result": "The data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to create or trigger the data flow with one or more mandatory fields missing (e.g., omit 'ID RICE + data').",
          "Expected Result": "The system prevents the data flow from being saved or triggered and displays an error indicating the missing mandatory fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to data flow creation. List of mandatory fields is defined.",
      "Execution Mode": "Manual",
      "Functionality": "Mandatory field validation in data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data sets with various mandatory fields omitted.",
      "Expected Result": "The system enforces the presence of all mandatory fields before allowing the data flow to be saved or executed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow with Boundary and Edge Case Values",
      "ID": "TC-147",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation module for Business Analysis data.",
          "Expected Result": "The data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Populate the data flow with boundary values for each field (e.g., minimum/maximum string lengths, earliest/latest dates, zero or maximum numbers).",
          "Expected Result": "The system accepts valid boundary values and processes them correctly."
        },
        {
          "Step": 3,
          "Step Description": "Populate the data flow with edge case values (e.g., empty strings for optional fields, special characters, extremely large numbers).",
          "Expected Result": "The system handles edge cases according to field specifications (accepts or rejects as appropriate)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to data flow creation. Field specifications for boundaries are available.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary and edge case handling in data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data sets with boundary and edge case values for each field.",
      "Expected Result": "The system correctly handles boundary and edge case values for all fields as per specifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto PGS (\"REV\") in Back Office Albania",
      "ID": "TC-148",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User is successfully logged into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for PGS contracts.",
          "Expected Result": "The data flow management interface for PGS contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto PGS.",
          "Expected Result": "The data flow creation form for PGS contracts is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter 'REV' as the contract type in the appropriate field.",
          "Expected Result": "'REV' is accepted as the contract type for PGS."
        },
        {
          "Step": 5,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "The system processes the request and confirms successful creation of the data flow for Tipo Contratto PGS with type 'REV'."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new data flow appears in the list of active data flows for PGS contracts.",
          "Expected Result": "The data flow for Tipo Contratto PGS with type 'REV' is listed and active."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid access to Back Office Albania. No existing data flow for Tipo Contratto PGS with type 'REV'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto PGS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, contract type value ('REV')",
      "Expected Result": "A data flow for Tipo Contratto PGS with type 'REV' is successfully created and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto PGI (\"REV\") in Back Office Albania",
      "ID": "TC-149",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User is successfully logged into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for PGI contracts.",
          "Expected Result": "The data flow management interface for PGI contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto PGI.",
          "Expected Result": "The data flow creation form for PGI contracts is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter 'REV' as the contract type in the appropriate field.",
          "Expected Result": "'REV' is accepted as the contract type for PGI."
        },
        {
          "Step": 5,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "The system processes the request and confirms successful creation of the data flow for Tipo Contratto PGI with type 'REV'."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new data flow appears in the list of active data flows for PGI contracts.",
          "Expected Result": "The data flow for Tipo Contratto PGI with type 'REV' is listed and active."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid access to Back Office Albania. No existing data flow for Tipo Contratto PGI with type 'REV'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto PGI",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, contract type value ('REV')",
      "Expected Result": "A data flow for Tipo Contratto PGI with type 'REV' is successfully created and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto AWP (\"REV\") in Back Office Albania",
      "ID": "TC-150",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User is successfully logged into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for AWP contracts.",
          "Expected Result": "The data flow management interface for AWP contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto AWP.",
          "Expected Result": "The data flow creation form for AWP contracts is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter 'REV' as the contract type in the appropriate field.",
          "Expected Result": "'REV' is accepted as the contract type for AWP."
        },
        {
          "Step": 5,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "The system processes the request and confirms successful creation of the data flow for Tipo Contratto AWP with type 'REV'."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new data flow appears in the list of active data flows for AWP contracts.",
          "Expected Result": "The data flow for Tipo Contratto AWP with type 'REV' is listed and active."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid access to Back Office Albania. No existing data flow for Tipo Contratto AWP with type 'REV'.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, contract type value ('REV')",
      "Expected Result": "A data flow for Tipo Contratto AWP with type 'REV' is successfully created and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify System Rejects Invalid Contract Type for Data Flow Creation",
      "ID": "TC-151",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User is successfully logged into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for any contract type (PGS, PGI, or AWP).",
          "Expected Result": "The data flow management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for the selected contract type.",
          "Expected Result": "The data flow creation form is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter an invalid contract type value (e.g., 'INVALID') in the contract type field.",
          "Expected Result": "The system displays a validation error indicating the contract type is invalid."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to submit the data flow creation request with the invalid contract type.",
          "Expected Result": "The system prevents submission and displays an appropriate error message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid access to Back Office Albania.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of contract type during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, invalid contract type value ('INVALID')",
      "Expected Result": "The system rejects invalid contract type values and prevents creation of data flows with such values.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify successful creation and update of betting credit (fido) for horse racing bets via ZENIT-MST flow",
      "ID": "TC-152",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as a user with permissions to manage horse racing bets.",
          "Expected Result": "User is successfully authenticated and presented with the betting dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a new horse racing bet that requires credit (fido) management.",
          "Expected Result": "System prompts for fido allocation and displays current available fido."
        },
        {
          "Step": 3,
          "Step Description": "Allocate a specific fido amount (e.g., €100) for the bet and confirm the operation.",
          "Expected Result": "ZENIT sends a request to MST to update the fido for the user."
        },
        {
          "Step": 4,
          "Step Description": "Verify that MST receives the request and updates the fido accordingly.",
          "Expected Result": "MST updates the fido and sends a confirmation response to ZENIT."
        },
        {
          "Step": 5,
          "Step Description": "Check that the updated fido is reflected in the ZENIT interface for the user.",
          "Expected Result": "ZENIT displays the updated fido amount, and the bet can proceed if within limits."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration",
      "Preconditions": "User account exists with sufficient permissions. ZENIT and MST systems are operational and integrated. Test user has available fido.",
      "Execution Mode": "Manual",
      "Functionality": "Fido management for horse racing bets via ZENIT-MST flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, initial fido balance, horse racing event data.",
      "Expected Result": "Fido for horse racing bets is correctly managed via the ZENIT-MST flow, mirroring the behavior of SIMP-managed products.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14"
    },
    {
      "Title": "Verify error handling when MST is unavailable during fido management for horse racing bets",
      "ID": "TC-153",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as a user with permissions to manage horse racing bets.",
          "Expected Result": "User is successfully authenticated and presented with the betting dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a new horse racing bet that requires fido allocation.",
          "Expected Result": "System prompts for fido allocation and displays current available fido."
        },
        {
          "Step": 3,
          "Step Description": "Simulate MST system unavailability (e.g., disconnect MST or block API endpoint).",
          "Expected Result": "MST is unreachable from ZENIT."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to allocate fido for the bet and confirm the operation.",
          "Expected Result": "ZENIT attempts to send the request to MST but fails due to unavailability."
        },
        {
          "Step": 5,
          "Step Description": "Observe the error message or system behavior in ZENIT.",
          "Expected Result": "ZENIT displays a clear error message indicating MST is unavailable and prevents the bet from proceeding."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration",
      "Preconditions": "User account exists with sufficient permissions. MST system is intentionally made unavailable. ZENIT is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for fido management when MST is unavailable",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, MST endpoint configuration.",
      "Expected Result": "ZENIT correctly handles MST unavailability, informs the user, and prevents inconsistent fido management.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14"
    },
    {
      "Title": "Verify that fido management for horse racing bets via ZENIT-MST flow matches SIMP product behavior",
      "ID": "TC-154",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to both ZENIT (for horse racing bets) and SIMP (for a comparable product) as a user with permissions.",
          "Expected Result": "User is authenticated in both systems and can access betting dashboards."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a bet in ZENIT for horse racing and a similar bet in SIMP for a comparable product, both requiring fido allocation.",
          "Expected Result": "Both systems prompt for fido allocation and display current available fido."
        },
        {
          "Step": 3,
          "Step Description": "Allocate the same fido amount (e.g., €50) in both systems and confirm the operations.",
          "Expected Result": "Both systems process the fido allocation requests."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fido management process (request, update, confirmation) in ZENIT-MST matches the process in SIMP (timing, messages, error handling).",
          "Expected Result": "Fido management flow, timing, and user feedback are consistent between ZENIT-MST and SIMP."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration, SIMP",
      "Preconditions": "User account exists with permissions in both systems. ZENIT, MST, and SIMP are operational and integrated.",
      "Execution Mode": "Manual",
      "Functionality": "Consistency of fido management between ZENIT-MST and SIMP products",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Test user credentials for both systems, initial fido balances, comparable betting events.",
      "Expected Result": "Fido management for horse racing bets via ZENIT-MST is functionally equivalent to that of SIMP-managed products.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the comparison of user-facing flows, not backend implementation details.",
      "_polarion": "RU 4.1.14"
    },
    {
      "Title": "Verify boundary conditions for minimum and maximum fido allocation via ZENIT-MST flow",
      "ID": "TC-155",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as a user with permissions to manage horse racing bets.",
          "Expected Result": "User is successfully authenticated and presented with the betting dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to allocate the minimum allowed fido (e.g., €1) for a horse racing bet and confirm the operation.",
          "Expected Result": "ZENIT sends the request to MST, which processes and confirms the minimum fido allocation."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to allocate the maximum allowed fido (e.g., €10,000) for a horse racing bet and confirm the operation.",
          "Expected Result": "ZENIT sends the request to MST, which processes and confirms the maximum fido allocation."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to allocate a fido below the minimum (e.g., €0) and above the maximum (e.g., €20,000) and confirm the operations.",
          "Expected Result": "ZENIT rejects the requests and displays appropriate error messages for out-of-bound values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration",
      "Preconditions": "User account exists with sufficient permissions. ZENIT and MST are operational. System configuration for min/max fido is known.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value handling for fido allocation via ZENIT-MST",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, min/max fido values, horse racing event data.",
      "Expected Result": "System correctly enforces minimum and maximum fido limits and provides clear feedback for invalid values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14"
    },
    {
      "Title": "Verify retrieval of Borderò medio rolling 12 mesi",
      "ID": "TC-156",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow interface for valorizzatore data retrieval.",
          "Expected Result": "The interface loads successfully and is ready for input."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò medio rolling 12 mesi' data for a valid valorizzatore entity.",
          "Expected Result": "The system processes the request and returns the average Borderò value calculated over the last 12 months."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with at least 12 months of Borderò data available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò medio rolling 12 mesi",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID with 12+ months of data",
      "Expected Result": "The system returns the correct average Borderò value for the last 12 months for the specified valorizzatore.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Borderò medio anno",
      "ID": "TC-157",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò medio anno' data for a valid valorizzatore entity for the current year.",
          "Expected Result": "The system returns the average Borderò value for the current calendar year."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with Borderò data for the current year.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò medio anno",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID with current year data",
      "Expected Result": "The system returns the correct average Borderò value for the current year for the specified valorizzatore.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Borderò settimanale",
      "ID": "TC-158",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò settimanale' data for a valid valorizzatore entity for a specific week (e.g., week 15 of 2024).",
          "Expected Result": "The system returns the Borderò value for the specified week."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with weekly Borderò data available.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID, week number (e.g., 15), year (e.g., 2024)",
      "Expected Result": "The system returns the correct Borderò value for the specified week for the valorizzatore.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Numero Borderò settimanale",
      "ID": "TC-159",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Numero Borderò settimanale' for a valid valorizzatore entity for a specific week (e.g., week 15 of 2024).",
          "Expected Result": "The system returns the number of Borderò entries for the specified week."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with weekly Borderò data available.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Numero Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID, week number (e.g., 15), year (e.g., 2024)",
      "Expected Result": "The system returns the correct number of Borderò entries for the specified week for the valorizzatore.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Periodo Contabile del Borderò settimanale",
      "ID": "TC-160",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Periodo Contabile del Borderò settimanale' for a valid valorizzatore entity for a specific week (e.g., week 15 of 2024).",
          "Expected Result": "The system returns the accounting period associated with the specified week's Borderò."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with weekly Borderò data available.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Periodo Contabile del Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID, week number (e.g., 15), year (e.g., 2024)",
      "Expected Result": "The system returns the correct accounting period for the specified week's Borderò for the valorizzatore.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify error handling when requesting data for valorizzatore with insufficient history",
      "ID": "TC-161",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request 'Borderò medio rolling 12 mesi' for a valorizzatore entity with less than 12 months of data.",
          "Expected Result": "The system returns an error message indicating insufficient data to calculate the rolling 12-month average."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with less than 12 months of Borderò data.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for insufficient data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID with <12 months of data",
      "Expected Result": "The system displays an appropriate error message for insufficient data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify error handling for invalid valorizzatore ID",
      "ID": "TC-162",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request any Borderò data using an invalid or non-existent valorizzatore ID.",
          "Expected Result": "The system returns an error message indicating that the valorizzatore ID is invalid or not found."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "No valorizzatore exists with the provided ID.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for invalid valorizzatore ID",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid valorizzatore ID",
      "Expected Result": "The system displays an appropriate error message for invalid valorizzatore ID.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify Data Flow Creation for Anagraphic Data Retrieval from Network Distribution",
      "ID": "TC-163",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data flow management.",
          "Expected Result": "Backend system dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for anagraphic data retrieval.",
          "Expected Result": "Data flow creation interface is presented."
        },
        {
          "Step": 3,
          "Step Description": "Configure the data flow to source anagraphic data from the Network Distribution dataset as specified in RU 4.1.5.",
          "Expected Result": "Data flow is configured with Network Distribution as a source."
        },
        {
          "Step": 4,
          "Step Description": "Save and activate the data flow configuration.",
          "Expected Result": "Data flow is saved and activated without errors."
        },
        {
          "Step": 5,
          "Step Description": "Trigger the data flow execution manually or wait for scheduled execution.",
          "Expected Result": "Data flow executes successfully."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the retrieved anagraphic data matches the expected fields and values from the Network Distribution dataset.",
          "Expected Result": "All required anagraphic data fields are correctly retrieved and populated from Network Distribution."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Anagraphic Data Flow",
      "Preconditions": "Backend system is accessible. Network Distribution dataset is available and populated. User has permissions to create and execute data flows.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation and data retrieval from Network Distribution",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Network Distribution dataset with valid anagraphic data entries.",
      "Expected Result": "The system successfully creates and executes a data flow that retrieves all required anagraphic data from the Network Distribution source as per RU 4.1.5.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the retrieval from Network Distribution as per RU 4.1.5.",
      "_polarion": "RU 4.1.16, RU 4.1.5"
    },
    {
      "Title": "Verify Data Flow Creation for Anagraphic Data Retrieval from Business Analysis",
      "ID": "TC-164",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data flow management.",
          "Expected Result": "Backend system dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for anagraphic data retrieval.",
          "Expected Result": "Data flow creation interface is presented."
        },
        {
          "Step": 3,
          "Step Description": "Configure the data flow to source anagraphic data from the Business Analysis dataset as specified in RU 4.1.12.",
          "Expected Result": "Data flow is configured with Business Analysis as a source."
        },
        {
          "Step": 4,
          "Step Description": "Save and activate the data flow configuration.",
          "Expected Result": "Data flow is saved and activated without errors."
        },
        {
          "Step": 5,
          "Step Description": "Trigger the data flow execution manually or wait for scheduled execution.",
          "Expected Result": "Data flow executes successfully."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the retrieved anagraphic data matches the expected fields and values from the Business Analysis dataset.",
          "Expected Result": "All required anagraphic data fields are correctly retrieved and populated from Business Analysis."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Anagraphic Data Flow",
      "Preconditions": "Backend system is accessible. Business Analysis dataset is available and populated. User has permissions to create and execute data flows.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation and data retrieval from Business Analysis",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Business Analysis dataset with valid anagraphic data entries.",
      "Expected Result": "The system successfully creates and executes a data flow that retrieves all required anagraphic data from the Business Analysis source as per RU 4.1.12.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the retrieval from Business Analysis as per RU 4.1.12.",
      "_polarion": "RU 4.1.16, RU 4.1.12"
    },
    {
      "Title": "Verify Error Handling When Source Dataset is Unavailable During Data Flow Execution",
      "ID": "TC-165",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data flow management.",
          "Expected Result": "Backend system dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for anagraphic data retrieval from Network Distribution or Business Analysis.",
          "Expected Result": "Data flow creation interface is presented."
        },
        {
          "Step": 3,
          "Step Description": "Configure the data flow to source anagraphic data from a dataset that is currently unavailable (simulate by disconnecting or renaming the source).",
          "Expected Result": "Data flow is configured with an unavailable source."
        },
        {
          "Step": 4,
          "Step Description": "Save and activate the data flow configuration.",
          "Expected Result": "Data flow is saved and activated without errors."
        },
        {
          "Step": 5,
          "Step Description": "Trigger the data flow execution manually.",
          "Expected Result": "Data flow execution fails gracefully."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the system logs an appropriate error message and does not retrieve any data.",
          "Expected Result": "System displays/logs a clear error message indicating the source is unavailable and no data is retrieved."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Anagraphic Data Flow",
      "Preconditions": "Backend system is accessible. User has permissions to create and execute data flows. Source dataset is intentionally made unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling in data flow execution",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated unavailable Network Distribution or Business Analysis dataset.",
      "Expected Result": "The system gracefully handles the unavailability of the source dataset, logs an appropriate error, and does not retrieve any data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for unavailable data source.",
      "_polarion": "RU 4.1.16"
    },
    {
      "Title": "Verify Data Consistency Between Source and Retrieved Anagraphic Data",
      "ID": "TC-166",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for data flow management.",
          "Expected Result": "Backend system dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that the Network Distribution and Business Analysis datasets contain known, unique anagraphic data entries.",
          "Expected Result": "Datasets are populated with test data."
        },
        {
          "Step": 3,
          "Step Description": "Execute the data flow configured to retrieve anagraphic data from both sources.",
          "Expected Result": "Data flow executes successfully."
        },
        {
          "Step": 4,
          "Step Description": "Retrieve the output of the data flow and compare the anagraphic data fields with the original source datasets.",
          "Expected Result": "Retrieved data matches the source data exactly for all fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Anagraphic Data Flow",
      "Preconditions": "Backend system is accessible. Both datasets are populated with known test data. User has permissions to execute data flows.",
      "Execution Mode": "Manual",
      "Functionality": "Data consistency and integrity verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known, unique anagraphic data entries in both Network Distribution and Business Analysis datasets.",
      "Expected Result": "The retrieved anagraphic data is consistent and matches exactly with the source datasets for all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data consistency between source and retrieved data.",
      "_polarion": "RU 4.1.16, RU 4.1.5, RU 4.1.12"
    },
    {
      "Title": "Verify retrieval of terminal type for each PoS",
      "ID": "TC-167",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow endpoint or interface designed to provide terminal information for PoS.",
          "Expected Result": "System responds with data for all PoS including terminal information."
        },
        {
          "Step": 2,
          "Step Description": "For each PoS in the response, identify the field representing the terminal type.",
          "Expected Result": "Each PoS entry contains a clearly defined 'terminal type' field populated with a valid value (e.g., 'POS Standard', 'POS Mobile', etc.)."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Management",
      "Preconditions": "System contains at least one PoS with assigned terminal types. Data flow endpoint is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal type retrieval per PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least two PoS records with different terminal types (e.g., POS1: 'Standard', POS2: 'Mobile').",
      "Expected Result": "For every PoS, the terminal type is present and correctly reflects the assigned type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify retrieval of terminal count per type",
      "ID": "TC-168",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow endpoint or interface designed to provide terminal information for PoS.",
          "Expected Result": "System responds with data for all PoS including terminal information."
        },
        {
          "Step": 2,
          "Step Description": "Aggregate the returned data by terminal type and count the number of terminals for each type.",
          "Expected Result": "The count for each terminal type matches the actual number of terminals of that type in the system."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Management",
      "Preconditions": "System contains multiple PoS with various terminal types. Data flow endpoint is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal count per type retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least three PoS records: two with 'Standard' type, one with 'Mobile' type.",
      "Expected Result": "The system correctly reports the number of terminals for each terminal type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify system behavior when no terminals are present",
      "ID": "TC-169",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system database contains no PoS or terminal records.",
          "Expected Result": "System is in a state with zero PoS/terminals."
        },
        {
          "Step": 2,
          "Step Description": "Access the data flow endpoint or interface for terminal information retrieval.",
          "Expected Result": "System responds with an empty list or a clear indication that no terminal data is available."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Management",
      "Preconditions": "System database is cleared of all PoS and terminal records. Data flow endpoint is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal data retrieval with empty dataset",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No PoS or terminal data in the system.",
      "Expected Result": "System gracefully handles the absence of terminal data and returns an empty result or appropriate message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify error handling for invalid data flow request",
      "ID": "TC-170",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Send a malformed or unauthorized request to the data flow endpoint for terminal information.",
          "Expected Result": "System detects the invalid request."
        },
        {
          "Step": 2,
          "Step Description": "Observe the system's response to the invalid request.",
          "Expected Result": "System returns an appropriate error message (e.g., HTTP 400 Bad Request or 401 Unauthorized) without exposing sensitive information."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Management",
      "Preconditions": "Data flow endpoint is accessible. User or system sends an invalid or unauthorized request.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for terminal data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Malformed request (e.g., missing required parameters) or unauthorized credentials.",
      "Expected Result": "System returns a clear error message and does not process the request.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify Dashboard Loads Successfully for Authenticated User",
      "ID": "TC-171",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application and log in with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard page."
        },
        {
          "Step": 2,
          "Step Description": "Observe the dashboard page for loading and display of widgets or summary information.",
          "Expected Result": "Dashboard page loads completely without errors, displaying all expected widgets and summary data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User account exists and is active. User is not already logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., username: testuser, password: Test@123)",
      "Expected Result": "Authenticated user is able to access and view the dashboard with all widgets and summary data displayed correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Access Denied for Unauthenticated User",
      "ID": "TC-172",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application without logging in.",
          "Expected Result": "User is presented with the login page or an access denied message."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to directly access the dashboard URL.",
          "Expected Result": "System redirects the user to the login page or displays an access denied message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User is not authenticated.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Unauthenticated users cannot access the dashboard and are redirected to the login page or shown an access denied message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Widgets Display Correct Data",
      "ID": "TC-173",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a valid user.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Review each widget or summary section on the dashboard.",
          "Expected Result": "Each widget displays data relevant to the logged-in user, matching backend or database values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User account exists with associated data in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; backend data for comparison.",
      "Expected Result": "All dashboard widgets display accurate and up-to-date data for the logged-in user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Responsiveness on Different Screen Sizes",
      "ID": "TC-174",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a valid user.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Resize the browser window to various screen sizes (e.g., desktop, tablet, mobile).",
          "Expected Result": "Dashboard layout adjusts responsively to fit the screen size without loss of functionality or data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User account exists and is active.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials",
      "Expected Result": "Dashboard remains usable and visually consistent across different screen sizes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Error Handling When Dashboard Data Fails to Load",
      "ID": "TC-175",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a backend failure or disconnect the network before accessing the dashboard after login.",
          "Expected Result": "Dashboard attempts to load but fails to retrieve data."
        },
        {
          "Step": 2,
          "Step Description": "Observe the error message or fallback behavior displayed to the user.",
          "Expected Result": "User is shown a clear, user-friendly error message indicating data could not be loaded."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "User is authenticated. Network or backend service is unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; simulate backend failure or network disconnect.",
      "Expected Result": "User receives a clear error message if dashboard data cannot be loaded due to backend or network issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Successful Login with MultiFactor Authentication (MFA)",
      "ID": "TC-176",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password for a registered user.",
          "Expected Result": "System prompts for MultiFactor Authentication (MFA) code."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid MFA code received via the configured channel (e.g., SMS, email, authenticator app).",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard/homepage."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User account exists and is configured for MFA. User has access to the MFA channel (e.g., mobile device, email).",
      "Execution Mode": "Manual",
      "Functionality": "Login with MFA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials and valid MFA code.",
      "Expected Result": "User is logged in successfully with MFA and redirected to the main dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Unsuccessful Login with Invalid Credentials",
      "ID": "TC-177",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid username and/or password.",
          "Expected Result": "System displays an error message indicating invalid credentials. MFA prompt is not shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User account exists.",
      "Execution Mode": "Manual",
      "Functionality": "Login with invalid credentials",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid user credentials.",
      "Expected Result": "User is not authenticated and receives an error message. MFA is not triggered.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Unsuccessful Login with Invalid MFA Code",
      "ID": "TC-178",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password.",
          "Expected Result": "System prompts for MFA code."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid MFA code.",
          "Expected Result": "System displays an error message indicating invalid MFA code. User is not logged in."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User account exists and is configured for MFA.",
      "Execution Mode": "Manual",
      "Functionality": "Login with invalid MFA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials and invalid MFA code.",
      "Expected Result": "User is not authenticated and receives an error message for invalid MFA code.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Successful Logout from the System",
      "ID": "TC-179",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application successfully (with MFA if required).",
          "Expected Result": "User is authenticated and on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Logout' button or link.",
          "Expected Result": "User is logged out and redirected to the login page. Session is terminated."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged in to the system.",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials and MFA code.",
      "Expected Result": "User is logged out and redirected to the login page. Session is securely terminated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Consistent Information Display Across User Profiles",
      "ID": "TC-180",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login as User Profile A (e.g., standard user) with valid credentials and MFA.",
          "Expected Result": "User A is authenticated and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Note the information and search screens available to User A.",
          "Expected Result": "Information and search screens are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Logout from User A account.",
          "Expected Result": "User is logged out and redirected to login page."
        },
        {
          "Step": 4,
          "Step Description": "Login as User Profile B (e.g., admin or another profile) with valid credentials and MFA.",
          "Expected Result": "User B is authenticated and main dashboard is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Compare the information and search screens available to User B with those of User A.",
          "Expected Result": "Information and search screens are identical for both profiles."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Profile Management",
      "Preconditions": "At least two user profiles exist (e.g., standard user and admin), both configured for MFA.",
      "Execution Mode": "Manual",
      "Functionality": "Profile management and UI consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid credentials for User Profile A and User Profile B, both with MFA.",
      "Expected Result": "Information and search screens are consistent and identical across different user profiles.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify Full Access Profile: Consultation Rights",
      "ID": "TC-181",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT as a user with the FULL ACCESS profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to all sections and modules available in the PoS management area.",
          "Expected Result": "User can view all data and records in each section without restriction."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access restricted or sensitive data within the PoS management area.",
          "Expected Result": "User is able to view all data, including sensitive information, as per FULL ACCESS rights."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Management",
      "Preconditions": "User account with FULL ACCESS profile is provisioned via SailPoint and active. User is authorized as OPERATORE or CONSULTATORE.",
      "Execution Mode": "Manual",
      "Functionality": "Consultation (View All)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; populated PoS data.",
      "Expected Result": "User with FULL ACCESS profile can view all data and records in the PoS management area without restriction.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only consultation rights, not modifications or data extraction.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Data Extraction Capability",
      "ID": "TC-182",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT as a user with the FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction/export section in the PoS management area.",
          "Expected Result": "Data extraction options are visible and enabled."
        },
        {
          "Step": 3,
          "Step Description": "Initiate a full data extraction (e.g., export all PoS records to CSV or Excel).",
          "Expected Result": "System processes the request and generates the complete data file."
        },
        {
          "Step": 4,
          "Step Description": "Download and open the exported file.",
          "Expected Result": "Exported file contains all PoS data without omissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Management",
      "Preconditions": "User account with FULL ACCESS profile is provisioned via SailPoint and active. Sufficient PoS data exists for extraction.",
      "Execution Mode": "Manual",
      "Functionality": "Data Extraction (Export All)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; PoS data available for export.",
      "Expected Result": "User with FULL ACCESS profile can extract all PoS data without restriction and the exported file is complete.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data extraction, not modifications or mass uploads.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Mass Upload Capability",
      "ID": "TC-183",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT as a user with the FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the mass upload section in the PoS management area.",
          "Expected Result": "Mass upload functionality is visible and enabled."
        },
        {
          "Step": 3,
          "Step Description": "Prepare a valid mass upload file (e.g., CSV with multiple PoS records).",
          "Expected Result": "Mass upload file is ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Upload the prepared file and submit the mass upload operation.",
          "Expected Result": "System processes the upload and displays a summary of the operation."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all records from the file are correctly added or updated in the system.",
          "Expected Result": "All records are present and accurate in the PoS management area."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Management",
      "Preconditions": "User account with FULL ACCESS profile is provisioned via SailPoint and active. Mass upload feature is enabled. Valid upload file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Mass Uploads",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; valid mass upload file (CSV/Excel).",
      "Expected Result": "User with FULL ACCESS profile can perform mass uploads and all records are processed correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only mass upload, not modifications or data extraction.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Modification Rights (Phase 1)",
      "ID": "TC-184",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT as a user with the FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management area and select a record eligible for modification (as per current phase capabilities).",
          "Expected Result": "Modification options are visible and enabled for the selected record."
        },
        {
          "Step": 3,
          "Step Description": "Edit allowed fields (e.g., update PoS details) and save changes.",
          "Expected Result": "System accepts the changes and updates the record."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the changes are reflected in the PoS management area.",
          "Expected Result": "Modified data is correctly displayed and stored."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Management",
      "Preconditions": "User account with FULL ACCESS profile is provisioned via SailPoint and active. Modifications are limited to those allowed in Phase 1.",
      "Execution Mode": "Manual",
      "Functionality": "Modification (Edit Allowed Fields)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; existing PoS records eligible for modification.",
      "Expected Result": "User with FULL ACCESS profile can modify all fields allowed in the current phase and changes are saved correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only modifications allowed in Phase 1, not dispositive modifications (Phase 2).",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Access Authorization via SailPoint for Full Access Profile",
      "ID": "TC-185",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to log in to ZENIT as a user with the FULL ACCESS profile, ensuring the user is provisioned via SailPoint.",
          "Expected Result": "User is authenticated and granted FULL ACCESS rights."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to log in as a user with the FULL ACCESS profile, but without SailPoint provisioning.",
          "Expected Result": "Access is denied and an appropriate error message is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to modify access rights for the FULL ACCESS profile directly within ZENIT as an end user.",
          "Expected Result": "System does not allow direct modification of access rights within ZENIT; access management is only possible via SailPoint."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Access Management",
      "Preconditions": "User accounts with and without SailPoint provisioning are available. ZENIT is integrated with SailPoint for access management.",
      "Execution Mode": "Manual",
      "Functionality": "Access Authorization (SOX Compliance)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with and without SailPoint provisioning; FULL ACCESS profile assigned.",
      "Expected Result": "Only users provisioned via SailPoint can access FULL ACCESS profile; direct access management in ZENIT is not permitted.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access authorization, not functional rights within the profile.",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Consultatore Profile Data Viewing Limitations",
      "ID": "TC-186",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully logged in and identified as 'Consultatore'."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation section (e.g., dashboard, reports, or data tables).",
          "Expected Result": "Consultatore-specific data consultation interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to view data fields or records that are restricted for the 'Consultatore' profile.",
          "Expected Result": "Restricted data fields or records are not visible or are masked/greyed out."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to view data fields or records that are permitted for the 'Consultatore' profile.",
          "Expected Result": "Permitted data fields or records are visible and accessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management / Data Consultation",
      "Preconditions": "User account with 'Consultatore' profile exists. Application is accessible. Test data includes both restricted and permitted data fields.",
      "Execution Mode": "Manual",
      "Functionality": "Data consultation with profile-based restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; test data with both restricted and permitted fields.",
      "Expected Result": "The 'Consultatore' user can only view permitted data fields/records; restricted data is not accessible or visible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data viewing limitations for 'Consultatore' profile.",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Verify Consultatore Profile Data Extraction Limitations",
      "ID": "TC-187",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully logged in and identified as 'Consultatore'."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction/export section (e.g., export to CSV, Excel, or PDF).",
          "Expected Result": "Consultatore-specific data extraction interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to extract/export data fields or records that are restricted for the 'Consultatore' profile.",
          "Expected Result": "Extraction/export of restricted data fields or records is not allowed; user receives an error or the option is disabled."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to extract/export data fields or records that are permitted for the 'Consultatore' profile.",
          "Expected Result": "Extraction/export of permitted data fields or records is successful."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management / Data Extraction",
      "Preconditions": "User account with 'Consultatore' profile exists. Application is accessible. Test data includes both restricted and permitted data fields for extraction.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction with profile-based restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; test data with both restricted and permitted fields for extraction.",
      "Expected Result": "The 'Consultatore' user can only extract permitted data fields/records; extraction of restricted data is not possible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data extraction limitations for 'Consultatore' profile.",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Negative Test: Attempt to Bypass Data Viewing Restrictions as Consultatore",
      "ID": "TC-188",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully logged in and identified as 'Consultatore'."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access restricted data fields/records via direct URL manipulation or API calls.",
          "Expected Result": "Access to restricted data is denied; user receives an appropriate error message or is redirected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management / Data Consultation",
      "Preconditions": "User account with 'Consultatore' profile exists. Application is accessible. API or direct URL access is possible for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Enforcement of data viewing restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; knowledge of restricted data endpoints or URLs.",
      "Expected Result": "The 'Consultatore' user cannot bypass data viewing restrictions through unauthorized methods.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for data viewing restrictions.",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Negative Test: Attempt to Bypass Data Extraction Restrictions as Consultatore",
      "ID": "TC-189",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully logged in and identified as 'Consultatore'."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to extract restricted data fields/records via direct API calls or manipulation of export parameters.",
          "Expected Result": "Extraction of restricted data is denied; user receives an appropriate error message or the export fails."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management / Data Extraction",
      "Preconditions": "User account with 'Consultatore' profile exists. Application is accessible. API or export parameter manipulation is possible for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Enforcement of data extraction restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; knowledge of restricted data extraction endpoints or parameters.",
      "Expected Result": "The 'Consultatore' user cannot bypass data extraction restrictions through unauthorized methods.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for data extraction restrictions.",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Operator Profile - Data Consultation with View Limitations",
      "ID": "TC-190",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as an Operator user.",
          "Expected Result": "Operator dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation section (e.g., customer records, transaction history).",
          "Expected Result": "Consultation interface is displayed with accessible data."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to view data fields that are subject to Operator profile limitations (e.g., sensitive customer information, restricted financial data).",
          "Expected Result": "Restricted data fields are either hidden, masked, or display an appropriate message indicating limited access."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to view data fields that are permitted for Operator profile.",
          "Expected Result": "Permitted data fields are displayed correctly and fully accessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "Operator user account exists with correct profile and permissions. System contains both restricted and permitted data fields.",
      "Execution Mode": "Manual",
      "Functionality": "Data consultation with access limitations for Operator profile.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Operator credentials; test data with both restricted and permitted fields.",
      "Expected Result": "Operator can only view permitted data fields; restricted fields are not accessible or are properly masked.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only consultation/view limitations for Operator profile.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Operator Profile - Data Extraction with Extraction Limitations",
      "ID": "TC-191",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as an Operator user.",
          "Expected Result": "Operator dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction/export section (e.g., export customer list, transaction reports).",
          "Expected Result": "Data extraction interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to extract data that includes fields subject to Operator profile extraction limitations.",
          "Expected Result": "Extraction is either blocked, or restricted fields are omitted/masked in the exported file, or an appropriate message is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to extract data that is permitted for Operator profile.",
          "Expected Result": "Extraction is successful and only permitted data fields are included in the exported file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "Operator user account exists with correct profile and permissions. System contains both restricted and permitted data fields for extraction.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction with access limitations for Operator profile.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Operator credentials; test data with both restricted and permitted fields for extraction.",
      "Expected Result": "Operator can only extract permitted data fields; restricted fields are not included in the exported data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only extraction/export limitations for Operator profile.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Operator Profile - Attempt to Perform Partial Modifications (Phase 1)",
      "ID": "TC-192",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as an Operator user.",
          "Expected Result": "Operator dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section for managing credit lines (fidi) or PoS block/unblock operations.",
          "Expected Result": "Management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform a partial modification action (e.g., edit credit line, block/unblock PoS) as described in the requirements.",
          "Expected Result": "System displays a message indicating that partial modifications are not available in Phase 1 and the action is not permitted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "Operator user account exists with correct profile and permissions. System is in Phase 1 (partial modifications not yet implemented).",
      "Execution Mode": "Manual",
      "Functionality": "Restriction of partial modification actions for Operator profile in Phase 1.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Operator credentials; test data for credit line and PoS management.",
      "Expected Result": "Operator is prevented from performing partial modifications; system provides clear feedback that the feature is not available in Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the restriction of partial modifications in Phase 1.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Verify Search Fields Display After Login",
      "ID": "TC-193",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the search screen."
        },
        {
          "Step": 2,
          "Step Description": "Observe the search screen for available input fields.",
          "Expected Result": "The following fields are visible: ID RICE, ZONA RICE, P.IVA, COD FISC Titolare, RAGIONE SOCIALE, DENOMINAZIONE (Insegna), CLUSTER_PV, CANALE I, CANALE II, COMUNE."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Ricerca PoS",
      "Preconditions": "User has valid credentials and access to ZENIT; system is online.",
      "Execution Mode": "Manual",
      "Functionality": "Display of search fields after login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials",
      "Expected Result": "All required search fields are displayed after login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Single Field Search Functionality",
      "ID": "TC-194",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid value in the 'ID RICE' field only (e.g., '12345'). Leave all other fields blank.",
          "Expected Result": "'ID RICE' field is populated; others are empty."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System performs the search and displays results matching the entered 'ID RICE'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Ricerca PoS",
      "Preconditions": "User is logged in; search screen is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Single field search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ID RICE: 12345",
      "Expected Result": "Results are displayed for the entered 'ID RICE' only.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Multiple Fields Search Functionality",
      "ID": "TC-195",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid values in 'ZONA RICE' (e.g., 'North') and 'COMUNE' (e.g., 'Milan'). Leave other fields blank.",
          "Expected Result": "'ZONA RICE' and 'COMUNE' fields are populated; others are empty."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System performs the search and displays results matching both 'ZONA RICE' and 'COMUNE'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Ricerca PoS",
      "Preconditions": "User is logged in; search screen is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Multiple fields search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZONA RICE: North; COMUNE: Milan",
      "Expected Result": "Results are displayed matching all entered criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Search for Linked PoS (pos collegati)",
      "ID": "TC-196",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid 'ID RICE' for a PoS known to have linked PoS (e.g., '67890').",
          "Expected Result": "'ID RICE' field is populated."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'pos collegati' search type (if available as an option).",
          "Expected Result": "'pos collegati' search type is selected."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System displays results for the selected PoS and all its linked PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Ricerca PoS",
      "Preconditions": "User is logged in; at least one PoS with linked PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ID RICE: 67890 (with linked PoS)",
      "Expected Result": "Results include the selected PoS and all its linked PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Search with No Input (Negative Test)",
      "ID": "TC-197",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Leave all search fields blank.",
          "Expected Result": "No fields are populated."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System displays an error message indicating that at least one field must be filled to perform a search."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Ricerca PoS",
      "Preconditions": "User is logged in; search screen is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Input validation for search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No input",
      "Expected Result": "System prevents search and displays appropriate validation message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Access to Report Section from Search Screen",
      "ID": "TC-198",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT and access the search screen.",
          "Expected Result": "Search screen with all fields is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate and click the 'Report' section link or button.",
          "Expected Result": "User is redirected to the 'Report' section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Report Section",
      "Preconditions": "User is logged in; search screen is accessible; 'Report' section is implemented (Phase 2).",
      "Execution Mode": "Manual",
      "Functionality": "Navigation to Report section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "User can access the 'Report' section from the search screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Dependent on Phase 2 implementation.",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Verify all required fields are displayed in single search result screen",
      "ID": "TC-199",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search using valid search criteria.",
          "Expected Result": "System navigates to the single search result screen."
        },
        {
          "Step": 2,
          "Step Description": "Observe the fields displayed on the result screen.",
          "Expected Result": "All required fields (id rice, zona rice, denominazione, località, canale I, canale II, n° awp totale, n° vlt totale, coin in medio, bc medio rolling 12 mesi, bc medio anno in corso, garanzie presenti, am, ka, scoring cerved, n° insoluti rolling 12 mesi, n° inso anno in corso, red list, credito, blocco sollecito, fidi impostati per il PoS, consumo dei fidi, cassa disponibile pdv.) are present and visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated and has access to the single search functionality.",
      "Execution Mode": "Manual",
      "Functionality": "Display of all required fields in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid search input that returns a single result.",
      "Expected Result": "All specified fields are displayed on the single search result screen as per the requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify correct data population for each field in single search result",
      "ID": "TC-200",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search using a known record with predefined data for all fields.",
          "Expected Result": "System navigates to the single search result screen."
        },
        {
          "Step": 2,
          "Step Description": "Verify the value displayed for each field matches the expected data for the record.",
          "Expected Result": "Each field (id rice, zona rice, denominazione, etc.) displays the correct value as per the test data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. Test data with known values for all fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data population in single search result fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known record with all fields populated.",
      "Expected Result": "All fields display the correct data corresponding to the searched record.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify extraction (export) functionality for single search result data",
      "ID": "TC-201",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search to display the result screen with all required fields.",
          "Expected Result": "Single search result screen is displayed with all fields."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Export' or 'Extract' button to export the displayed data.",
          "Expected Result": "System prompts to download or save the exported data file."
        },
        {
          "Step": 3,
          "Step Description": "Open the exported file and verify its contents.",
          "Expected Result": "Exported file contains all the fields and values as displayed on the result screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. At least one record is available for search.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction/export from single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Any record that returns a single result.",
      "Expected Result": "User can successfully export all displayed data, and the exported file matches the on-screen data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify handling of missing or null data in single search result fields",
      "ID": "TC-202",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search for a record where some fields have missing or null values.",
          "Expected Result": "Single search result screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe how the system displays fields with missing or null data.",
          "Expected Result": "Fields with missing or null data are displayed as empty, with a placeholder (e.g., '-') or as per design specification, without causing errors or layout issues."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. Test data includes records with missing/null values for some fields.",
      "Execution Mode": "Manual",
      "Functionality": "Display of missing/null data in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Record with some fields intentionally left null or empty.",
      "Expected Result": "System gracefully handles and displays missing/null data without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify field formatting and data types in single search result",
      "ID": "TC-203",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search for a record with various data types (numeric, text, boolean, etc.).",
          "Expected Result": "Single search result screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that each field is formatted according to its data type (e.g., numbers with correct decimal places, boolean as 'si/no', etc.).",
          "Expected Result": "All fields are displayed with correct formatting and data types as per specification."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. Test data includes records with various data types and formats.",
      "Execution Mode": "Manual",
      "Functionality": "Field formatting and data type validation in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Record with diverse data types and formats for all fields.",
      "Expected Result": "All fields are displayed with correct formatting and data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify access control for single search result functionality",
      "ID": "TC-204",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the single search result functionality as an unauthorized user.",
          "Expected Result": "Access is denied, and an appropriate error or access denied message is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the functionality as an authorized user.",
          "Expected Result": "Access is granted, and the single search result screen is accessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "Both authorized and unauthorized user accounts are available.",
      "Execution Mode": "Manual",
      "Functionality": "Access control for single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized and unauthorized user credentials.",
      "Expected Result": "Only authorized users can access the single search result functionality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify presence and correct labeling of 'Export to Excel' button in Phase 1",
      "ID": "TC-205",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the report management section of the application as a user with appropriate permissions.",
          "Expected Result": "The report management interface loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Observe the available action buttons on the interface.",
          "Expected Result": "A button labeled 'Export to Excel' (or equivalent in the application's language) is visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Report Management UI",
      "Preconditions": "User is authenticated and has access to the report management section. System is in Phase 1 deployment.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel button presence and labeling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials with access to report management.",
      "Expected Result": "The 'Export to Excel' button is present and correctly labeled in the report management section during Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (Excel export button presence, not PoS management).",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify immediate Excel export functionality from report management section in Phase 1",
      "ID": "TC-206",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the report management section as a user with appropriate permissions.",
          "Expected Result": "The report management interface loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "The system initiates the download of an Excel file containing the current report data."
        },
        {
          "Step": 3,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The file opens successfully and contains the expected report data in a readable Excel format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Report Management UI",
      "Preconditions": "User is authenticated and has access to the report management section. System is in Phase 1 deployment. At least one report is available for export.",
      "Execution Mode": "Manual",
      "Functionality": "Immediate Excel export of report data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one report available for export.",
      "Expected Result": "Clicking the 'Export to Excel' button immediately downloads an Excel file with the correct report data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (Excel export functionality, not PoS management).",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify absence of PoS management button in Phase 1",
      "ID": "TC-207",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the report management section as a user with appropriate permissions.",
          "Expected Result": "The report management interface loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Observe the available action buttons on the interface.",
          "Expected Result": "No button or link for PoS management is present in the interface during Phase 1."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Report Management UI",
      "Preconditions": "User is authenticated and has access to the report management section. System is in Phase 1 deployment.",
      "Execution Mode": "Manual",
      "Functionality": "PoS management button absence in Phase 1",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials with access to report management.",
      "Expected Result": "No PoS management button is present in the report management section during Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (absence of PoS management button).",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify error handling when Excel export fails (e.g., network interruption)",
      "ID": "TC-208",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the report management section as a user with appropriate permissions.",
          "Expected Result": "The report management interface loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a network interruption or server error before clicking 'Export to Excel'.",
          "Expected Result": "Network or server error is active."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "The system displays an appropriate error message indicating the export failed and does not download a corrupted or empty file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Report Management UI",
      "Preconditions": "User is authenticated and has access to the report management section. System is in Phase 1 deployment. Network interruption or server error is simulated.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for Excel export failures",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; simulated network/server error.",
      "Expected Result": "If the Excel export fails, the user is shown a clear error message and no invalid file is downloaded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for Excel export in Phase 1.",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify Multiple PoS Search Results Display and Count",
      "ID": "TC-209",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application and navigate to the search screen.",
          "Expected Result": "The search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter search criteria that will return multiple PoS (excluding geographic search).",
          "Expected Result": "Search criteria are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the search.",
          "Expected Result": "The system processes the search request."
        },
        {
          "Step": 4,
          "Step Description": "Observe the results displayed on the screen.",
          "Expected Result": "A table is displayed listing only the PoS matching the search criteria, including closed PoS. The total number of PoS found is clearly indicated on the screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has access to the PoS search functionality. At least two PoS exist in the system matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Multiple PoS search and result display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with search permissions; at least two PoS records matching the test criteria.",
      "Expected Result": "The system displays only the PoS matching the search, shows the total number of PoS found, and includes closed PoS in the results. No data aggregation is performed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Tabular Display of PoS with Minimum Data Set",
      "ID": "TC-210",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS as per TC-001.",
          "Expected Result": "Multiple PoS are listed in a table."
        },
        {
          "Step": 2,
          "Step Description": "Review the columns and data displayed for each PoS in the table.",
          "Expected Result": "Each PoS is displayed with at least the minimum required data set (e.g., PoS ID, Name, Status, etc.)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "Multiple PoS exist matching the search criteria. User is logged in and on the search results screen.",
      "Execution Mode": "Manual",
      "Functionality": "Tabular display of PoS search results",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least two PoS records with all minimum data fields populated.",
      "Expected Result": "All PoS matching the search are displayed in a table with the minimum required data fields visible for each.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Excel Export Functionality for Multiple PoS Results",
      "ID": "TC-211",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS as per TC-001.",
          "Expected Result": "Multiple PoS are listed in a table."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Export to Excel' button or link.",
          "Expected Result": "The system generates and downloads an Excel file containing the displayed PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Open the downloaded Excel file and verify its contents.",
          "Expected Result": "The Excel file contains all PoS listed in the table with the minimum data set for each."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "Multiple PoS exist matching the search criteria. User is logged in and on the search results screen.",
      "Execution Mode": "Manual",
      "Functionality": "Excel export of PoS search results",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least two PoS records with all minimum data fields populated.",
      "Expected Result": "The Excel file accurately reflects the PoS data displayed in the table, with no missing or extra records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Selection and Navigation to Single PoS Detail (Riscontro Singolo)",
      "ID": "TC-212",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS as per TC-001.",
          "Expected Result": "Multiple PoS are listed in a table."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific PoS from the table (e.g., by clicking on its row or a 'Select' button).",
          "Expected Result": "The system navigates to the detail page for the selected PoS (Riscontro Singolo)."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the detail page displays the correct PoS information.",
          "Expected Result": "The detail page shows all relevant information for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "Multiple PoS exist matching the search criteria. User is logged in and on the search results screen.",
      "Execution Mode": "Manual",
      "Functionality": "Selection and navigation to single PoS detail",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least two PoS records with all minimum data fields populated.",
      "Expected Result": "User can select a PoS from the list and is navigated to the correct detail page for that PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Excel Export Functionality from Single PoS Detail (Riscontro Singolo)",
      "ID": "TC-213",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the detail page of a specific PoS as per TC-004.",
          "Expected Result": "The detail page for the selected PoS is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Export to Excel' button or link on the detail page.",
          "Expected Result": "The system generates and downloads an Excel file containing the detailed data for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Open the downloaded Excel file and verify its contents.",
          "Expected Result": "The Excel file contains the detailed data for the selected PoS as displayed on the detail page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is on the detail page of a PoS (Riscontro Singolo).",
      "Execution Mode": "Manual",
      "Functionality": "Excel export from single PoS detail",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS record with all detail data fields populated.",
      "Expected Result": "The Excel file accurately reflects the detailed data of the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Exclusion of Geographic Search and Inclusion of Closed PoS",
      "ID": "TC-214",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application and navigate to the search screen.",
          "Expected Result": "The search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to perform a search using geographic criteria (e.g., city, region).",
          "Expected Result": "The system does not allow or process geographic-based searches in this context."
        },
        {
          "Step": 3,
          "Step Description": "Perform a search using non-geographic criteria that includes closed PoS.",
          "Expected Result": "The search results include closed PoS matching the criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has access to the PoS search functionality. At least one closed PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Search criteria validation and closed PoS inclusion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one closed PoS record; search criteria for both geographic and non-geographic searches.",
      "Expected Result": "Geographic search is not permitted, and closed PoS are included in non-geographic search results.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify No Data Aggregation in Multiple PoS Search Results",
      "ID": "TC-215",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS as per TC-001.",
          "Expected Result": "Multiple PoS are listed in a table."
        },
        {
          "Step": 2,
          "Step Description": "Review the displayed data for each PoS and check for any aggregation (e.g., totals, averages, grouped data).",
          "Expected Result": "Each PoS is displayed as an individual record with no aggregated data shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "Multiple PoS exist matching the search criteria. User is logged in and on the search results screen.",
      "Execution Mode": "Manual",
      "Functionality": "No data aggregation in search results",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least two PoS records with distinct data.",
      "Expected Result": "No aggregation is performed; each PoS is shown as a separate entry in the results table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify Report Selection Options in Phase 2",
      "ID": "TC-216",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS as per TC-001.",
          "Expected Result": "Multiple PoS are listed in a table."
        },
        {
          "Step": 2,
          "Step Description": "Check for the presence of report selection options as described in the referenced 'Report' paragraph.",
          "Expected Result": "Options for selecting different reports are available and accessible on the screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has access to the PoS search functionality. Phase 2 features are enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Report selection options in search results",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Multiple PoS records; Phase 2 features enabled in the environment.",
      "Expected Result": "Report selection options are present and function as described in the requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Extraction and Display of Linked PoS by Matching P.IVA POS",
      "ID": "TC-217",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface (e.g., via ID RICE).",
          "Expected Result": "The PoS information request interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid ID RICE for a PoS that shares the same P.IVA POS with at least one other PoS in the system.",
          "Expected Result": "The system accepts the input and processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS details.",
          "Expected Result": "The system retrieves and displays all data for the requested PoS as per RU 4.2.6."
        },
        {
          "Step": 4,
          "Step Description": "Review the section listing linked PoS.",
          "Expected Result": "All PoS sharing the same P.IVA POS are listed as linked. The field 'P.IVA POS' is indicated as the association reason. Each linked PoS is selectable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management Module",
      "Preconditions": "At least two PoS exist in the system with the same P.IVA POS value. User has access to the PoS information request interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS extraction and association indication by P.IVA POS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with shared P.IVA POS; valid ID RICE for one PoS.",
      "Expected Result": "All PoS linked by P.IVA POS are displayed, the association field is clearly indicated, and linked PoS are selectable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Extraction and Display of Linked PoS by Matching COD. FISCALE POS",
      "ID": "TC-218",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid ID RICE for a PoS that shares the same COD. FISCALE POS with at least one other PoS.",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request.",
          "Expected Result": "The system retrieves and displays all data for the requested PoS."
        },
        {
          "Step": 4,
          "Step Description": "Review the linked PoS section.",
          "Expected Result": "All PoS sharing the same COD. FISCALE POS are listed as linked. The field 'COD. FISCALE POS' is indicated as the association reason. Each linked PoS is selectable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management Module",
      "Preconditions": "At least two PoS exist with the same COD. FISCALE POS. User has access to the interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS extraction and association indication by COD. FISCALE POS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with shared COD. FISCALE POS; valid ID RICE.",
      "Expected Result": "All PoS linked by COD. FISCALE POS are displayed, the association field is indicated, and linked PoS are selectable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Extraction and Display of Linked PoS by Matching NOMINATIVO TITOLARE",
      "ID": "TC-219",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid ID RICE for a PoS that shares the same NOMINATIVO TITOLARE with at least one other PoS.",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request.",
          "Expected Result": "The system retrieves and displays all data for the requested PoS."
        },
        {
          "Step": 4,
          "Step Description": "Review the linked PoS section.",
          "Expected Result": "All PoS sharing the same NOMINATIVO TITOLARE are listed as linked. The field 'NOMINATIVO TITOLARE' is indicated as the association reason. Each linked PoS is selectable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management Module",
      "Preconditions": "At least two PoS exist with the same NOMINATIVO TITOLARE. User has access to the interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS extraction and association indication by NOMINATIVO TITOLARE",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with shared NOMINATIVO TITOLARE; valid ID RICE.",
      "Expected Result": "All PoS linked by NOMINATIVO TITOLARE are displayed, the association field is indicated, and linked PoS are selectable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Extraction and Display of Linked PoS by Matching EMAIL",
      "ID": "TC-220",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid ID RICE for a PoS that shares the same EMAIL with at least one other PoS.",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request.",
          "Expected Result": "The system retrieves and displays all data for the requested PoS."
        },
        {
          "Step": 4,
          "Step Description": "Review the linked PoS section.",
          "Expected Result": "All PoS sharing the same EMAIL are listed as linked. The field 'EMAIL' is indicated as the association reason. Each linked PoS is selectable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management Module",
      "Preconditions": "At least two PoS exist with the same EMAIL. User has access to the interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS extraction and association indication by EMAIL",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with shared EMAIL; valid ID RICE.",
      "Expected Result": "All PoS linked by EMAIL are displayed, the association field is indicated, and linked PoS are selectable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Extraction and Display of Linked PoS by Multiple Matching Fields",
      "ID": "TC-221",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid ID RICE for a PoS that shares more than one field (e.g., both P.IVA POS and EMAIL) with other PoS.",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request.",
          "Expected Result": "The system retrieves and displays all data for the requested PoS."
        },
        {
          "Step": 4,
          "Step Description": "Review the linked PoS section.",
          "Expected Result": "All PoS sharing any of the specified fields are listed as linked. For each linked PoS, all fields that generated the association are indicated. Each linked PoS is selectable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management Module",
      "Preconditions": "At least two PoS exist with more than one matching field. User has access to the interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS extraction and association indication by multiple fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with multiple shared fields; valid ID RICE.",
      "Expected Result": "All PoS linked by any matching field are displayed, all association fields are indicated, and linked PoS are selectable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "No Linked PoS Found for Given PoS",
      "ID": "TC-222",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid ID RICE for a PoS that does not share any of the specified fields with other PoS.",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request.",
          "Expected Result": "The system retrieves and displays all data for the requested PoS."
        },
        {
          "Step": 4,
          "Step Description": "Review the linked PoS section.",
          "Expected Result": "No linked PoS are displayed. A message such as 'No linked PoS found' is shown."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Management Module",
      "Preconditions": "A PoS exists with unique values for all specified fields. User has access to the interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS extraction when no associations exist",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record with unique field values; valid ID RICE.",
      "Expected Result": "No linked PoS are displayed and an appropriate message is shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Linked PoS Selection Functionality",
      "ID": "TC-223",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface and retrieve a PoS with linked PoS displayed.",
          "Expected Result": "The interface displays the requested PoS and its linked PoS."
        },
        {
          "Step": 2,
          "Step Description": "Select one of the linked PoS from the list.",
          "Expected Result": "The system highlights the selected PoS and displays its full details as per RU 4.2.6."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management Module",
      "Preconditions": "At least one PoS with linked PoS exists. User has access to the interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS selection and detail display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with linked PoS; valid ID RICE.",
      "Expected Result": "Selecting a linked PoS displays its full details as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Error Handling for Invalid ID RICE Input",
      "ID": "TC-224",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid or non-existent ID RICE.",
          "Expected Result": "The system accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request.",
          "Expected Result": "The system displays an error message indicating that the PoS was not found. No linked PoS are displayed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Management Module",
      "Preconditions": "User has access to the interface. The entered ID RICE does not exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for invalid PoS requests",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid or non-existent ID RICE.",
      "Expected Result": "An appropriate error message is displayed and no linked PoS are shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify presence and functionality of 'Export to Excel' button for POS report in ZENIT (Phase 1)",
      "ID": "TC-225",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section where POS reports are available as per requirement 4.2.9.",
          "Expected Result": "POS report section is displayed to the user."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of the 'Export to Excel' button within the POS report section.",
          "Expected Result": "'Export to Excel' button is visible and enabled."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Export to Excel' button.",
          "Expected Result": "System generates and downloads the POS report in Excel (.xlsx) format immediately."
        },
        {
          "Step": 5,
          "Step Description": "Open the downloaded Excel file and verify its content for correctness and completeness as per the displayed report.",
          "Expected Result": "Excel file contains all the data shown in the POS report section and is formatted correctly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Report Extraction",
      "Preconditions": "User has valid credentials and access to ZENIT; POS report data is available; Phase 1 deployment is active.",
      "Execution Mode": "Manual",
      "Functionality": "POS Report Extraction to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Sample POS report data available in the system.",
      "Expected Result": "The 'Export to Excel' button is present, functional, and the exported Excel file matches the displayed POS report data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 functionality (Excel export); management buttons and other report formats are excluded as per requirement.",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify absence of POS management buttons in Phase 1",
      "ID": "TC-226",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS report section as per requirement 4.2.9.",
          "Expected Result": "POS report section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of any POS management buttons (as referenced in 'Gestione PoS').",
          "Expected Result": "No POS management buttons are present in Phase 1."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Management Buttons",
      "Preconditions": "User has valid credentials and access to ZENIT; Phase 1 deployment is active.",
      "Execution Mode": "Manual",
      "Functionality": "POS Management Button Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; System in Phase 1 state.",
      "Expected Result": "No POS management buttons are visible in the POS report section during Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (management buttons expected in Phase 2).",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify that only 'Export to Excel' button is available for report extraction in Phase 1",
      "ID": "TC-227",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS report section.",
          "Expected Result": "POS report section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of report extraction buttons other than 'Export to Excel' (e.g., PDF, CSV, etc.).",
          "Expected Result": "Only the 'Export to Excel' button is present; no other report extraction buttons are visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Report Extraction Buttons",
      "Preconditions": "User has valid credentials and access to ZENIT; Phase 1 deployment is active.",
      "Execution Mode": "Manual",
      "Functionality": "Report Extraction Button Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; System in Phase 1 state.",
      "Expected Result": "Only the 'Export to Excel' button is available for report extraction in Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 (other extraction formats expected in Phase 2).",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify error handling when POS report data is unavailable during Excel export",
      "ID": "TC-228",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS report section where no report data is available (simulate empty dataset).",
          "Expected Result": "POS report section indicates no data is available."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to click the 'Export to Excel' button.",
          "Expected Result": "System displays an appropriate error message or disables the button, preventing export of an empty report."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - POS Report Extraction Error Handling",
      "Preconditions": "User has valid credentials and access to ZENIT; POS report section contains no data.",
      "Execution Mode": "Manual",
      "Functionality": "POS Report Export Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; POS report section with no data.",
      "Expected Result": "System prevents export and provides a clear message when no POS report data is available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for Excel export in Phase 1.",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify Access to Data History Section",
      "ID": "TC-229",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' (Data History) section from the main menu or dashboard.",
          "Expected Result": "The 'Storico Dati' section is displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User account is active and has permission to access the Storico Dati section. Application is running in the UAT environment.",
      "Execution Mode": "Manual",
      "Functionality": "Access to Data History section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., username: testuser, password: Test@123)",
      "Expected Result": "User is able to access the 'Storico Dati' section without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access to the section, not data display or filtering.",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Display of Data History Records",
      "ID": "TC-230",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the list of historical data records displayed.",
          "Expected Result": "A list of historical data records is displayed, showing relevant fields such as date, type, and status."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User is logged in and has access to the Storico Dati section. There are historical data records available for the user.",
      "Execution Mode": "Manual",
      "Functionality": "Display of historical data records",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with existing historical data records",
      "Expected Result": "Historical data records are displayed correctly with all relevant fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover filtering or sorting.",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Filtering of Data History Records by Date Range",
      "ID": "TC-231",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter a specific date range in the filter controls (e.g., From: 2024-01-01, To: 2024-01-31).",
          "Expected Result": "Date range is accepted by the filter controls."
        },
        {
          "Step": 4,
          "Step Description": "Apply the filter to view historical data within the selected date range.",
          "Expected Result": "Only historical data records within the specified date range are displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User is logged in and has access to the Storico Dati section. There are records available for the selected date range.",
      "Execution Mode": "Manual",
      "Functionality": "Filtering historical data by date",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with historical data spanning multiple dates; date range: 2024-01-01 to 2024-01-31",
      "Expected Result": "Historical data records are filtered and displayed according to the selected date range.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only date filtering, not other filter types.",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify System Behavior When No Data Exists for Selected Date Range",
      "ID": "TC-232",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter a date range for which no historical data exists (e.g., From: 1990-01-01, To: 1990-01-31).",
          "Expected Result": "Date range is accepted by the filter controls."
        },
        {
          "Step": 4,
          "Step Description": "Apply the filter to view historical data within the selected date range.",
          "Expected Result": "A message is displayed indicating that no data is available for the selected date range."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User is logged in and has access to the Storico Dati section. No records exist for the selected date range.",
      "Execution Mode": "Manual",
      "Functionality": "Handling empty data sets in filtering",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with no historical data for the date range 1990-01-01 to 1990-01-31",
      "Expected Result": "System displays a clear message indicating no data is available for the selected date range.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only empty result scenario for date filtering.",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Error Handling for Invalid Date Range Input",
      "ID": "TC-233",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid date range in the filter controls (e.g., From: 2024-02-01, To: 2024-01-01).",
          "Expected Result": "System detects the invalid date range input."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to apply the filter with the invalid date range.",
          "Expected Result": "System displays an error message indicating the date range is invalid and does not apply the filter."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User is logged in and has access to the Storico Dati section.",
      "Execution Mode": "Manual",
      "Functionality": "Input validation for date filters",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account; invalid date range: From 2024-02-01, To 2024-01-01",
      "Expected Result": "System prevents filtering and displays an appropriate error message for invalid date range input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only invalid date range input scenario.",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Daily Data Snapshot Archiving at 00:00",
      "ID": "TC-234",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system clock is set to 23:59 on a day with active data changes.",
          "Expected Result": "System is ready to transition to the next day."
        },
        {
          "Step": 2,
          "Step Description": "Wait until 00:00 and trigger the daily archiving process (manually or automatically).",
          "Expected Result": "Archiving process starts at 00:00."
        },
        {
          "Step": 3,
          "Step Description": "Access the archive and verify that a snapshot of all required data (as per 'ZENIT - elenco dati' Excel) for the previous day is present.",
          "Expected Result": "A complete and accurate snapshot of the previous day's data is archived."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "System is live and contains transactional data for at least one full day. Access to 'ZENIT - elenco dati' Excel for reference.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data snapshot archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Transactional data for at least one day; 'ZENIT - elenco dati' Excel file.",
      "Expected Result": "A daily snapshot of all required data is archived at 00:00 for the previous day, as specified in the Excel file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Retention and Deletion for PoS Without Pending Issues After Contract Termination",
      "ID": "TC-235",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS (Point of Sale) with no pending issues or disputes and with a terminated contract.",
          "Expected Result": "PoS with terminated contract and no pending issues is identified."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the data deletion process as per business rules.",
          "Expected Result": "Data deletion process is initiated for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access archived data for the deleted PoS.",
          "Expected Result": "Archived data for the PoS is no longer accessible."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "PoS exists with no pending issues and contract is terminated. Data archiving is active.",
      "Execution Mode": "Manual",
      "Functionality": "Data retention and deletion for PoS without issues",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with terminated contracts and no pending issues.",
      "Expected Result": "Data for PoS without pending issues is deleted after contract termination and is not accessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Retention for PoS With Pending Issues After Contract Termination",
      "ID": "TC-236",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with pending issues or disputes and with a terminated contract.",
          "Expected Result": "PoS with terminated contract and pending issues is identified."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the data retention process as per business rules.",
          "Expected Result": "Data retention process is initiated for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access archived data for the PoS after contract termination.",
          "Expected Result": "Archived data for the PoS is still accessible as per legal retention period (10 years from last accounting movement)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "PoS exists with pending issues and contract is terminated. Data archiving is active.",
      "Execution Mode": "Manual",
      "Functionality": "Data retention for PoS with issues",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with terminated contracts and pending issues.",
      "Expected Result": "Data for PoS with pending issues is retained and accessible for 10 years after last accounting movement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Accessibility for Future Queries (Historical Data Retrieval)",
      "ID": "TC-237",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Archive data for multiple PoS and products over several days as per daily snapshot process.",
          "Expected Result": "Historical data is available in the archive for multiple days."
        },
        {
          "Step": 2,
          "Step Description": "Perform a query to retrieve data for a specific PoS and product on a specific day (e.g., a Wednesday).",
          "Expected Result": "System returns the correct historical data for the specified PoS, product, and date."
        },
        {
          "Step": 3,
          "Step Description": "Perform a query to retrieve the number of unpaid items (n° insoluti) for a PoS over a given period.",
          "Expected Result": "System returns the correct count of unpaid items for the specified PoS and period."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "Historical data is present in the archive for multiple PoS and products. Query interface is available.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data retrieval and query",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Archived data for multiple PoS and products over several days.",
      "Expected Result": "System allows accurate retrieval of historical data for specific PoS, products, and dates as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Archiving Frequency as Specified in 'ZENIT - elenco dati' Excel",
      "ID": "TC-238",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review the 'ZENIT - elenco dati' Excel file to identify the required archiving frequency for each data type.",
          "Expected Result": "Archiving frequencies for all data types are identified."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the archiving process over a period (e.g., one week) for each data type.",
          "Expected Result": "Archiving occurs at the specified frequency for each data type."
        },
        {
          "Step": 3,
          "Step Description": "Compare archived data with the expected frequency and content as per the Excel file.",
          "Expected Result": "Archived data matches the expected frequency and content for each data type."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "Access to 'ZENIT - elenco dati' Excel file. System is live and archiving is active.",
      "Execution Mode": "Manual",
      "Functionality": "Archiving frequency compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "'ZENIT - elenco dati' Excel file; system data for at least one week.",
      "Expected Result": "All data types are archived at the frequency specified in the Excel file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Visibility Restrictions for PoS With Pending Issues After Contract Termination",
      "ID": "TC-239",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with pending issues and a terminated contract.",
          "Expected Result": "PoS with pending issues and terminated contract is identified."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access archived data for the PoS using different user profiles (e.g., admin, standard user, restricted user).",
          "Expected Result": "Access to archived data is restricted according to user profile permissions."
        },
        {
          "Step": 3,
          "Step Description": "Verify which data is visible and which is hidden for each profile as per business rules.",
          "Expected Result": "Only authorized profiles can view certain data; restricted profiles cannot access sensitive data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "PoS with pending issues and terminated contract exists. Multiple user profiles are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Data visibility restrictions by user profile",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with pending issues; user profiles with different permissions.",
      "Expected Result": "Data visibility for PoS with pending issues is restricted according to user profile permissions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Importazione manuale file PoS fuori rete con dati completi e validi",
      "ID": "TC-240",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con tutti i campi richiesti (ID RICE, ZONA RICE, DENOMINAZIONE, RAGIONE SOCIALE, INDIRIZZO, COMUNE, P.IVA, COD. FISCALE, IMPORTO CREDITO, STATUS, PASSAGGIO A PERDITA) popolati con dati validi per almeno un record.",
          "Expected Result": "Il file è pronto per l'importazione e rispetta il formato richiesto."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit come utente autorizzato all'importazione dati.",
          "Expected Result": "Accesso consentito e visibilità della funzionalità di importazione file PoS fuori rete."
        },
        {
          "Step": 3,
          "Step Description": "Selezionare la funzione di importazione dati PoS fuori rete e caricare il file preparato.",
          "Expected Result": "Il sistema accetta il file e avvia la procedura di importazione."
        },
        {
          "Step": 4,
          "Step Description": "Attendere il completamento dell'importazione e verificare la presenza dei dati caricati nella sezione dedicata ai PoS fuori rete.",
          "Expected Result": "Tutti i record del file sono correttamente importati e visualizzati con i dati corrispondenti."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Archiviazione PoS Fuori Rete",
      "Preconditions": "Utente con permessi di importazione; sistema Zenit attivo; file di importazione conforme disponibile.",
      "Execution Mode": "Manual",
      "Functionality": "Importazione dati PoS fuori rete da file manuale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con almeno un record completo e valido.",
      "Expected Result": "Il sistema importa correttamente tutti i dati presenti nel file e li rende disponibili per la consultazione e modifica.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Gestione errore importazione file PoS fuori rete con dati mancanti o non validi",
      "ID": "TC-241",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con almeno un campo obbligatorio mancante (es. senza P.IVA) o con dati non validi (es. IMPORTO CREDITO in formato testo).",
          "Expected Result": "Il file contiene errori di formato o dati mancanti."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit come utente autorizzato all'importazione dati.",
          "Expected Result": "Accesso consentito e visibilità della funzionalità di importazione file PoS fuori rete."
        },
        {
          "Step": 3,
          "Step Description": "Selezionare la funzione di importazione dati PoS fuori rete e caricare il file errato.",
          "Expected Result": "Il sistema rileva errori nel file e blocca l'importazione."
        },
        {
          "Step": 4,
          "Step Description": "Verificare la presenza di messaggi di errore dettagliati che indichino i campi problematici.",
          "Expected Result": "Il sistema mostra un messaggio di errore chiaro e dettagliato, specificando i campi errati o mancanti."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Archiviazione PoS Fuori Rete",
      "Preconditions": "Utente con permessi di importazione; sistema Zenit attivo; file di importazione non conforme disponibile.",
      "Execution Mode": "Manual",
      "Functionality": "Gestione errori in fase di importazione dati PoS fuori rete",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con almeno un campo obbligatorio mancante o errato.",
      "Expected Result": "Il sistema blocca l'importazione e fornisce un messaggio di errore dettagliato sui dati non validi.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Modifica dati PoS fuori rete dopo importazione",
      "ID": "TC-242",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Importare un file PoS fuori rete valido seguendo la procedura standard.",
          "Expected Result": "I dati vengono importati correttamente e sono visibili nella sezione dedicata."
        },
        {
          "Step": 2,
          "Step Description": "Accedere alla sezione di gestione dei PoS fuori rete e selezionare un record appena importato.",
          "Expected Result": "Il record selezionato è visualizzato con tutti i dettagli importati."
        },
        {
          "Step": 3,
          "Step Description": "Modificare uno o più campi (es. STATUS o IMPORTO CREDITO) e salvare le modifiche.",
          "Expected Result": "Il sistema accetta la modifica e aggiorna il record."
        },
        {
          "Step": 4,
          "Step Description": "Verificare che le modifiche siano correttamente salvate e visibili nella consultazione dei dati.",
          "Expected Result": "I dati modificati sono correttamente aggiornati e visibili."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Archiviazione PoS Fuori Rete",
      "Preconditions": "Almeno un record PoS fuori rete importato correttamente; utente con permessi di modifica.",
      "Execution Mode": "Manual",
      "Functionality": "Modifica dati PoS fuori rete dopo importazione",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Record PoS fuori rete già importato; nuovi valori per i campi da modificare.",
      "Expected Result": "Le modifiche ai dati PoS fuori rete sono salvate e consultabili senza errori.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Importazione file PoS fuori rete con campo PASSAGGIO A PERDITA valorizzato SI/NO",
      "ID": "TC-243",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare due file di importazione: uno con il campo PASSAGGIO A PERDITA valorizzato a 'SI', l'altro a 'NO'.",
          "Expected Result": "I file sono pronti per l'importazione e rispettano il formato richiesto."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit come utente autorizzato all'importazione dati.",
          "Expected Result": "Accesso consentito e visibilità della funzionalità di importazione file PoS fuori rete."
        },
        {
          "Step": 3,
          "Step Description": "Importare il primo file (PASSAGGIO A PERDITA = 'SI') e verificare la corretta visualizzazione del campo.",
          "Expected Result": "Il record importato mostra PASSAGGIO A PERDITA = 'SI'."
        },
        {
          "Step": 4,
          "Step Description": "Importare il secondo file (PASSAGGIO A PERDITA = 'NO') e verificare la corretta visualizzazione del campo.",
          "Expected Result": "Il record importato mostra PASSAGGIO A PERDITA = 'NO'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Archiviazione PoS Fuori Rete",
      "Preconditions": "Utente con permessi di importazione; sistema Zenit attivo; file di importazione conformi disponibili.",
      "Execution Mode": "Manual",
      "Functionality": "Gestione campo PASSAGGIO A PERDITA in importazione PoS fuori rete",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Due file CSV/XLSX: uno con PASSAGGIO A PERDITA = 'SI', uno con 'NO'.",
      "Expected Result": "Il sistema importa correttamente il valore del campo PASSAGGIO A PERDITA e lo visualizza come atteso.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Verifica importazione campo STATUS con valore 'blocco al sollecito' da SAP",
      "ID": "TC-244",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con il campo STATUS valorizzato a 'blocco al sollecito' come da SAP.",
          "Expected Result": "Il file è pronto per l'importazione e rispetta il formato richiesto."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit come utente autorizzato all'importazione dati.",
          "Expected Result": "Accesso consentito e visibilità della funzionalità di importazione file PoS fuori rete."
        },
        {
          "Step": 3,
          "Step Description": "Importare il file e verificare che il campo STATUS sia correttamente acquisito e visualizzato.",
          "Expected Result": "Il record importato mostra STATUS = 'blocco al sollecito'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Modulo Archiviazione PoS Fuori Rete",
      "Preconditions": "Utente con permessi di importazione; sistema Zenit attivo; file di importazione conforme disponibile.",
      "Execution Mode": "Manual",
      "Functionality": "Importazione e visualizzazione campo STATUS da SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con STATUS = 'blocco al sollecito'.",
      "Expected Result": "Il sistema importa e visualizza correttamente il valore STATUS come da file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    }
  ],
  "total_count": 244
}