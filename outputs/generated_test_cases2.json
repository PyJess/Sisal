{
  "test_cases": [
    {
      "Title": "Verify Display of Probabili Formazioni for All Serie A Teams",
      "ID": "TC-001",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Fantacalcio section of the application.",
          "Expected Result": "Fantacalcio section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Select the 'Probabili Formazioni' feature.",
          "Expected Result": "'Probabili Formazioni' page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check that all Serie A teams are listed with their probable lineups.",
          "Expected Result": "Each Serie A team is displayed with a corresponding probable lineup."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio - Probabili Formazioni",
      "Preconditions": "User is authenticated and has access to the Fantacalcio section.",
      "Execution Mode": "Manual",
      "Functionality": "Display of probable lineups for Serie A teams",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Serie A teams and their latest probable lineups",
      "Expected Result": "All Serie A teams are listed with accurate probable lineups on the 'Probabili Formazioni' page.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Update of 'Ultime dai campi' News Section",
      "ID": "TC-002",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Fantacalcio section of the application.",
          "Expected Result": "Fantacalcio section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Select the 'Ultime dai campi' feature.",
          "Expected Result": "'Ultime dai campi' news section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check the timestamp or date of the latest news update.",
          "Expected Result": "The news section displays the most recent updates relevant to team formations and player status."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio - Ultime dai campi",
      "Preconditions": "User is authenticated and has access to the Fantacalcio section.",
      "Execution Mode": "Manual",
      "Functionality": "Display and update of latest news from the fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Latest news updates for Serie A teams",
      "Expected Result": "'Ultime dai campi' section displays the most recent and relevant news updates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Error Handling When Probabili Formazioni Data is Unavailable",
      "ID": "TC-003",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where the backend service for 'Probabili Formazioni' is down or returns no data.",
          "Expected Result": "The application attempts to load the 'Probabili Formazioni' page."
        },
        {
          "Step": 2,
          "Step Description": "Observe the message or behavior displayed to the user.",
          "Expected Result": "A user-friendly error message is displayed indicating that the probable lineups are currently unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio - Probabili Formazioni",
      "Preconditions": "Backend service for probable lineups is intentionally made unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for unavailable probable lineups data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "No data returned from backend for probable lineups",
      "Expected Result": "A clear error message is shown to the user when probable lineups data is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Verify Responsiveness of Probabili Formazioni on Mobile Devices",
      "ID": "TC-004",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the Fantacalcio section on a mobile device.",
          "Expected Result": "Fantacalcio section loads successfully on the mobile device."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Probabili Formazioni' feature.",
          "Expected Result": "'Probabili Formazioni' page is displayed and formatted for mobile view."
        },
        {
          "Step": 3,
          "Step Description": "Scroll through the list of teams and lineups.",
          "Expected Result": "All content is visible, readable, and properly formatted for mobile screens."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio - Probabili Formazioni",
      "Preconditions": "User is authenticated and using a supported mobile device.",
      "Execution Mode": "Manual",
      "Functionality": "Mobile responsiveness of probable lineups feature",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Serie A teams and probable lineups",
      "Expected Result": "'Probabili Formazioni' page is fully responsive and user-friendly on mobile devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Verify Content Accuracy of 'Ultime dai campi' News",
      "ID": "TC-005",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Ultime dai campi' section in Fantacalcio.",
          "Expected Result": "'Ultime dai campi' news section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Review the news items for a specific team or match.",
          "Expected Result": "News items are relevant and accurately reflect the latest updates for the selected team or match."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio - Ultime dai campi",
      "Preconditions": "News updates are available for the selected team or match.",
      "Execution Mode": "Manual",
      "Functionality": "Content accuracy of latest news from the fields",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Latest news for selected team or match",
      "Expected Result": "News items in 'Ultime dai campi' are accurate and up-to-date for the selected team or match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Fantacalcio API - Precondition Validation",
      "ID": "TC-006",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the API endpoint for Fantacalcio is accessible and authentication credentials are available.",
          "Expected Result": "API endpoint is reachable and credentials are valid."
        },
        {
          "Step": 2,
          "Step Description": "Send a basic GET request to the Fantacalcio API with valid credentials.",
          "Expected Result": "API returns a 200 OK response with expected data structure."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Fantacalcio API deployed and accessible; valid API credentials available.",
      "Execution Mode": "Manual",
      "Functionality": "API Precondition Check",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid API credentials, endpoint URL",
      "Expected Result": "Fantacalcio API is accessible and responds correctly to authenticated requests.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-1"
    },
    {
      "Title": "Fantacalcio API - Brand/Manifestation Prioritization",
      "ID": "TC-007",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a list of brands and manifestations configured for Fantacalcio usage.",
          "Expected Result": "List of brands/manifestations is available."
        },
        {
          "Step": 2,
          "Step Description": "Query the Fantacalcio API for each brand/manifestation combination.",
          "Expected Result": "API returns prioritized data according to configuration for each combination."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Brands and manifestations are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Brand/Manifestation Prioritization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "List of brands, manifestations, API credentials",
      "Expected Result": "Fantacalcio API returns prioritized data for each brand/manifestation as per configuration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-2"
    },
    {
      "Title": "Fantacalcio API - Exclusion for Postponed Matches",
      "ID": "TC-008",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a match flagged as postponed in the system.",
          "Expected Result": "Postponed match is available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Query the Fantacalcio API for the postponed match.",
          "Expected Result": "API excludes Fantacalcio data for the postponed match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "At least one match is flagged as postponed in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Exclusion for Postponed Matches",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Postponed match ID, API credentials",
      "Expected Result": "Fantacalcio data is not provided for postponed matches.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-3"
    },
    {
      "Title": "Fantacalcio API - Exclusion for Recovery and Match Day Events",
      "ID": "TC-009",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a match flagged as recovery or special Match Day event.",
          "Expected Result": "Recovery/Match Day event match is available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Query the Fantacalcio API for the identified match.",
          "Expected Result": "API excludes Fantacalcio data for the recovery or Match Day event match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "At least one match is flagged as recovery or Match Day event in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Exclusion for Recovery/Match Day Events",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Recovery/Match Day match ID, API credentials",
      "Expected Result": "Fantacalcio data is not provided for recovery or Match Day event matches.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-4"
    },
    {
      "Title": "Fantacalcio API - Fallback Solution on Exclusion",
      "ID": "TC-010",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a match where Fantacalcio data is excluded (e.g., postponed or recovery).",
          "Expected Result": "Match with Fantacalcio exclusion is available."
        },
        {
          "Step": 2,
          "Step Description": "Query the Fantacalcio API for the excluded match.",
          "Expected Result": "API provides fallback data as per system specification (e.g., default values, alternative data source, or error message)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "System is configured with a fallback solution for Fantacalcio exclusions.",
      "Execution Mode": "Manual",
      "Functionality": "Fallback Solution on Exclusion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excluded match ID, API credentials",
      "Expected Result": "Fallback solution is correctly triggered and data is provided as specified when Fantacalcio is excluded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-5"
    },
    {
      "Title": "Fantacalcio API - Probable and Official Lineups Display",
      "ID": "TC-011",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with probable lineups available.",
          "Expected Result": "API returns probable lineups with correct player data."
        },
        {
          "Step": 2,
          "Step Description": "Query the Fantacalcio API for a match with official lineups available.",
          "Expected Result": "API returns official lineups with correct player data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Matches with probable and official lineups are available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Lineups Display (Probable/Official)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match IDs with probable and official lineups, API credentials",
      "Expected Result": "API returns correct probable and official lineups for matches as available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-6"
    },
    {
      "Title": "Fantacalcio API - Game Module Display",
      "ID": "TC-012",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with a defined game module (formation).",
          "Expected Result": "API returns the correct game module (e.g., 4-3-3, 3-5-2) for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with defined game module is available.",
      "Execution Mode": "Manual",
      "Functionality": "Game Module Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with game module, API credentials",
      "Expected Result": "API returns the correct game module for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-7"
    },
    {
      "Title": "Fantacalcio API - Bench Management Display",
      "ID": "TC-013",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with bench player data available.",
          "Expected Result": "API returns correct bench player data for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with bench player data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Bench Management Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with bench data, API credentials",
      "Expected Result": "API returns correct bench player data for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-8"
    },
    {
      "Title": "Fantacalcio API - Starting Probability Percentage",
      "ID": "TC-014",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with starting probability data available for players.",
          "Expected Result": "API returns percentage values indicating starting probability for each player."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with starting probability data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Starting Probability Percentage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with starting probability data, API credentials",
      "Expected Result": "API returns correct starting probability percentages for players.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-9"
    },
    {
      "Title": "Fantacalcio API - Latest News from the Field",
      "ID": "TC-015",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with latest news updates available.",
          "Expected Result": "API returns the latest news updates for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with latest news updates is available.",
      "Execution Mode": "Manual",
      "Functionality": "Latest News Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with news updates, API credentials",
      "Expected Result": "API returns the latest news updates for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-10"
    },
    {
      "Title": "Fantacalcio API - Suspended Players Display",
      "ID": "TC-016",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with suspended players data available.",
          "Expected Result": "API returns correct list of suspended players for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with suspended players data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Suspended Players Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with suspended players, API credentials",
      "Expected Result": "API returns correct suspended players for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-12"
    },
    {
      "Title": "Fantacalcio API - Unavailable Players Display",
      "ID": "TC-017",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with unavailable players data available.",
          "Expected Result": "API returns correct list of unavailable players for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with unavailable players data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Unavailable Players Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with unavailable players, API credentials",
      "Expected Result": "API returns correct unavailable players for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-13"
    },
    {
      "Title": "Fantacalcio API - Players in Ballottaggio Display",
      "ID": "TC-018",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with players in ballottaggio data available.",
          "Expected Result": "API returns correct list of players in ballottaggio for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with players in ballottaggio data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Players in Ballottaggio Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with ballottaggio data, API credentials",
      "Expected Result": "API returns correct players in ballottaggio for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-14"
    },
    {
      "Title": "Fantacalcio API - Players in Doubt Display",
      "ID": "TC-019",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with players in doubt data available.",
          "Expected Result": "API returns correct list of players in doubt for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with players in doubt data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Players in Doubt Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with doubt data, API credentials",
      "Expected Result": "API returns correct players in doubt for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-15"
    },
    {
      "Title": "Fantacalcio API - Stadium Information Display",
      "ID": "TC-020",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with stadium information available.",
          "Expected Result": "API returns correct stadium information for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with stadium information is available.",
      "Execution Mode": "Manual",
      "Functionality": "Stadium Information Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with stadium info, API credentials",
      "Expected Result": "API returns correct stadium information for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-16"
    },
    {
      "Title": "Fantacalcio API - Referee Information Display",
      "ID": "TC-021",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with referee information available.",
          "Expected Result": "API returns correct referee information for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with referee information is available.",
      "Execution Mode": "Manual",
      "Functionality": "Referee Information Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with referee info, API credentials",
      "Expected Result": "API returns correct referee information for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-17"
    },
    {
      "Title": "Fantacalcio API - Broadcaster Information Display",
      "ID": "TC-022",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with broadcaster information available.",
          "Expected Result": "API returns correct broadcaster information for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with broadcaster information is available.",
      "Execution Mode": "Manual",
      "Functionality": "Broadcaster Information Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with broadcaster info, API credentials",
      "Expected Result": "API returns correct broadcaster information for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-19"
    },
    {
      "Title": "Fantacalcio API - Last Update Timestamp Display",
      "ID": "TC-023",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Query the Fantacalcio API for a match with last update timestamp available.",
          "Expected Result": "API returns correct last update timestamp for the match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Fantacalcio API",
      "Preconditions": "Match with last update timestamp is available.",
      "Execution Mode": "Manual",
      "Functionality": "Last Update Timestamp Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with last update timestamp, API credentials",
      "Expected Result": "API returns correct last update timestamp for the match.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU-18"
    },
    {
      "Title": "Verify Integration and Rendering of Probable Lineups from Fantacalcio API on All Clients",
      "ID": "TC-024",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the prematch campetti view on each supported client (Desktop, Mobile, App IOS, App Android, Terminale).",
          "Expected Result": "Prematch campetti view loads successfully on each client."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data fetch from the Fantacalcio 'ProbableLineupFULL' API for an upcoming match.",
          "Expected Result": "API call is made and response is received without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the probable lineups are displayed in the prematch campetti view for the selected match.",
          "Expected Result": "Probable lineups are rendered correctly and match the data from the API response."
        }
      ],
      "Test Group": "Functional",
      "Channel": "Desktop, Mobile, App IOS, App Android, Terminale",
      "Device": "Computer, Smartphone, Tablet, Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio APIs are accessible and contain data for at least one upcoming match. User is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Display of probable lineups from Fantacalcio API",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Upcoming match with available probable lineup data in Fantacalcio API.",
      "Expected Result": "Probable lineups from Fantacalcio API are correctly displayed on all supported clients in the prematch campetti view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Display of Official Lineups from Fantacalcio API",
      "ID": "TC-025",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the prematch campetti view for a match with official lineups available in Fantacalcio API.",
          "Expected Result": "Prematch campetti view loads for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data fetch from Fantacalcio 'ProbableLineupFULL' API for official lineups.",
          "Expected Result": "API call is made and response is received with official lineup data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the official lineups are displayed and clearly marked as 'official' in the UI.",
          "Expected Result": "Official lineups are rendered and labeled as 'official' in the prematch campetti view."
        }
      ],
      "Test Group": "Functional",
      "Channel": "Desktop, Mobile, App IOS, App Android, Terminale",
      "Device": "Computer, Smartphone, Tablet, Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio APIs are accessible and contain official lineup data for at least one match.",
      "Execution Mode": "Manual",
      "Functionality": "Display of official lineups from Fantacalcio API",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with official lineup data in Fantacalcio API.",
      "Expected Result": "Official lineups from Fantacalcio API are displayed and clearly marked as 'official' in the prematch campetti view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Display of Player Starting Probability Percentages",
      "ID": "TC-026",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the prematch campetti view for a match with player starting probability data available.",
          "Expected Result": "Prematch campetti view loads for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data fetch from Fantacalcio API for player starting probabilities.",
          "Expected Result": "API call is made and response contains starting probability percentages for players."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each player's starting probability percentage is displayed next to their name or position.",
          "Expected Result": "Player starting probability percentages are visible and match the API data."
        }
      ],
      "Test Group": "Functional",
      "Channel": "Desktop, Mobile, App IOS, App Android, Terminale",
      "Device": "Computer, Smartphone, Tablet, Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio APIs are accessible and contain starting probability data for at least one match.",
      "Execution Mode": "Manual",
      "Functionality": "Display of player starting probability percentages",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with player starting probability data in Fantacalcio API.",
      "Expected Result": "Player starting probability percentages are displayed correctly in the prematch campetti view and match the API data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Verify Display of Player Status: Suspended, Injured, or at Risk of Suspension",
      "ID": "TC-027",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the prematch campetti view for a match with players marked as suspended, injured, or at risk of suspension (diffidati).",
          "Expected Result": "Prematch campetti view loads for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data fetch from Fantacalcio API for player status information.",
          "Expected Result": "API call is made and response contains status information for relevant players."
        },
        {
          "Step": 3,
          "Step Description": "Verify that players who are suspended, injured, or at risk of suspension are clearly indicated in the UI (e.g., with icons or labels).",
          "Expected Result": "Player statuses are displayed correctly and match the API data."
        }
      ],
      "Test Group": "Functional",
      "Channel": "Desktop, Mobile, App IOS, App Android, Terminale",
      "Device": "Computer, Smartphone, Tablet, Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio APIs are accessible and contain status data for at least one match.",
      "Execution Mode": "Manual",
      "Functionality": "Display of player status (suspended, injured, at risk)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with players having status data (suspended, injured, diffidati) in Fantacalcio API.",
      "Expected Result": "Player statuses (suspended, injured, at risk) are displayed correctly in the prematch campetti view and match the API data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Verify Display of Team News Section ('Ultime dai campi') from Fantacalcio API",
      "ID": "TC-028",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the prematch campetti view for a match with team news available in Fantacalcio API.",
          "Expected Result": "Prematch campetti view loads for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data fetch from Fantacalcio 'LastFromFields' API for team news.",
          "Expected Result": "API call is made and response contains team news data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Ultime dai campi' section is displayed and contains the latest news for both teams.",
          "Expected Result": "Team news is displayed in the 'Ultime dai campi' section and matches the API data."
        }
      ],
      "Test Group": "Functional",
      "Channel": "Desktop, Mobile, App IOS, App Android, Terminale",
      "Device": "Computer, Smartphone, Tablet, Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio APIs are accessible and contain team news data for at least one match.",
      "Execution Mode": "Manual",
      "Functionality": "Display of team news ('Ultime dai campi')",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with team news data in Fantacalcio API.",
      "Expected Result": "Team news ('Ultime dai campi') is displayed correctly in the prematch campetti view and matches the API data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Verify Rendering Consistency Across All Supported Clients and Brands",
      "ID": "TC-029",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the prematch campetti view on each supported client and brand (Desktop, Mobile, App IOS, App Android, Terminale).",
          "Expected Result": "Prematch campetti view loads successfully on each client and brand."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all Fantacalcio API data (probable lineups, official lineups, player percentages, statuses, team news) is rendered consistently across all clients and brands.",
          "Expected Result": "All data is displayed consistently and matches the API data on every client and brand."
        }
      ],
      "Test Group": "Functional",
      "Channel": "Desktop, Mobile, App IOS, App Android, Terminale",
      "Device": "Computer, Smartphone, Tablet, Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio APIs are accessible and contain complete data for at least one match. All clients and brands are available for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Cross-client and cross-brand rendering consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with complete Fantacalcio API data available.",
      "Expected Result": "Fantacalcio API data is rendered consistently and accurately across all supported clients and brands.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-006"
    },
    {
      "Title": "Verify System Behavior When Fantacalcio API is Unavailable or Returns Errors",
      "ID": "TC-030",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Fantacalcio API unavailability or error response (e.g., 500 Internal Server Error, timeout).",
          "Expected Result": "API call fails or returns an error."
        },
        {
          "Step": 2,
          "Step Description": "Access the prematch campetti view for a match that would normally display Fantacalcio data.",
          "Expected Result": "Prematch campetti view loads, but Fantacalcio data is not available."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the UI displays an appropriate error message or fallback content, and does not crash or display stale data.",
          "Expected Result": "User is informed of the data unavailability with a clear message; UI remains stable."
        }
      ],
      "Test Group": "Functional",
      "Channel": "Desktop, Mobile, App IOS, App Android, Terminale",
      "Device": "Computer, Smartphone, Tablet, Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio API is intentionally made unavailable or configured to return errors.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for Fantacalcio API unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated API error or unavailability scenario.",
      "Expected Result": "System handles Fantacalcio API errors gracefully, displaying appropriate messages and maintaining UI stability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-007"
    },
    {
      "Title": "Verify Handling of Incomplete or Malformed Data from Fantacalcio API",
      "ID": "TC-031",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Fantacalcio API returning incomplete or malformed data (e.g., missing fields, invalid JSON).",
          "Expected Result": "API call returns incomplete or malformed data."
        },
        {
          "Step": 2,
          "Step Description": "Access the prematch campetti view for a match that would display Fantacalcio data.",
          "Expected Result": "Prematch campetti view loads, but Fantacalcio data is incomplete or malformed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the UI handles the incomplete or malformed data gracefully, displaying available information and appropriate warnings or placeholders for missing data.",
          "Expected Result": "UI displays available data, uses placeholders or warnings for missing data, and does not crash."
        }
      ],
      "Test Group": "Functional",
      "Channel": "Desktop, Mobile, App IOS, App Android, Terminale",
      "Device": "Computer, Smartphone, Tablet, Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio API is configured to return incomplete or malformed data for a test match.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of incomplete or malformed Fantacalcio API data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated incomplete or malformed API data scenario.",
      "Expected Result": "System handles incomplete or malformed Fantacalcio API data gracefully, displaying available information and appropriate warnings or placeholders.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-008"
    },
    {
      "Title": "Verify API Fantacalcio Usage Precondition - Valid API Key",
      "ID": "TC-032",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is configured with a valid API key for Fantacalcio.",
          "Expected Result": "The system recognizes the API key as valid."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the Fantacalcio API endpoint using the valid API key.",
          "Expected Result": "The API request is accepted and a valid response is returned."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "System must have a valid, active API key for Fantacalcio configured.",
      "Execution Mode": "Manual",
      "Functionality": "API authentication and precondition validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid API key for Fantacalcio, API endpoint URL",
      "Expected Result": "Fantacalcio API is accessible and returns a valid response when preconditions (valid API key) are met.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 1"
    },
    {
      "Title": "Verify API Fantacalcio Usage Precondition - Missing API Key",
      "ID": "TC-033",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is not configured with any API key for Fantacalcio.",
          "Expected Result": "No API key is present in the system configuration."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the Fantacalcio API endpoint without providing an API key.",
          "Expected Result": "The API request is rejected with an authentication error (e.g., 401 Unauthorized)."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "System must not have any API key for Fantacalcio configured.",
      "Execution Mode": "Manual",
      "Functionality": "API authentication and precondition validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No API key, API endpoint URL",
      "Expected Result": "Fantacalcio API access is denied and an appropriate error is returned when the precondition (API key) is missing.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 1"
    },
    {
      "Title": "Verify API Fantacalcio Usage Precondition - Invalid API Key",
      "ID": "TC-034",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure the system with an invalid or expired API key for Fantacalcio.",
          "Expected Result": "The system stores the invalid API key."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the Fantacalcio API endpoint using the invalid API key.",
          "Expected Result": "The API request is rejected with an authentication error (e.g., 401 Unauthorized or 403 Forbidden)."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "System must have an invalid or expired API key for Fantacalcio configured.",
      "Execution Mode": "Manual",
      "Functionality": "API authentication and precondition validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid or expired API key, API endpoint URL",
      "Expected Result": "Fantacalcio API access is denied and an appropriate error is returned when the precondition (valid API key) is not met.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 1"
    },
    {
      "Title": "Verify API Fantacalcio Usage Precondition - API Key with Insufficient Permissions",
      "ID": "TC-035",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure the system with an API key for Fantacalcio that has insufficient permissions (e.g., read-only when write access is required).",
          "Expected Result": "The system stores the restricted API key."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to perform an operation on the Fantacalcio API that requires higher permissions than those granted to the API key.",
          "Expected Result": "The API request is rejected with a permissions error (e.g., 403 Forbidden)."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "System must have an API key with insufficient permissions configured.",
      "Execution Mode": "Manual",
      "Functionality": "API authentication and precondition validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API key with limited permissions, API endpoint URL, operation requiring higher permissions",
      "Expected Result": "Fantacalcio API access is denied for operations requiring permissions not granted to the API key, and an appropriate error is returned.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 1"
    },
    {
      "Title": "Verify API Fantacalcio Usage Precondition - API Key Expiry Handling",
      "ID": "TC-036",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure the system with an API key for Fantacalcio that is set to expire soon.",
          "Expected Result": "The system stores the soon-to-expire API key."
        },
        {
          "Step": 2,
          "Step Description": "Wait until the API key expires.",
          "Expected Result": "The API key is now expired."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access the Fantacalcio API endpoint using the expired API key.",
          "Expected Result": "The API request is rejected with an authentication error (e.g., 401 Unauthorized or 403 Forbidden)."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "System must have an API key for Fantacalcio that is about to expire.",
      "Execution Mode": "Manual",
      "Functionality": "API authentication and precondition validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Soon-to-expire API key, API endpoint URL",
      "Expected Result": "Fantacalcio API access is denied and an appropriate error is returned when the API key has expired.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 1"
    },
    {
      "Title": "Verify OPTA IDs Presence in 'ProbableLineUpFULL' API Response for All Entities",
      "ID": "TC-037",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Send a valid request to the 'ProbableLineUpFULL' API endpoint.",
          "Expected Result": "API returns a successful response with data for all expected entities (e.g., player, match, team)."
        },
        {
          "Step": 2,
          "Step Description": "Inspect the response payload for each entity type (player, match, team, etc.).",
          "Expected Result": "Each entity in the response contains a field for the OPTA ID."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the OPTA ID field is populated and follows the expected format for each entity.",
          "Expected Result": "All OPTA ID fields are present and contain valid, non-empty values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "The 'ProbableLineUpFULL' API is deployed and accessible. Test user or API key is available if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "OPTA ID Integration in API Response",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample request payload for 'ProbableLineUpFULL'; expected entity types (player, match, team, etc.).",
      "Expected Result": "All entities in the 'ProbableLineUpFULL' API response include valid OPTA IDs as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-API-OPTA-001"
    },
    {
      "Title": "Verify OPTA IDs Presence in 'LastFromFields' API Response for All Entities",
      "ID": "TC-038",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Send a valid request to the 'LastFromFields' API endpoint.",
          "Expected Result": "API returns a successful response with data for all expected entities (e.g., player, match, team)."
        },
        {
          "Step": 2,
          "Step Description": "Inspect the response payload for each entity type (player, match, team, etc.).",
          "Expected Result": "Each entity in the response contains a field for the OPTA ID."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the OPTA ID field is populated and follows the expected format for each entity.",
          "Expected Result": "All OPTA ID fields are present and contain valid, non-empty values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "The 'LastFromFields' API is deployed and accessible. Test user or API key is available if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "OPTA ID Integration in API Response",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample request payload for 'LastFromFields'; expected entity types (player, match, team, etc.).",
      "Expected Result": "All entities in the 'LastFromFields' API response include valid OPTA IDs as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-API-OPTA-001"
    },
    {
      "Title": "Verify Error Handling When OPTA ID is Missing in API Response",
      "ID": "TC-039",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Send a request to the 'ProbableLineUpFULL' API with parameters that could potentially trigger a missing OPTA ID (e.g., request for a non-existent player or match).",
          "Expected Result": "API returns a response, possibly with missing OPTA ID for the entity."
        },
        {
          "Step": 2,
          "Step Description": "Check the response for error messages or handling of missing OPTA ID fields.",
          "Expected Result": "API handles the missing OPTA ID gracefully, either by providing a clear error message or by indicating the absence in a documented way (e.g., null or empty field, specific error code)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "The API is accessible and test data is available for entities that may not have an OPTA ID.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling for Missing OPTA IDs",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Request for non-existent or edge-case entities in 'ProbableLineUpFULL'.",
      "Expected Result": "API response clearly indicates missing OPTA ID in a documented and non-breaking manner.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-API-OPTA-001"
    },
    {
      "Title": "Verify OPTA ID Format Consistency Across All Entities in API Responses",
      "ID": "TC-040",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Send requests to both 'ProbableLineUpFULL' and 'LastFromFields' APIs.",
          "Expected Result": "Both APIs return successful responses with entity data."
        },
        {
          "Step": 2,
          "Step Description": "Extract all OPTA IDs from the response for each entity type.",
          "Expected Result": "All OPTA IDs are available for inspection."
        },
        {
          "Step": 3,
          "Step Description": "Validate that each OPTA ID matches the expected format (e.g., numeric, alphanumeric, length constraints as per OPTA documentation).",
          "Expected Result": "All OPTA IDs conform to the required format and constraints."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "APIs are accessible and OPTA ID format specification is available.",
      "Execution Mode": "Manual",
      "Functionality": "OPTA ID Format Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample responses from both APIs; OPTA ID format specification.",
      "Expected Result": "All OPTA IDs in API responses are consistent and adhere to the defined format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-API-OPTA-001"
    },
    {
      "Title": "Verify Backward Compatibility for Existing API Consumers After OPTA ID Integration",
      "ID": "TC-041",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Send a request to 'ProbableLineUpFULL' and 'LastFromFields' APIs using legacy request formats (without OPTA ID fields in the request).",
          "Expected Result": "APIs return successful responses as per previous behavior, with the addition of OPTA ID fields in the response."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all existing fields and data structures remain unchanged except for the addition of OPTA ID fields.",
          "Expected Result": "No breaking changes are observed for existing consumers; only OPTA ID fields are added."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "APIs are accessible and legacy request formats are known.",
      "Execution Mode": "Manual",
      "Functionality": "Backward Compatibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Legacy request payloads for both APIs.",
      "Expected Result": "Existing API consumers experience no breaking changes after OPTA ID integration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-API-OPTA-001"
    },
    {
      "Title": "Verify successful mapping of Opta XML IDs to SDAPI IDs via OPTA Mappings Feed",
      "ID": "TC-042",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain a valid Opta ID in XML format from Fantacalcio's dataset.",
          "Expected Result": "A valid Opta XML ID is available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Send a request to the OPTA Mappings Feed API with the Opta XML ID as input.",
          "Expected Result": "The API processes the request and returns a response."
        },
        {
          "Step": 3,
          "Step Description": "Parse the API response to extract the mapped SDAPI ID.",
          "Expected Result": "The response contains a valid SDAPI ID corresponding to the input Opta XML ID."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "OPTA Mappings Feed Integration",
      "Preconditions": "OPTA Mappings Feed API is integrated and accessible. Fantacalcio Opta XML IDs are available.",
      "Execution Mode": "Manual",
      "Functionality": "ID Mapping Conversion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Opta XML IDs from Fantacalcio and expected SDAPI IDs.",
      "Expected Result": "The OPTA Mappings Feed API correctly maps the provided Opta XML ID to the corresponding SDAPI ID.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-OPTA-MAP-001"
    },
    {
      "Title": "Verify error handling for invalid or unknown Opta XML IDs",
      "ID": "TC-043",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain an invalid or non-existent Opta XML ID.",
          "Expected Result": "An invalid Opta XML ID is available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Send a request to the OPTA Mappings Feed API with the invalid Opta XML ID as input.",
          "Expected Result": "The API processes the request and returns a response."
        },
        {
          "Step": 3,
          "Step Description": "Check the API response for error messages or codes indicating the ID was not found or is invalid.",
          "Expected Result": "The response contains a clear error message or code indicating the Opta XML ID is invalid or not mapped."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "OPTA Mappings Feed Integration",
      "Preconditions": "OPTA Mappings Feed API is integrated and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "ID Mapping Conversion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid or non-existent Opta XML IDs.",
      "Expected Result": "The API returns a clear error message or code when an invalid or unknown Opta XML ID is provided.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-OPTA-MAP-001"
    },
    {
      "Title": "Verify mapping feed supports batch conversion of multiple Opta XML IDs",
      "ID": "TC-044",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a batch request containing multiple valid Opta XML IDs from Fantacalcio.",
          "Expected Result": "A batch of valid Opta XML IDs is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Send the batch request to the OPTA Mappings Feed API.",
          "Expected Result": "The API processes the batch request and returns a response."
        },
        {
          "Step": 3,
          "Step Description": "Parse the API response to verify that each Opta XML ID is correctly mapped to its corresponding SDAPI ID.",
          "Expected Result": "Each Opta XML ID in the batch is mapped to the correct SDAPI ID in the response."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "OPTA Mappings Feed Integration",
      "Preconditions": "OPTA Mappings Feed API supports batch requests. Multiple valid Opta XML IDs are available.",
      "Execution Mode": "Manual",
      "Functionality": "Batch ID Mapping Conversion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Batch of valid Opta XML IDs and their expected SDAPI mappings.",
      "Expected Result": "The API correctly maps all Opta XML IDs in the batch to their respective SDAPI IDs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-OPTA-MAP-001"
    },
    {
      "Title": "Verify API response time for single and batch mapping requests",
      "ID": "TC-045",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid single Opta XML ID and a batch of multiple Opta XML IDs.",
          "Expected Result": "Test data for both single and batch requests is ready."
        },
        {
          "Step": 2,
          "Step Description": "Send a single mapping request to the OPTA Mappings Feed API and measure the response time.",
          "Expected Result": "The response time for the single request is recorded."
        },
        {
          "Step": 3,
          "Step Description": "Send a batch mapping request to the API and measure the response time.",
          "Expected Result": "The response time for the batch request is recorded."
        },
        {
          "Step": 4,
          "Step Description": "Compare the measured response times against the defined performance criteria (e.g., <2 seconds for single, <5 seconds for batch).",
          "Expected Result": "Both single and batch requests meet the performance criteria."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "OPTA Mappings Feed Integration",
      "Preconditions": "OPTA Mappings Feed API is integrated and accessible. Performance criteria are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Performance of ID Mapping Conversion",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Single and batch Opta XML IDs for performance testing.",
      "Expected Result": "The API responds within the defined time limits for both single and batch mapping requests.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-OPTA-MAP-001"
    },
    {
      "Title": "Verify mapping feed handles duplicate Opta XML IDs in batch requests",
      "ID": "TC-046",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a batch request containing duplicate Opta XML IDs.",
          "Expected Result": "A batch request with duplicate IDs is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Send the batch request to the OPTA Mappings Feed API.",
          "Expected Result": "The API processes the batch request and returns a response."
        },
        {
          "Step": 3,
          "Step Description": "Check the API response to ensure that duplicate IDs are handled appropriately (e.g., mapped once, error, or warning as per specification).",
          "Expected Result": "The response clearly indicates how duplicates are handled according to the API specification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "OPTA Mappings Feed Integration",
      "Preconditions": "OPTA Mappings Feed API supports batch requests. Specification for duplicate handling is available.",
      "Execution Mode": "Manual",
      "Functionality": "Batch ID Mapping Conversion",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": true,
      "Dataset": "Batch of Opta XML IDs with intentional duplicates.",
      "Expected Result": "The API handles duplicate Opta XML IDs in batch requests according to the specification (e.g., returns mapping once, error, or warning).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-OPTA-MAP-001"
    },
    {
      "Title": "Verify mapping feed rejects requests with missing or malformed Opta XML IDs",
      "ID": "TC-047",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a request with missing or malformed Opta XML ID fields (e.g., empty string, invalid format).",
          "Expected Result": "A request with missing or malformed IDs is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Send the malformed request to the OPTA Mappings Feed API.",
          "Expected Result": "The API processes the request and returns a response."
        },
        {
          "Step": 3,
          "Step Description": "Check the API response for appropriate error messages or codes indicating invalid input.",
          "Expected Result": "The response contains a clear error message or code indicating the input is missing or malformed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "OPTA Mappings Feed Integration",
      "Preconditions": "OPTA Mappings Feed API is integrated and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Input Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Requests with missing or malformed Opta XML IDs.",
      "Expected Result": "The API returns a clear error message or code when the input Opta XML ID is missing or malformed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-OPTA-MAP-001"
    },
    {
      "Title": "Verify Requirements Section is Present and Accessible",
      "ID": "TC-048",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application or documentation interface where requirements are listed.",
          "Expected Result": "The interface loads successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Locate the section labeled 'Requisiti' or '# Requisiti'.",
          "Expected Result": "A section titled 'Requisiti' or '# Requisiti' is visible and accessible to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Requirements Management",
      "Preconditions": "User has access to the application or documentation interface.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Section Accessibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'Requisiti' section is present and accessible to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the presence and accessibility of the requirements section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Requirements Section is Not Empty",
      "ID": "TC-049",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Requisiti' section in the application or documentation.",
          "Expected Result": "The 'Requisiti' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Check if the section contains at least one requirement listed.",
          "Expected Result": "At least one requirement is present in the section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Requirements Management",
      "Preconditions": "User is able to access the 'Requisiti' section.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Content Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'Requisiti' section contains at least one requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not validate the correctness of the requirements, only their presence.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Requirements Section Handles Empty State Gracefully",
      "ID": "TC-050",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application or documentation where the 'Requisiti' section is expected, ensuring no requirements are present (simulate or configure empty state).",
          "Expected Result": "The 'Requisiti' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the behavior and messaging when the section is empty.",
          "Expected Result": "A user-friendly message is displayed indicating that no requirements are currently available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Requirements Management",
      "Preconditions": "System is configured so that the 'Requisiti' section contains no requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Section Empty State Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "A clear message is shown when no requirements are present in the section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on empty state handling only.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify successful retrieval of Fantacalcio data for a specific event and brand via API",
      "ID": "TC-051",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Authenticate with the API using valid credentials for the specified brand.",
          "Expected Result": "Authentication is successful and an access token is obtained."
        },
        {
          "Step": 2,
          "Step Description": "Send a GET request to the Fantacalcio API endpoint with the event ID and brand identifier as parameters.",
          "Expected Result": "API responds with HTTP 200 OK and returns the expected Fantacalcio data for the specified event and brand."
        }
      ],
      "Test Group": "backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "API is accessible; valid credentials for the brand are available; the event exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio data retrieval for specific event and brand",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid API credentials, existing event ID, valid brand identifier",
      "Expected Result": "Fantacalcio data for the specified event and brand is successfully retrieved via API.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify API returns error for invalid event ID when requesting Fantacalcio data",
      "ID": "TC-052",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Authenticate with the API using valid credentials for the specified brand.",
          "Expected Result": "Authentication is successful and an access token is obtained."
        },
        {
          "Step": 2,
          "Step Description": "Send a GET request to the Fantacalcio API endpoint with an invalid event ID and a valid brand identifier.",
          "Expected Result": "API responds with an appropriate error code (e.g., 404 Not Found or 400 Bad Request) and error message indicating the event does not exist."
        }
      ],
      "Test Group": "backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "API is accessible; valid credentials for the brand are available; invalid event ID is known.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio data retrieval error handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid API credentials, invalid event ID, valid brand identifier",
      "Expected Result": "API returns an error indicating the event does not exist when an invalid event ID is provided.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify API returns error for unauthorized access when using invalid credentials",
      "ID": "TC-053",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to authenticate with the API using invalid credentials for the specified brand.",
          "Expected Result": "Authentication fails and an error message is returned (e.g., HTTP 401 Unauthorized)."
        }
      ],
      "Test Group": "backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "API is accessible; invalid credentials are available.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio API authentication",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid API credentials, valid event ID, valid brand identifier",
      "Expected Result": "API denies access and returns an authentication error when invalid credentials are used.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Fantacalcio API response time for data retrieval is within acceptable limits",
      "ID": "TC-054",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Authenticate with the API using valid credentials for the specified brand.",
          "Expected Result": "Authentication is successful and an access token is obtained."
        },
        {
          "Step": 2,
          "Step Description": "Send a GET request to the Fantacalcio API endpoint with valid event ID and brand identifier, and measure the response time.",
          "Expected Result": "API responds within the defined SLA (e.g., less than 2 seconds) and returns the expected data."
        }
      ],
      "Test Group": "backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "API is accessible; valid credentials for the brand are available; the event exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio API performance",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid API credentials, existing event ID, valid brand identifier",
      "Expected Result": "Fantacalcio API responds within the acceptable response time for data retrieval.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Fantacalcio API returns error for unsupported brand identifier",
      "ID": "TC-055",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Authenticate with the API using valid credentials for a supported brand.",
          "Expected Result": "Authentication is successful and an access token is obtained."
        },
        {
          "Step": 2,
          "Step Description": "Send a GET request to the Fantacalcio API endpoint with a valid event ID and an unsupported brand identifier.",
          "Expected Result": "API responds with an appropriate error code (e.g., 400 Bad Request) and error message indicating the brand is not supported."
        }
      ],
      "Test Group": "backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Fantacalcio API Integration",
      "Preconditions": "API is accessible; valid credentials for a supported brand are available; the event exists in the system; unsupported brand identifier is known.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio API brand validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid API credentials, existing event ID, unsupported brand identifier",
      "Expected Result": "API returns an error indicating the brand is not supported when an unsupported brand identifier is provided.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "requirement"
    },
    {
      "Title": "Fantacalcio is prioritized for Prematch Campetti on Serie A for Sisal Brand",
      "ID": "TC-056",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application as an end user on the Sisal brand interface.",
          "Expected Result": "User is successfully logged in and navigated to the Sisal brand interface."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Calcio discipline and select the Serie A manifestation.",
          "Expected Result": "Serie A manifestation page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Open the Prematch Campetti view for an upcoming Serie A match.",
          "Expected Result": "Prematch Campetti view is loaded for the selected match."
        },
        {
          "Step": 4,
          "Step Description": "Verify the data source/provider for the Campetti view.",
          "Expected Result": "Fantacalcio is displayed as the data provider for the Prematch Campetti view."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio is configured as the prioritized provider for Serie A on Sisal brand. Test environment is updated with the latest release.",
      "Execution Mode": "Manual",
      "Functionality": "Provider prioritization for Prematch Campetti",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sisal brand user account, Serie A match with available Prematch Campetti data from Fantacalcio.",
      "Expected Result": "Fantacalcio is used as the provider for Prematch Campetti on Serie A for Sisal brand.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 2"
    },
    {
      "Title": "Standard provider is used for Prematch Campetti on Serie A for non-Sisal Brands",
      "ID": "TC-057",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application as an end user on the Pokerstars brand interface.",
          "Expected Result": "User is successfully logged in and navigated to the Pokerstars brand interface."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Calcio discipline and select the Serie A manifestation.",
          "Expected Result": "Serie A manifestation page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Open the Prematch Campetti view for an upcoming Serie A match.",
          "Expected Result": "Prematch Campetti view is loaded for the selected match."
        },
        {
          "Step": 4,
          "Step Description": "Verify the data source/provider for the Campetti view.",
          "Expected Result": "V4 Soccer Sportradar is displayed as the data provider for the Prematch Campetti view."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio is prioritized only for Sisal brand. Pokerstars brand is configured to use the standard provider.",
      "Execution Mode": "Manual",
      "Functionality": "Provider prioritization for Prematch Campetti",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Pokerstars brand user account, Serie A match with available Prematch Campetti data from V4 Soccer Sportradar.",
      "Expected Result": "V4 Soccer Sportradar is used as the provider for Prematch Campetti on Serie A for Pokerstars brand.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 2"
    },
    {
      "Title": "Fantacalcio prioritization does not affect Live Campetti provider",
      "ID": "TC-058",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application as an end user on the Sisal brand interface.",
          "Expected Result": "User is successfully logged in and navigated to the Sisal brand interface."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Calcio discipline and select the Serie A manifestation.",
          "Expected Result": "Serie A manifestation page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Open the Live Campetti view for an ongoing Serie A match.",
          "Expected Result": "Live Campetti view is loaded for the selected match."
        },
        {
          "Step": 4,
          "Step Description": "Verify the data source/provider for the Live Campetti view.",
          "Expected Result": "V4 Soccer Sportradar is displayed as the data provider for the Live Campetti view, regardless of Fantacalcio prioritization for Prematch."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Live Campetti View",
      "Preconditions": "Fantacalcio is prioritized for Prematch Campetti on Serie A for Sisal brand. Live Campetti is always provided by V4 Soccer Sportradar.",
      "Execution Mode": "Manual",
      "Functionality": "Provider prioritization for Live Campetti",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sisal brand user account, ongoing Serie A match with available Live Campetti data from V4 Soccer Sportradar.",
      "Expected Result": "Live Campetti view always uses V4 Soccer Sportradar as the provider, even when Fantacalcio is prioritized for Prematch.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 2"
    },
    {
      "Title": "Fantacalcio prioritization applies only to specified manifestations and brands",
      "ID": "TC-059",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application as an end user on the Sisal brand interface.",
          "Expected Result": "User is successfully logged in and navigated to the Sisal brand interface."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Calcio discipline and select a manifestation (e.g., Serie B) not configured for Fantacalcio prioritization.",
          "Expected Result": "Serie B manifestation page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Open the Prematch Campetti view for an upcoming Serie B match.",
          "Expected Result": "Prematch Campetti view is loaded for the selected match."
        },
        {
          "Step": 4,
          "Step Description": "Verify the data source/provider for the Campetti view.",
          "Expected Result": "V4 Soccer Sportradar is displayed as the data provider for the Prematch Campetti view."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio is prioritized only for Serie A on Sisal brand. Serie B is not configured for Fantacalcio prioritization.",
      "Execution Mode": "Manual",
      "Functionality": "Provider prioritization for Prematch Campetti",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sisal brand user account, Serie B match with available Prematch Campetti data from V4 Soccer Sportradar.",
      "Expected Result": "Fantacalcio is not used as the provider for manifestations or brands not explicitly configured for prioritization.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 2"
    },
    {
      "Title": "Metatemplate/tab giocatori prematch uses Fantacalcio only where prioritized",
      "ID": "TC-060",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application as an end user on the Sisal brand interface.",
          "Expected Result": "User is successfully logged in and navigated to the Sisal brand interface."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Calcio discipline and select the Serie A manifestation.",
          "Expected Result": "Serie A manifestation page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Open the Prematch Campetti view and access the metatemplate/tab giocatori prematch for an upcoming Serie A match.",
          "Expected Result": "Metatemplate/tab giocatori prematch is displayed for the selected match."
        },
        {
          "Step": 4,
          "Step Description": "Verify the data source/provider for the metatemplate/tab giocatori prematch.",
          "Expected Result": "Fantacalcio is displayed as the data provider for the metatemplate/tab giocatori prematch."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio is prioritized for Serie A on Sisal brand. Test environment is updated with the latest release.",
      "Execution Mode": "Manual",
      "Functionality": "Provider prioritization for metatemplate/tab giocatori prematch",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sisal brand user account, Serie A match with available metatemplate/tab giocatori prematch data from Fantacalcio.",
      "Expected Result": "Fantacalcio is used as the provider for the metatemplate/tab giocatori prematch only where prioritized.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 2"
    },
    {
      "Title": "System behavior when Fantacalcio data is unavailable for prioritized manifestation/brand",
      "ID": "TC-061",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application as an end user on the Sisal brand interface.",
          "Expected Result": "User is successfully logged in and navigated to the Sisal brand interface."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Calcio discipline and select the Serie A manifestation.",
          "Expected Result": "Serie A manifestation page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Open the Prematch Campetti view for an upcoming Serie A match where Fantacalcio data is intentionally unavailable.",
          "Expected Result": "Prematch Campetti view attempts to load data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system's behavior and any fallback mechanisms.",
          "Expected Result": "System displays an appropriate error message or fallback to standard provider (if specified by business rules). No data corruption or crash occurs."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Campetti View",
      "Preconditions": "Fantacalcio is prioritized for Serie A on Sisal brand. Fantacalcio data is unavailable for the selected match.",
      "Execution Mode": "Manual",
      "Functionality": "Provider prioritization and error handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sisal brand user account, Serie A match with unavailable Fantacalcio data.",
      "Expected Result": "System handles Fantacalcio data unavailability gracefully, with appropriate messaging or fallback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 2"
    },
    {
      "Title": "Fantacalcio API Exclusion for Postponed Events (Status 6)",
      "ID": "TC-062",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a soccer event in the system with Status field set to '6' (postponed) via the event API.",
          "Expected Result": "Event with Status '6' is found and its details are accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access Fantacalcio API functionalities for the identified event from the Sisal platform (e.g., retrieve Fantacalcio data, submit Fantacalcio-related actions).",
          "Expected Result": "Fantacalcio API functionalities are not available for the event; access is blocked or returns an appropriate error message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "At least one event exists in the system with Status field set to '6' (postponed). Sisal platform is connected to both Fantacalcio and Sportradar Soccer V4 APIs.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio API exclusion for postponed events",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with Status '6' (postponed) in the event API.",
      "Expected Result": "Fantacalcio API is not accessible for events with Status '6' (postponed) on the Sisal platform.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 3"
    },
    {
      "Title": "Official Lineups Retrieval for Postponed Events (Status 6)",
      "ID": "TC-063",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a soccer event in the system with Status field set to '6' (postponed) via the event API.",
          "Expected Result": "Event with Status '6' is found and its details are accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to retrieve lineup data for the postponed event from the Sisal platform.",
          "Expected Result": "Lineup data is retrieved successfully."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the lineup data is sourced exclusively from the Sportradar Soccer V4 API and not from Fantacalcio API.",
          "Expected Result": "Lineup data matches the official data from Sportradar Soccer V4 API; no data is sourced from Fantacalcio API."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Lineup Data Management",
      "Preconditions": "At least one event exists in the system with Status field set to '6' (postponed). Sisal platform is connected to Sportradar Soccer V4 API.",
      "Execution Mode": "Manual",
      "Functionality": "Official lineup retrieval for postponed events",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with Status '6' (postponed) in the event API; official lineup data available in Sportradar Soccer V4 API.",
      "Expected Result": "For postponed events (Status '6'), lineup data is retrieved only from Sportradar Soccer V4 API.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 3"
    },
    {
      "Title": "Fantacalcio API Accessibility for Non-Postponed Events (Status not 6)",
      "ID": "TC-064",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a soccer event in the system with Status field set to a value other than '6' (e.g., '1' for scheduled, '2' for ongoing, etc.) via the event API.",
          "Expected Result": "Event with Status not equal to '6' is found and its details are accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access Fantacalcio API functionalities for the identified event from the Sisal platform.",
          "Expected Result": "Fantacalcio API functionalities are available and accessible for the event."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "At least one event exists in the system with Status field not equal to '6'. Sisal platform is connected to Fantacalcio API.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio API accessibility for non-postponed events",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with Status not equal to '6' in the event API.",
      "Expected Result": "Fantacalcio API is accessible for events with Status not equal to '6' on the Sisal platform.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 3"
    },
    {
      "Title": "Error Handling When Accessing Fantacalcio API for Postponed Events",
      "ID": "TC-065",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a soccer event in the system with Status field set to '6' (postponed) via the event API.",
          "Expected Result": "Event with Status '6' is found and its details are accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to programmatically access Fantacalcio API endpoints for the postponed event (e.g., via direct API call or UI action).",
          "Expected Result": "Fantacalcio API returns a clear and user-friendly error message indicating that the service is unavailable for postponed events."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "At least one event exists in the system with Status field set to '6'. Sisal platform is connected to Fantacalcio API.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for Fantacalcio API exclusion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with Status '6' (postponed) in the event API.",
      "Expected Result": "Fantacalcio API returns a clear error message when accessed for postponed events (Status '6').",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 3"
    },
    {
      "Title": "Fantacalcio API Exclusion Regression Test for Postponed Events",
      "ID": "TC-066",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify multiple soccer events in the system, some with Status '6' (postponed) and others with different statuses.",
          "Expected Result": "Events with various statuses are found and their details are accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access Fantacalcio API functionalities for each event from the Sisal platform.",
          "Expected Result": "Fantacalcio API is inaccessible for events with Status '6' and accessible for events with other statuses."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "Multiple events exist in the system with varying Status values. Sisal platform is connected to Fantacalcio API.",
      "Execution Mode": "Manual",
      "Functionality": "Regression test for Fantacalcio API exclusion logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Multiple events with different Status values in the event API.",
      "Expected Result": "Fantacalcio API is excluded only for events with Status '6' and remains accessible for all other events.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 3"
    },
    {
      "Title": "Fantacalcio API is used only for matches with the highest Match Day value in MatchCalendar",
      "ID": "TC-067",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the MatchCalendar API for a specific competition (e.g., Serie A).",
          "Expected Result": "The API returns a list of matches with their associated Match Day values."
        },
        {
          "Step": 2,
          "Step Description": "Identify all matches currently quoted in the system (palinsesto) for that competition.",
          "Expected Result": "A list of quoted matches is available, each with its Match Day value."
        },
        {
          "Step": 3,
          "Step Description": "Determine the highest Match Day value among the quoted matches.",
          "Expected Result": "The highest Match Day value is correctly identified."
        },
        {
          "Step": 4,
          "Step Description": "For each quoted match, check if its Match Day equals the highest Match Day value.",
          "Expected Result": "Matches are correctly classified as either current/imminent (highest Match Day) or recovery (lower Match Day)."
        },
        {
          "Step": 5,
          "Step Description": "Verify that Fantacalcio API is used only for matches with the highest Match Day value.",
          "Expected Result": "Fantacalcio API is used exclusively for matches with the highest Match Day value."
        },
        {
          "Step": 6,
          "Step Description": "Verify that for matches with lower Match Day values (recoveries), Fantacalcio API is not used and Sportradar is used for official lineups only.",
          "Expected Result": "Fantacalcio API is not used for recovery matches; Sportradar is used for official lineups."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "MatchCalendar API is accessible; quoted matches for multiple Match Days are present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Match Day-based API selection for Fantacalcio",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample MatchCalendar API response with matches from different Match Days (e.g., Match Day 7 and Match Day 20).",
      "Expected Result": "Fantacalcio API is used only for matches with the highest Match Day value; recovery matches use Sportradar for official lineups only.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4"
    },
    {
      "Title": "Fantacalcio API is excluded for recovery matches (lower Match Day) even if quoted",
      "ID": "TC-068",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the MatchCalendar API for a specific competition (e.g., Serie A).",
          "Expected Result": "The API returns a list of matches with their associated Match Day values."
        },
        {
          "Step": 2,
          "Step Description": "Identify a quoted match in the system with a lower Match Day value than the current highest (e.g., recovery match).",
          "Expected Result": "A quoted recovery match is identified (e.g., Bologna-Milan, Match Day 7, when Match Day 20 is the highest)."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to retrieve Fantacalcio data for the recovery match.",
          "Expected Result": "Fantacalcio API is not called or returns no data for the recovery match."
        },
        {
          "Step": 4,
          "Step Description": "Verify that Sportradar is used for official lineups for the recovery match.",
          "Expected Result": "Sportradar provides the official lineups for the recovery match."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "MatchCalendar API is accessible; at least one quoted recovery match and one quoted current match are present.",
      "Execution Mode": "Manual",
      "Functionality": "Exclusion of Fantacalcio API for recovery matches",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample MatchCalendar API response with at least one recovery match (lower Match Day) and one current match (highest Match Day).",
      "Expected Result": "Fantacalcio API is not used for recovery matches; Sportradar is used for official lineups.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4"
    },
    {
      "Title": "Fantacalcio API is used for all matches when only one Match Day is quoted",
      "ID": "TC-069",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the MatchCalendar API for a specific competition (e.g., Serie A).",
          "Expected Result": "The API returns a list of matches with their associated Match Day values."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that all quoted matches in the system belong to the same Match Day (e.g., only Match Day 20 is quoted).",
          "Expected Result": "All quoted matches have the same Match Day value."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Fantacalcio API is used for all quoted matches.",
          "Expected Result": "Fantacalcio API is used for all matches since they all have the highest (and only) Match Day value."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "MatchCalendar API is accessible; all quoted matches are from the same Match Day.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio API usage when only one Match Day is present",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample MatchCalendar API response with all matches from the same Match Day.",
      "Expected Result": "Fantacalcio API is used for all quoted matches when only one Match Day is present.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4"
    },
    {
      "Title": "System handles edge case: No matches quoted for the highest Match Day",
      "ID": "TC-070",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the MatchCalendar API for a specific competition (e.g., Serie A).",
          "Expected Result": "The API returns a list of matches with their associated Match Day values."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that the quoted matches in the system do not include any match from the highest Match Day present in the API.",
          "Expected Result": "No quoted matches have the highest Match Day value."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Fantacalcio API is not used for any quoted match.",
          "Expected Result": "Fantacalcio API is not used for any match, as none are from the highest Match Day."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "MatchCalendar API is accessible; quoted matches are only from lower Match Days, not the highest.",
      "Execution Mode": "Manual",
      "Functionality": "Fantacalcio API exclusion when no matches from highest Match Day are quoted",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample MatchCalendar API response with quoted matches only from lower Match Days.",
      "Expected Result": "Fantacalcio API is not used for any quoted match if none are from the highest Match Day.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4"
    },
    {
      "Title": "System correctly updates Fantacalcio API usage when new Match Day is quoted",
      "ID": "TC-071",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the MatchCalendar API for a specific competition (e.g., Serie A).",
          "Expected Result": "The API returns a list of matches with their associated Match Day values."
        },
        {
          "Step": 2,
          "Step Description": "Initially, ensure that only matches from Match Day 19 are quoted and verify Fantacalcio API is used for these matches.",
          "Expected Result": "Fantacalcio API is used for all quoted matches from Match Day 19."
        },
        {
          "Step": 3,
          "Step Description": "Add matches from a new, higher Match Day (e.g., Match Day 20) to the quoted matches.",
          "Expected Result": "Quoted matches now include both Match Day 19 and Match Day 20."
        },
        {
          "Step": 4,
          "Step Description": "Verify that Fantacalcio API is now used only for matches from Match Day 20, and not for Match Day 19.",
          "Expected Result": "Fantacalcio API is used only for matches from the new highest Match Day; previous Match Day matches are excluded."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "MatchCalendar API is accessible; system allows updating quoted matches to include new Match Days.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of Fantacalcio API usage based on quoted Match Days",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample MatchCalendar API response with initial and updated quoted matches (Match Day 19, then Match Day 20).",
      "Expected Result": "Fantacalcio API usage is dynamically updated to match only the highest quoted Match Day.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4"
    },
    {
      "Title": "System handles error scenario: MatchCalendar API unavailable",
      "ID": "TC-072",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where the MatchCalendar API is unavailable or returns an error.",
          "Expected Result": "The system detects the unavailability or error from the MatchCalendar API."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to determine which matches should use Fantacalcio API.",
          "Expected Result": "The system cannot determine the highest Match Day due to the API error."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system does not use Fantacalcio API for any match and logs an appropriate error message.",
          "Expected Result": "Fantacalcio API is not used; an error is logged or displayed as per system design."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fantacalcio Integration",
      "Preconditions": "MatchCalendar API is intentionally made unavailable or returns an error response.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for MatchCalendar API unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated MatchCalendar API error response (e.g., HTTP 500, timeout).",
      "Expected Result": "Fantacalcio API is not used if MatchCalendar API is unavailable; error is logged or displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4"
    },
    {
      "Title": "Fallback to Sportradar Soccer V4 when Fantacalcio API is unavailable for prioritized brands/events",
      "ID": "TC-073",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a prematch event for a brand/manifestation prioritized for Fantacalcio data.",
          "Expected Result": "A valid prematch event with Fantacalcio as the primary data source is selected."
        },
        {
          "Step": 2,
          "Step Description": "Simulate or ensure the unavailability of Fantacalcio API for the selected event (e.g., by disabling access or using a test environment where Fantacalcio is not available).",
          "Expected Result": "The system detects that Fantacalcio API is not available for the event."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the process that fetches official lineups for the prematch event.",
          "Expected Result": "The system attempts to retrieve official lineups."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system uses Sportradar Soccer V4 API to fetch the official lineups as a fallback.",
          "Expected Result": "Official lineups are retrieved from Sportradar Soccer V4 API."
        },
        {
          "Step": 5,
          "Step Description": "Check that the retrieved lineups are displayed or processed correctly in the application.",
          "Expected Result": "Lineups from Sportradar Soccer V4 are correctly shown or used in the system for the prematch event."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Prematch Data Integration",
      "Preconditions": "At least one prematch event for a prioritized brand/manifestation is available. Fantacalcio API is set as primary but is unavailable for the test event.",
      "Execution Mode": "Manual",
      "Functionality": "Fallback mechanism for official lineups data source",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event ID, brand/manifestation with Fantacalcio priority, test credentials for API access.",
      "Expected Result": "When Fantacalcio API is unavailable for prioritized brands/events, the system automatically uses Sportradar Soccer V4 API to retrieve and display official lineups for prematch events.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 5"
    },
    {
      "Title": "System does NOT use fallback for non-prioritized brands/events when Fantacalcio API is unavailable",
      "ID": "TC-074",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a prematch event for a brand/manifestation NOT prioritized for Fantacalcio data.",
          "Expected Result": "A valid prematch event with no Fantacalcio priority is selected."
        },
        {
          "Step": 2,
          "Step Description": "Simulate or ensure the unavailability of Fantacalcio API for the selected event.",
          "Expected Result": "The system detects that Fantacalcio API is not available for the event."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the process that fetches official lineups for the prematch event.",
          "Expected Result": "The system attempts to retrieve official lineups."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system does NOT use Sportradar Soccer V4 API as a fallback for this event.",
          "Expected Result": "No fallback to Sportradar Soccer V4 occurs; system behavior aligns with business rules for non-prioritized brands/events."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Data Integration",
      "Preconditions": "At least one prematch event for a non-prioritized brand/manifestation is available. Fantacalcio API is unavailable for the test event.",
      "Execution Mode": "Manual",
      "Functionality": "Fallback mechanism restriction for non-prioritized brands/events",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event ID, brand/manifestation without Fantacalcio priority, test credentials for API access.",
      "Expected Result": "For non-prioritized brands/events, the system does not use Sportradar Soccer V4 as a fallback when Fantacalcio API is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 5"
    },
    {
      "Title": "Error handling when both Fantacalcio and Sportradar APIs are unavailable for prioritized events",
      "ID": "TC-075",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a prematch event for a brand/manifestation prioritized for Fantacalcio data.",
          "Expected Result": "A valid prematch event with Fantacalcio as the primary data source is selected."
        },
        {
          "Step": 2,
          "Step Description": "Simulate the unavailability of both Fantacalcio API and Sportradar Soccer V4 API for the selected event.",
          "Expected Result": "The system detects that both APIs are unavailable."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the process that fetches official lineups for the prematch event.",
          "Expected Result": "The system attempts to retrieve official lineups."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system handles the error gracefully (e.g., logs the error, displays a user-friendly message, does not crash).",
          "Expected Result": "System provides a clear error message or status indicating that official lineups are unavailable due to data source issues."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Prematch Data Integration",
      "Preconditions": "At least one prematch event for a prioritized brand/manifestation is available. Both Fantacalcio and Sportradar APIs are unavailable for the test event.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for unavailable data sources",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event ID, brand/manifestation with Fantacalcio priority, test credentials for API access.",
      "Expected Result": "If both Fantacalcio and Sportradar APIs are unavailable, the system gracefully handles the error and informs the user or logs the issue appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 5"
    },
    {
      "Title": "Correct logging and audit trail for fallback activation",
      "ID": "TC-076",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a prematch event for a brand/manifestation prioritized for Fantacalcio data.",
          "Expected Result": "A valid prematch event with Fantacalcio as the primary data source is selected."
        },
        {
          "Step": 2,
          "Step Description": "Simulate the unavailability of Fantacalcio API for the selected event.",
          "Expected Result": "The system detects that Fantacalcio API is not available for the event."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the process that fetches official lineups for the prematch event.",
          "Expected Result": "The system attempts to retrieve official lineups."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system logs the fallback activation, including timestamp, event ID, and data source used (Sportradar Soccer V4).",
          "Expected Result": "A log entry is created with all relevant details about the fallback activation."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Prematch Data Integration",
      "Preconditions": "At least one prematch event for a prioritized brand/manifestation is available. Fantacalcio API is unavailable for the test event. Logging/audit system is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Audit and logging for fallback mechanism",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event ID, brand/manifestation with Fantacalcio priority, test credentials for API access, access to system logs.",
      "Expected Result": "System logs all fallback activations with sufficient detail for audit and troubleshooting purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 5"
    },
    {
      "Title": "Verify Player Section Displays Fantacalcio Data for Relevant Matches",
      "ID": "TC-077",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to a match for which Fantacalcio is set as the priority for the Brand.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Open the 'Giocatori' section (Metatemplate Giocatori/Tab Giocatori) for the selected match.",
          "Expected Result": "The 'Giocatori' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that player information is populated using data from the Fantacalcio API.",
          "Expected Result": "Player information (e.g., names, stats, roles) is displayed and matches the data provided by the Fantacalcio API."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Player Section (Giocatori)",
      "Preconditions": "Fantacalcio is set as the priority for the selected match's Brand. Fantacalcio API is available and returns valid data.",
      "Execution Mode": "Manual",
      "Functionality": "Display of player information using Fantacalcio API",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with Fantacalcio priority, valid Fantacalcio API response",
      "Expected Result": "Player section displays accurate and complete data from Fantacalcio API for relevant matches.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Player Section Does Not Display Fantacalcio Data for Non-Priority Matches",
      "ID": "TC-078",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to a match for which Fantacalcio is NOT set as the priority for the Brand.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Open the 'Giocatori' section for the selected match.",
          "Expected Result": "The 'Giocatori' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that player information is NOT populated using data from the Fantacalcio API.",
          "Expected Result": "Player information is displayed using the default data source, not Fantacalcio."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Player Section (Giocatori)",
      "Preconditions": "Fantacalcio is NOT set as the priority for the selected match's Brand. Default data source is available.",
      "Execution Mode": "Manual",
      "Functionality": "Conditional display of player information based on data source priority",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match without Fantacalcio priority, valid default data source",
      "Expected Result": "Player section does not use Fantacalcio data for non-priority matches.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Error Handling When Fantacalcio API is Unavailable",
      "ID": "TC-079",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to a match for which Fantacalcio is set as the priority for the Brand.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate Fantacalcio API being unavailable (e.g., by disconnecting network or using a mock error response).",
          "Expected Result": "Fantacalcio API does not return data."
        },
        {
          "Step": 3,
          "Step Description": "Open the 'Giocatori' section for the selected match.",
          "Expected Result": "The 'Giocatori' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify the application's behavior when Fantacalcio data cannot be retrieved.",
          "Expected Result": "An appropriate error message or fallback is displayed, and the application does not crash."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Player Section (Giocatori)",
      "Preconditions": "Fantacalcio is set as the priority for the selected match's Brand. Fantacalcio API is unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for external API failures",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with Fantacalcio priority, Fantacalcio API unavailable",
      "Expected Result": "Application gracefully handles Fantacalcio API errors in the player section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify UI Consistency of Player Section with Fantacalcio Data",
      "ID": "TC-080",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to a match for which Fantacalcio is set as the priority for the Brand.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Open the 'Giocatori' section for the selected match.",
          "Expected Result": "The 'Giocatori' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the layout, fonts, and colors of the player section are consistent with the application's design guidelines when displaying Fantacalcio data.",
          "Expected Result": "UI elements in the player section are consistent and visually aligned with the rest of the application."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Player Section (Giocatori)",
      "Preconditions": "Fantacalcio is set as the priority for the selected match's Brand. Fantacalcio API is available and returns valid data.",
      "Execution Mode": "Manual",
      "Functionality": "UI consistency for Fantacalcio data display",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Match with Fantacalcio priority, valid Fantacalcio API response",
      "Expected Result": "Player section UI is consistent with application standards when displaying Fantacalcio data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Player Section Updates When Fantacalcio Priority Changes",
      "ID": "TC-081",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to a match for which Fantacalcio is NOT initially set as the priority for the Brand.",
          "Expected Result": "The match details page is displayed with default player data."
        },
        {
          "Step": 2,
          "Step Description": "Change the priority setting for the match's Brand to Fantacalcio (simulate via admin or configuration tool).",
          "Expected Result": "Fantacalcio is now set as the priority for the match's Brand."
        },
        {
          "Step": 3,
          "Step Description": "Refresh or reopen the 'Giocatori' section for the match.",
          "Expected Result": "The 'Giocatori' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that player information is now populated using data from the Fantacalcio API.",
          "Expected Result": "Player information updates to reflect Fantacalcio API data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Player Section (Giocatori)",
      "Preconditions": "Ability to change Brand priority for a match. Both default and Fantacalcio data sources are available.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of player data source based on priority change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with configurable Brand priority, valid Fantacalcio and default data sources",
      "Expected Result": "Player section updates to show Fantacalcio data when priority is changed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Default Landing on Campo View for Fantacalcio Priority Events",
      "ID": "TC-082",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application and navigate to the list of events for a manifestation/brand with Fantacalcio in priority.",
          "Expected Result": "The list of available matches is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select an event for which either probable or official lineups are available via the Fantacalcio API.",
          "Expected Result": "The event details page loads."
        },
        {
          "Step": 3,
          "Step Description": "Observe the default view/tab presented to the user upon entering the event.",
          "Expected Result": "The Campo view is displayed by default (not any other tab or template)."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "At least one event exists for a manifestation/brand with Fantacalcio in priority and has probable or official lineups available via API.",
      "Execution Mode": "Manual",
      "Functionality": "Default landing on Campo view for Fantacalcio priority events",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with Fantacalcio priority and available lineups",
      "Expected Result": "Upon selecting a relevant event, the user lands by default on the Campo view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 6"
    },
    {
      "Title": "Display of 'Probabili Formazioni' Wording When Any Starter Has <100% Probability",
      "ID": "TC-083",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application and navigate to an event with Fantacalcio in priority and probable lineups available.",
          "Expected Result": "The event details page loads with Campo view displayed."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that at least one starter in the API response has a 'percent' value less than 100%.",
          "Expected Result": "API response contains at least one starter with percent < 100."
        },
        {
          "Step": 3,
          "Step Description": "Observe the wording displayed at the top of the Campo view.",
          "Expected Result": "The wording 'Probabili Formazioni' is displayed."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "Event with Fantacalcio in priority and probable lineups available. At least one starter in API response has percent < 100.",
      "Execution Mode": "Manual",
      "Functionality": "Display of 'Probabili Formazioni' wording based on starter percent values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API response with at least one starter percent < 100",
      "Expected Result": "The wording 'Probabili Formazioni' is shown when any starter has a percent value less than 100%.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 6"
    },
    {
      "Title": "Display of 'Formazioni Ufficiali' Wording When All Starters Have 100% Probability",
      "ID": "TC-084",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application and navigate to an event with Fantacalcio in priority and official lineups available.",
          "Expected Result": "The event details page loads with Campo view displayed."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that all starters in the API response have a 'percent' value equal to 100%.",
          "Expected Result": "API response contains all starters with percent = 100."
        },
        {
          "Step": 3,
          "Step Description": "Observe the wording displayed at the top of the Campo view.",
          "Expected Result": "The wording 'Formazioni Ufficiali' is displayed."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "Event with Fantacalcio in priority and official lineups available. All starters in API response have percent = 100.",
      "Execution Mode": "Manual",
      "Functionality": "Display of 'Formazioni Ufficiali' wording based on starter percent values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API response with all starters percent = 100",
      "Expected Result": "The wording 'Formazioni Ufficiali' is shown when all starters have a percent value of 100%.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 6"
    },
    {
      "Title": "Campo View Not Default for Non-Fantacalcio Priority Events",
      "ID": "TC-085",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application and navigate to the list of events for a manifestation/brand without Fantacalcio in priority.",
          "Expected Result": "The list of available matches is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select an event for which probable or official lineups are available via the Fantacalcio API.",
          "Expected Result": "The event details page loads."
        },
        {
          "Step": 3,
          "Step Description": "Observe the default view/tab presented to the user upon entering the event.",
          "Expected Result": "A view other than Campo (e.g., default metatemplate or another tab) is displayed by default."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "At least one event exists for a manifestation/brand without Fantacalcio in priority and has probable or official lineups available via API.",
      "Execution Mode": "Manual",
      "Functionality": "Default landing view for non-Fantacalcio priority events",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event without Fantacalcio priority and available lineups",
      "Expected Result": "For non-Fantacalcio priority events, the Campo view is not the default landing view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 6"
    },
    {
      "Title": "Campo View Wording Not Displayed When No Lineups Available",
      "ID": "TC-086",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application and navigate to an event with Fantacalcio in priority but with no probable or official lineups available via API.",
          "Expected Result": "The event details page loads with Campo view displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the top of the Campo view for any wording related to lineups.",
          "Expected Result": "No wording ('Probabili Formazioni' or 'Formazioni Ufficiali') is displayed."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "Event with Fantacalcio in priority but no lineups available via API.",
      "Execution Mode": "Manual",
      "Functionality": "Campo view wording display when no lineups are available",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with Fantacalcio priority and no lineups in API",
      "Expected Result": "No lineup wording is shown when no lineups are available for the event.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 6"
    },
    {
      "Title": "Campo View Wording Updates Dynamically When Lineup Status Changes",
      "ID": "TC-087",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application and navigate to an event with Fantacalcio in priority and probable lineups available (at least one starter percent < 100).",
          "Expected Result": "The Campo view displays 'Probabili Formazioni' wording."
        },
        {
          "Step": 2,
          "Step Description": "Simulate or wait for the API to update so that all starters now have percent = 100 (official lineups).",
          "Expected Result": "API response now contains all starters with percent = 100."
        },
        {
          "Step": 3,
          "Step Description": "Refresh or re-enter the event's Campo view.",
          "Expected Result": "The wording updates to 'Formazioni Ufficiali'."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "Event with Fantacalcio in priority. API initially returns at least one starter percent < 100, then updates to all starters percent = 100.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of Campo view wording based on lineup status change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with changing lineup status in API",
      "Expected Result": "The Campo view wording updates dynamically according to the latest lineup status from the API.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 6"
    },
    {
      "Title": "Correct Rendering of Player Formation Based on 'Trend' and 'Starter' Fields (4-2-3-1 Example)",
      "ID": "TC-088",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Campetto' view in the Sisal client for a match with available ProbableLineup Full API data.",
          "Expected Result": "The 'Campetto' view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the API response contains the 'Trend' field set to '4231' and the 'Starter' field with 11 players in a specific order.",
          "Expected Result": "The 'Trend' field is '4231' and the 'Starter' list contains 11 players in the order provided by the API."
        },
        {
          "Step": 3,
          "Step Description": "Observe the graphical field ('Campetto') and the placement of each player.",
          "Expected Result": "Players are positioned according to the 4-2-3-1 formation, following the order from the 'Starter' list: 1st is goalkeeper, 2nd is right back, 3rd is right center back, 4th is left center back, 5th is left back, 6th is right defensive midfielder, 7th is left defensive midfielder, 8th is right winger, 9th is attacking midfielder, 10th is left winger, 11th is striker."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "High",
      "Test Stage": "UAT, PRE-PROD",
      "Reference System": "Vista Campo - Modulo di gioco",
      "Preconditions": "ProbableLineup Full API returns valid 'Trend' (e.g., '4231') and 'Starter' fields for the selected match. User is authenticated and has access to the 'Campetto' view.",
      "Execution Mode": "Manual",
      "Functionality": "Player formation rendering based on API data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API response with 'Trend':'4231' and ordered 'Starter' list of 11 players.",
      "Expected Result": "Players are displayed in the correct positions on the field according to the 4-2-3-1 formation, strictly following the order from the 'Starter' list, ignoring the 'position' attribute.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU7"
    },
    {
      "Title": "Ignore 'position' Attribute in Player Placement",
      "ID": "TC-089",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Campetto' view for a match where the 'position' attribute in the API response does not match the expected order for the formation.",
          "Expected Result": "The 'Campetto' view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the player positions on the field are determined solely by the order in the 'Starter' list and the 'Trend' formation, not by the 'position' attribute.",
          "Expected Result": "Players are placed according to the order in the 'Starter' list and the 'Trend' formation, regardless of the 'position' attribute values."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "High",
      "Test Stage": "UAT, PRE-PROD",
      "Reference System": "Vista Campo - Modulo di gioco",
      "Preconditions": "API response contains mismatched 'position' attributes for players in the 'Starter' list. User is authenticated and has access to the 'Campetto' view.",
      "Execution Mode": "Manual",
      "Functionality": "Player placement logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API response with 'Trend':'4231', 'Starter' list in a specific order, and 'position' attributes not matching the order.",
      "Expected Result": "Player placement on the field ignores the 'position' attribute and follows only the 'Starter' order and 'Trend' formation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU7"
    },
    {
      "Title": "Support for Different Formations (e.g., 4-4-2, 3-5-2)",
      "ID": "TC-090",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Campetto' view for a match where the API 'Trend' field specifies a formation other than '4231' (e.g., '442', '352').",
          "Expected Result": "The 'Campetto' view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the number of players and their arrangement on the field correspond to the specified formation in the 'Trend' field, following the order in the 'Starter' list.",
          "Expected Result": "Players are displayed in the correct positions for the specified formation, strictly following the order from the 'Starter' list."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT, PRE-PROD",
      "Reference System": "Vista Campo - Modulo di gioco",
      "Preconditions": "API response contains a valid 'Trend' field with a supported formation (e.g., '442', '352') and a corresponding 'Starter' list. User is authenticated and has access to the 'Campetto' view.",
      "Execution Mode": "Manual",
      "Functionality": "Formation flexibility and rendering",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API response with 'Trend':'442' and ordered 'Starter' list of 11 players.",
      "Expected Result": "Players are displayed in the correct positions for the given formation, following the order in the 'Starter' list.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU7"
    },
    {
      "Title": "Error Handling When 'Starter' List Has Fewer Than 11 Players",
      "ID": "TC-091",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Campetto' view for a match where the API 'Starter' field contains fewer than 11 players.",
          "Expected Result": "The 'Campetto' view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Observe the field rendering and any error or warning messages displayed to the user.",
          "Expected Result": "The system displays a clear warning or error message indicating incomplete lineup data, and the field does not attempt to render an incomplete formation."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT, PRE-PROD",
      "Reference System": "Vista Campo - Modulo di gioco",
      "Preconditions": "API response contains a 'Starter' list with fewer than 11 players. User is authenticated and has access to the 'Campetto' view.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for incomplete data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API response with 'Trend':'4231' and 'Starter' list of 9 players.",
      "Expected Result": "A clear warning or error message is shown, and the field does not display an incomplete formation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU7"
    },
    {
      "Title": "Error Handling When 'Trend' Field Is Missing or Invalid",
      "ID": "TC-092",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Campetto' view for a match where the API response is missing the 'Trend' field or contains an invalid value (e.g., empty string, unsupported format).",
          "Expected Result": "The 'Campetto' view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Observe the field rendering and any error or warning messages displayed to the user.",
          "Expected Result": "The system displays a clear warning or error message indicating missing or invalid formation data, and the field does not attempt to render the formation."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT, PRE-PROD",
      "Reference System": "Vista Campo - Modulo di gioco",
      "Preconditions": "API response is missing the 'Trend' field or contains an invalid value. User is authenticated and has access to the 'Campetto' view.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing/invalid formation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API response with missing or invalid 'Trend' field.",
      "Expected Result": "A clear warning or error message is shown, and the field does not display the formation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU7"
    },
    {
      "Title": "Correct Player Order: Top-to-Bottom, Right-to-Left Placement",
      "ID": "TC-093",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Campetto' view for a match with a valid 'Trend' and 'Starter' list.",
          "Expected Result": "The 'Campetto' view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Verify that players are placed on the field from top to bottom and right to left, as per the order in the 'Starter' list and the formation specified in 'Trend'.",
          "Expected Result": "Players are displayed in the correct sequence: starting from the topmost, rightmost position and proceeding leftwards and downwards, matching the order in the 'Starter' list."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT, PRE-PROD",
      "Reference System": "Vista Campo - Modulo di gioco",
      "Preconditions": "API response contains valid 'Trend' and 'Starter' fields. User is authenticated and has access to the 'Campetto' view.",
      "Execution Mode": "Manual",
      "Functionality": "Player placement order logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "API response with 'Trend':'4231' and ordered 'Starter' list of 11 players.",
      "Expected Result": "Players are placed on the field from top to bottom and right to left, strictly following the 'Starter' list order.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU7"
    },
    {
      "Title": "Display Bench Players in Correct Order on Field View",
      "ID": "TC-094",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Field View (Vista Campo) for a specific match.",
          "Expected Result": "Field View is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the 'Bench' field data from the Fantacalcio service for the selected match.",
          "Expected Result": "Bench data is successfully retrieved, containing a list of non-starting players in a specific order."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Panchina' section is populated with the players from the 'Bench' field.",
          "Expected Result": "All players from the 'Bench' field are displayed in the 'Panchina' section."
        },
        {
          "Step": 4,
          "Step Description": "Check that the order of players in the 'Panchina' section matches exactly the order provided by the Fantacalcio service response.",
          "Expected Result": "The order of players in the 'Panchina' section matches the order in the Fantacalcio service response."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Vista Campo - Gestione Panchina",
      "Preconditions": "Fantacalcio service is available and returns a valid response with a non-empty 'Bench' field for the selected match.",
      "Execution Mode": "Manual",
      "Functionality": "Display of bench players in correct order",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Fantacalcio service response with a known ordered list of bench players.",
      "Expected Result": "The 'Panchina' section displays all bench players in the exact order provided by the Fantacalcio service.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU8"
    },
    {
      "Title": "Handle Empty Bench List Gracefully",
      "ID": "TC-095",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Field View (Vista Campo) for a match where the Fantacalcio service returns an empty 'Bench' field.",
          "Expected Result": "Field View is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the 'Panchina' section.",
          "Expected Result": "The 'Panchina' section is empty or displays a message indicating no bench players are available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Vista Campo - Gestione Panchina",
      "Preconditions": "Fantacalcio service is available and returns an empty 'Bench' field for the selected match.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of empty bench list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Fantacalcio service response with an empty 'Bench' field.",
      "Expected Result": "The 'Panchina' section is empty or shows an appropriate message when no bench players are available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU8"
    },
    {
      "Title": "Do Not Display Starting Players in Bench Section",
      "ID": "TC-096",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Field View (Vista Campo) for a match where the Fantacalcio service provides both 'Starting' and 'Bench' fields.",
          "Expected Result": "Field View is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that only players listed in the 'Bench' field are displayed in the 'Panchina' section.",
          "Expected Result": "No player from the 'Starting' field appears in the 'Panchina' section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Vista Campo - Gestione Panchina",
      "Preconditions": "Fantacalcio service returns both 'Starting' and 'Bench' fields with non-overlapping player lists.",
      "Execution Mode": "Manual",
      "Functionality": "Exclusion of starting players from bench display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Fantacalcio service response with distinct 'Starting' and 'Bench' player lists.",
      "Expected Result": "Only players from the 'Bench' field are shown in the 'Panchina' section; no starting players are present.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU8"
    },
    {
      "Title": "Bench Section Updates When Fantacalcio Service Response Changes",
      "ID": "TC-097",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Field View (Vista Campo) for a match.",
          "Expected Result": "Field View is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate an update in the Fantacalcio service response, changing the order or content of the 'Bench' field.",
          "Expected Result": "Bench data is updated in the backend."
        },
        {
          "Step": 3,
          "Step Description": "Refresh or revisit the Field View.",
          "Expected Result": "The 'Panchina' section reflects the updated list and order of bench players as per the latest Fantacalcio service response."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Vista Campo - Gestione Panchina",
      "Preconditions": "Fantacalcio service supports updates and the system is able to fetch the latest data.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of bench section based on service response",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Two different Fantacalcio service responses for the same match, with different 'Bench' lists/orders.",
      "Expected Result": "The 'Panchina' section updates to reflect any changes in the 'Bench' field from the Fantacalcio service.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU8"
    },
    {
      "Title": "Bench Section Handles Service Failure Gracefully",
      "ID": "TC-098",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Field View (Vista Campo) for a match when the Fantacalcio service is unavailable or returns an error for the 'Bench' field.",
          "Expected Result": "Field View attempts to load."
        },
        {
          "Step": 2,
          "Step Description": "Observe the 'Panchina' section.",
          "Expected Result": "An appropriate error message or placeholder is displayed, indicating that bench data is unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Vista Campo - Gestione Panchina",
      "Preconditions": "Fantacalcio service is unavailable or returns an error for the 'Bench' field.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for bench data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated Fantacalcio service error or downtime for the 'Bench' field.",
      "Expected Result": "The 'Panchina' section displays an error message or placeholder when bench data cannot be retrieved.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU8"
    },
    {
      "Title": "Display of Titolarità Percentage for All Players in Campo View",
      "ID": "TC-099",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Probabili Formazioni' section of the application.",
          "Expected Result": "The 'Probabili Formazioni' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' view.",
          "Expected Result": "The 'Campo' view is displayed, showing both starting players and bench players."
        },
        {
          "Step": 3,
          "Step Description": "Observe each player item (both starters and bench) in the 'Campo' view.",
          "Expected Result": "Each player item displays a visual indicator of the titolarità percentage."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Probabili Formazioni - Campo View",
      "Preconditions": "User is authenticated and has access to the 'Probabili Formazioni' feature. Probable formation data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Display of titolarità percentage for all players in Campo view.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Probable formation data with various titolarità percentages for both starters and bench players.",
      "Expected Result": "All player items in the Campo view (starters and bench) display the titolarità percentage as a visual indicator.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 9"
    },
    {
      "Title": "Titolarità Percentage Visual Indicator: 0% to 49% Range",
      "ID": "TC-100",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Probabili Formazioni' section and switch to the 'Campo' view.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify a player with a titolarità percentage between 0% and 49%.",
          "Expected Result": "A player with a titolarità percentage in the specified range is present."
        },
        {
          "Step": 3,
          "Step Description": "Observe the visual indicator for this player.",
          "Expected Result": "The visual indicator matches the characteristics and color defined in the Figma for the 0%-49% range."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Probabili Formazioni - Campo View",
      "Preconditions": "User is authenticated. At least one player has a titolarità percentage between 0% and 49%.",
      "Execution Mode": "Manual",
      "Functionality": "Display of correct visual indicator for titolarità percentage 0%-49%.",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Player data with titolarità percentage set to 35%.",
      "Expected Result": "The player with 35% titolarità displays the correct visual indicator as per Figma for the 0%-49% range.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 9"
    },
    {
      "Title": "Titolarità Percentage Visual Indicator: 50% to 84% Range",
      "ID": "TC-101",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Probabili Formazioni' section and switch to the 'Campo' view.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify a player with a titolarità percentage between 50% and 84%.",
          "Expected Result": "A player with a titolarità percentage in the specified range is present."
        },
        {
          "Step": 3,
          "Step Description": "Observe the visual indicator for this player.",
          "Expected Result": "The visual indicator matches the characteristics and color defined in the Figma for the 50%-84% range."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Probabili Formazioni - Campo View",
      "Preconditions": "User is authenticated. At least one player has a titolarità percentage between 50% and 84%.",
      "Execution Mode": "Manual",
      "Functionality": "Display of correct visual indicator for titolarità percentage 50%-84%.",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Player data with titolarità percentage set to 75%.",
      "Expected Result": "The player with 75% titolarità displays the correct visual indicator as per Figma for the 50%-84% range.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 9"
    },
    {
      "Title": "Titolarità Percentage Visual Indicator: 85% to 100% Range",
      "ID": "TC-102",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Probabili Formazioni' section and switch to the 'Campo' view.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify a player with a titolarità percentage between 85% and 100%.",
          "Expected Result": "A player with a titolarità percentage in the specified range is present."
        },
        {
          "Step": 3,
          "Step Description": "Observe the visual indicator for this player.",
          "Expected Result": "The visual indicator matches the characteristics and color defined in the Figma for the 85%-100% range."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Probabili Formazioni - Campo View",
      "Preconditions": "User is authenticated. At least one player has a titolarità percentage between 85% and 100%.",
      "Execution Mode": "Manual",
      "Functionality": "Display of correct visual indicator for titolarità percentage 85%-100%.",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Player data with titolarità percentage set to 90%.",
      "Expected Result": "The player with 90% titolarità displays the correct visual indicator as per Figma for the 85%-100% range.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 9"
    },
    {
      "Title": "Titolarità Percentage Displayed When All Players Are at 100% (Official Formation)",
      "ID": "TC-103",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Probabili Formazioni' section and switch to the 'Campo' view.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Ensure the formation is marked as official and all players have a titolarità percentage of 100%.",
          "Expected Result": "All players in the formation have 100% titolarità."
        },
        {
          "Step": 3,
          "Step Description": "Observe the visual indicator for each player.",
          "Expected Result": "Each player displays the titolarità percentage (100%) as a visual indicator, as per Figma."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Probabili Formazioni - Campo View",
      "Preconditions": "User is authenticated. Formation is set as official with all players at 100% titolarità.",
      "Execution Mode": "Manual",
      "Functionality": "Display of titolarità percentage when all players are at 100%.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Official formation data with all players at 100% titolarità.",
      "Expected Result": "All players in the official formation display the 100% titolarità indicator as per Figma.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 9"
    },
    {
      "Title": "Titolarità Percentage Not Displayed in Lista View",
      "ID": "TC-104",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Probabili Formazioni' section of the application.",
          "Expected Result": "The 'Probabili Formazioni' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Lista' view.",
          "Expected Result": "The 'Lista' view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe each player item in the 'Lista' view.",
          "Expected Result": "No titolarità percentage indicator is displayed for any player in the 'Lista' view."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Probabili Formazioni - Lista View",
      "Preconditions": "User is authenticated and has access to the 'Probabili Formazioni' feature.",
      "Execution Mode": "Manual",
      "Functionality": "Absence of titolarità percentage indicator in Lista view.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Probable formation data with various titolarità percentages.",
      "Expected Result": "No titolarità percentage indicator is shown for any player in the Lista view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 9"
    },
    {
      "Title": "Titolarità Percentage Visual Indicator: Boundary Values (49%, 50%, 84%, 85%)",
      "ID": "TC-105",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Probabili Formazioni' section and switch to the 'Campo' view.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify players with titolarità percentages at the boundary values: 49%, 50%, 84%, and 85%.",
          "Expected Result": "Players with titolarità percentages of 49%, 50%, 84%, and 85% are present."
        },
        {
          "Step": 3,
          "Step Description": "Observe the visual indicator for each player.",
          "Expected Result": "Each player displays the correct visual indicator as per Figma for their respective range (49%: 0-49%, 50%: 50-84%, 84%: 50-84%, 85%: 85-100%)."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Probabili Formazioni - Campo View",
      "Preconditions": "User is authenticated. Players with titolarità percentages at 49%, 50%, 84%, and 85% exist.",
      "Execution Mode": "Manual",
      "Functionality": "Correct handling of boundary values for titolarità percentage visual indicator.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Player data with titolarità percentages at 49%, 50%, 84%, and 85%.",
      "Expected Result": "Players at boundary values display the correct visual indicator for their respective range as per Figma.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 9"
    },
    {
      "Title": "Verify UI Alignment of 'Campo' View with Figma Specifications",
      "ID": "TC-106",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the 'Giocatori' section.",
          "Expected Result": "The 'Giocatori' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the 'Campo' view within the 'Giocatori' section.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Compare the UI elements (layout, colors, fonts, icons, spacing, and controls) of the 'Campo' view with the Figma design specifications for this feature.",
          "Expected Result": "All UI elements in the 'Campo' view match the Figma design specifications."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Giocatori - Campo View",
      "Preconditions": "User is logged into the application with access to the 'Giocatori' section. Figma design specifications are available for reference.",
      "Execution Mode": "Manual",
      "Functionality": "UI Consistency and Compliance",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; Figma design files for 'Campo' view.",
      "Expected Result": "The 'Campo' view UI is fully aligned with the Figma specifications, with no visual discrepancies.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers visual alignment but not interactive or functional behaviors.",
      "_polarion": "RU 20"
    },
    {
      "Title": "Verify UI Consistency of 'Campo' View Across Different Providers",
      "ID": "TC-107",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the 'Giocatori' section.",
          "Expected Result": "The 'Giocatori' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch between different providers (if applicable) within the 'Giocatori' section.",
          "Expected Result": "The provider is changed and the 'Campo' view is updated accordingly."
        },
        {
          "Step": 3,
          "Step Description": "Observe the 'Campo' view UI for each provider and compare with the Figma design.",
          "Expected Result": "The 'Campo' view UI remains consistent and matches the Figma design for all providers."
        }
      ],
      "Test Group": "App Android",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Giocatori - Campo View",
      "Preconditions": "User is logged in; multiple providers are available for selection; Figma design specifications are available.",
      "Execution Mode": "Manual",
      "Functionality": "UI Consistency Across Providers",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; at least two providers configured; Figma design files.",
      "Expected Result": "The 'Campo' view UI is consistent and matches the Figma design regardless of the selected provider.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover functional differences between providers, only UI consistency.",
      "_polarion": "RU 20"
    },
    {
      "Title": "Verify Unification of 'Campo' View UI with App Scommesse Implementation",
      "ID": "TC-108",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Campo' view in the 'Giocatori' section of the current application.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Access the corresponding 'Campo' view in the App Scommesse application.",
          "Expected Result": "The 'Campo' view in App Scommesse is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Compare the UI elements (layout, colors, fonts, icons, controls) between both applications.",
          "Expected Result": "The UI of the 'Campo' view in both applications is unified and visually identical as per the requirement."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Giocatori - Campo View",
      "Preconditions": "User has access to both the current application and App Scommesse; both applications are installed and accessible; Figma design is available.",
      "Execution Mode": "Manual",
      "Functionality": "UI Unification with App Scommesse",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials for both applications; Figma design files.",
      "Expected Result": "The 'Campo' view UI is unified and consistent with the App Scommesse implementation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on visual unification, not on backend or data consistency.",
      "_polarion": "RU 20"
    },
    {
      "Title": "Verify Responsiveness of 'Campo' View UI on Different Devices",
      "ID": "TC-109",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application on a smartphone and navigate to the 'Campo' view in the 'Giocatori' section.",
          "Expected Result": "The 'Campo' view is displayed and UI elements are correctly rendered on the smartphone."
        },
        {
          "Step": 2,
          "Step Description": "Repeat the process on a tablet device.",
          "Expected Result": "The 'Campo' view is displayed and UI elements are correctly rendered on the tablet."
        },
        {
          "Step": 3,
          "Step Description": "Repeat the process on a desktop computer.",
          "Expected Result": "The 'Campo' view is displayed and UI elements are correctly rendered on the desktop."
        },
        {
          "Step": 4,
          "Step Description": "Compare the layout and element alignment with the Figma responsive design specifications for each device type.",
          "Expected Result": "The UI adapts responsively and matches the Figma design for each device."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Giocatori - Campo View",
      "Preconditions": "User is logged in; application is accessible on smartphone, tablet, and desktop; Figma responsive design specifications are available.",
      "Execution Mode": "Manual",
      "Functionality": "UI Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; Figma responsive design files.",
      "Expected Result": "The 'Campo' view UI is responsive and visually correct on all supported devices as per Figma.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only visual responsiveness, not functional behavior on different devices.",
      "_polarion": "RU 20"
    },
    {
      "Title": "Verify Error Handling for Missing or Corrupted UI Assets in 'Campo' View",
      "ID": "TC-110",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where one or more UI assets (e.g., icons, images) required for the 'Campo' view are missing or corrupted.",
          "Expected Result": "The application loads the 'Campo' view with missing/corrupted assets."
        },
        {
          "Step": 2,
          "Step Description": "Observe the application's behavior and any fallback mechanisms (e.g., placeholder images, error messages).",
          "Expected Result": "The application displays appropriate placeholders or error indicators as per UI guidelines, without breaking the layout."
        }
      ],
      "Test Group": "App Android",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Giocatori - Campo View",
      "Preconditions": "Test environment allows manipulation of UI assets; user is logged in; Figma guidelines for error handling are available.",
      "Execution Mode": "Manual",
      "Functionality": "UI Error Handling",
      "Test Type": "ux_ui",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials; manipulated/missing UI asset files.",
      "Expected Result": "The application gracefully handles missing or corrupted UI assets in the 'Campo' view, maintaining layout integrity and providing user feedback as per Figma.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on error scenarios for UI assets only.",
      "_polarion": "RU 20"
    },
    {
      "Title": "Display of 'Ultime dai campi' Text for Squadra 1 in Campo View",
      "ID": "TC-111",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Campo view in the client application.",
          "Expected Result": "Campo view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select Squadra 1 from the available team options.",
          "Expected Result": "Squadra 1 is selected and highlighted in the UI."
        },
        {
          "Step": 3,
          "Step Description": "Observe the 'Ultime dai campi' section for Squadra 1.",
          "Expected Result": "The HTML text from the 'Text' field of the LastFromFields API for Squadra 1 is displayed correctly, preserving formatting."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Ultime dai campi",
      "Preconditions": "User is logged in and has access to the Campo view. LastFromFields API is available and returns valid data for Squadra 1.",
      "Execution Mode": "Manual",
      "Functionality": "Display of team-specific news from API in Campo view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; API returns sample HTML text for Squadra 1: '<b>Ultime notizie Squadra 1</b>'",
      "Expected Result": "When Squadra 1 is selected, the corresponding HTML text from the LastFromFields API is displayed in the Campo view, formatted as per the HTML content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 10"
    },
    {
      "Title": "Display of 'Ultime dai campi' Text for Squadra 2 in Campo View",
      "ID": "TC-112",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Campo view in the client application.",
          "Expected Result": "Campo view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select Squadra 2 from the available team options.",
          "Expected Result": "Squadra 2 is selected and highlighted in the UI."
        },
        {
          "Step": 3,
          "Step Description": "Observe the 'Ultime dai campi' section for Squadra 2.",
          "Expected Result": "The HTML text from the 'Text' field of the LastFromFields API for Squadra 2 is displayed correctly, preserving formatting."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Ultime dai campi",
      "Preconditions": "User is logged in and has access to the Campo view. LastFromFields API is available and returns valid data for Squadra 2.",
      "Execution Mode": "Manual",
      "Functionality": "Display of team-specific news from API in Campo view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; API returns sample HTML text for Squadra 2: '<i>Ultime notizie Squadra 2</i>'",
      "Expected Result": "When Squadra 2 is selected, the corresponding HTML text from the LastFromFields API is displayed in the Campo view, formatted as per the HTML content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 10"
    },
    {
      "Title": "Switching Between Teams Updates 'Ultime dai campi' Text Appropriately",
      "ID": "TC-113",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Campo view in the client application.",
          "Expected Result": "Campo view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select Squadra 1 and note the displayed 'Ultime dai campi' text.",
          "Expected Result": "HTML text for Squadra 1 is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Switch selection to Squadra 2.",
          "Expected Result": "HTML text for Squadra 2 is displayed, replacing Squadra 1's text."
        },
        {
          "Step": 4,
          "Step Description": "Switch back to Squadra 1.",
          "Expected Result": "HTML text for Squadra 1 is displayed again."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Ultime dai campi",
      "Preconditions": "User is logged in and has access to the Campo view. LastFromFields API returns valid data for both teams.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of team news based on selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; API returns distinct HTML texts for both teams.",
      "Expected Result": "Switching between teams updates the 'Ultime dai campi' section to show the correct HTML text for the selected team, with formatting preserved.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 10"
    },
    {
      "Title": "Handling of Missing or Empty 'Text' Field in LastFromFields API",
      "ID": "TC-114",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Campo view in the client application.",
          "Expected Result": "Campo view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a team (e.g., Squadra 1) for which the LastFromFields API returns an empty or missing 'Text' field.",
          "Expected Result": "The 'Ultime dai campi' section handles the missing/empty text gracefully (e.g., displays a default message or remains empty without errors)."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Ultime dai campi",
      "Preconditions": "User is logged in and has access to the Campo view. LastFromFields API returns an empty or missing 'Text' field for the selected team.",
      "Execution Mode": "Manual",
      "Functionality": "Graceful handling of missing API data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; API returns empty or missing 'Text' for Squadra 1.",
      "Expected Result": "If the 'Text' field is missing or empty, the UI does not display errors and handles the situation gracefully (e.g., shows a placeholder or nothing).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 10"
    },
    {
      "Title": "Correct Rendering of HTML Content from API in 'Ultime dai campi' Section",
      "ID": "TC-115",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Campo view in the client application.",
          "Expected Result": "Campo view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a team for which the LastFromFields API returns HTML content with formatting (e.g., bold, italic, lists).",
          "Expected Result": "The 'Ultime dai campi' section displays the HTML content with correct formatting as per the tags."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Ultime dai campi",
      "Preconditions": "User is logged in and has access to the Campo view. LastFromFields API returns HTML-formatted text for the selected team.",
      "Execution Mode": "Manual",
      "Functionality": "Rendering of HTML content from API",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; API returns HTML-formatted text (e.g., '<ul><li>News 1</li><li>News 2</li></ul>') for the selected team.",
      "Expected Result": "HTML content from the API is rendered in the UI with correct formatting (e.g., bold, italic, lists, links).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 10"
    },
    {
      "Title": "API Failure Handling in 'Ultime dai campi' Section",
      "ID": "TC-116",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Campo view in the client application.",
          "Expected Result": "Campo view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a failure in the LastFromFields API (e.g., API returns 500 error or is unreachable) when selecting a team.",
          "Expected Result": "The 'Ultime dai campi' section displays an appropriate error message or placeholder, and the UI remains stable."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Ultime dai campi",
      "Preconditions": "User is logged in and has access to the Campo view. LastFromFields API is unavailable or returns an error for the selected team.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for API failures",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; API returns error or is unreachable.",
      "Expected Result": "If the API fails, the UI handles the error gracefully, displaying a user-friendly message or placeholder without crashing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 10"
    },
    {
      "Title": "Display of Cautioned Players List for Both Teams in Field View",
      "ID": "TC-117",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the match details page.",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' (Field) view for the match.",
          "Expected Result": "'Campo' view is displayed, showing both teams' lineups."
        },
        {
          "Step": 3,
          "Step Description": "Observe the section for cautioned players for each team.",
          "Expected Result": "A list of cautioned players is displayed for both teams, sourced from the 'cautionedsPlayers' field of the ProbableLineupFULL API."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Match Details",
      "Preconditions": "A match with at least one cautioned player per team exists in the ProbableLineupFULL API response.",
      "Execution Mode": "Manual",
      "Functionality": "Display of cautioned players in Campo view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known cautioned players in API response.",
      "Expected Result": "The Campo view displays the correct list of cautioned players for both teams as per the API data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 11"
    },
    {
      "Title": "Campo View Should Not Display Cautioned Players Outside Field View",
      "ID": "TC-118",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the match details page.",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to a view other than 'Campo' (e.g., Statistics, Overview).",
          "Expected Result": "Selected view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of the cautioned players list in the current view.",
          "Expected Result": "No cautioned players list is displayed outside the Campo view."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Match Details",
      "Preconditions": "A match with cautioned players exists in the API response.",
      "Execution Mode": "Manual",
      "Functionality": "Conditional display of cautioned players list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known cautioned players in API response.",
      "Expected Result": "The cautioned players list is only visible in the Campo view and not in other views.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 11"
    },
    {
      "Title": "Campo View Handles Absence of Cautioned Players Gracefully",
      "ID": "TC-119",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the match details page for a match where no players are cautioned (empty 'cautionedsPlayers' in API).",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' (Field) view.",
          "Expected Result": "'Campo' view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the cautioned players section for both teams.",
          "Expected Result": "If no players are cautioned, the cautioned players section is either hidden or displays a message such as 'No cautioned players'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Match Details",
      "Preconditions": "A match with an empty 'cautionedsPlayers' field in the API response.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of empty cautioned players list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with no cautioned players in API response.",
      "Expected Result": "The Campo view does not display an empty or misleading cautioned players list; it is hidden or a suitable message is shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 11"
    },
    {
      "Title": "Campo View Correctly Updates Cautioned Players List on API Change",
      "ID": "TC-120",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the match details page for a match with initial cautioned players.",
          "Expected Result": "Match details page is displayed with the initial cautioned players list."
        },
        {
          "Step": 2,
          "Step Description": "Simulate an update in the ProbableLineupFULL API where the cautioned players list changes (e.g., a player is added or removed).",
          "Expected Result": "API returns updated cautioned players list."
        },
        {
          "Step": 3,
          "Step Description": "Refresh the Campo view.",
          "Expected Result": "Campo view displays the updated cautioned players list as per the latest API response."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Match Details",
      "Preconditions": "Ability to modify or simulate API responses for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of cautioned players list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with modifiable cautioned players in API response.",
      "Expected Result": "The Campo view reflects any changes in the cautioned players list from the API without requiring a full application restart.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 11"
    },
    {
      "Title": "Campo View Displays Cautioned Players List for Both Teams on Mobile",
      "ID": "TC-121",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on a mobile device and navigate to the match details page.",
          "Expected Result": "Match details page is displayed on the mobile device."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' (Field) view for the match.",
          "Expected Result": "'Campo' view is displayed, showing both teams' lineups."
        },
        {
          "Step": 3,
          "Step Description": "Observe the cautioned players section for both teams.",
          "Expected Result": "A list of cautioned players is displayed for both teams, sourced from the 'cautionedsPlayers' field of the ProbableLineupFULL API, and is correctly formatted for mobile display."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Match Details",
      "Preconditions": "A match with at least one cautioned player per team exists in the ProbableLineupFULL API response.",
      "Execution Mode": "Manual",
      "Functionality": "Mobile display of cautioned players in Campo view",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known cautioned players in API response.",
      "Expected Result": "The Campo view on mobile devices displays the cautioned players list for both teams in a user-friendly and readable format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 11"
    },
    {
      "Title": "Display of Disqualified Players List in Field View for Both Teams",
      "ID": "TC-122",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the match details page.",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' (Field) view for the match.",
          "Expected Result": "'Campo' view is displayed, showing both teams' lineups."
        },
        {
          "Step": 3,
          "Step Description": "Observe the section for each team labeled as 'Giocatori Squalificati' or equivalent.",
          "Expected Result": "A list of disqualified players is visible for each team, if any."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the names in the disqualified players list match the 'disqualifiedsPlayers' field from the ProbableLineupFULL API response for each team.",
          "Expected Result": "Displayed disqualified players correspond exactly to the API data for both teams."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Match Field View",
      "Preconditions": "A match with at least one disqualified player per team is available. The ProbableLineupFULL API is accessible and returns valid data for the match.",
      "Execution Mode": "Manual",
      "Functionality": "Display of disqualified players in field view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with known disqualified players in API response.",
      "Expected Result": "For both teams, the list of disqualified players in the 'Campo' view matches the 'disqualifiedsPlayers' field from the API.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU12"
    },
    {
      "Title": "No Disqualified Players Displayed When None Present in API",
      "ID": "TC-123",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the match details page for a match where no players are disqualified for either team.",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' (Field) view for the match.",
          "Expected Result": "'Campo' view is displayed, showing both teams' lineups."
        },
        {
          "Step": 3,
          "Step Description": "Observe the section for each team where disqualified players would be listed.",
          "Expected Result": "No disqualified players are displayed for either team. The section may be hidden or show a message such as 'Nessun giocatore squalificato'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Match Field View",
      "Preconditions": "A match with no disqualified players for either team. The ProbableLineupFULL API returns empty 'disqualifiedsPlayers' arrays.",
      "Execution Mode": "Manual",
      "Functionality": "Display of disqualified players in field view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with empty 'disqualifiedsPlayers' in API response.",
      "Expected Result": "No disqualified players are shown for either team when the API returns none.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU12"
    },
    {
      "Title": "Disqualified Players List Updates When API Data Changes",
      "ID": "TC-124",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the match details page for a match with disqualified players.",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' (Field) view for the match.",
          "Expected Result": "'Campo' view is displayed, showing both teams' lineups and disqualified players."
        },
        {
          "Step": 3,
          "Step Description": "Simulate an update in the ProbableLineupFULL API where the list of disqualified players changes for one or both teams.",
          "Expected Result": "API returns updated 'disqualifiedsPlayers' data."
        },
        {
          "Step": 4,
          "Step Description": "Refresh the 'Campo' view or trigger a data reload.",
          "Expected Result": "The displayed list of disqualified players updates to reflect the new API data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Match Field View",
      "Preconditions": "Ability to update or mock the API response for the match in question.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of disqualified players list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with modifiable API response for 'disqualifiedsPlayers'.",
      "Expected Result": "The list of disqualified players in the 'Campo' view updates in real time or upon refresh to match the latest API data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU12"
    },
    {
      "Title": "Error Handling When API Fails to Return Disqualified Players Data",
      "ID": "TC-125",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the match details page for a match.",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a failure in the ProbableLineupFULL API (e.g., timeout, 500 error, or missing 'disqualifiedsPlayers' field).",
          "Expected Result": "API does not return valid 'disqualifiedsPlayers' data."
        },
        {
          "Step": 3,
          "Step Description": "Switch to the 'Campo' (Field) view for the match.",
          "Expected Result": "'Campo' view is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the section for disqualified players for both teams.",
          "Expected Result": "The application handles the error gracefully, e.g., by hiding the section, showing a default message, or displaying an error notification without breaking the UI."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Match Field View",
      "Preconditions": "Ability to simulate API failure or manipulate API response.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for disqualified players data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match ID with simulated API failure or missing field.",
      "Expected Result": "The application does not crash and provides a user-friendly message or hides the disqualified players section when API data is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU12"
    },
    {
      "Title": "Display of Unavailable Players with Reasons in Field View for Both Teams",
      "ID": "TC-126",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application and access the 'Campo' (Field) view for a match with unavailable players for both teams.",
          "Expected Result": "The 'Campo' view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Observe the section dedicated to unavailable players for Team 1.",
          "Expected Result": "A list of unavailable players for Team 1 is displayed, each with a textual reason for unavailability."
        },
        {
          "Step": 3,
          "Step Description": "Observe the section dedicated to unavailable players for Team 2.",
          "Expected Result": "A list of unavailable players for Team 2 is displayed, each with a textual reason for unavailability."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Unavailable Players",
      "Preconditions": "At least one match exists where both teams have unavailable players defined in the unavailablesPlayers field of the ProbableLineupFULL API.",
      "Execution Mode": "Manual",
      "Functionality": "Display unavailable players and reasons in Campo view for both teams.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with both teams having unavailable players (e.g., Team 1: Player A - Injury, Team 2: Player B - Suspension).",
      "Expected Result": "For both teams, the Campo view displays the correct list of unavailable players with their respective textual reasons, as provided by the API.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU13"
    },
    {
      "Title": "Campo View Does Not Display Unavailable Players Outside Field View",
      "ID": "TC-127",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to a view other than 'Campo' (e.g., Statistics, Overview, or Lineup).",
          "Expected Result": "The selected view is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Check for the presence of the unavailable players list and reasons in this view.",
          "Expected Result": "No list of unavailable players or reasons is displayed outside the Campo view."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Unavailable Players",
      "Preconditions": "The application is loaded with a match where unavailable players exist for at least one team.",
      "Execution Mode": "Manual",
      "Functionality": "Restrict unavailable players list to Campo view only.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with unavailable players for at least one team.",
      "Expected Result": "Unavailable players and their reasons are only visible in the Campo view and not in any other view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU13"
    },
    {
      "Title": "Campo View Handles Absence of Unavailable Players Gracefully",
      "ID": "TC-128",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Campo' (Field) view for a match where neither team has unavailable players in the API response.",
          "Expected Result": "The Campo view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Observe the section where unavailable players would be listed for both teams.",
          "Expected Result": "No unavailable players are displayed; the section is either hidden or shows a message such as 'No unavailable players'."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Unavailable Players",
      "Preconditions": "A match exists in the system where the unavailablesPlayers field is empty or not present for both teams in the API response.",
      "Execution Mode": "Manual",
      "Functionality": "Graceful handling of empty unavailable players list in Campo view.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with no unavailable players for either team.",
      "Expected Result": "If there are no unavailable players, the Campo view does not display the unavailable players section or shows an appropriate message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU13"
    },
    {
      "Title": "Campo View Correctly Displays Multiple Reasons for Unavailability",
      "ID": "TC-129",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Campo' (Field) view for a match where at least one player has multiple reasons for unavailability (e.g., injury and suspension) in the API response.",
          "Expected Result": "The Campo view is displayed for the selected match."
        },
        {
          "Step": 2,
          "Step Description": "Observe the unavailable players list for both teams.",
          "Expected Result": "Players with multiple reasons have all reasons displayed clearly and completely in the list."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Unavailable Players",
      "Preconditions": "A match exists where at least one player in the unavailablesPlayers field has multiple reasons for unavailability.",
      "Execution Mode": "Manual",
      "Functionality": "Display of multiple reasons for player unavailability in Campo view.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with a player having multiple unavailability reasons (e.g., Player C: Injury, Suspension).",
      "Expected Result": "All reasons for each unavailable player are displayed as provided by the API, without truncation or omission.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU13"
    },
    {
      "Title": "Campo View Correctly Updates When API Data Changes (Unavailable Players Added/Removed)",
      "ID": "TC-130",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Campo' (Field) view for a match with initial unavailable players data.",
          "Expected Result": "The Campo view displays the current unavailable players and their reasons as per the API."
        },
        {
          "Step": 2,
          "Step Description": "Simulate an update in the API where unavailable players are added or removed for either team.",
          "Expected Result": "The API now returns an updated list of unavailable players."
        },
        {
          "Step": 3,
          "Step Description": "Refresh or revisit the Campo view for the same match.",
          "Expected Result": "The Campo view reflects the updated unavailable players list and reasons as per the latest API response."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - Unavailable Players",
      "Preconditions": "Ability to update or simulate changes in the unavailablesPlayers field of the API for a given match.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of unavailable players list in Campo view based on API changes.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with initial unavailable players, then updated API data (e.g., Player D added or removed).",
      "Expected Result": "The Campo view always displays the current unavailable players and reasons as per the latest API data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU13"
    },
    {
      "Title": "Display of Ballottaggio Players and Titolarità Percentage in Campo View",
      "ID": "TC-131",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the Campo view for a match with two teams.",
          "Expected Result": "Campo view is displayed with both teams' probable lineups."
        },
        {
          "Step": 2,
          "Step Description": "For each team, identify the positions where there are players in ballottaggio (as per ballotsPlayers field from ProbableLineupFULL API).",
          "Expected Result": "Positions with ballottaggio are visually indicated in the Campo view."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each ballottaggio position, both players are displayed as a pair within the same role.",
          "Expected Result": "Both players in ballottaggio are shown together for the same role."
        },
        {
          "Step": 4,
          "Step Description": "Check that the titolarità percentage is displayed next to each ballottaggio player.",
          "Expected Result": "Each ballottaggio player has their titolarità percentage clearly shown."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View - ProbableLineupFULL Integration",
      "Preconditions": "A match with at least one ballottaggio position per team is available. User is authenticated and has access to the Campo view.",
      "Execution Mode": "Manual",
      "Functionality": "Display of ballottaggio players and titolarità percentage in Campo view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ProbableLineupFULL API returns ballotsPlayers data for both teams with titolarità percentages (e.g., Team A: Player X 60%, Player Y 40%).",
      "Expected Result": "In the Campo view, for each team, all ballottaggio pairs are displayed for the same role, with each player's titolarità percentage shown as per the API data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU14"
    },
    {
      "Title": "Campo View: Absence of Ballottaggio Players When Not Present in API",
      "ID": "TC-132",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the Campo view for a match where the ballotsPlayers field is empty in the ProbableLineupFULL API response.",
          "Expected Result": "Campo view is displayed for both teams."
        },
        {
          "Step": 2,
          "Step Description": "Verify that no ballottaggio pairs or titolarità percentages are displayed for any role.",
          "Expected Result": "No ballottaggio players or titolarità percentages are shown in the Campo view."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - ProbableLineupFULL Integration",
      "Preconditions": "A match with no ballottaggio positions (ballotsPlayers field is empty). User is authenticated and has access to the Campo view.",
      "Execution Mode": "Manual",
      "Functionality": "Conditional display of ballottaggio players based on API data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ProbableLineupFULL API returns ballotsPlayers as an empty array for both teams.",
      "Expected Result": "No ballottaggio players or titolarità percentages are displayed in the Campo view when ballotsPlayers is empty.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU14"
    },
    {
      "Title": "Campo View: Handling of Invalid or Missing Titolarità Percentage in API",
      "ID": "TC-133",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the Campo view for a match where ballotsPlayers contains a player with a missing or invalid titolarità percentage (e.g., null or non-numeric value).",
          "Expected Result": "Campo view is displayed for both teams."
        },
        {
          "Step": 2,
          "Step Description": "Verify how the application displays the titolarità percentage for the affected player(s).",
          "Expected Result": "The application handles the missing/invalid titolarità gracefully (e.g., displays '-', 'N/A', or hides the percentage), without breaking the layout or causing errors."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - ProbableLineupFULL Integration",
      "Preconditions": "A match where ballotsPlayers contains at least one player with missing or invalid titolarità percentage. User is authenticated and has access to the Campo view.",
      "Execution Mode": "Manual",
      "Functionality": "Robustness of titolarità percentage display for ballottaggio players",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ProbableLineupFULL API returns ballotsPlayers with one player having titolarità: null or 'abc'.",
      "Expected Result": "Campo view displays a placeholder or omits the titolarità percentage for players with invalid/missing data, maintaining UI integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU14"
    },
    {
      "Title": "Campo View: Ballottaggio Players Displayed Only in Campo View, Not in Other Views",
      "ID": "TC-134",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the Campo view for a match with ballottaggio players.",
          "Expected Result": "Campo view displays ballottaggio pairs and titolarità percentages as per requirements."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to another view (e.g., List, Statistics, or any view other than Campo) for the same match.",
          "Expected Result": "No ballottaggio pairs or titolarità percentages are displayed in views other than Campo."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - ProbableLineupFULL Integration",
      "Preconditions": "A match with ballottaggio players available in the API. User is authenticated and can access multiple views.",
      "Execution Mode": "Manual",
      "Functionality": "Scope limitation of ballottaggio players display to Campo view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ProbableLineupFULL API returns ballotsPlayers for the match. Other views are accessible for the same match.",
      "Expected Result": "Ballottaggio players and titolarità percentages are shown only in the Campo view and not in any other view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU14"
    },
    {
      "Title": "Campo View: Ballottaggio Players Displayed for Both Teams",
      "ID": "TC-135",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the Campo view for a match where both teams have ballottaggio players in at least one position each.",
          "Expected Result": "Campo view is displayed with both teams' probable lineups."
        },
        {
          "Step": 2,
          "Step Description": "Verify that ballottaggio pairs and titolarità percentages are displayed for both teams, not just one.",
          "Expected Result": "Ballottaggio pairs and titolarità percentages are shown for both teams in the Campo view."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View - ProbableLineupFULL Integration",
      "Preconditions": "A match where ballotsPlayers is populated for both teams. User is authenticated and has access to the Campo view.",
      "Execution Mode": "Manual",
      "Functionality": "Display of ballottaggio players for both teams in Campo view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ProbableLineupFULL API returns ballotsPlayers for both teams (e.g., Team A: Player X/Y, Team B: Player Z/W).",
      "Expected Result": "Ballottaggio pairs and titolarità percentages are displayed for both teams in the Campo view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU14"
    },
    {
      "Title": "Display of Doubtful Players List in Field View for Both Teams",
      "ID": "TC-136",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application and access the match details page.",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Field View' (Vista Campo) for the selected match.",
          "Expected Result": "'Field View' is displayed, showing both teams' lineups."
        },
        {
          "Step": 3,
          "Step Description": "Observe the section dedicated to 'Doubtful Players' for Team 1.",
          "Expected Result": "A list of doubtful players for Team 1 is displayed, each with a textual reason."
        },
        {
          "Step": 4,
          "Step Description": "Observe the section dedicated to 'Doubtful Players' for Team 2.",
          "Expected Result": "A list of doubtful players for Team 2 is displayed, each with a textual reason."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Field View - Probable Lineup",
      "Preconditions": "At least one match is available with doubtful players data present in the 'doubtsPlayers' field of the ProbableLineupFULL API response.",
      "Execution Mode": "Manual",
      "Functionality": "Display of doubtful players in Field View",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with at least one doubtful player per team (API response includes 'doubtsPlayers' for both teams).",
      "Expected Result": "In Field View, both teams display a list of doubtful players with their respective textual reasons, as provided by the API.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 15"
    },
    {
      "Title": "Absence of Doubtful Players Section When No Data Present",
      "ID": "TC-137",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application and access the match details page for a match with no doubtful players.",
          "Expected Result": "Match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Field View' (Vista Campo) for the selected match.",
          "Expected Result": "'Field View' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the area where the 'Doubtful Players' section would appear for both teams.",
          "Expected Result": "No 'Doubtful Players' section or message is displayed for either team."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Field View - Probable Lineup",
      "Preconditions": "A match is available where the 'doubtsPlayers' field in the API response is empty or not present for both teams.",
      "Execution Mode": "Manual",
      "Functionality": "Conditional display of doubtful players section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with no doubtful players (API response has empty or missing 'doubtsPlayers').",
      "Expected Result": "If there are no doubtful players, the section is not displayed for either team in Field View.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 15"
    },
    {
      "Title": "Correct Mapping of Doubtful Players Data from API to UI",
      "ID": "TC-138",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Intercept or review the ProbableLineupFULL API response for a match in Field View.",
          "Expected Result": "API response is available and contains 'doubtsPlayers' data for both teams."
        },
        {
          "Step": 2,
          "Step Description": "Compare the list of doubtful players and their reasons from the API response with what is displayed in the UI for both teams.",
          "Expected Result": "Each doubtful player and their textual reason in the UI matches exactly with the API data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Field View - Probable Lineup",
      "Preconditions": "Ability to access or intercept the API response for a match with doubtful players.",
      "Execution Mode": "Manual",
      "Functionality": "Data integrity between API and UI for doubtful players",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known 'doubtsPlayers' data in API.",
      "Expected Result": "All doubtful players and their reasons are displayed in the UI exactly as provided by the API for both teams.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 15"
    },
    {
      "Title": "Display of Doubtful Players with Special Characters in Reason Text",
      "ID": "TC-139",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare or select a match where the 'doubtsPlayers' field contains reasons with special characters (e.g., accented letters, punctuation).",
          "Expected Result": "API response includes special characters in the 'reason' field for at least one doubtful player."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Field View for the selected match.",
          "Expected Result": "Field View is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the display of the doubtful player's reason containing special characters.",
          "Expected Result": "Special characters are rendered correctly and legibly in the UI."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Field View - Probable Lineup",
      "Preconditions": "Match with at least one doubtful player whose reason contains special characters in the API response.",
      "Execution Mode": "Manual",
      "Functionality": "Correct rendering of special characters in doubtful player reasons",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with 'doubtsPlayers' reason field containing special characters (e.g., 'infortunio all’inguine').",
      "Expected Result": "Special characters in the reason text are displayed correctly for all doubtful players.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 15"
    },
    {
      "Title": "Display of Doubtful Players List on Mobile Devices",
      "ID": "TC-140",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on a mobile device and access the match details page.",
          "Expected Result": "Match details page is displayed on the mobile device."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Field View' (Vista Campo) for the selected match.",
          "Expected Result": "'Field View' is displayed, adapted for mobile layout."
        },
        {
          "Step": 3,
          "Step Description": "Observe the 'Doubtful Players' section for both teams.",
          "Expected Result": "Doubtful players and their reasons are displayed correctly and are readable on the mobile device."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Field View - Probable Lineup",
      "Preconditions": "Mobile device with the application installed. Match with at least one doubtful player per team.",
      "Execution Mode": "Manual",
      "Functionality": "Mobile compatibility for doubtful players display",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Match with at least one doubtful player per team, accessed via mobile app.",
      "Expected Result": "Doubtful players and their reasons are displayed correctly and legibly in Field View on mobile devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 15"
    },
    {
      "Title": "Verify Stadium Name Displayed Only in Field View",
      "ID": "TC-141",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the match list and select a specific match.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Field View' (vista Campo) for the selected match.",
          "Expected Result": "The Field View is displayed for the selected match."
        },
        {
          "Step": 3,
          "Step Description": "Observe the information displayed in the Field View, focusing on the stadium name.",
          "Expected Result": "The stadium name is displayed in the Field View, matching the value from the 'Stadium' field in the ProbableLineupFULL API for the selected match."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Match Details - Field View",
      "Preconditions": "User is authenticated and has access to the match list. At least one match is available with stadium information in the API.",
      "Execution Mode": "Manual",
      "Functionality": "Display of stadium name in Field View",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known stadium name in ProbableLineupFULL API response.",
      "Expected Result": "The stadium name is displayed only in the Field View and matches the API value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 16"
    },
    {
      "Title": "Verify Stadium Name Not Displayed in Other Views",
      "ID": "TC-142",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the match list and select a specific match.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to a view other than 'Field View' (e.g., Statistics, Overview, Lineup).",
          "Expected Result": "The selected view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check if the stadium name is present anywhere in the current view.",
          "Expected Result": "The stadium name is NOT displayed in any view other than Field View."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Match Details - Other Views",
      "Preconditions": "User is authenticated and has access to the match list. At least one match is available with stadium information in the API.",
      "Execution Mode": "Manual",
      "Functionality": "Restriction of stadium name display to Field View only",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known stadium name in ProbableLineupFULL API response.",
      "Expected Result": "The stadium name is not displayed in any view except Field View.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 16"
    },
    {
      "Title": "Verify Stadium Name Matches API Value",
      "ID": "TC-143",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain the stadium name for a specific match from the ProbableLineupFULL API response.",
          "Expected Result": "The stadium name is retrieved from the API."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the match details and open the Field View for the same match in the application.",
          "Expected Result": "The Field View is displayed for the selected match."
        },
        {
          "Step": 3,
          "Step Description": "Compare the stadium name displayed in the Field View with the value from the API.",
          "Expected Result": "The stadium name displayed in the Field View matches exactly the value from the API."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "API Integration - Stadium Name",
      "Preconditions": "User is authenticated. API endpoint ProbableLineupFULL is accessible and returns stadium information for the selected match.",
      "Execution Mode": "Manual",
      "Functionality": "Data consistency between API and UI",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known stadium name in ProbableLineupFULL API response.",
      "Expected Result": "The stadium name in Field View matches the API value exactly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 16"
    },
    {
      "Title": "Verify Behavior When Stadium Name is Missing in API",
      "ID": "TC-144",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Select a match for which the ProbableLineupFULL API does not provide a stadium name (Stadium field is missing or empty).",
          "Expected Result": "Match details are available for selection."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Field View for the selected match.",
          "Expected Result": "The Field View is displayed for the selected match."
        },
        {
          "Step": 3,
          "Step Description": "Observe the area where the stadium name would normally be displayed.",
          "Expected Result": "No stadium name is displayed, or a default placeholder (e.g., '-') is shown, as per UI specification."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "API Integration - Stadium Name Missing",
      "Preconditions": "User is authenticated. API endpoint ProbableLineupFULL is accessible and returns no stadium information for the selected match.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing stadium name in API",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with missing or empty stadium name in ProbableLineupFULL API response.",
      "Expected Result": "No stadium name is displayed or a default placeholder is shown when the API does not provide a stadium name.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 16"
    },
    {
      "Title": "Verify referee name is displayed only in Campo view for a match",
      "ID": "TC-145",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application and select a match from the list.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' view for the selected match.",
          "Expected Result": "The 'Campo' view is displayed for the selected match."
        },
        {
          "Step": 3,
          "Step Description": "Observe the match details in the 'Campo' view.",
          "Expected Result": "The referee's name, as provided by the 'referee' field in the ProbableLineupFULL API, is displayed."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "A match is available with referee information present in the ProbableLineupFULL API response.",
      "Execution Mode": "Manual",
      "Functionality": "Display of referee name in Campo view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known referee name in API response (e.g., 'referee': 'John Doe')",
      "Expected Result": "The referee's name is displayed only in the Campo view for the selected match, matching the API data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 17"
    },
    {
      "Title": "Verify referee name is not displayed in views other than Campo",
      "ID": "TC-146",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application and select a match from the list.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to a view other than 'Campo' (e.g., Statistics, Lineup, Overview).",
          "Expected Result": "The selected non-Campo view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the match details in the selected non-Campo view.",
          "Expected Result": "The referee's name is not displayed anywhere in the non-Campo view."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "A match is available with referee information present in the ProbableLineupFULL API response.",
      "Execution Mode": "Manual",
      "Functionality": "Restriction of referee name display to Campo view only",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with known referee name in API response (e.g., 'referee': 'John Doe')",
      "Expected Result": "The referee's name is not visible in any view except Campo.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 17"
    },
    {
      "Title": "Verify correct referee name is displayed as per API response",
      "ID": "TC-147",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Mock or intercept the ProbableLineupFULL API response for a match to set the 'referee' field to a specific value (e.g., 'Jane Smith').",
          "Expected Result": "The API returns the mocked referee name for the match."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the application and select the corresponding match.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Switch to the 'Campo' view for the selected match.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the referee name displayed in the 'Campo' view.",
          "Expected Result": "The displayed referee name matches the value set in the API response (e.g., 'Jane Smith')."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "Ability to mock or intercept API responses. The application is connected to the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Data consistency between API and UI",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Mocked API response with 'referee': 'Jane Smith'",
      "Expected Result": "The referee name displayed in the Campo view matches exactly the value from the API response.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 17"
    },
    {
      "Title": "Verify behavior when referee field is missing in API response",
      "ID": "TC-148",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Mock or intercept the ProbableLineupFULL API response for a match to omit the 'referee' field.",
          "Expected Result": "The API returns a response without the 'referee' field for the match."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the application and select the corresponding match.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Switch to the 'Campo' view for the selected match.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the area where the referee name would normally be displayed.",
          "Expected Result": "No referee name is displayed, or a suitable placeholder (e.g., 'N/A' or blank) is shown, according to UI specifications."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "Ability to mock or intercept API responses. The application is connected to the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing referee data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Mocked API response without 'referee' field",
      "Expected Result": "If the referee field is missing, the Campo view does not display a referee name or shows a placeholder as per UI guidelines.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 17"
    },
    {
      "Title": "Verify UI alignment and formatting of referee name in Campo view",
      "ID": "TC-149",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application and select a match with a referee name present in the API.",
          "Expected Result": "The match details page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the 'Campo' view for the selected match.",
          "Expected Result": "The 'Campo' view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the referee name's position, font, and alignment in the Campo view.",
          "Expected Result": "The referee name is displayed according to the UI design specifications (e.g., correct font, size, color, and alignment as per design mockup)."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Campo View",
      "Preconditions": "A match is available with referee information present in the API. Access to UI design specifications/mockups.",
      "Execution Mode": "Manual",
      "Functionality": "UI/UX compliance for referee name display",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Match with known referee name in API response",
      "Expected Result": "The referee name is visually aligned and formatted as per the approved UI design in the Campo view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 17"
    },
    {
      "Title": "Verify Broadcaster Information is Hidden for Fantacalcio Matches in List View",
      "ID": "TC-150",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'List' view of matches.",
          "Expected Result": "The 'List' view displaying all available matches is shown."
        },
        {
          "Step": 3,
          "Step Description": "Identify a match where data source is Fantacalcio.",
          "Expected Result": "A match with Fantacalcio as the data provider is identified in the list."
        },
        {
          "Step": 4,
          "Step Description": "Check the match details for the presence of Broadcaster information (e.g., broadcaster name, logo, or channel).",
          "Expected Result": "No Broadcaster information is displayed for the Fantacalcio match in the List view."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Match Listing UI",
      "Preconditions": "At least one match with Fantacalcio as the data source is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Broadcaster information based on data provider",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one Fantacalcio match in the database.",
      "Expected Result": "Broadcaster information is not displayed for Fantacalcio matches in the List view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 19"
    },
    {
      "Title": "Verify Broadcaster Information is Hidden for Fantacalcio Matches in Field View",
      "ID": "TC-151",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Field' view of matches.",
          "Expected Result": "The 'Field' view displaying all available matches is shown."
        },
        {
          "Step": 3,
          "Step Description": "Identify a match where data source is Fantacalcio.",
          "Expected Result": "A match with Fantacalcio as the data provider is identified in the field view."
        },
        {
          "Step": 4,
          "Step Description": "Check the match details for the presence of Broadcaster information (e.g., broadcaster name, logo, or channel).",
          "Expected Result": "No Broadcaster information is displayed for the Fantacalcio match in the Field view."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Match Field UI",
      "Preconditions": "At least one match with Fantacalcio as the data source is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Broadcaster information based on data provider",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one Fantacalcio match in the database.",
      "Expected Result": "Broadcaster information is not displayed for Fantacalcio matches in the Field view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 19"
    },
    {
      "Title": "Verify Broadcaster Information is Displayed for Non-Fantacalcio Matches in List View",
      "ID": "TC-152",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'List' view of matches.",
          "Expected Result": "The 'List' view displaying all available matches is shown."
        },
        {
          "Step": 3,
          "Step Description": "Identify a match where data source is NOT Fantacalcio (e.g., another provider).",
          "Expected Result": "A match with a non-Fantacalcio data provider is identified in the list."
        },
        {
          "Step": 4,
          "Step Description": "Check the match details for the presence of Broadcaster information (e.g., broadcaster name, logo, or channel).",
          "Expected Result": "Broadcaster information is displayed for the non-Fantacalcio match in the List view as per existing implementation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Match Listing UI",
      "Preconditions": "At least one match with a non-Fantacalcio data source is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Broadcaster information based on data provider",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one non-Fantacalcio match in the database.",
      "Expected Result": "Broadcaster information is displayed for non-Fantacalcio matches in the List view as per current implementation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 19"
    },
    {
      "Title": "Verify Broadcaster Information is Displayed for Non-Fantacalcio Matches in Field View",
      "ID": "TC-153",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Field' view of matches.",
          "Expected Result": "The 'Field' view displaying all available matches is shown."
        },
        {
          "Step": 3,
          "Step Description": "Identify a match where data source is NOT Fantacalcio (e.g., another provider).",
          "Expected Result": "A match with a non-Fantacalcio data provider is identified in the field view."
        },
        {
          "Step": 4,
          "Step Description": "Check the match details for the presence of Broadcaster information (e.g., broadcaster name, logo, or channel).",
          "Expected Result": "Broadcaster information is displayed for the non-Fantacalcio match in the Field view as per existing implementation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Match Field UI",
      "Preconditions": "At least one match with a non-Fantacalcio data source is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Broadcaster information based on data provider",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one non-Fantacalcio match in the database.",
      "Expected Result": "Broadcaster information is displayed for non-Fantacalcio matches in the Field view as per current implementation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 19"
    },
    {
      "Title": "Verify System Behavior When Both Fantacalcio and Non-Fantacalcio Matches are Present",
      "ID": "TC-154",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to both 'List' and 'Field' views of matches.",
          "Expected Result": "Both views display all available matches."
        },
        {
          "Step": 3,
          "Step Description": "Identify at least one Fantacalcio match and one non-Fantacalcio match in each view.",
          "Expected Result": "Both types of matches are present in both views."
        },
        {
          "Step": 4,
          "Step Description": "Verify that Broadcaster information is hidden for Fantacalcio matches and displayed for non-Fantacalcio matches in both views.",
          "Expected Result": "Broadcaster information is only displayed for non-Fantacalcio matches; it is hidden for Fantacalcio matches in both views."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Match Listing and Field UI",
      "Preconditions": "At least one Fantacalcio match and one non-Fantacalcio match are available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Conditional display of Broadcaster information based on data provider",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one Fantacalcio and one non-Fantacalcio match in the database.",
      "Expected Result": "Broadcaster information is hidden for Fantacalcio matches and displayed for non-Fantacalcio matches in both List and Field views.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 19"
    },
    {
      "Title": "Verify No Broadcaster Information is Displayed for Fantacalcio Matches with Missing or Null Broadcaster Data",
      "ID": "TC-155",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'List' and 'Field' views of matches.",
          "Expected Result": "Both views display all available matches."
        },
        {
          "Step": 3,
          "Step Description": "Identify a Fantacalcio match where the broadcaster field is missing or null in the backend data.",
          "Expected Result": "A Fantacalcio match with missing/null broadcaster data is identified."
        },
        {
          "Step": 4,
          "Step Description": "Check the match details for the presence of Broadcaster information.",
          "Expected Result": "No Broadcaster information is displayed for the Fantacalcio match, regardless of the backend data state."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Match Listing and Field UI",
      "Preconditions": "At least one Fantacalcio match with missing or null broadcaster data is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Display logic for missing/null broadcaster data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one Fantacalcio match with missing/null broadcaster data.",
      "Expected Result": "No Broadcaster information is displayed for Fantacalcio matches even if broadcaster data is missing or null in the backend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 19"
    },
    {
      "Title": "Display of Last Update Date and Time in List View",
      "ID": "TC-156",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the List View of matches.",
          "Expected Result": "The List View of matches is displayed."
        },
        {
          "Step": 2,
          "Step Description": "For each match displayed, observe the presence of the 'Last Update' information.",
          "Expected Result": "Each match entry displays a 'Last Update' field."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Last Update' field shows date and time in the format GG/MM/AAAA - HH:MM.",
          "Expected Result": "The date and time are displayed in the correct format (e.g., 05/06/2024 - 14:30)."
        },
        {
          "Step": 4,
          "Step Description": "Cross-check the displayed 'Last Update' value with the 'lastUpdate' field from the ProbableLineupFULL API for the same match.",
          "Expected Result": "The displayed value matches exactly with the API value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Match List View",
      "Preconditions": "At least one match is available in the List View. The ProbableLineupFULL API is accessible and returns valid data for matches.",
      "Execution Mode": "Manual",
      "Functionality": "Display of last update information for matches in List View",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample matches with known 'lastUpdate' values in the API.",
      "Expected Result": "For every match in List View, the last update date and time are displayed in the correct format and match the API value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 18"
    },
    {
      "Title": "Display of Last Update Date and Time in Field View",
      "ID": "TC-157",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application and navigate to the Field View of a specific match.",
          "Expected Result": "The Field View for the selected match is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the presence of the 'Last Update' information for the match.",
          "Expected Result": "The 'Last Update' field is visible in the Field View."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Last Update' field shows date and time in the format GG/MM/AAAA - HH:MM.",
          "Expected Result": "The date and time are displayed in the correct format (e.g., 05/06/2024 - 14:30)."
        },
        {
          "Step": 4,
          "Step Description": "Cross-check the displayed 'Last Update' value with the 'lastUpdate' field from the ProbableLineupFULL API for the same match.",
          "Expected Result": "The displayed value matches exactly with the API value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Match Field View",
      "Preconditions": "At least one match is available in the Field View. The ProbableLineupFULL API is accessible and returns valid data for the selected match.",
      "Execution Mode": "Manual",
      "Functionality": "Display of last update information for matches in Field View",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample match with known 'lastUpdate' value in the API.",
      "Expected Result": "In Field View, the last update date and time are displayed in the correct format and match the API value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 18"
    },
    {
      "Title": "Validation of Last Update Format - Incorrect Format Handling",
      "ID": "TC-158",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Manipulate the API response to provide a 'lastUpdate' value in an incorrect format (e.g., '2024-06-05T14:30:00Z').",
          "Expected Result": "The application receives the incorrectly formatted date/time."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the List View and Field View for the affected match.",
          "Expected Result": "Both views are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe how the application displays the 'Last Update' information.",
          "Expected Result": "The application either correctly formats the date/time to GG/MM/AAAA - HH:MM or displays a clear error/placeholder indicating invalid format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Error Handling",
      "Preconditions": "Ability to mock or intercept API responses. At least one match available.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for incorrect date/time format in last update field",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with manipulated 'lastUpdate' value in API response.",
      "Expected Result": "The application handles incorrect date/time formats gracefully, either by reformatting or by displaying a clear error/placeholder.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for format issues.",
      "_polarion": "RU 18"
    },
    {
      "Title": "Boundary Test - Last Update at Midnight",
      "ID": "TC-159",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set the 'lastUpdate' value in the API to '05/06/2024 - 00:00' for a match.",
          "Expected Result": "The API returns the specified value."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the List View and Field View for the match.",
          "Expected Result": "Both views are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Last Update' field displays '05/06/2024 - 00:00' in both views.",
          "Expected Result": "The field displays '05/06/2024 - 00:00' exactly as provided."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Date/Time Boundary",
      "Preconditions": "Ability to set or mock API data. At least one match available.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value handling for last update field",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with 'lastUpdate' set to midnight in API.",
      "Expected Result": "The application correctly displays midnight values in the required format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers midnight boundary value.",
      "_polarion": "RU 18"
    },
    {
      "Title": "No Last Update Data Available - Fallback Handling",
      "ID": "TC-160",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Manipulate the API response to omit the 'lastUpdate' field for a match.",
          "Expected Result": "The application receives a match object without 'lastUpdate'."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the List View and Field View for the affected match.",
          "Expected Result": "Both views are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe how the application displays the 'Last Update' information for the match.",
          "Expected Result": "The application displays a placeholder (e.g., '-') or a clear message indicating the information is unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Frontend - Missing Data Handling",
      "Preconditions": "Ability to mock or intercept API responses. At least one match available.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing last update data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Match with missing 'lastUpdate' in API response.",
      "Expected Result": "The application handles missing 'lastUpdate' gracefully, displaying a placeholder or message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers missing data scenario.",
      "_polarion": "RU 18"
    }
  ],
  "total_count": 160
}