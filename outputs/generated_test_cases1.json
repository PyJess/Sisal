{
  "test_cases": [
    {
      "Title": "Verify System Displays First Line Correctly on Application Launch",
      "ID": "TC-001",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on the supported device.",
          "Expected Result": "Application starts successfully."
        },
        {
          "Step": 2,
          "Step Description": "Observe the initial screen or landing page after launch.",
          "Expected Result": "The first line is displayed at the top of the screen as specified."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "UI Rendering",
      "Preconditions": "Application is installed and configured on the device. User is not logged in (if applicable).",
      "Execution Mode": "Manual",
      "Functionality": "Display of first line on application launch",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The first line is visible and correctly rendered at the top of the application upon launch.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the first line on application launch.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify First Line is Not Displayed When Application Fails to Load",
      "ID": "TC-002",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where the application fails to load (e.g., disconnect network, corrupt installation).",
          "Expected Result": "Application fails to launch or displays an error message."
        },
        {
          "Step": 2,
          "Step Description": "Observe whether the first line is displayed in this error state.",
          "Expected Result": "The first line is not displayed when the application fails to load."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "UI Rendering",
      "Preconditions": "Application is installed but launch is intentionally disrupted (e.g., network disabled, corrupted files).",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for first line display",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The first line is not displayed if the application fails to load.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for first line display.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify First Line is Displayed Consistently Across Supported Devices",
      "ID": "TC-003",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on each supported device (e.g., Desktop, Mobile, Tablet).",
          "Expected Result": "Application launches successfully on each device."
        },
        {
          "Step": 2,
          "Step Description": "Observe the initial screen on each device.",
          "Expected Result": "The first line is displayed at the top of the screen on all devices."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "UI Rendering",
      "Preconditions": "Application is installed on all supported devices.",
      "Execution Mode": "Manual",
      "Functionality": "Cross-device display of first line",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The first line is consistently displayed at the top of the application across all supported devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers cross-device consistency for first line display.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify automatic disconnection after inactivity timeout",
      "ID": "TC-004",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Credit Analytics Manager application with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive (no mouse, keyboard, or touch input) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No activity is detected by the system during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application after the inactivity timeout elapses.",
          "Expected Result": "User is automatically logged out and redirected to the login page with a message indicating disconnection due to inactivity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Session Management",
      "Preconditions": "User account exists and is active. Inactivity timeout is configured (e.g., 15 minutes). User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout and automatic logout for inactivity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; inactivity timeout value (e.g., 15 minutes)",
      "Expected Result": "User is automatically logged out after the inactivity timeout and receives an appropriate message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002, XPS-ZENIT-202"
    },
    {
      "Title": "Verify session persistence with user activity before timeout",
      "ID": "TC-005",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Credit Analytics Manager application with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Perform any user activity (e.g., click a menu item, type in a field) before the inactivity timeout period elapses (e.g., at 10 minutes if timeout is 15 minutes).",
          "Expected Result": "System registers the user activity and resets the inactivity timer."
        },
        {
          "Step": 3,
          "Step Description": "Continue to perform periodic activity before each timeout period elapses for a total duration exceeding the configured timeout (e.g., 30 minutes).",
          "Expected Result": "User remains logged in and is not disconnected due to inactivity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Session Management",
      "Preconditions": "User account exists and is active. Inactivity timeout is configured. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout reset on user activity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; inactivity timeout value (e.g., 15 minutes)",
      "Expected Result": "User remains logged in as long as activity occurs before the inactivity timeout.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002, XPS-ZENIT-202"
    },
    {
      "Title": "Verify warning message before automatic disconnection (if applicable)",
      "ID": "TC-006",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Credit Analytics Manager application with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for a period just before the inactivity timeout threshold (e.g., 1 minute before timeout).",
          "Expected Result": "No activity is detected by the system."
        },
        {
          "Step": 3,
          "Step Description": "Observe if a warning message or popup is displayed indicating imminent disconnection due to inactivity.",
          "Expected Result": "A warning message is displayed to the user indicating that the session will expire soon due to inactivity."
        },
        {
          "Step": 4,
          "Step Description": "Remain inactive until the timeout elapses.",
          "Expected Result": "User is automatically logged out and redirected to the login page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Session Management",
      "Preconditions": "User account exists and is active. Inactivity timeout and warning threshold are configured. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout warning before logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; inactivity timeout and warning threshold values",
      "Expected Result": "User receives a warning before being logged out due to inactivity, then is logged out if no action is taken.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Assumes system provides a warning before logout; skip if not applicable.",
      "_polarion": "RF002, XPS-ZENIT-202"
    },
    {
      "Title": "Verify session termination on multiple devices after inactivity",
      "ID": "TC-007",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Credit Analytics Manager application on two different devices or browsers using the same user account.",
          "Expected Result": "User is successfully logged in on both devices/browsers."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive on both devices for the configured inactivity timeout period.",
          "Expected Result": "No activity is detected on either device/browser."
        },
        {
          "Step": 3,
          "Step Description": "Observe both devices after the inactivity timeout elapses.",
          "Expected Result": "User is automatically logged out from both sessions and redirected to the login page on both devices."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Session Management",
      "Preconditions": "User account exists and is active. Inactivity timeout is configured. User is logged in on multiple devices/browsers.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout enforcement across multiple sessions/devices",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; two devices or browsers; inactivity timeout value",
      "Expected Result": "User is logged out from all inactive sessions after the timeout period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Assumes session management is shared across devices; adjust if sessions are independent.",
      "_polarion": "RF002, XPS-ZENIT-202"
    },
    {
      "Title": "Verify user can log in again immediately after automatic disconnection",
      "ID": "TC-008",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Credit Analytics Manager application with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive until automatic disconnection occurs due to inactivity timeout.",
          "Expected Result": "User is logged out and redirected to the login page."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to log in again immediately with the same credentials.",
          "Expected Result": "User is able to log in successfully without errors or lockout."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Session Management",
      "Preconditions": "User account exists and is active. Inactivity timeout is configured. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Re-login after session timeout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; inactivity timeout value",
      "Expected Result": "User can log in again immediately after being logged out for inactivity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002, XPS-ZENIT-202"
    },
    {
      "Title": "Verify Document Introduction Section Presence and Content",
      "ID": "TC-009",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the functional specification document.",
          "Expected Result": "The document opens successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the beginning of the document.",
          "Expected Result": "The introduction section is located at the start of the document."
        },
        {
          "Step": 3,
          "Step Description": "Read the content of the introduction section.",
          "Expected Result": "The introduction clearly states that the purpose of the document is to translate user requirements into functional specifications."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Documentation",
      "Preconditions": "Functional specification document is available and accessible to the tester.",
      "Execution Mode": "Manual",
      "Functionality": "Document Introduction Section",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Functional specification document (latest version)",
      "Expected Result": "The introduction section is present at the beginning of the document and accurately describes its purpose as translating user requirements into functional specifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the presence and correctness of the introduction section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Absence of Introduction Section in Functional Specification Document",
      "ID": "TC-010",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the functional specification document.",
          "Expected Result": "The document opens successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the beginning of the document.",
          "Expected Result": "The introduction section is not present at the start of the document."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Documentation",
      "Preconditions": "Functional specification document is available and accessible to the tester.",
      "Execution Mode": "Manual",
      "Functionality": "Document Introduction Section",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Functional specification document (latest version)",
      "Expected Result": "The introduction section is missing from the document, which is a defect to be reported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers the negative scenario of missing introduction section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Introduction Section Content Matches User Requirements Translation Purpose",
      "ID": "TC-011",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the functional specification document.",
          "Expected Result": "The document opens successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the introduction section.",
          "Expected Result": "The introduction section is present."
        },
        {
          "Step": 3,
          "Step Description": "Compare the content of the introduction section with the expected purpose: 'translating into functional specifications what is expressed in the user requirements document.'",
          "Expected Result": "The introduction section content matches the expected purpose without deviation or ambiguity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Documentation",
      "Preconditions": "Functional specification document is available and accessible to the tester. Expected introduction content is defined.",
      "Execution Mode": "Manual",
      "Functionality": "Document Introduction Section",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Functional specification document (latest version), expected introduction text",
      "Expected Result": "The introduction section content exactly matches the defined purpose of translating user requirements into functional specifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers content accuracy of the introduction section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Correct Display and Description of Abbreviations in Glossary",
      "ID": "TC-012",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the glossary or abbreviation section of the application.",
          "Expected Result": "Glossary/abbreviation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Review the list of terms and their corresponding descriptions.",
          "Expected Result": "All terms and their descriptions are visible and readable."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each abbreviation (e.g., ADI, ADM, AWP, etc.) matches its correct description as per the requirements.",
          "Expected Result": "Each abbreviation is accurately described according to the provided specification."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Glossary/Abbreviation Module",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary/Abbreviation Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "List of abbreviations and descriptions as per requirement.",
      "Expected Result": "All abbreviations are displayed with their correct and complete descriptions as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF-001"
    },
    {
      "Title": "Verify Handling of Unknown or Undefined Abbreviations",
      "ID": "TC-013",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the glossary or abbreviation section of the application.",
          "Expected Result": "Glossary/abbreviation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Search for an abbreviation not present in the provided list (e.g., 'XYZ').",
          "Expected Result": "System processes the search request."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the unknown abbreviation.",
          "Expected Result": "System displays a clear message indicating the abbreviation is not found or is undefined."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Glossary/Abbreviation Module",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary/Abbreviation Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Abbreviation not present in the list (e.g., 'XYZ').",
      "Expected Result": "System provides a user-friendly message for unknown or undefined abbreviations.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF-002"
    },
    {
      "Title": "Verify Alphabetical Ordering of Abbreviations in Glossary",
      "ID": "TC-014",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the glossary or abbreviation section of the application.",
          "Expected Result": "Glossary/abbreviation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Review the order of the abbreviations listed.",
          "Expected Result": "Abbreviations are listed in alphabetical order."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Glossary/Abbreviation Module",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary/Abbreviation Sorting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Full list of abbreviations as per requirement.",
      "Expected Result": "Abbreviations are displayed in alphabetical order for ease of reference.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF-003"
    },
    {
      "Title": "Verify Accessibility of Glossary/Abbreviation Section",
      "ID": "TC-015",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the glossary/abbreviation section from the main navigation or help menu.",
          "Expected Result": "Glossary/abbreviation section is accessible from the main navigation or help menu."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Glossary/Abbreviation Module",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary/Abbreviation Accessibility",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Glossary/abbreviation section is easily accessible from the main navigation or help menu.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF-004"
    },
    {
      "Title": "Verify Consistency of Abbreviation Usage Across Application",
      "ID": "TC-016",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a sample abbreviation (e.g., 'AWP') from the glossary.",
          "Expected Result": "Sample abbreviation is identified."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to various sections of the application where the abbreviation is used (e.g., reports, forms, help pages).",
          "Expected Result": "Abbreviation is found in multiple sections."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the abbreviation is used consistently and matches the definition provided in the glossary.",
          "Expected Result": "Abbreviation usage is consistent and matches the glossary definition in all sections."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Glossary/Abbreviation Module",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary/Abbreviation Consistency",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Sample abbreviations from the glossary (e.g., 'AWP', 'VLT').",
      "Expected Result": "Abbreviations are used consistently and correctly throughout the application.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF-005"
    },
    {
      "Title": "Verify Accessibility and Availability of General Description Section",
      "ID": "TC-017",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application main page.",
          "Expected Result": "Main page loads successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'General Description' section on the page.",
          "Expected Result": "'General Description' section is visible and accessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "General Description Section",
      "Preconditions": "User has access to the application and is logged in if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "Display of General Description Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'General Description' section is present, visible, and accessible to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the presence and visibility of the section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Content Presence in General Description Section",
      "ID": "TC-018",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application main page.",
          "Expected Result": "Main page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Scroll to the 'General Description' section.",
          "Expected Result": "'General Description' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check if the section contains descriptive content (text, images, or other media as per design).",
          "Expected Result": "Section contains the expected descriptive content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "General Description Section",
      "Preconditions": "User is on the main page where the 'General Description' section is available.",
      "Execution Mode": "Manual",
      "Functionality": "Content Display in General Description Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'General Description' section contains the expected content as per requirements or design.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify content accuracy, only presence.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify General Description Section is Not Accessible to Unauthorized Users (if applicable)",
      "ID": "TC-019",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log out of the application or open the application in an incognito/private browser window.",
          "Expected Result": "User is not authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the page containing the 'General Description' section.",
          "Expected Result": "Page loads as per access control rules."
        },
        {
          "Step": 3,
          "Step Description": "Check if the 'General Description' section is visible or hidden based on access requirements.",
          "Expected Result": "Section is visible only if allowed by access control; otherwise, it is hidden or access is denied."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "General Description Section",
      "Preconditions": "User is not authenticated or has limited access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Access Control for General Description Section",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The 'General Description' section is displayed or hidden according to user access rights.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Only applicable if access control is required for this section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Responsiveness of General Description Section on Mobile Devices",
      "ID": "TC-020",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on a mobile device (e.g., smartphone or tablet).",
          "Expected Result": "Application loads successfully on the mobile device."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'General Description' section.",
          "Expected Result": "'General Description' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check that the section layout adapts correctly to the mobile screen size (no overlapping, horizontal scrolling, or cut-off content).",
          "Expected Result": "Section is fully visible and properly formatted for mobile view."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "Web",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "General Description Section",
      "Preconditions": "User has a compatible mobile device and access to the application.",
      "Execution Mode": "Manual",
      "Functionality": "Responsive Design for General Description Section",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'General Description' section is responsive and displays correctly on mobile devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on layout and visibility, not content accuracy.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Comprehensive Visibility of Customer Credit Status with Drill-Down",
      "ID": "TC-021",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT back office as a Finance user.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Customer Credit Status' section.",
          "Expected Result": "The section displays a list of all retail customers with their current credit status."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific customer from the list.",
          "Expected Result": "Detailed credit information for the selected customer is displayed, including breakdown by business area."
        },
        {
          "Step": 4,
          "Step Description": "Drill down into a specific business area for the selected customer.",
          "Expected Result": "A detailed view of credit status for the chosen business area is presented, showing all relevant transactions and limits."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT Back Office - Credit Management",
      "Preconditions": "User has valid Finance credentials. Customer and business area data are available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Customer Credit Status Drill-Down",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance user credentials; at least one customer with multiple business areas and credit data.",
      "Expected Result": "The system provides comprehensive visibility of the customer's credit status, allowing drill-down into all business areas without errors or missing data.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Real-Time Dashboard Displays Centralized Credit Information",
      "ID": "TC-022",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT back office as a Credit team member.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the real-time dashboard for credit management.",
          "Expected Result": "Dashboard displays up-to-date, centralized credit information for all points of sale."
        },
        {
          "Step": 3,
          "Step Description": "Trigger a credit status update for a point of sale (simulate transaction or credit change).",
          "Expected Result": "Dashboard updates in real-time to reflect the new credit status."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard",
      "Preconditions": "User has valid Credit team credentials. System is connected to live data feeds.",
      "Execution Mode": "Manual",
      "Functionality": "Real-Time Credit Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Credit team user credentials; at least one point of sale with credit data; ability to simulate credit status change.",
      "Expected Result": "The dashboard provides centralized, real-time visibility and control of credit information for all points of sale.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Category Assignment Based on Cluster PV (Canale RG on MDM)",
      "ID": "TC-023",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT back office as an admin user.",
          "Expected Result": "Admin user is authenticated and main interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Points of Sale' management section.",
          "Expected Result": "List of all points of sale is displayed with their details."
        },
        {
          "Step": 3,
          "Step Description": "Select or create a point of sale with Cluster PV set to 'PGI'.",
          "Expected Result": "Point of sale details are shown with Cluster PV as 'PGI'."
        },
        {
          "Step": 4,
          "Step Description": "Verify the value of 'Canale 1' for the selected point of sale.",
          "Expected Result": "'Canale 1' is automatically set to 'BRANDED'."
        },
        {
          "Step": 5,
          "Step Description": "Repeat steps 3-4 for each Cluster PV value: PGS, Negozio, Wincity, Pos AWP Only, Pos GNTN e AWP, Pos GNTN Only, Gaming Hall.",
          "Expected Result": "'Canale 1' is set to 'BRANDED' for PGS, Negozio, Wincity; 'UNBRANDED' for Pos AWP Only, Pos GNTN e AWP, Pos GNTN Only, Gaming Hall."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Category Assignment",
      "Preconditions": "Admin user credentials. Points of sale with all relevant Cluster PV values exist or can be created.",
      "Execution Mode": "Manual",
      "Functionality": "Category Assignment (Canale 1)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin credentials; Cluster PV values: PGI, PGS, Negozio, Wincity, Pos AWP Only, Pos GNTN e AWP, Pos GNTN Only, Gaming Hall.",
      "Expected Result": "The system assigns 'Canale 1' correctly based on the Cluster PV value according to the specified mapping.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Verify Display and Aggregation of Credit Lines per Platform (SIMP and GEO)",
      "ID": "TC-024",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT back office as a Finance user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Lines' section.",
          "Expected Result": "Credit lines for all points of sale are displayed, grouped by platform (SIMP and GEO)."
        },
        {
          "Step": 3,
          "Step Description": "Select a point of sale and view its credit lines.",
          "Expected Result": "All relevant credit lines for the selected point of sale are displayed, with correct association to SIMP or GEO."
        },
        {
          "Step": 4,
          "Step Description": "Verify that SIMP credit lines include: Totocalcio, Horse Racing, Fixed Odds Sports, Virtual Race, Global Game.",
          "Expected Result": "SIMP credit lines are correctly listed."
        },
        {
          "Step": 5,
          "Step Description": "Verify that GEO credit lines include: Numerical Games (GNTN), Corner (PGI and PGS), Game Accounts (Servizi - CONTI GIOCO).",
          "Expected Result": "GEO credit lines are correctly listed."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Credit Lines Aggregation",
      "Preconditions": "Finance user credentials. Points of sale with credit lines on both SIMP and GEO platforms exist.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Lines Aggregation and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance user credentials; points of sale with credit lines on SIMP and GEO.",
      "Expected Result": "The system displays and aggregates credit lines per platform accurately for each point of sale.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Verify Weekly Management of Credit Lines",
      "ID": "TC-025",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT back office as a Finance user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Lines Management' section.",
          "Expected Result": "Section displays all credit lines and their management frequency."
        },
        {
          "Step": 3,
          "Step Description": "Select a credit line (e.g., Totocalcio) and view its management details.",
          "Expected Result": "Credit line details indicate that management is performed on a weekly basis."
        },
        {
          "Step": 4,
          "Step Description": "Repeat for other credit lines (SIMP and GEO).",
          "Expected Result": "All credit lines show weekly management frequency."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Low",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Credit Line Management",
      "Preconditions": "Finance user credentials. Credit lines are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Management Frequency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance user credentials; credit lines on SIMP and GEO.",
      "Expected Result": "All credit lines are managed on a weekly basis as indicated in the system.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Verify Access Control for Finance and Credit Team Roles",
      "ID": "TC-026",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to login to ZENIT back office as a user with Finance role.",
          "Expected Result": "User is authenticated and has access to all credit management features."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to login as a user with Credit team role.",
          "Expected Result": "User is authenticated and has access to dashboard and decision-making tools."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to login as a user with no assigned role.",
          "Expected Result": "User is denied access to credit management features."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Access Control",
      "Preconditions": "Users with Finance, Credit team, and no roles exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Role-Based Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Credentials for Finance, Credit team, and unassigned users.",
      "Expected Result": "Only authorized roles (Finance, Credit team) can access relevant features; unauthorized users are denied access.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-006"
    },
    {
      "Title": "Verify Multibrand Integration for Transaction Validation",
      "ID": "TC-027",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a Finance user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a transaction from a multibrand business platform (e.g., SNAI) integrated with ZENIT.",
          "Expected Result": "Transaction request is sent to ZENIT's central module."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT performs credit limit verification and updates credit movement accordingly.",
          "Expected Result": "Transaction is validated or rejected based on credit limit; credit movement is updated in ZENIT."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "backend",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Multibrand Integration",
      "Preconditions": "ZENIT is integrated with at least one multibrand platform (e.g., SNAI). Credit limits are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Multibrand Transaction Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance user credentials; multibrand platform with transaction capability; configured credit limits.",
      "Expected Result": "ZENIT correctly validates transactions from multibrand platforms and updates credit movements as per business rules.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-007"
    },
    {
      "Title": "Verify Integration with MDM via ESB for PoS Master Data",
      "ID": "TC-028",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a request in ZENIT to retrieve PoS master data via ESB from MDM.",
          "Expected Result": "ZENIT sends a request to ESB for PoS master data."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the ESB for the response from MDM containing PoS master data.",
          "Expected Result": "ESB returns the correct PoS master data as managed in MDM/CRM."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT correctly receives and stores the PoS master data.",
          "Expected Result": "ZENIT stores and displays the PoS master data accurately for all countries."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "MDM via ESB Integration",
      "Preconditions": "MDM/CRM contains valid PoS master data for all countries. ESB is operational. ZENIT is configured for integration.",
      "Execution Mode": "Manual",
      "Functionality": "PoS master data retrieval and propagation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS master data in MDM/CRM for multiple countries.",
      "Expected Result": "ZENIT successfully retrieves and stores PoS master data from MDM via ESB for all countries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-001"
    },
    {
      "Title": "Verify Integration with ORION for PoS Terminals and Products Data",
      "ID": "TC-029",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate a request in ZENIT to fetch PoS Terminals and Products Data from ORION.",
          "Expected Result": "ZENIT sends a request to ORION for PoS Terminals and Products Data."
        },
        {
          "Step": 2,
          "Step Description": "Observe the response from ORION containing the requested data.",
          "Expected Result": "ORION returns accurate PoS Terminals and Products Data."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the data correctly.",
          "Expected Result": "ZENIT displays the correct PoS Terminals and Products Data as provided by ORION."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ORION Integration",
      "Preconditions": "ORION contains valid PoS Terminals and Products Data. ZENIT is configured for ORION integration.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Terminals and Products Data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS Terminals and Products Data in ORION.",
      "Expected Result": "ZENIT retrieves and displays PoS Terminals and Products Data from ORION accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-002"
    },
    {
      "Title": "Verify Integration with COMMA6 for AWP Data",
      "ID": "TC-030",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request AWP Data from COMMA6 through ZENIT interface.",
          "Expected Result": "ZENIT sends a request to COMMA6 for AWP Data."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from COMMA6.",
          "Expected Result": "COMMA6 returns the correct AWP Data."
        },
        {
          "Step": 3,
          "Step Description": "Check that ZENIT processes and displays the AWP Data correctly.",
          "Expected Result": "ZENIT displays the AWP Data as provided by COMMA6."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "COMMA6 Integration",
      "Preconditions": "COMMA6 contains valid AWP Data. ZENIT is configured for COMMA6 integration.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample AWP Data in COMMA6.",
      "Expected Result": "ZENIT retrieves and displays AWP Data from COMMA6 accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-003"
    },
    {
      "Title": "Verify Integration with NEXT VLT for VLT Data",
      "ID": "TC-031",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request VLT Data from NEXT VLT (SI VLT / OMBRELLO) via ZENIT.",
          "Expected Result": "ZENIT sends a request to NEXT VLT for VLT Data."
        },
        {
          "Step": 2,
          "Step Description": "Observe the response from NEXT VLT.",
          "Expected Result": "NEXT VLT returns the correct VLT Data."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the VLT Data correctly.",
          "Expected Result": "ZENIT displays the VLT Data as provided by NEXT VLT."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "NEXT VLT Integration",
      "Preconditions": "NEXT VLT contains valid VLT Data. ZENIT is configured for NEXT VLT integration.",
      "Execution Mode": "Manual",
      "Functionality": "VLT Data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample VLT Data in NEXT VLT.",
      "Expected Result": "ZENIT retrieves and displays VLT Data from NEXT VLT accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-004"
    },
    {
      "Title": "Verify Integration with GESTORETE for PoS Personal and Accounting Data",
      "ID": "TC-032",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request PoS personal and accounting data from GESTORETE via ZENIT.",
          "Expected Result": "ZENIT sends a request to GESTORETE for PoS personal and accounting data."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from GESTORETE.",
          "Expected Result": "GESTORETE returns the correct PoS personal and accounting data."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the data correctly.",
          "Expected Result": "ZENIT displays the PoS personal and accounting data as provided by GESTORETE."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "GESTORETE Integration",
      "Preconditions": "GESTORETE contains valid PoS personal and accounting data. ZENIT is configured for GESTORETE integration.",
      "Execution Mode": "Manual",
      "Functionality": "PoS personal and accounting data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS personal and accounting data in GESTORETE.",
      "Expected Result": "ZENIT retrieves and displays PoS personal and accounting data from GESTORETE accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-005"
    },
    {
      "Title": "Verify Integration with CERVED for PoS Commercial Information (Rating)",
      "ID": "TC-033",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request PoS commercial information (rating) from CERVED via ZENIT.",
          "Expected Result": "ZENIT sends a request to CERVED for PoS commercial information."
        },
        {
          "Step": 2,
          "Step Description": "Observe the response from CERVED.",
          "Expected Result": "CERVED returns the correct PoS commercial information (rating)."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the rating data correctly.",
          "Expected Result": "ZENIT displays the PoS commercial information (rating) as provided by CERVED."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "CERVED Integration",
      "Preconditions": "CERVED contains valid PoS commercial information. ZENIT is configured for CERVED integration.",
      "Execution Mode": "Manual",
      "Functionality": "PoS commercial information (rating) retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS commercial information in CERVED.",
      "Expected Result": "ZENIT retrieves and displays PoS commercial information (rating) from CERVED accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-006"
    },
    {
      "Title": "Verify Integration with GEO for Lottery Terminal Credit Availability",
      "ID": "TC-034",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request credit availability information for lottery terminals from GEO via ZENIT.",
          "Expected Result": "ZENIT sends a request to GEO for credit availability information."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from GEO.",
          "Expected Result": "GEO returns the correct credit availability information for lottery terminals."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the credit information correctly.",
          "Expected Result": "ZENIT displays the credit availability information for lottery terminals as provided by GEO."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "GEO Integration",
      "Preconditions": "GEO contains valid credit availability information. ZENIT is configured for GEO integration.",
      "Execution Mode": "Manual",
      "Functionality": "Lottery terminal credit availability retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample credit availability data in GEO.",
      "Expected Result": "ZENIT retrieves and displays credit availability information for lottery terminals from GEO accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-007"
    },
    {
      "Title": "Verify Integration with MST for Horse Race Terminal Credit Availability",
      "ID": "TC-035",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request credit availability information for Horse Race terminals from MST via ZENIT.",
          "Expected Result": "ZENIT sends a request to MST for credit availability information."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from MST.",
          "Expected Result": "MST returns the correct credit availability information for Horse Race terminals."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the credit information correctly.",
          "Expected Result": "ZENIT displays the credit availability information for Horse Race terminals as provided by MST."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "MST Integration",
      "Preconditions": "MST contains valid credit availability information. ZENIT is configured for MST integration.",
      "Execution Mode": "Manual",
      "Functionality": "Horse Race terminal credit availability retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample credit availability data in MST.",
      "Expected Result": "ZENIT retrieves and displays credit availability information for Horse Race terminals from MST accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-008"
    },
    {
      "Title": "Verify Integration with SIMP for Betting Terminal Credit Availability",
      "ID": "TC-036",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request credit availability information for Betting terminals from SIMP via ZENIT.",
          "Expected Result": "ZENIT sends a request to SIMP for credit availability information."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from SIMP.",
          "Expected Result": "SIMP returns the correct credit availability information for Betting terminals."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the credit information correctly.",
          "Expected Result": "ZENIT displays the credit availability information for Betting terminals as provided by SIMP."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SIMP Integration",
      "Preconditions": "SIMP contains valid credit availability information. ZENIT is configured for SIMP integration.",
      "Execution Mode": "Manual",
      "Functionality": "Betting terminal credit availability retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample credit availability data in SIMP.",
      "Expected Result": "ZENIT retrieves and displays credit availability information for Betting terminals from SIMP accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-009"
    },
    {
      "Title": "Verify Integration with DWH for Betting and Horse Race Terminal Data",
      "ID": "TC-037",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request tracking of betting winnings, cash availability, and credit status for betting and Horse Race terminals from DWH via ZENIT.",
          "Expected Result": "ZENIT sends a request to DWH for the required information."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from DWH.",
          "Expected Result": "DWH returns the correct tracking, cash availability, and credit status data."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the data correctly, especially when direct integration with SIMP or MST is not available.",
          "Expected Result": "ZENIT displays the data from DWH as fallback when direct integration is unavailable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "DWH Integration",
      "Preconditions": "DWH contains valid data. Direct integration with SIMP or MST is unavailable. ZENIT is configured for DWH integration.",
      "Execution Mode": "Manual",
      "Functionality": "Betting and Horse Race terminal data retrieval (fallback)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data in DWH for betting winnings, cash availability, and credit status.",
      "Expected Result": "ZENIT retrieves and displays betting winnings, cash availability, and credit status from DWH when direct integration is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-010"
    },
    {
      "Title": "Verify Integration with SAP for Warranties and Outstanding Payments",
      "ID": "TC-038",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request information on warranties and outstanding payments from SAP via ZENIT.",
          "Expected Result": "ZENIT sends a request to SAP for warranties and outstanding payments information."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from SAP.",
          "Expected Result": "SAP returns the correct information on warranties and outstanding payments."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the information correctly.",
          "Expected Result": "ZENIT displays the warranties and outstanding payments information as provided by SAP."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration",
      "Preconditions": "SAP contains valid warranties and outstanding payments data. ZENIT is configured for SAP integration.",
      "Execution Mode": "Manual",
      "Functionality": "Warranties and outstanding payments retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample warranties and outstanding payments data in SAP.",
      "Expected Result": "ZENIT retrieves and displays warranties and outstanding payments information from SAP accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-011"
    },
    {
      "Title": "Verify Integration with VALORIZZATORE for Accounting Borderò Information",
      "ID": "TC-039",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request accounting borderò information from VALORIZZATORE via ZENIT.",
          "Expected Result": "ZENIT sends a request to VALORIZZATORE for accounting borderò information."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from VALORIZZATORE.",
          "Expected Result": "VALORIZZATORE returns the correct accounting borderò information."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT processes and displays the information correctly.",
          "Expected Result": "ZENIT displays the accounting borderò information as provided by VALORIZZATORE."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "VALORIZZATORE Integration",
      "Preconditions": "VALORIZZATORE contains valid accounting borderò data. ZENIT is configured for VALORIZZATORE integration.",
      "Execution Mode": "Manual",
      "Functionality": "Accounting borderò information retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample accounting borderò data in VALORIZZATORE.",
      "Expected Result": "ZENIT retrieves and displays accounting borderò information from VALORIZZATORE accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-012"
    },
    {
      "Title": "Verify Integration with ARXIVAR - NEXT for Document and Contract Retrieval",
      "ID": "TC-040",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request retrieval of archived documents and contracts from ARXIVAR - NEXT via ZENIT.",
          "Expected Result": "ZENIT sends a request to ARXIVAR - NEXT for archived documents and contracts."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the response from ARXIVAR - NEXT.",
          "Expected Result": "ARXIVAR - NEXT returns the correct archived documents and contracts."
        },
        {
          "Step": 3,
          "Step Description": "Validate that ZENIT allows easy viewing of the retrieved documents and contracts.",
          "Expected Result": "ZENIT displays the archived documents and contracts for easy viewing."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ARXIVAR - NEXT Integration",
      "Preconditions": "ARXIVAR - NEXT contains valid archived documents and contracts. ZENIT is configured for ARXIVAR - NEXT integration.",
      "Execution Mode": "Manual",
      "Functionality": "Document and contract retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample archived documents and contracts in ARXIVAR - NEXT.",
      "Expected Result": "ZENIT retrieves and displays archived documents and contracts from ARXIVAR - NEXT for easy viewing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-013"
    },
    {
      "Title": "Verify Link to ArchiCON for PoS Borderò Details",
      "ID": "TC-041",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS borderò details section in ZENIT.",
          "Expected Result": "ZENIT displays a link to the ArchiCON platform."
        },
        {
          "Step": 2,
          "Step Description": "Click the link to ArchiCON from ZENIT.",
          "Expected Result": "User is redirected to the ArchiCON platform."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the PoS borderò details are displayed in ArchiCON.",
          "Expected Result": "ArchiCON displays the correct PoS borderò details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ArchiCON Link",
      "Preconditions": "ArchiCON platform is accessible. ZENIT is configured to display the link to ArchiCON.",
      "Execution Mode": "Manual",
      "Functionality": "PoS borderò details access via external link",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS borderò details in ArchiCON.",
      "Expected Result": "ZENIT provides a working link to ArchiCON, and the user can view PoS borderò details in ArchiCON.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-014"
    },
    {
      "Title": "Verify Absence of General Restrictions",
      "ID": "TC-042",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review the system documentation and configuration for any stated general restrictions.",
          "Expected Result": "No general restrictions are documented or configured in the system."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to perform standard user actions (e.g., login, navigation, data entry) without any special permissions or roles.",
          "Expected Result": "All standard actions are permitted and no restriction messages are displayed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "General Restrictions",
      "Preconditions": "System is deployed and accessible. Tester has standard user credentials.",
      "Execution Mode": "Manual",
      "Functionality": "General Restrictions Handling",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Standard user credentials; access to system documentation.",
      "Expected Result": "No general restrictions are present or enforced in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers verification that no general restrictions are present as per requirements.",
      "_polarion": "REQ-GEN-RESTRICTIONS"
    },
    {
      "Title": "Verify Initial Load and Data Migration Completeness",
      "ID": "TC-043",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is in a clean state with no pre-existing data.",
          "Expected Result": "System is ready for initial load with no residual data."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial load and data migration process using the provided migration tool or interface.",
          "Expected Result": "Migration process starts successfully."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process for completion without errors.",
          "Expected Result": "Migration completes without errors."
        },
        {
          "Step": 4,
          "Step Description": "Validate that all expected data entities (e.g., users, transactions, configurations) are present in the target system.",
          "Expected Result": "All data entities are present and accounted for."
        },
        {
          "Step": 5,
          "Step Description": "Compare a sample of migrated records with the source system for accuracy and completeness.",
          "Expected Result": "Sample records match exactly between source and target systems."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "System is clean and ready for migration. Migration tool and source data are available.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Load and Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Source data set for migration, migration tool access.",
      "Expected Result": "All data from the source system is accurately and completely migrated to the target system without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF001;XPS-ZENIT-001"
    },
    {
      "Title": "Verify User Disconnection After Inactivity Timeout",
      "ID": "TC-044",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a valid user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive (no user interaction) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system behavior after the timeout period elapses.",
          "Expected Result": "User is automatically disconnected and redirected to the login screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Session Management",
      "Preconditions": "User account exists. Inactivity timeout is configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Disconnected for inactivity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User is automatically logged out after the inactivity timeout and redirected to the login screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002;XPS-ZENIT-202"
    },
    {
      "Title": "Verify Login Tracking for SOX Compliance",
      "ID": "TC-045",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application using valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access the login tracking logs or audit trail as an administrator.",
          "Expected Result": "Login event is recorded in the audit trail with correct user, timestamp, and status."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to log in with invalid credentials.",
          "Expected Result": "Login attempt fails with an error message."
        },
        {
          "Step": 4,
          "Step Description": "Access the login tracking logs or audit trail again.",
          "Expected Result": "Failed login attempt is recorded in the audit trail with correct user, timestamp, and failure status."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Audit & Compliance",
      "Preconditions": "Audit logging is enabled. Admin access to audit logs is available.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking (SOX)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid and invalid user credentials.",
      "Expected Result": "All login attempts (successful and failed) are accurately recorded in the audit trail for SOX compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF003;XPS-ZENIT-203"
    },
    {
      "Title": "Verify Visualization Data Access Tracking",
      "ID": "TC-046",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user with access to visualization data.",
          "Expected Result": "User is logged in and can access visualization features."
        },
        {
          "Step": 2,
          "Step Description": "Access a visualization dashboard or report.",
          "Expected Result": "Visualization data is displayed to the user."
        },
        {
          "Step": 3,
          "Step Description": "Access the data access tracking logs as an administrator.",
          "Expected Result": "Data access event is recorded with user, timestamp, and accessed resource."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Audit & Compliance",
      "Preconditions": "Audit logging is enabled. User has access to visualization data. Admin access to logs is available.",
      "Execution Mode": "Manual",
      "Functionality": "Visualization Data Access Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with visualization access.",
      "Expected Result": "All accesses to visualization data are tracked and logged with relevant details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF003;XPS-ZENIT-204"
    },
    {
      "Title": "Verify Operations Tracking Functionality",
      "ID": "TC-047",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user with permissions to perform operations (e.g., create, update, delete records).",
          "Expected Result": "User is logged in and can perform operations."
        },
        {
          "Step": 2,
          "Step Description": "Perform a create operation on a record.",
          "Expected Result": "Record is created successfully."
        },
        {
          "Step": 3,
          "Step Description": "Perform an update operation on the same record.",
          "Expected Result": "Record is updated successfully."
        },
        {
          "Step": 4,
          "Step Description": "Perform a delete operation on the record.",
          "Expected Result": "Record is deleted successfully."
        },
        {
          "Step": 5,
          "Step Description": "Access the operations tracking logs as an administrator.",
          "Expected Result": "All performed operations (create, update, delete) are logged with user, timestamp, operation type, and record details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Audit & Compliance",
      "Preconditions": "User with appropriate permissions. Operations tracking is enabled. Admin access to logs.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with operation permissions.",
      "Expected Result": "All user operations are tracked and logged with relevant details for audit purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF004;XPS-ZENIT-220"
    },
    {
      "Title": "Automated Data Collection from POS Registries",
      "ID": "TC-048",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend as an authorized user.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed with available data sources."
        },
        {
          "Step": 3,
          "Step Description": "Initiate automated data collection from POS registries.",
          "Expected Result": "System starts the data collection process and displays progress."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the process to complete.",
          "Expected Result": "System confirms completion and displays a summary of collected data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Automated Data Collection",
      "Preconditions": "User has valid credentials and access rights. POS registries are available and connected.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection from POS registries",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; accessible POS registry endpoints.",
      "Expected Result": "System successfully collects and summarizes data from POS registries without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Automated Data Collection from Gaming Platforms",
      "ID": "TC-049",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is shown."
        },
        {
          "Step": 3,
          "Step Description": "Initiate automated data collection from gaming platforms.",
          "Expected Result": "System begins data collection and shows progress."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the process to complete.",
          "Expected Result": "System displays a summary of collected data from gaming platforms."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Automated Data Collection",
      "Preconditions": "User is authenticated. Gaming platforms are accessible and integrated.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection from gaming platforms",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; accessible gaming platform endpoints.",
      "Expected Result": "System collects and summarizes data from gaming platforms without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Automated Data Collection from Document Archives",
      "ID": "TC-050",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is shown."
        },
        {
          "Step": 3,
          "Step Description": "Initiate automated data collection from document archives.",
          "Expected Result": "System starts data collection and displays progress."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the process to complete.",
          "Expected Result": "System displays a summary of collected data from document archives."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Automated Data Collection",
      "Preconditions": "User is authenticated. Document archives are accessible and integrated.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection from document archives",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; accessible document archive endpoints.",
      "Expected Result": "System collects and summarizes data from document archives without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Centralized Dashboard Displays Relevant Credit Information",
      "ID": "TC-051",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the dashboard displays financial data, credit ratings, and other relevant credit information.",
          "Expected Result": "Dashboard shows up-to-date financial data, credit ratings, and other relevant information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Centralized Dashboard",
      "Preconditions": "User is authenticated. Data sources have been successfully collected and processed.",
      "Execution Mode": "Manual",
      "Functionality": "Display of credit information on dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; pre-populated credit data.",
      "Expected Result": "Dashboard displays all relevant credit information accurately and in real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Multi-Brand Trusted Customer Management According to FlutterSEA B2B Retail Master Classifications",
      "ID": "TC-052",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend as an admin user.",
          "Expected Result": "Admin user is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the customer management section.",
          "Expected Result": "Customer management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a customer and assign multiple brands according to FlutterSEA B2B retail master classifications.",
          "Expected Result": "System allows assignment of multiple brands to the customer."
        },
        {
          "Step": 4,
          "Step Description": "Save the changes and verify the customer profile.",
          "Expected Result": "Customer profile reflects the assigned brands and correct classification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Multi-Brand Customer Management",
      "Preconditions": "Admin user is authenticated. FlutterSEA B2B retail master classifications are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Multi-brand trusted customer management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin credentials; customer records; brand classification data.",
      "Expected Result": "System manages trusted customers in multi-brand mode as per FlutterSEA B2B retail master classifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Error Handling During Data Collection Failure",
      "ID": "TC-053",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is shown."
        },
        {
          "Step": 3,
          "Step Description": "Simulate a failure in one of the data sources (e.g., disconnect POS registry).",
          "Expected Result": "System detects the failure and displays an error message."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the error is logged for audit and traceability.",
          "Expected Result": "Error is recorded in the system logs with relevant details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Error Handling and Audit",
      "Preconditions": "User is authenticated. At least one data source is intentionally unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling and audit logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one unavailable data source.",
      "Expected Result": "System handles data collection errors gracefully and logs them for audit and traceability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Audit and Traceability of User Actions",
      "ID": "TC-054",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backend as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a significant action (e.g., update customer profile, initiate data collection).",
          "Expected Result": "Action is completed successfully."
        },
        {
          "Step": 3,
          "Step Description": "Access the audit log or traceability module.",
          "Expected Result": "Audit log displays the performed action with timestamp, user ID, and action details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Audit and Traceability",
      "Preconditions": "User is authenticated. Audit logging is enabled in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Audit and traceability of user actions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; audit log access.",
      "Expected Result": "All significant user actions are logged with complete traceability information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Usability: Dashboard Layout and Navigation",
      "ID": "TC-055",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate through different sections of the dashboard (e.g., credit info, customer management).",
          "Expected Result": "Navigation is intuitive and sections are easily accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all dashboard elements are clearly labeled and accessible.",
          "Expected Result": "All dashboard elements are visible, labeled, and accessible without confusion."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Usability",
      "Preconditions": "User is authenticated. Dashboard is populated with data.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard usability and navigation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; populated dashboard.",
      "Expected Result": "Dashboard layout is user-friendly, and navigation is intuitive for all users.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-006"
    },
    {
      "Title": "Verify successful initial data load from Excel file",
      "ID": "TC-056",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid Excel file containing all required data fields as per the ZENIT data model.",
          "Expected Result": "Excel file is ready and contains valid, complete data."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface before the system is booted for operational use.",
          "Expected Result": "Data import interface is accessible and ready for data upload."
        },
        {
          "Step": 3,
          "Step Description": "Select the prepared Excel file and initiate the data import process.",
          "Expected Result": "System accepts the file and begins the import process."
        },
        {
          "Step": 4,
          "Step Description": "Monitor the import process for completion and any error messages.",
          "Expected Result": "Import process completes without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all data from the Excel file is present and correctly populated in the ZENIT system.",
          "Expected Result": "All data is accurately imported and available in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "ZENIT system is not yet booted for operational use. Data import interface is enabled. User has access rights to perform data import.",
      "Execution Mode": "Manual",
      "Functionality": "Initial data load from Excel files",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with representative data for all required fields.",
      "Expected Result": "ZENIT system is fully populated with data from the Excel file, with data integrity and completeness ensured.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF001"
    },
    {
      "Title": "Verify successful initial data load from CSV file",
      "ID": "TC-057",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid CSV file containing all required data fields as per the ZENIT data model.",
          "Expected Result": "CSV file is ready and contains valid, complete data."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface before the system is booted for operational use.",
          "Expected Result": "Data import interface is accessible and ready for data upload."
        },
        {
          "Step": 3,
          "Step Description": "Select the prepared CSV file and initiate the data import process.",
          "Expected Result": "System accepts the file and begins the import process."
        },
        {
          "Step": 4,
          "Step Description": "Monitor the import process for completion and any error messages.",
          "Expected Result": "Import process completes without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all data from the CSV file is present and correctly populated in the ZENIT system.",
          "Expected Result": "All data is accurately imported and available in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "ZENIT system is not yet booted for operational use. Data import interface is enabled. User has access rights to perform data import.",
      "Execution Mode": "Manual",
      "Functionality": "Initial data load from CSV files",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid CSV file with representative data for all required fields.",
      "Expected Result": "ZENIT system is fully populated with data from the CSV file, with data integrity and completeness ensured.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF001"
    },
    {
      "Title": "Verify successful initial data migration from existing database",
      "ID": "TC-058",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure access to the existing source database containing the required data.",
          "Expected Result": "Source database is accessible and contains valid data."
        },
        {
          "Step": 2,
          "Step Description": "Configure the ZENIT system to connect to the source database for migration.",
          "Expected Result": "ZENIT system is configured with correct connection parameters."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the data migration process from the source database.",
          "Expected Result": "System begins migration and displays progress."
        },
        {
          "Step": 4,
          "Step Description": "Monitor the migration process for completion and any error messages.",
          "Expected Result": "Migration process completes without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all data from the source database is present and correctly populated in the ZENIT system.",
          "Expected Result": "All data is accurately migrated and available in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "ZENIT system is not yet booted for operational use. Source database is available and accessible. User has access rights to perform data migration.",
      "Execution Mode": "Manual",
      "Functionality": "Initial data migration from existing databases",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Access to existing database with representative data for all required fields.",
      "Expected Result": "ZENIT system is fully populated with data from the source database, with data integrity and completeness ensured.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF001"
    },
    {
      "Title": "Verify data integrity after initial data load",
      "ID": "TC-059",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform initial data load using any supported source (Excel, CSV, or database).",
          "Expected Result": "Data load completes successfully."
        },
        {
          "Step": 2,
          "Step Description": "Query the ZENIT system to retrieve imported data for key entities.",
          "Expected Result": "Data is retrievable from the system."
        },
        {
          "Step": 3,
          "Step Description": "Compare imported data with source data for accuracy and completeness.",
          "Expected Result": "Imported data matches source data exactly, with no loss or corruption."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "Initial data load has been completed using a supported source. Source data is available for comparison.",
      "Execution Mode": "Manual",
      "Functionality": "Data integrity verification after migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Source data and corresponding imported data in ZENIT system.",
      "Expected Result": "All imported data in ZENIT matches the source data, ensuring data integrity and completeness.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF001"
    },
    {
      "Title": "Verify system rejects invalid or incomplete data during initial load",
      "ID": "TC-060",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a data file (Excel or CSV) with missing required fields or invalid data formats.",
          "Expected Result": "File is ready with intentional errors."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to import the invalid data file into the ZENIT system before operational boot.",
          "Expected Result": "System processes the file and detects errors."
        },
        {
          "Step": 3,
          "Step Description": "Observe system response and error messages.",
          "Expected Result": "System rejects the file and displays clear, descriptive error messages indicating the issues."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "ZENIT system is not yet booted for operational use. Data import interface is enabled. User has access rights to perform data import.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data quality during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel or CSV file with missing required fields or invalid formats.",
      "Expected Result": "System rejects invalid or incomplete data and provides clear error messages, ensuring only valid data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF001"
    },
    {
      "Title": "Verify system prevents operational boot if initial data load is incomplete",
      "ID": "TC-061",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to boot the ZENIT system for operational use without performing the initial data load.",
          "Expected Result": "System checks for presence of required data."
        },
        {
          "Step": 2,
          "Step Description": "Observe system behavior and any error or warning messages.",
          "Expected Result": "System prevents operational boot and displays a message indicating that initial data load is required."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "System Boot Module",
      "Preconditions": "ZENIT system is not yet booted for operational use. No initial data load has been performed.",
      "Execution Mode": "Manual",
      "Functionality": "System boot dependency on data migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "System in pre-operational state with no data loaded.",
      "Expected Result": "System does not allow operational boot until initial data load is complete, ensuring data availability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF001"
    },
    {
      "Title": "Verify system handles large data volumes during initial load (performance)",
      "ID": "TC-062",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a large data file (Excel or CSV) or a large source database with maximum expected data volume.",
          "Expected Result": "Large data source is ready for import."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial data load process using the large data source.",
          "Expected Result": "System begins data import process."
        },
        {
          "Step": 3,
          "Step Description": "Monitor system performance, resource usage, and completion time during the import.",
          "Expected Result": "System completes import within acceptable time and resource limits, without errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "ZENIT system is not yet booted for operational use. Data import interface is enabled. User has access rights to perform data import.",
      "Execution Mode": "Manual",
      "Functionality": "Performance of initial data load with large datasets",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large Excel/CSV file or database with maximum expected data volume.",
      "Expected Result": "System successfully imports large data volumes within acceptable performance thresholds, maintaining data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF001"
    },
    {
      "Title": "Automatic Logout After Inactivity Timeout",
      "ID": "TC-063",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive (do not interact with the application) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application after the inactivity timeout has elapsed.",
          "Expected Result": "The system automatically logs out the user and redirects to the login page or displays a session expired message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication/Session Management",
      "Preconditions": "User account exists. Inactivity timeout is configured (e.g., 15 minutes). User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout and automatic logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; inactivity timeout value (e.g., 15 minutes)",
      "Expected Result": "User is automatically logged out after the inactivity timeout period with no activity detected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002"
    },
    {
      "Title": "Session Remains Active with User Activity",
      "ID": "TC-064",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Perform any user activity (e.g., click a button, navigate to another page) before the inactivity timeout period elapses.",
          "Expected Result": "User activity is registered by the system."
        },
        {
          "Step": 3,
          "Step Description": "Continue to interact with the application periodically, ensuring no period of inactivity exceeds the timeout value.",
          "Expected Result": "Session remains active and user is not logged out."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication/Session Management",
      "Preconditions": "User account exists. Inactivity timeout is configured. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout and automatic logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; inactivity timeout value (e.g., 15 minutes)",
      "Expected Result": "User session remains active as long as user activity occurs within the timeout period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002"
    },
    {
      "Title": "Warning Message Before Automatic Logout Due to Inactivity",
      "ID": "TC-065",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for a period just before the inactivity timeout threshold (e.g., 1 minute before timeout).",
          "Expected Result": "No user activity is detected during this period."
        },
        {
          "Step": 3,
          "Step Description": "Observe if a warning message or prompt appears indicating impending logout due to inactivity.",
          "Expected Result": "A warning message is displayed to the user, indicating that the session will expire soon due to inactivity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication/Session Management",
      "Preconditions": "User account exists. Inactivity timeout and warning period are configured. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout and automatic logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; inactivity timeout value (e.g., 15 minutes); warning period (e.g., 1 minute before timeout)",
      "Expected Result": "User receives a warning message before being automatically logged out due to inactivity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers warning notification aspect if implemented.",
      "_polarion": "RF002"
    },
    {
      "Title": "Session Termination on Multiple Devices After Inactivity",
      "ID": "TC-066",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application on two different devices using the same user account.",
          "Expected Result": "User is successfully logged in on both devices."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive on both devices for the configured inactivity timeout period.",
          "Expected Result": "No user activity is detected on either device during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the session status on both devices after the timeout period elapses.",
          "Expected Result": "The system automatically logs out the user on both devices after the inactivity timeout."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication/Session Management",
      "Preconditions": "User account exists. Inactivity timeout is configured. User is logged in on multiple devices.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout and automatic logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; two devices (e.g., desktop and laptop); inactivity timeout value",
      "Expected Result": "User is logged out from all devices after inactivity timeout is reached on each device.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers multi-device session management.",
      "_polarion": "RF002"
    },
    {
      "Title": "Session Persists When Application is Minimized or in Background",
      "ID": "TC-067",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Minimize the application window or move it to the background without interacting with it for the inactivity timeout period.",
          "Expected Result": "No user activity is detected during this period."
        },
        {
          "Step": 3,
          "Step Description": "Restore the application window after the timeout period has elapsed.",
          "Expected Result": "The system automatically logs out the user and prompts for login again, or displays a session expired message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication/Session Management",
      "Preconditions": "User account exists. Inactivity timeout is configured. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout and automatic logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; inactivity timeout value",
      "Expected Result": "User is logged out after inactivity even if the application is minimized or in the background.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers inactivity detection when application is not in focus.",
      "_polarion": "RF002"
    },
    {
      "Title": "No Logout Triggered for Background System Processes",
      "ID": "TC-068",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Allow background system processes (e.g., notifications, background data sync) to occur without user interaction for the inactivity timeout period.",
          "Expected Result": "No user activity is detected, only background processes are running."
        },
        {
          "Step": 3,
          "Step Description": "Observe the session status after the inactivity timeout period has elapsed.",
          "Expected Result": "The system automatically logs out the user, as background processes do not count as user activity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Authentication/Session Management",
      "Preconditions": "User account exists. Inactivity timeout is configured. User is logged in. Background processes are enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout and automatic logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; inactivity timeout value; background process enabled",
      "Expected Result": "User is logged out after inactivity timeout even if background processes are running.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers distinction between user activity and background processes.",
      "_polarion": "RF002"
    },
    {
      "Title": "Session Timeout Value Configuration Verification",
      "ID": "TC-069",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Verify the current inactivity timeout value in the system configuration.",
          "Expected Result": "Inactivity timeout value is as per security policy (e.g., 15 minutes)."
        },
        {
          "Step": 3,
          "Step Description": "Remain inactive for a period less than the configured timeout value.",
          "Expected Result": "User remains logged in."
        },
        {
          "Step": 4,
          "Step Description": "Remain inactive for a period exceeding the configured timeout value.",
          "Expected Result": "User is automatically logged out after the timeout period."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication/Session Management",
      "Preconditions": "User account exists. Inactivity timeout is configurable. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Session timeout and automatic logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; system configuration access; inactivity timeout value",
      "Expected Result": "System enforces the configured inactivity timeout value for automatic logout.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers configuration and enforcement of timeout value.",
      "_polarion": "RF002"
    },
    {
      "Title": "Verify Login Activity is Recorded with Required Details (SOX Compliance)",
      "ID": "TC-070",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system with a valid user account.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access the login tracking module as a Control Room user.",
          "Expected Result": "Login tracking module is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Search for the recent login activity of the user account used in Step 1.",
          "Expected Result": "Login activity is displayed in the tracking module."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the login record contains user ID, login timestamp, and user role.",
          "Expected Result": "All required details (user, login time, role) are present in the record."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Login Tracking Module",
      "Preconditions": "User account exists. Control Room user has access to the tracking module. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Login activity tracking and audit logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Control Room user credentials.",
      "Expected Result": "Login activity is recorded with all required details and visible to authorized users.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF003"
    },
    {
      "Title": "Verify Only Authorized Users Can Access Login Tracking Data",
      "ID": "TC-071",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a regular user (not part of Control Room).",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the login tracking module.",
          "Expected Result": "Access is denied or module is not visible to the user."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Login Tracking Module",
      "Preconditions": "Regular user account exists. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Access control for login tracking data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Regular user credentials.",
      "Expected Result": "Only authorized users can access login tracking data; unauthorized users are denied access.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF003"
    },
    {
      "Title": "Verify Extraction of Login Tracking Data by Control Room",
      "ID": "TC-072",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a Control Room user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access the login tracking module.",
          "Expected Result": "Login tracking module is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Use the export or extract function to download login activity data (e.g., as CSV or Excel).",
          "Expected Result": "Data extraction process is initiated."
        },
        {
          "Step": 4,
          "Step Description": "Open the exported file and verify that it contains user, login time, and role for each record.",
          "Expected Result": "Exported file contains all required details for each login activity."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Login Tracking Module",
      "Preconditions": "Control Room user account exists. System is operational. Login activities exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction and reporting for login tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room user credentials; existing login activity data.",
      "Expected Result": "Control Room user can extract login tracking data with all required details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF003"
    },
    {
      "Title": "Verify System Records Failed Login Attempts",
      "ID": "TC-073",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to log in with an invalid password for a valid user account.",
          "Expected Result": "Login attempt fails with an error message."
        },
        {
          "Step": 2,
          "Step Description": "Access the login tracking module as a Control Room user.",
          "Expected Result": "Login tracking module is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Search for the failed login attempt in the tracking module.",
          "Expected Result": "Failed login attempt is recorded with user, timestamp, and failure reason."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Login Tracking Module",
      "Preconditions": "Valid user account exists. Control Room user has access to the tracking module. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Failed login attempt tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Control Room user credentials.",
      "Expected Result": "Failed login attempts are recorded and visible to authorized users with all required details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF003"
    },
    {
      "Title": "Verify Login Tracking Data Integrity and Immutability (SOX Compliance)",
      "ID": "TC-074",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a Control Room user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access the login tracking module.",
          "Expected Result": "Login tracking module is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to modify or delete an existing login activity record.",
          "Expected Result": "System prevents modification or deletion of login activity records."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Login Tracking Module",
      "Preconditions": "Control Room user account exists. System is operational. Login activities exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Audit log integrity and immutability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room user credentials; existing login activity data.",
      "Expected Result": "Login tracking data cannot be modified or deleted, ensuring audit log integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF003"
    },
    {
      "Title": "Verify Log Generation for SOX-Relevant Actions",
      "ID": "TC-075",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with permissions to perform SOX-relevant actions (e.g., create, update, delete financial records).",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Perform a SOX-relevant action, such as creating a new financial record.",
          "Expected Result": "Action is completed successfully in the application."
        },
        {
          "Step": 3,
          "Step Description": "Access the application log storage or monitoring system.",
          "Expected Result": "A log entry corresponding to the performed action is present."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the log entry contains required details: user ID, timestamp, action performed, affected record, and outcome.",
          "Expected Result": "Log entry contains all required SOX-compliant fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Log Management",
      "Preconditions": "User account with appropriate permissions exists. Log storage is accessible. SOX-relevant actions are enabled in the environment.",
      "Execution Mode": "Manual",
      "Functionality": "SOX-compliant log traceability for critical actions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, sample financial record data",
      "Expected Result": "All SOX-relevant actions are logged with complete, traceable, and compliant information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF004"
    },
    {
      "Title": "Verify Log Integrity and Tamper Detection",
      "ID": "TC-076",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a SOX-relevant action in the application (e.g., update a financial record).",
          "Expected Result": "Action is completed and logged."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to modify or delete the corresponding log entry directly in the log storage (if possible, simulate unauthorized access).",
          "Expected Result": "System prevents modification or deletion of the log entry, or logs the tampering attempt."
        },
        {
          "Step": 3,
          "Step Description": "Review the log storage for evidence of tampering or unauthorized access attempts.",
          "Expected Result": "Any tampering attempt is either blocked or recorded as a separate log entry."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Log Management",
      "Preconditions": "Log storage is accessible. User with SOX-relevant permissions is available. Ability to simulate unauthorized access (test or staging environment).",
      "Execution Mode": "Manual",
      "Functionality": "Log integrity and tamper detection for SOX compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, access to log storage",
      "Expected Result": "Log entries cannot be altered or deleted without detection; tampering attempts are logged or blocked.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF004"
    },
    {
      "Title": "Verify Log Retention Policy for SOX Compliance",
      "ID": "TC-077",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a SOX-relevant action and confirm it is logged.",
          "Expected Result": "Action is logged with all required details."
        },
        {
          "Step": 2,
          "Step Description": "Check the log storage for retention settings (e.g., logs must be retained for at least 7 years as per SOX).",
          "Expected Result": "Retention policy is configured as per SOX requirements."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to delete a log entry before the retention period expires (if possible, simulate via admin interface or direct access).",
          "Expected Result": "System prevents deletion of log entries before the retention period ends."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Log Management",
      "Preconditions": "Log storage is accessible. Retention policy is configurable. User with admin access is available.",
      "Execution Mode": "Manual",
      "Functionality": "Log retention enforcement for SOX compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, admin access",
      "Expected Result": "Logs are retained for the required period and cannot be deleted prematurely.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF004"
    },
    {
      "Title": "Verify Log Access Control and Audit Trail",
      "ID": "TC-078",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access application logs as a regular user without log access permissions.",
          "Expected Result": "Access to logs is denied."
        },
        {
          "Step": 2,
          "Step Description": "Access logs as an authorized admin user.",
          "Expected Result": "Admin user is able to view logs."
        },
        {
          "Step": 3,
          "Step Description": "Review the audit trail for log access events.",
          "Expected Result": "All log access events are recorded, including user ID, timestamp, and accessed log details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Log Management",
      "Preconditions": "User accounts with and without log access permissions exist. Audit trail functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Log access control and audit trail for SOX compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials (regular and admin)",
      "Expected Result": "Only authorized users can access logs; all access is auditable and traceable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF004"
    },
    {
      "Title": "Verify Log Format and Required Fields for SOX Compliance",
      "ID": "TC-079",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a SOX-relevant action in the application.",
          "Expected Result": "Action is completed and logged."
        },
        {
          "Step": 2,
          "Step Description": "Access the generated log entry for the action.",
          "Expected Result": "Log entry is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the log entry includes all required fields: user ID, timestamp, action type, affected data, outcome, and source IP (if applicable).",
          "Expected Result": "Log entry contains all mandatory SOX-compliant fields in the correct format."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Log Management",
      "Preconditions": "Log storage is accessible. SOX-relevant actions are enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Log format and field completeness for SOX compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, sample action data",
      "Expected Result": "All logs contain the required SOX-compliant fields in the correct format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF004"
    },
    {
      "Title": "Simultaneous Update of the Same Record by Multiple Users",
      "ID": "TC-080",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and opens Record X for editing.",
          "Expected Result": "User A successfully accesses Record X in edit mode."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and opens the same Record X for editing at the same time.",
          "Expected Result": "User B successfully accesses Record X in edit mode."
        },
        {
          "Step": 3,
          "Step Description": "User A modifies a field in Record X and saves the changes.",
          "Expected Result": "System saves User A's changes to Record X."
        },
        {
          "Step": 4,
          "Step Description": "User B modifies a different field in Record X and attempts to save the changes.",
          "Expected Result": "System detects concurrent modification and either merges changes, prompts User B about the conflict, or prevents the overwrite according to the concurrency management policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Management Module",
      "Preconditions": "Record X exists in the system. Both User A and User B have valid credentials and edit permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency management during simultaneous record updates.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Record X, User A credentials, User B credentials.",
      "Expected Result": "System maintains data consistency and prevents data loss or corruption when multiple users attempt to update the same record concurrently.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF005"
    },
    {
      "Title": "Simultaneous Creation of Records with Identical Unique Keys",
      "ID": "TC-081",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A initiates the creation of a new record with unique key 'ABC123'.",
          "Expected Result": "User A is able to fill in the record creation form with key 'ABC123'."
        },
        {
          "Step": 2,
          "Step Description": "User B, at the same time, initiates the creation of a new record with the same unique key 'ABC123'.",
          "Expected Result": "User B is able to fill in the record creation form with key 'ABC123'."
        },
        {
          "Step": 3,
          "Step Description": "User A submits the form to create the record.",
          "Expected Result": "System creates the record with key 'ABC123' for User A."
        },
        {
          "Step": 4,
          "Step Description": "User B submits the form to create the record with the same key.",
          "Expected Result": "System detects the duplicate key and prevents User B from creating the record, displaying an appropriate error message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Management Module",
      "Preconditions": "No record with key 'ABC123' exists. Both User A and User B have valid credentials and creation permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency management during record creation with unique constraints.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A credentials, User B credentials, unique key 'ABC123'.",
      "Expected Result": "System enforces unique constraints and prevents duplicate records even under concurrent creation attempts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF005"
    },
    {
      "Title": "Simultaneous Deletion and Update of the Same Record",
      "ID": "TC-082",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and opens Record Y for editing.",
          "Expected Result": "User A successfully accesses Record Y in edit mode."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and opens the same Record Y for deletion.",
          "Expected Result": "User B successfully accesses Record Y in delete mode."
        },
        {
          "Step": 3,
          "Step Description": "User B deletes Record Y and confirms the deletion.",
          "Expected Result": "System deletes Record Y from the database."
        },
        {
          "Step": 4,
          "Step Description": "User A attempts to save changes to Record Y after it has been deleted by User B.",
          "Expected Result": "System notifies User A that Record Y no longer exists and prevents the update."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Management Module",
      "Preconditions": "Record Y exists in the system. Both User A and User B have valid credentials and appropriate permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency management during simultaneous update and deletion of a record.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Record Y, User A credentials, User B credentials.",
      "Expected Result": "System prevents updates to records that have been deleted concurrently, ensuring data consistency.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF005"
    },
    {
      "Title": "Read Consistency During Concurrent Updates",
      "ID": "TC-083",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and opens Record Z for editing.",
          "Expected Result": "User A successfully accesses Record Z in edit mode."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and opens the same Record Z for editing.",
          "Expected Result": "User B successfully accesses Record Z in edit mode."
        },
        {
          "Step": 3,
          "Step Description": "User A updates a field in Record Z and saves the changes.",
          "Expected Result": "System saves User A's changes to Record Z."
        },
        {
          "Step": 4,
          "Step Description": "User B, without refreshing, attempts to read the value of the updated field in Record Z.",
          "Expected Result": "User B sees the value of the field as it was before User A's update (depending on isolation level), or is notified that the record has changed."
        },
        {
          "Step": 5,
          "Step Description": "User B refreshes the record view.",
          "Expected Result": "User B sees the updated value as saved by User A."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Management Module",
      "Preconditions": "Record Z exists in the system. Both User A and User B have valid credentials and edit permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Read consistency and isolation during concurrent updates.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Record Z, User A credentials, User B credentials.",
      "Expected Result": "System ensures read consistency and proper isolation during concurrent updates, according to the defined isolation level.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF005"
    },
    {
      "Title": "Verify language selection and persistence in Settings",
      "ID": "TC-084",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application and navigate to the Settings screen.",
          "Expected Result": "Settings screen is displayed with language options visible."
        },
        {
          "Step": 2,
          "Step Description": "Select a different language (e.g., Italian) from the language preferences list.",
          "Expected Result": "The application interface updates to display all text in the selected language."
        },
        {
          "Step": 3,
          "Step Description": "Close and relaunch the application.",
          "Expected Result": "The application interface remains in the previously selected language (Italian)."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Settings Module",
      "Preconditions": "User is logged in and has access to the Settings screen.",
      "Execution Mode": "Manual",
      "Functionality": "Language preference selection and persistence",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with default language set to English.",
      "Expected Result": "User can select a language, and the application interface updates and persists the selection after restart.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF006"
    },
    {
      "Title": "Verify font size adjustment in display preferences",
      "ID": "TC-085",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Settings screen and locate the display preferences section.",
          "Expected Result": "Display preferences section is visible with font size adjustment options."
        },
        {
          "Step": 2,
          "Step Description": "Increase the font size to the maximum available setting.",
          "Expected Result": "All application text increases in size accordingly."
        },
        {
          "Step": 3,
          "Step Description": "Decrease the font size to the minimum available setting.",
          "Expected Result": "All application text decreases in size accordingly."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Settings Module",
      "Preconditions": "User is logged in and on the Settings screen.",
      "Execution Mode": "Manual",
      "Functionality": "Font size adjustment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with default font size setting.",
      "Expected Result": "User can adjust font size, and the change is reflected throughout the application interface.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF006"
    },
    {
      "Title": "Verify light/dark theme toggle in display preferences",
      "ID": "TC-086",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Settings screen and locate the display preferences section.",
          "Expected Result": "Display preferences section is visible with theme toggle options."
        },
        {
          "Step": 2,
          "Step Description": "Switch from light theme to dark theme.",
          "Expected Result": "Application interface updates to dark theme immediately."
        },
        {
          "Step": 3,
          "Step Description": "Switch back from dark theme to light theme.",
          "Expected Result": "Application interface updates to light theme immediately."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Settings Module",
      "Preconditions": "User is logged in and on the Settings screen.",
      "Execution Mode": "Manual",
      "Functionality": "Theme selection (light/dark mode)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with default theme setting (light).",
      "Expected Result": "User can toggle between light and dark themes, and the interface updates accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF006"
    },
    {
      "Title": "Verify error handling for unsupported language selection",
      "ID": "TC-087",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Settings screen and attempt to select a language not supported by the application (if possible).",
          "Expected Result": "Application displays an error message or prevents selection of unsupported language."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Settings Module",
      "Preconditions": "User is logged in and on the Settings screen. Application has a defined set of supported languages.",
      "Execution Mode": "Manual",
      "Functionality": "Language preference validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User account; attempt to select unsupported language (e.g., German if not available).",
      "Expected Result": "Application prevents selection of unsupported languages and provides appropriate feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only negative scenario for language selection.",
      "_polarion": "RF006"
    },
    {
      "Title": "Verify persistence of display preferences after application restart",
      "ID": "TC-088",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Settings screen and change display preferences (e.g., set font size to large and theme to dark).",
          "Expected Result": "Display preferences are updated immediately in the application interface."
        },
        {
          "Step": 2,
          "Step Description": "Close and relaunch the application.",
          "Expected Result": "Display preferences (font size and theme) remain as previously set."
        }
      ],
      "Test Group": "App IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Settings Module",
      "Preconditions": "User is logged in and on the Settings screen.",
      "Execution Mode": "Manual",
      "Functionality": "Persistence of display preferences",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with default display preferences.",
      "Expected Result": "Display preferences are retained after application restart.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF006"
    },
    {
      "Title": "Verify successful connection to Arxivar service for document listing",
      "ID": "TC-089",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is configured with valid Arxivar service credentials and endpoint.",
          "Expected Result": "System is ready to connect to Arxivar."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the document acquisition process for a specific PoS.",
          "Expected Result": "System attempts to connect to Arxivar service."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the connection process.",
          "Expected Result": "System successfully establishes a connection with Arxivar service."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration",
      "Preconditions": "System has network access and valid Arxivar credentials configured. Arxivar service is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Arxivar service connection and document listing initiation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid PoS identifier, valid Arxivar credentials",
      "Expected Result": "System successfully connects to Arxivar and is ready to retrieve documents for the specified PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007"
    },
    {
      "Title": "Verify document listing based on type and status criteria",
      "ID": "TC-090",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Connect to Arxivar service as per standard procedure.",
          "Expected Result": "Connection to Arxivar is established."
        },
        {
          "Step": 2,
          "Step Description": "Request document list for a specific PoS with criteria: type='Invoice', status='Approved'.",
          "Expected Result": "System sends request with correct criteria to Arxivar."
        },
        {
          "Step": 3,
          "Step Description": "Receive and display the list of documents from Arxivar.",
          "Expected Result": "Only documents of type 'Invoice' and status 'Approved' for the specified PoS are listed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration",
      "Preconditions": "System is connected to Arxivar. At least one document of type 'Invoice' and status 'Approved' exists for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Document filtering by type and status",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known documents of various types and statuses",
      "Expected Result": "System lists only documents matching the specified type and status for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007"
    },
    {
      "Title": "Verify system behavior when no documents match the criteria",
      "ID": "TC-091",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Connect to Arxivar service as per standard procedure.",
          "Expected Result": "Connection to Arxivar is established."
        },
        {
          "Step": 2,
          "Step Description": "Request document list for a specific PoS with criteria that do not match any documents (e.g., type='Contract', status='Pending').",
          "Expected Result": "System sends request with non-matching criteria to Arxivar."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the empty result set.",
          "Expected Result": "System displays a message indicating no documents are available for the specified criteria."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration",
      "Preconditions": "System is connected to Arxivar. No documents exist for the PoS with the specified criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of empty document lists",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no documents matching the test criteria",
      "Expected Result": "System gracefully handles empty results and informs the user that no documents are available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007"
    },
    {
      "Title": "Verify error handling when Arxivar service is unavailable",
      "ID": "TC-092",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Arxivar service downtime or network failure.",
          "Expected Result": "Arxivar service is unreachable."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to initiate document acquisition for a specific PoS.",
          "Expected Result": "System attempts to connect to Arxivar and fails."
        },
        {
          "Step": 3,
          "Step Description": "Observe the error message or handling mechanism.",
          "Expected Result": "System displays an appropriate error message indicating the service is unavailable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration",
      "Preconditions": "Arxivar service is intentionally made unavailable (e.g., network disconnected, service stopped).",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for external service unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier, simulated Arxivar downtime",
      "Expected Result": "System provides a clear error message and does not crash or hang when Arxivar is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007"
    },
    {
      "Title": "Verify system behavior with invalid PoS identifier",
      "ID": "TC-093",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Connect to Arxivar service as per standard procedure.",
          "Expected Result": "Connection to Arxivar is established."
        },
        {
          "Step": 2,
          "Step Description": "Request document list using an invalid or non-existent PoS identifier.",
          "Expected Result": "System sends request with invalid PoS to Arxivar."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the invalid PoS identifier.",
          "Expected Result": "System displays an error message indicating the PoS is invalid or not found."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration",
      "Preconditions": "System is connected to Arxivar. The PoS identifier used does not exist in Arxivar.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of PoS identifier",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid PoS identifier",
      "Expected Result": "System gracefully handles invalid PoS input and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007"
    },
    {
      "Title": "Verify access to 'Documents' section for a selected POS",
      "ID": "TC-094",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS from the list of available POS on the dashboard.",
          "Expected Result": "POS details are displayed and the POS is marked as selected."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "A dedicated 'Documents' section is displayed for the selected POS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Documents",
      "Preconditions": "User has access to the dashboard and at least one POS is available for selection.",
      "Execution Mode": "Manual",
      "Functionality": "Accessing the 'Documents' section for a POS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one POS with associated documents.",
      "Expected Result": "User can access the 'Documents' section for the selected POS from the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008"
    },
    {
      "Title": "Verify all documents from both Cerved and ARXivar are listed for selected POS",
      "ID": "TC-095",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS that has documents from both Cerved and ARXivar.",
          "Expected Result": "POS details are displayed and the POS is marked as selected."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "A list of documents is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that documents from both Cerved and ARXivar are present in the list.",
          "Expected Result": "All documents associated with the POS, regardless of origin, are listed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Documents",
      "Preconditions": "User has access to the dashboard; POS with documents from both Cerved and ARXivar exists.",
      "Execution Mode": "Manual",
      "Functionality": "Listing documents from multiple sources for a POS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; POS with documents from both Cerved and ARXivar.",
      "Expected Result": "All documents from both Cerved and ARXivar are listed for the selected POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008"
    },
    {
      "Title": "Verify documents are displayed for POS with documents from only one source",
      "ID": "TC-096",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS that has documents only from Cerved.",
          "Expected Result": "POS details are displayed and the POS is marked as selected."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "A list of documents is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that only Cerved documents are listed and no ARXivar documents are present.",
          "Expected Result": "Only Cerved documents are displayed for the POS."
        },
        {
          "Step": 5,
          "Step Description": "Repeat steps 2-4 for a POS that has documents only from ARXivar.",
          "Expected Result": "Only ARXivar documents are displayed for the POS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Documents",
      "Preconditions": "User has access to the dashboard; POS with documents only from Cerved and another POS with documents only from ARXivar exist.",
      "Execution Mode": "Manual",
      "Functionality": "Listing documents from a single source for a POS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; POS with documents only from Cerved; POS with documents only from ARXivar.",
      "Expected Result": "Documents from the available source are displayed for the POS; no documents from the unavailable source are shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008"
    },
    {
      "Title": "Verify behavior when selected POS has no associated documents",
      "ID": "TC-097",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS that has no associated documents from either Cerved or ARXivar.",
          "Expected Result": "POS details are displayed and the POS is marked as selected."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "The 'Documents' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the documents list.",
          "Expected Result": "A message indicating 'No documents available' or an empty list is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Documents",
      "Preconditions": "User has access to the dashboard; POS with no associated documents exists.",
      "Execution Mode": "Manual",
      "Functionality": "Handling POS with no associated documents",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; POS with no associated documents.",
      "Expected Result": "System displays an appropriate message or empty list when no documents are associated with the POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008"
    },
    {
      "Title": "Verify document details (origin, name, date) are displayed correctly",
      "ID": "TC-098",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS with multiple documents from both Cerved and ARXivar.",
          "Expected Result": "POS details are displayed and the POS is marked as selected."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "A list of documents is displayed."
        },
        {
          "Step": 4,
          "Step Description": "For each document, verify that the origin (Cerved or ARXivar), document name, and date are displayed.",
          "Expected Result": "Each document entry shows its origin, name, and date correctly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Documents",
      "Preconditions": "User has access to the dashboard; POS with multiple documents from both sources exists.",
      "Execution Mode": "Manual",
      "Functionality": "Displaying document metadata",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; POS with multiple documents from both sources.",
      "Expected Result": "Each document entry displays correct origin, name, and date information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008"
    },
    {
      "Title": "Verify system handles document retrieval failure gracefully",
      "ID": "TC-099",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS for which document retrieval from Cerved or ARXivar will fail (simulate backend failure).",
          "Expected Result": "POS details are displayed and the POS is marked as selected."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "System attempts to retrieve documents."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system's response to the retrieval failure.",
          "Expected Result": "An error message is displayed indicating the failure to retrieve documents from the affected source, but the UI remains responsive."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Documents",
      "Preconditions": "User has access to the dashboard; backend failure for document retrieval is simulated for the POS.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for document retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; POS with simulated backend failure for document retrieval.",
      "Expected Result": "System displays an appropriate error message and does not crash or hang when document retrieval fails.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008"
    },
    {
      "Title": "Open Borderò Document via ArchiCON Link from Dashboard",
      "ID": "TC-100",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system and navigate to the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry that has an associated Borderò document.",
          "Expected Result": "PoS entry is visible and indicates the presence of a Borderò document."
        },
        {
          "Step": 3,
          "Step Description": "Locate and click the ArchiCON link/button associated with the selected PoS.",
          "Expected Result": "A new browser tab or window opens, or an in-app viewer is displayed, showing the Borderò document via ArchiCON."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ArchiCON Integration",
      "Preconditions": "User is authenticated and has access to the dashboard. At least one PoS with an associated Borderò document exists.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò document via ArchiCON link from dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with associated Borderò document.",
      "Expected Result": "The Borderò document for the selected PoS is displayed via ArchiCON upon clicking the link from the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009"
    },
    {
      "Title": "Attempt to Open Borderò Link for PoS Without Associated Document",
      "ID": "TC-101",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system and navigate to the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry that does not have an associated Borderò document.",
          "Expected Result": "PoS entry is visible and indicates no Borderò document is available."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to locate or click the ArchiCON link/button for this PoS.",
          "Expected Result": "The ArchiCON link/button is either disabled, hidden, or an informative message is displayed indicating no document is available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ArchiCON Integration",
      "Preconditions": "User is authenticated and has access to the dashboard. At least one PoS without an associated Borderò document exists.",
      "Execution Mode": "Manual",
      "Functionality": "Handle absence of Borderò document for PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS without associated Borderò document.",
      "Expected Result": "User cannot open a Borderò document for a PoS where none exists, and receives appropriate feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009"
    },
    {
      "Title": "Verify Access Control for Borderò Document via ArchiCON Link",
      "ID": "TC-102",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system as a user without permission to view Borderò documents.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to locate or click the ArchiCON link/button for a PoS with an associated Borderò document.",
          "Expected Result": "The ArchiCON link/button is either not visible, disabled, or clicking it results in an access denied message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ArchiCON Integration",
      "Preconditions": "User is authenticated with restricted permissions. At least one PoS with an associated Borderò document exists.",
      "Execution Mode": "Manual",
      "Functionality": "Access control for Borderò document viewing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with restricted permissions; PoS with associated Borderò document.",
      "Expected Result": "Users without permission cannot access the Borderò document via ArchiCON link and receive an appropriate error or are prevented from accessing the link.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009"
    },
    {
      "Title": "Verify System Behavior When ArchiCON Service is Unavailable",
      "ID": "TC-103",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system and navigate to the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry with an associated Borderò document.",
          "Expected Result": "PoS entry is visible and indicates the presence of a Borderò document."
        },
        {
          "Step": 3,
          "Step Description": "Simulate ArchiCON service unavailability (e.g., disconnect network, mock service outage).",
          "Expected Result": "ArchiCON service is unreachable."
        },
        {
          "Step": 4,
          "Step Description": "Click the ArchiCON link/button for the selected PoS.",
          "Expected Result": "System displays an error message indicating the service is unavailable and the document cannot be displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ArchiCON Integration",
      "Preconditions": "User is authenticated and has access to the dashboard. At least one PoS with an associated Borderò document exists. ArchiCON service is simulated as unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for ArchiCON service unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; PoS with associated Borderò document; ArchiCON service unavailable.",
      "Expected Result": "User receives a clear error message when ArchiCON service is unavailable and the Borderò document cannot be displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009"
    },
    {
      "Title": "Verify Opening Borderò Document in New Tab or Window",
      "ID": "TC-104",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system and navigate to the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry with an associated Borderò document.",
          "Expected Result": "PoS entry is visible and indicates the presence of a Borderò document."
        },
        {
          "Step": 3,
          "Step Description": "Click the ArchiCON link/button for the selected PoS.",
          "Expected Result": "Borderò document opens in a new browser tab or window, or in an in-app viewer, without navigating away from the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ArchiCON Integration",
      "Preconditions": "User is authenticated and has access to the dashboard. At least one PoS with an associated Borderò document exists.",
      "Execution Mode": "Manual",
      "Functionality": "User experience for opening Borderò document",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with associated Borderò document.",
      "Expected Result": "Borderò document is displayed in a new tab/window or in-app viewer, preserving the dashboard context.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009"
    },
    {
      "Title": "View Existing Notes for Selected PoS from Dashboard",
      "ID": "TC-105",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid user credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the dashboard list.",
          "Expected Result": "PoS details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS.",
          "Expected Result": "All existing notes related to the selected PoS are displayed, including date, name, and other relevant details."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - PoS Notes",
      "Preconditions": "User has access to the dashboard and at least one PoS with existing notes.",
      "Execution Mode": "Manual",
      "Functionality": "View PoS Notes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with pre-existing notes",
      "Expected Result": "User can view all existing notes for the selected PoS, with all relevant information clearly displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010"
    },
    {
      "Title": "Add a New Note to Selected PoS from Dashboard",
      "ID": "TC-106",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid user credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the dashboard list.",
          "Expected Result": "PoS details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the option to add a new note.",
          "Expected Result": "A form or input area for entering a new note is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Enter note details (e.g., date, name, and relevant characteristics) and save the note.",
          "Expected Result": "The new note is saved and appears in the notes list for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - PoS Notes",
      "Preconditions": "User has access to the dashboard and at least one PoS available.",
      "Execution Mode": "Manual",
      "Functionality": "Add PoS Notes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS without the new note",
      "Expected Result": "User can successfully add a new note to the selected PoS, and the note is visible in the notes list.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010"
    },
    {
      "Title": "Verify Notes Field Accepts Various Data Types and Formats",
      "ID": "TC-107",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid user credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the dashboard list.",
          "Expected Result": "PoS details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS and click to add a new note.",
          "Expected Result": "Input area for new note is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Enter a note with various data types (e.g., alphanumeric text, special characters, date in different formats, long text).",
          "Expected Result": "System accepts the input without errors."
        },
        {
          "Step": 5,
          "Step Description": "Save the note.",
          "Expected Result": "Note is saved and displayed correctly with all entered data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - PoS Notes",
      "Preconditions": "User has access to the dashboard and at least one PoS available.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Notes Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS, sample notes with various data types (e.g., '2024-06-01, John Doe, €1000, urgent!')",
      "Expected Result": "Notes field accepts and correctly displays various data types and formats without data loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010"
    },
    {
      "Title": "Attempt to Add an Empty Note and Verify System Response",
      "ID": "TC-108",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid user credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the dashboard list.",
          "Expected Result": "PoS details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS and click to add a new note.",
          "Expected Result": "Input area for new note is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to save the note without entering any data.",
          "Expected Result": "System displays a validation error and does not save the empty note."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - PoS Notes",
      "Preconditions": "User has access to the dashboard and at least one PoS available.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Notes Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS",
      "Expected Result": "System prevents saving of empty notes and displays an appropriate validation message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010"
    },
    {
      "Title": "Verify Notes Persistence After Page Refresh or Re-login",
      "ID": "TC-109",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard with valid user credentials.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the dashboard list.",
          "Expected Result": "PoS details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS and add a new note.",
          "Expected Result": "Note is added and displayed in the notes list."
        },
        {
          "Step": 4,
          "Step Description": "Refresh the page or log out and log back in.",
          "Expected Result": "Dashboard is reloaded or user is re-authenticated."
        },
        {
          "Step": 5,
          "Step Description": "Navigate again to the same PoS and its 'Notes' section.",
          "Expected Result": "Previously added note is still present and displayed correctly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - PoS Notes",
      "Preconditions": "User has access to the dashboard and at least one PoS available.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Notes Persistence",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS, note content for persistence check",
      "Expected Result": "Notes added to a PoS remain available and unchanged after page refresh or user re-login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010"
    },
    {
      "Title": "Successful Import of Valid RedList Excel File",
      "ID": "TC-110",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section in the Backoffice.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Upload' button and select a valid RedList Excel file named 'RedList_06_2024.xlsx' containing all required columns and valid data.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload and initiate the import process.",
          "Expected Result": "System processes the file and displays a success message indicating the RedList has been imported."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported data (IdRice, Zona Rice, Flag RedList, General Reason, SIMP Management, SIMP Reason) is correctly displayed in the RedList management section.",
          "Expected Result": "All data from the Excel file is accurately reflected in the system."
        }
      ],
      "Test Group": "Backoffice",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "RedList Import",
      "Preconditions": "User has Backoffice access rights. Valid RedList Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RedList data from Excel file into ZENIT.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid RedList_06_2024.xlsx file with sample data for all required columns.",
      "Expected Result": "RedList data is successfully imported and displayed in ZENIT with all required fields populated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011"
    },
    {
      "Title": "Import Fails with Missing Required Columns in Excel File",
      "ID": "TC-111",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload an Excel file named 'RedList_06_2024_MissingColumns.xlsx' that is missing the 'Flag RedList' column.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload and initiate the import process.",
          "Expected Result": "System validates the file and displays an error message indicating that required columns are missing. Import is aborted."
        }
      ],
      "Test Group": "Backoffice",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "RedList Import",
      "Preconditions": "User has Backoffice access rights. Excel file missing required columns is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required columns during RedList import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList_06_2024_MissingColumns.xlsx (missing 'Flag RedList' column)",
      "Expected Result": "System rejects the import and displays a clear error message about missing required columns.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011"
    },
    {
      "Title": "Import Fails with Invalid Data Types in Excel File",
      "ID": "TC-112",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload an Excel file named 'RedList_06_2024_InvalidData.xlsx' where 'Flag RedList' contains values other than 'Si' or 'No' (e.g., 'Maybe').",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload and initiate the import process.",
          "Expected Result": "System validates the file and displays an error message indicating invalid data in the 'Flag RedList' column. Import is aborted."
        }
      ],
      "Test Group": "Backoffice",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "RedList Import",
      "Preconditions": "User has Backoffice access rights. Excel file with invalid data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data types and allowed values during RedList import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList_06_2024_InvalidData.xlsx (invalid 'Flag RedList' values)",
      "Expected Result": "System rejects the import and displays a clear error message about invalid data values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011"
    },
    {
      "Title": "Import Fails with Incorrect File Format",
      "ID": "TC-113",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload a file named 'RedList_06_2024.csv' (CSV format instead of Excel).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload and initiate the import process.",
          "Expected Result": "System validates the file format and displays an error message indicating that only Excel files are supported. Import is aborted."
        }
      ],
      "Test Group": "Backoffice",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "RedList Import",
      "Preconditions": "User has Backoffice access rights. Non-Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of file format during RedList import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList_06_2024.csv (CSV format)",
      "Expected Result": "System rejects the import and displays a clear error message about unsupported file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011"
    },
    {
      "Title": "Import Fails When Excel File is Empty",
      "ID": "TC-114",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload an empty Excel file named 'RedList_06_2024_Empty.xlsx'.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload and initiate the import process.",
          "Expected Result": "System validates the file and displays an error message indicating that the file contains no data. Import is aborted."
        }
      ],
      "Test Group": "Backoffice",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "RedList Import",
      "Preconditions": "User has Backoffice access rights. Empty Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of non-empty file during RedList import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList_06_2024_Empty.xlsx (empty file)",
      "Expected Result": "System rejects the import and displays a clear error message about empty file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011"
    },
    {
      "Title": "Partial Import with Some Rows Containing Errors",
      "ID": "TC-115",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload an Excel file named 'RedList_06_2024_PartialErrors.xlsx' where some rows have missing or invalid data (e.g., missing 'IdRice' in row 3).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload and initiate the import process.",
          "Expected Result": "System processes the file, imports valid rows, skips invalid rows, and displays a summary message indicating which rows were not imported and the reasons."
        }
      ],
      "Test Group": "Backoffice",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "RedList Import",
      "Preconditions": "User has Backoffice access rights. Excel file with partial errors is available.",
      "Execution Mode": "Manual",
      "Functionality": "Partial import and error reporting during RedList import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList_06_2024_PartialErrors.xlsx (some rows with missing/invalid data)",
      "Expected Result": "System imports valid rows, skips invalid ones, and provides a detailed error report for skipped rows.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011"
    },
    {
      "Title": "Verify Successful Initial Data Load and Migration",
      "ID": "TC-116",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is in a clean state with no pre-existing data.",
          "Expected Result": "System is ready for initial data load."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the initial data load and migration process using the provided migration tool or script.",
          "Expected Result": "Data migration process starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process until completion.",
          "Expected Result": "Migration completes successfully with a confirmation message."
        },
        {
          "Step": 4,
          "Step Description": "Validate that all expected data records are present in the target system.",
          "Expected Result": "All data records are correctly loaded and available in the system."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Initial Load and Data Migration",
      "Preconditions": "System is accessible and migration tool/scripts are available. Source data is prepared and validated.",
      "Execution Mode": "Manual",
      "Functionality": "Initial data load and migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample migration data set as per 'ZENIT - Elenco Dati' Excel file.",
      "Expected Result": "All data from the source is successfully migrated and available in the target system without loss or corruption.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Data Collection from Internal and External Systems",
      "ID": "TC-117",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure all internal and external data sources are available and accessible.",
          "Expected Result": "All data sources are online and reachable."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data collection process from the system interface or API.",
          "Expected Result": "Data collection process starts successfully."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the process and check for any errors or warnings.",
          "Expected Result": "Data is collected without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the collected data matches the source data in terms of completeness and accuracy.",
          "Expected Result": "Collected data is accurate and complete."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Data Collection",
      "Preconditions": "All data sources are configured and accessible. System is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data acquisition and collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data from internal and external systems as per 'ZENIT - Elenco Dati'.",
      "Expected Result": "System successfully collects and stores data from all configured sources without loss or corruption.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Login Functionality with Valid Credentials",
      "ID": "TC-118",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Back-Office login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password.",
          "Expected Result": "Credentials are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User is authenticated and redirected to the dashboard or home page."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "backoffice",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Login/Logout",
      "Preconditions": "User account exists with valid credentials. Back-Office system is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User authentication (login)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User is able to log in successfully and access the system.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Verify Logout Functionality",
      "ID": "TC-119",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Back-Office system with valid credentials.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Logout' button or link.",
          "Expected Result": "User is logged out and redirected to the login page."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access a protected page using the previous session.",
          "Expected Result": "Access is denied and user is prompted to log in again."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "backoffice",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Login/Logout",
      "Preconditions": "User is logged in to the Back-Office system.",
      "Execution Mode": "Manual",
      "Functionality": "User session management (logout)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User is securely logged out and cannot access protected resources without re-authentication.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Verify Logging and Audit Trail for Transactions",
      "ID": "TC-120",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a transaction (e.g., data update, user login) in the system.",
          "Expected Result": "Transaction is completed successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log or logging system.",
          "Expected Result": "Audit log is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Search for the performed transaction in the audit log.",
          "Expected Result": "Transaction is recorded with correct details (timestamp, user, action, etc.)."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Log/Audit",
      "Preconditions": "System logging/audit feature is enabled. User has permission to access logs.",
      "Execution Mode": "Manual",
      "Functionality": "Transaction logging and audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample transaction (e.g., user login, data update).",
      "Expected Result": "All relevant transactions are logged with complete and accurate details for audit and compliance purposes.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Verify Dashboard Displays and Updates Credit Lines Correctly",
      "ID": "TC-121",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Back-Office system as a user with credit management permissions.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section of the dashboard.",
          "Expected Result": "Credit Management section is accessible and displays current credit lines."
        },
        {
          "Step": 3,
          "Step Description": "Update a credit line value (if permitted).",
          "Expected Result": "Credit line is updated successfully."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the dashboard reflects the updated credit line in real time.",
          "Expected Result": "Dashboard displays the updated credit line value."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "backoffice",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "User has credit management permissions. Credit lines exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit line management and monitoring",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User with credit management permissions; existing credit lines.",
      "Expected Result": "Dashboard displays accurate and up-to-date credit line information, and updates are reflected in real time.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Verify Massive Importer Handles Bulk Excel Import Successfully",
      "ID": "TC-122",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Back-Office system with permissions to use the Massive Importer.",
          "Expected Result": "User is logged in and Massive Importer is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Upload a valid Excel file containing PoS information as per the required template.",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the bulk import process.",
          "Expected Result": "Import process starts and completes without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all PoS records from the Excel file are imported and available in the system.",
          "Expected Result": "All records are imported and visible in the system."
        }
      ],
      "Test Group": "backoffice",
      "Channel": "backoffice",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Massive Importer",
      "Preconditions": "User has permissions for bulk import. Valid Excel file is prepared as per template.",
      "Execution Mode": "Manual",
      "Functionality": "Bulk import and update of PoS data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with PoS data as per 'ZENIT - Elenco Dati'.",
      "Expected Result": "System successfully imports all valid records from the Excel file without errors or data loss.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-006"
    },
    {
      "Title": "Verify Back-End Procedure Executes and Stores Data Correctly",
      "ID": "TC-123",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a back-end procedure (e.g., automated data processing or storage operation) via API or system interface.",
          "Expected Result": "Procedure is initiated successfully."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the execution of the procedure for completion and errors.",
          "Expected Result": "Procedure completes without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the expected data is stored or processed as intended.",
          "Expected Result": "Data is stored/processed correctly in the system."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Back-End Procedure",
      "Preconditions": "System is operational. User has permissions to trigger back-end procedures. Required input data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Back-end operations and process automation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample input data for back-end procedure.",
      "Expected Result": "Back-end procedure executes successfully and data is processed/stored as expected.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-007"
    },
    {
      "Title": "Verify Successful Initial Data Load from Source System",
      "ID": "TC-124",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the target system is in a clean state (no pre-existing data).",
          "Expected Result": "Target system is empty and ready for data load."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial data load process using the provided migration tool or script.",
          "Expected Result": "Data load process starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data load process until completion.",
          "Expected Result": "Data load process completes successfully without interruption."
        },
        {
          "Step": 4,
          "Step Description": "Validate that all expected records from the source system are present in the target system.",
          "Expected Result": "All source records are accurately loaded into the target system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "Target system is empty. Source system contains valid data. Migration tool/script is configured.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Load",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Source system dataset with known record count and structure.",
      "Expected Result": "All data from the source system is successfully loaded into the target system with no loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ILDM-001"
    },
    {
      "Title": "Verify Data Integrity After Migration",
      "ID": "TC-125",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Complete the initial data migration from the source to the target system.",
          "Expected Result": "Data migration completes without errors."
        },
        {
          "Step": 2,
          "Step Description": "Select a representative sample of records from the source system.",
          "Expected Result": "Sample records are identified."
        },
        {
          "Step": 3,
          "Step Description": "Compare the sample records in the source and target systems for field-by-field accuracy.",
          "Expected Result": "All fields in the sample records match exactly between source and target."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "Initial data migration has been completed successfully.",
      "Execution Mode": "Manual",
      "Functionality": "Data Integrity Verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample records from source system with expected values.",
      "Expected Result": "Data in the target system matches the source system exactly for all migrated records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ILDM-002"
    },
    {
      "Title": "Verify Handling of Invalid Data During Migration",
      "ID": "TC-126",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare the source system with records containing invalid or corrupt data (e.g., missing required fields, invalid formats).",
          "Expected Result": "Source system contains records with known invalid data."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data migration process.",
          "Expected Result": "Data migration process starts."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process for error handling and logging.",
          "Expected Result": "Migration process identifies and logs invalid records without halting the entire migration."
        },
        {
          "Step": 4,
          "Step Description": "Verify that only valid records are migrated to the target system.",
          "Expected Result": "Invalid records are excluded from the target system; valid records are migrated."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "Migration tool supports error handling and logging. Source system contains both valid and invalid records.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling in Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Source dataset with a mix of valid and invalid records.",
      "Expected Result": "Invalid records are not migrated; errors are logged; valid records are migrated successfully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ILDM-003"
    },
    {
      "Title": "Verify Migration Performance for Large Data Volumes",
      "ID": "TC-127",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare the source system with a large dataset (e.g., millions of records).",
          "Expected Result": "Source system contains a large volume of data."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data migration process and start a timer.",
          "Expected Result": "Migration process begins and timer is running."
        },
        {
          "Step": 3,
          "Step Description": "Monitor system resources and migration progress.",
          "Expected Result": "System resources are utilized efficiently; migration progresses without bottlenecks."
        },
        {
          "Step": 4,
          "Step Description": "Record the total time taken for migration and compare with performance benchmarks.",
          "Expected Result": "Migration completes within acceptable performance thresholds."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "Performance benchmarks are defined. Source system contains a large dataset.",
      "Execution Mode": "Manual",
      "Functionality": "Migration Performance",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large source dataset (e.g., 1 million+ records).",
      "Expected Result": "Migration completes within the defined performance criteria without failures.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ILDM-004"
    },
    {
      "Title": "Verify System Behavior on Migration Interruption and Resume",
      "ID": "TC-128",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Start the data migration process from the source to the target system.",
          "Expected Result": "Migration process starts successfully."
        },
        {
          "Step": 2,
          "Step Description": "Simulate an interruption (e.g., network failure, system crash) during migration.",
          "Expected Result": "Migration process is interrupted unexpectedly."
        },
        {
          "Step": 3,
          "Step Description": "Restore the system and resume the migration process.",
          "Expected Result": "Migration process resumes from the point of interruption or restarts as per design."
        },
        {
          "Step": 4,
          "Step Description": "Verify that no data is duplicated or lost after migration completes.",
          "Expected Result": "All records are present in the target system with no duplication or loss."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Migration Module",
      "Preconditions": "Migration tool supports resume functionality. Mechanism to simulate interruption is available.",
      "Execution Mode": "Manual",
      "Functionality": "Migration Resilience",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Source dataset with known record count.",
      "Expected Result": "Migration resumes correctly after interruption, with no data loss or duplication.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ILDM-005"
    },
    {
      "Title": "Initial Import of PoS Personal Data from Excel File",
      "ID": "TC-129",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT backend and navigate to the Data Collection session.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import PoS Personal Data.",
          "Expected Result": "Import interface for PoS Personal Data is shown."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid Excel file containing PoS Personal Data (sample: PoS_InitialLoad.xlsx).",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the PoS Personal Data."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported PoS Personal Data is correctly reflected in the system database.",
          "Expected Result": "All PoS Personal Data from the Excel file is present and accurate in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "System is not yet booted for operational use. User has access to backend with import permissions. Valid Excel file with PoS Personal Data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS_InitialLoad.xlsx (sample data file)",
      "Expected Result": "PoS Personal Data is successfully imported from Excel and available in the system before operational boot.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001"
    },
    {
      "Title": "Import of Cerved Data from CSV File",
      "ID": "TC-130",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Data Collection session in the backend.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import Cerved Data.",
          "Expected Result": "Import interface for Cerved Data is shown."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid CSV file containing Cerved Data (sample: Cerved_InitialLoad.csv).",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the Cerved Data."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported Cerved Data is correctly reflected in the system database.",
          "Expected Result": "All Cerved Data from the CSV file is present and accurate in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "PoS Personal Data has already been imported. User has access to backend with import permissions. Valid CSV file with Cerved Data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Cerved_InitialLoad.csv (sample data file)",
      "Expected Result": "Cerved Data is successfully imported from CSV and available in the system before operational boot.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001"
    },
    {
      "Title": "Import of RedList Data via Massive Importer",
      "ID": "TC-131",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer session in the backend.",
          "Expected Result": "Massive Importer session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the RedList Data import procedure.",
          "Expected Result": "RedList Data import interface is shown."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid file (Excel or CSV) containing RedList Data (sample: RedList_InitialLoad.xlsx).",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the RedList Data."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported RedList Data is correctly reflected in the system database.",
          "Expected Result": "All RedList Data from the file is present and accurate in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "PoS Personal Data has already been imported. User has access to backend with import permissions. Valid RedList Data file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList_InitialLoad.xlsx (sample data file)",
      "Expected Result": "RedList Data is successfully imported via Massive Importer and available in the system before operational boot.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001"
    },
    {
      "Title": "Import of Types of Contract via Massive Importer",
      "ID": "TC-132",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer session in the backend.",
          "Expected Result": "Massive Importer session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the Types of Contract import procedure.",
          "Expected Result": "Types of Contract import interface is shown."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid file (Excel or CSV) containing Types of Contract data (sample: TypesOfContract_InitialLoad.csv).",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the Types of Contract data."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported Types of Contract data is correctly reflected in the system database.",
          "Expected Result": "All Types of Contract data from the file is present and accurate in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "PoS Personal Data has already been imported. User has access to backend with import permissions. Valid Types of Contract data file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "TypesOfContract_InitialLoad.csv (sample data file)",
      "Expected Result": "Types of Contract data is successfully imported via Massive Importer and available in the system before operational boot.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001"
    },
    {
      "Title": "Import of Borderò Historical Data (Last 12 Months) from Database",
      "ID": "TC-133",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Data Collection session in the backend.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import Borderò Data.",
          "Expected Result": "Import interface for Borderò Data is shown."
        },
        {
          "Step": 3,
          "Step Description": "Configure the import to retrieve Borderò Data from the existing database for the last 12 months.",
          "Expected Result": "System displays a summary of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the data and imports the Borderò Data."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported Borderò Data for the last 12 months is correctly reflected in the system database.",
          "Expected Result": "All Borderò Data for the last 12 months is present and accurate in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "PoS Personal Data has already been imported. User has access to backend with import permissions. Access to source database with historical Borderò Data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Historical Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Access to source database with Borderò Data for last 12 months",
      "Expected Result": "Borderò Data for the last 12 months is successfully imported and available in the system before operational boot.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001"
    },
    {
      "Title": "Import of Unpaids Historical Data (Last 12 Months) from CSV File",
      "ID": "TC-134",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Data Collection session in the backend.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import Unpaids Data.",
          "Expected Result": "Import interface for Unpaids Data is shown."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid CSV file containing Unpaids Data for the last 12 months (sample: Unpaids_12Months.csv).",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the Unpaids Data."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported Unpaids Data for the last 12 months is correctly reflected in the system database.",
          "Expected Result": "All Unpaids Data for the last 12 months is present and accurate in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "PoS Personal Data has already been imported. User has access to backend with import permissions. Valid CSV file with Unpaids Data for last 12 months is available.",
      "Execution Mode": "Manual",
      "Functionality": "Historical Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Unpaids_12Months.csv (sample data file)",
      "Expected Result": "Unpaids Data for the last 12 months is successfully imported and available in the system before operational boot.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001"
    },
    {
      "Title": "Negative Test: Attempt Import with Invalid File Format",
      "ID": "TC-135",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Data Collection or Massive Importer session.",
          "Expected Result": "Import session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select any data import procedure (e.g., PoS Personal Data).",
          "Expected Result": "Relevant import interface is shown."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload a file in an unsupported format (e.g., PDF or TXT).",
          "Expected Result": "System rejects the file and displays an appropriate error message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "User has access to backend with import permissions. Invalid file (e.g., PoS_InvalidFormat.pdf) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS_InvalidFormat.pdf (invalid file)",
      "Expected Result": "System prevents import of unsupported file formats and displays a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001"
    },
    {
      "Title": "Negative Test: Attempt Import Before PoS Personal Data is Loaded",
      "ID": "TC-136",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend and navigate to the Data Collection or Massive Importer session.",
          "Expected Result": "Import session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to import Cerved Data, RedList Data, or Types of Contract before PoS Personal Data has been imported.",
          "Expected Result": "System prevents the import and displays a message indicating that PoS Personal Data must be loaded first."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Migration",
      "Preconditions": "System is not yet booted for operational use. PoS Personal Data has NOT been imported. User has access to backend with import permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import Dependency Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Any valid data file for Cerved, RedList, or Types of Contract",
      "Expected Result": "System enforces dependency: other data cannot be imported before PoS Personal Data is loaded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001"
    },
    {
      "Title": "Upload Excel File as Temporary Data Integration Solution",
      "ID": "TC-137",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with data upload permissions.",
          "Expected Result": "User is successfully authenticated and redirected to the data upload section."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data integration/upload section.",
          "Expected Result": "Data upload interface is displayed, allowing selection of Excel files."
        },
        {
          "Step": 3,
          "Step Description": "Select a valid Excel file containing the required data of interest.",
          "Expected Result": "Selected file is recognized and ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the upload process for the selected Excel file.",
          "Expected Result": "System processes the file and displays a success message upon completion."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the uploaded data is available in the system and marked as 'temporarily integrated'.",
          "Expected Result": "Uploaded data is present, accessible, and clearly indicated as part of the temporary integration solution."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module",
      "Preconditions": "User has valid credentials and access rights. Excel file with required data is available and formatted according to ZENIT technical documentation.",
      "Execution Mode": "Manual",
      "Functionality": "Temporary data integration via Excel upload",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Excel file with valid data, user credentials with upload permissions.",
      "Expected Result": "System allows upload of Excel files as a temporary integration solution, and data is correctly integrated and accessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DC-001"
    },
    {
      "Title": "Mandatory Acquisition Date Recording for Each Data Upload",
      "ID": "TC-138",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with data upload permissions.",
          "Expected Result": "User is authenticated and can access the data upload section."
        },
        {
          "Step": 2,
          "Step Description": "Upload a valid Excel file containing new data records.",
          "Expected Result": "System processes the file and imports the data."
        },
        {
          "Step": 3,
          "Step Description": "Access the newly uploaded data records in the system.",
          "Expected Result": "Each data record is displayed with an associated acquisition date."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the acquisition date corresponds to the date of upload/acquisition.",
          "Expected Result": "Acquisition date is present, accurate, and non-editable by the user."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module",
      "Preconditions": "User has valid credentials and access rights. Excel file with new data records is available.",
      "Execution Mode": "Manual",
      "Functionality": "Acquisition date recording and traceability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Excel file with new data, user credentials with upload permissions.",
      "Expected Result": "Each data record imported via Excel upload is automatically associated with a mandatory, accurate acquisition date.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DC-002"
    },
    {
      "Title": "Reject Data Upload Without Acquisition Date",
      "ID": "TC-139",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with data upload permissions.",
          "Expected Result": "User is authenticated and can access the data upload section."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to upload an Excel file where the acquisition date field is missing or empty for one or more records.",
          "Expected Result": "System validates the file and detects missing acquisition date(s)."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the invalid file upload attempt.",
          "Expected Result": "System rejects the upload and displays a clear error message indicating that the acquisition date is mandatory for all records."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module",
      "Preconditions": "User has valid credentials and access rights. Excel file with missing acquisition date(s) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of mandatory acquisition date",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Excel file with missing acquisition date(s), user credentials with upload permissions.",
      "Expected Result": "System prevents upload of data records lacking an acquisition date and informs the user of the requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DC-003"
    },
    {
      "Title": "Verify Data Traceability Over Time Using Acquisition Date",
      "ID": "TC-140",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with data viewing permissions.",
          "Expected Result": "User is authenticated and can access the data records."
        },
        {
          "Step": 2,
          "Step Description": "Access the list of all data records previously uploaded via Excel files.",
          "Expected Result": "System displays a list of data records with their associated acquisition dates."
        },
        {
          "Step": 3,
          "Step Description": "Sort or filter the data records by acquisition date.",
          "Expected Result": "System correctly sorts/filters records based on acquisition date, enabling traceability and freshness verification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module",
      "Preconditions": "Multiple data records with different acquisition dates exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data traceability and freshness verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Multiple data records with varying acquisition dates, user credentials with viewing permissions.",
      "Expected Result": "System allows users to trace and verify data freshness using the acquisition date for each record.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DC-004"
    },
    {
      "Title": "Handle Direct Integration When Available (Bypass Temporary Solution)",
      "ID": "TC-141",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with data integration permissions.",
          "Expected Result": "User is authenticated and can access the data integration section."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to initiate a direct integration with the external data system (as per ZENIT technical documentation).",
          "Expected Result": "System detects that direct integration is available and initiates the process."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the option to upload Excel files is disabled or hidden when direct integration is active.",
          "Expected Result": "Excel upload option is not available, and only direct integration is permitted."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module",
      "Preconditions": "Direct integration with external data system is configured and available.",
      "Execution Mode": "Manual",
      "Functionality": "Switch from temporary to direct integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with integration permissions, direct integration endpoint available.",
      "Expected Result": "System bypasses the temporary Excel upload solution when direct integration is available, ensuring only one integration method is active.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DC-005"
    },
    {
      "Title": "Initial Import of PoS Master Data from MDM to ZENIT",
      "ID": "TC-142",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM contains at least one PoS record with all required fields populated.",
          "Expected Result": "MDM has valid PoS data ready for export."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the initial import process in ZENIT to acquire PoS master data from MDM via ESB.",
          "Expected Result": "ZENIT initiates data acquisition from MDM."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "Import process completes without errors."
        },
        {
          "Step": 4,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "All required PoS fields are displayed and populated as per the data in MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Acquisition",
      "Preconditions": "MDM contains at least one valid PoS record with all required fields populated. ZENIT is configured to connect to MDM via ESB.",
      "Execution Mode": "Manual",
      "Functionality": "Initial PoS data import from MDM to ZENIT",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS record in MDM with all fields populated.",
      "Expected Result": "ZENIT successfully imports all PoS master data fields from MDM and displays them correctly in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010"
    },
    {
      "Title": "Near Real-Time Synchronization on PoS Insert/Update in MDM",
      "ID": "TC-143",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ZENIT and MDM are aligned after initial import.",
          "Expected Result": "ZENIT and MDM contain the same PoS records."
        },
        {
          "Step": 2,
          "Step Description": "Insert a new PoS record in MDM with all required fields populated.",
          "Expected Result": "New PoS record is present in MDM."
        },
        {
          "Step": 3,
          "Step Description": "Wait for near real-time integration to synchronize data to ZENIT.",
          "Expected Result": "ZENIT receives and processes the new PoS record."
        },
        {
          "Step": 4,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for the new PoS.",
          "Expected Result": "The new PoS record is visible with all fields matching MDM."
        },
        {
          "Step": 5,
          "Step Description": "Update an existing PoS record in MDM (e.g., change Denomination or Address).",
          "Expected Result": "PoS record is updated in MDM."
        },
        {
          "Step": 6,
          "Step Description": "Wait for near real-time integration to synchronize the update to ZENIT.",
          "Expected Result": "ZENIT receives and processes the update."
        },
        {
          "Step": 7,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for the updated PoS.",
          "Expected Result": "The updated field(s) reflect the changes made in MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Acquisition",
      "Preconditions": "ZENIT and MDM are aligned. Integration is active. User has access to both systems.",
      "Execution Mode": "Manual",
      "Functionality": "Near real-time synchronization of PoS data between MDM and ZENIT",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records in MDM for insert and update scenarios.",
      "Expected Result": "ZENIT reflects all PoS inserts and updates from MDM in near real-time, with all fields correctly synchronized.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010"
    },
    {
      "Title": "Field-Level Data Integrity for PoS Master Data",
      "ID": "TC-144",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a PoS record in MDM with unique, known values for each required field (e.g., IdRice, Zona Code, Denomination, etc.).",
          "Expected Result": "PoS record is present in MDM with all fields populated with test values."
        },
        {
          "Step": 2,
          "Step Description": "Trigger synchronization to ZENIT (either via initial import or update).",
          "Expected Result": "ZENIT receives the PoS record."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "All fields are displayed in ZENIT."
        },
        {
          "Step": 4,
          "Step Description": "Verify that each field in ZENIT matches the corresponding value in MDM.",
          "Expected Result": "All field values in ZENIT are identical to those in MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Acquisition",
      "Preconditions": "MDM and ZENIT are operational. Test PoS record with known values is available in MDM.",
      "Execution Mode": "Manual",
      "Functionality": "Field-level data integrity for PoS master data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with unique test values for all fields.",
      "Expected Result": "All PoS master data fields are transferred from MDM to ZENIT without loss or modification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010"
    },
    {
      "Title": "Privacy Compliance: Exclusion of Personal Numbers from PoS Data",
      "ID": "TC-145",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a PoS record in MDM with both PoS phone numbers and personal numbers (e.g., Holder Cell, Holder Cell 2) populated.",
          "Expected Result": "PoS record in MDM contains both PoS and personal phone numbers."
        },
        {
          "Step": 2,
          "Step Description": "Trigger synchronization to ZENIT.",
          "Expected Result": "ZENIT receives the PoS record."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "PoS phone numbers are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that only PoS phone numbers (Telefono, Telefono 2) are present and personal numbers (Holder Cell, Holder Cell 2) are not displayed or stored in ZENIT.",
          "Expected Result": "Only PoS phone numbers are present; personal numbers are excluded, ensuring privacy compliance."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Acquisition",
      "Preconditions": "MDM and ZENIT are operational. Test PoS record with both PoS and personal numbers is available in MDM.",
      "Execution Mode": "Manual",
      "Functionality": "Privacy compliance for phone number fields in PoS data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with both PoS and personal phone numbers populated.",
      "Expected Result": "ZENIT integrates only PoS phone numbers and excludes personal numbers, in compliance with privacy requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010"
    },
    {
      "Title": "Dashboard Display of PoS Master Data",
      "ID": "TC-146",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure at least one PoS record is present in ZENIT after synchronization from MDM.",
          "Expected Result": "ZENIT contains at least one PoS record."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard - Single PoS.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'PoS Master Data' tab for the selected PoS.",
          "Expected Result": "'PoS Master Data' tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all required PoS fields are visible and correctly populated as per the latest data from MDM.",
          "Expected Result": "All fields are present and accurately reflect the data from MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Acquisition",
      "Preconditions": "At least one PoS record is present in ZENIT after synchronization from MDM.",
      "Execution Mode": "Manual",
      "Functionality": "Display of PoS master data in Dashboard",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in ZENIT with all fields populated.",
      "Expected Result": "All PoS master data fields are visible and correctly populated in the Dashboard - Single PoS - PoS Master Data tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010"
    },
    {
      "Title": "Handling of Missing or Invalid Mandatory Fields in MDM PoS Record",
      "ID": "TC-147",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a PoS record in MDM with one or more mandatory fields missing or containing invalid data (e.g., missing IdRice, invalid Vat Number).",
          "Expected Result": "PoS record with missing/invalid fields is present in MDM."
        },
        {
          "Step": 2,
          "Step Description": "Trigger synchronization to ZENIT.",
          "Expected Result": "ZENIT attempts to process the PoS record."
        },
        {
          "Step": 3,
          "Step Description": "Check ZENIT for error logs or notifications related to the invalid PoS record.",
          "Expected Result": "ZENIT logs an error or rejects the record, and the invalid data is not imported."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the invalid PoS record is not visible in the ZENIT Dashboard.",
          "Expected Result": "Invalid PoS record is not displayed in the Dashboard."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Acquisition",
      "Preconditions": "MDM and ZENIT are operational. Test PoS record with missing/invalid fields is available in MDM.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of mandatory fields during PoS data acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with missing or invalid mandatory fields.",
      "Expected Result": "ZENIT rejects PoS records with missing or invalid mandatory fields and logs appropriate errors; such records are not displayed in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010"
    },
    {
      "Title": "PoS Data Retrieval on Single PoS Selection",
      "ID": "TC-148",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section.",
          "Expected Result": "PoS management section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a Single PoS from the list.",
          "Expected Result": "System initiates a call to the source system to retrieve Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Observe the displayed PoS data.",
          "Expected Result": "The most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data are displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Retrieval",
      "Preconditions": "User has valid credentials and at least one PoS is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval from Source System",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one PoS configured in the system.",
      "Expected Result": "Upon selecting a Single PoS, the system retrieves and displays the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data from the source system in real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011"
    },
    {
      "Title": "PoS Data Refresh via Refresh Button",
      "ID": "TC-149",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section and select a Single PoS.",
          "Expected Result": "Single PoS details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Press the 'Refresh' button on the Single PoS screen.",
          "Expected Result": "System initiates a call to the source system to retrieve the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the updated PoS data.",
          "Expected Result": "The most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data are displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Retrieval",
      "Preconditions": "User is logged in and viewing a Single PoS screen.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval from Source System",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one PoS configured in the system.",
      "Expected Result": "When the 'Refresh' button is pressed, the system retrieves and displays the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data from the source system in real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011"
    },
    {
      "Title": "PoS Data Retrieval for Daily Archival",
      "ID": "TC-150",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is scheduled to perform daily data storage for archival purposes.",
          "Expected Result": "System is ready for the scheduled archival process."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled archival time or trigger the archival process manually (if possible).",
          "Expected Result": "System initiates a call to the source system to retrieve Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data for all PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify the data stored for archival.",
          "Expected Result": "The most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data are stored for archival purposes."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Backend",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Retrieval",
      "Preconditions": "System is configured for daily archival and has access to the source system.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval from Source System",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "System with scheduled archival process; access to source system.",
      "Expected Result": "During daily archival, the system retrieves and stores the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data from the source system for all PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011"
    },
    {
      "Title": "PoS Data Retrieval - Negative Test: Source System Unavailable",
      "ID": "TC-151",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate source system unavailability (e.g., disconnect network or stop source system service).",
          "Expected Result": "Source system is unreachable from the application."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to select a Single PoS or press the 'Refresh' button on the Single PoS screen.",
          "Expected Result": "System attempts to retrieve data from the source system."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the failed data retrieval attempt.",
          "Expected Result": "System displays an appropriate error message indicating that the data could not be retrieved due to source system unavailability."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Retrieval",
      "Preconditions": "User is logged in; source system is intentionally made unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval from Source System",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; source system unavailable.",
      "Expected Result": "If the source system is unavailable, the system displays an error message and does not display outdated or partial PoS data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011"
    },
    {
      "Title": "PoS Data Retrieval - Negative Test: Data Integrity Check",
      "ID": "TC-152",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system and select a Single PoS.",
          "Expected Result": "Single PoS details are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that only Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data are retrieved and displayed.",
          "Expected Result": "No other PoS data fields are retrieved or displayed except the specified ones."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Data Retrieval",
      "Preconditions": "User is logged in; PoS has additional data fields in the source system.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval from Source System",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with extra data fields in source system.",
      "Expected Result": "System retrieves and displays only Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011"
    },
    {
      "Title": "Verify Real-Time Acquisition of GEO Credit Lines Data for PoS",
      "ID": "TC-153",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the GEO system has updated credit line data for a specific PoS.",
          "Expected Result": "GEO system contains the latest credit line data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for ZENIT to perform data acquisition from GEO system.",
          "Expected Result": "ZENIT initiates data retrieval from GEO system."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard and navigate to 'Dashboard - Single PoS - Credit Management' tab for the selected PoS.",
          "Expected Result": "Dashboard displays the credit line data for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the displayed data matches the latest data present in the GEO system for all required fields.",
          "Expected Result": "All credit line fields (Zona Code, RICE Number, Basic credit line, Credit line extension, Total credit line, Consumed Credit line, Percentage of credit consumed, Residual credit line) match GEO system values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "GEO system contains up-to-date credit line data for at least one PoS. ZENIT is configured to connect to GEO system.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time data acquisition and display of GEO credit lines for PoS.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known credit line data in GEO system.",
      "Expected Result": "ZENIT Dashboard displays the most recent GEO credit line data for the selected PoS in near real-time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020"
    },
    {
      "Title": "Verify Calculation of Percentage of Credit Consumed and Residual Credit Line",
      "ID": "TC-154",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set up a PoS in GEO system with known values for 'Fido Totale Week' and 'Consumato Week'. Example: Fido Totale Week = 1000, Consumato Week = 250.",
          "Expected Result": "GEO system contains the specified values for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger ZENIT to acquire data from GEO system.",
          "Expected Result": "ZENIT retrieves the data for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard and navigate to 'Dashboard - Single PoS - Credit Management' tab for the PoS.",
          "Expected Result": "Dashboard displays the credit line data for the PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that '% consumato Week' is correctly calculated as (Consumato Week / Fido Totale Week) * 100. Example: (250/1000)*100 = 25%.",
          "Expected Result": "'% consumato Week' displays 25%."
        },
        {
          "Step": 5,
          "Step Description": "Verify that 'Residuo Week' is correctly calculated as (Fido Totale Week - Consumato Week). Example: 1000 - 250 = 750.",
          "Expected Result": "'Residuo Week' displays 750."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS exists in GEO system with known credit line values. ZENIT is operational and connected to GEO.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and display of derived credit line fields.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Fido Totale Week = 1000, Consumato Week = 250.",
      "Expected Result": "ZENIT correctly calculates and displays '% consumato Week' and 'Residuo Week' for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020"
    },
    {
      "Title": "Verify Handling of Zero Total Credit Line in Percentage Calculation",
      "ID": "TC-155",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set up a PoS in GEO system with 'Fido Totale Week' = 0 and 'Consumato Week' = 0.",
          "Expected Result": "GEO system contains the specified values for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger ZENIT to acquire data from GEO system.",
          "Expected Result": "ZENIT retrieves the data for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard and navigate to 'Dashboard - Single PoS - Credit Management' tab for the PoS.",
          "Expected Result": "Dashboard displays the credit line data for the PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that '% consumato Week' is handled gracefully (e.g., displays 0% or 'N/A', no division by zero error).",
          "Expected Result": "'% consumato Week' displays 0% or 'N/A', and no error is shown."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS exists in GEO system with Fido Totale Week = 0. ZENIT is operational and connected to GEO.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling in percentage calculation for zero total credit line.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Fido Totale Week = 0, Consumato Week = 0.",
      "Expected Result": "ZENIT handles division by zero in '% consumato Week' calculation without error.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020"
    },
    {
      "Title": "Verify Display of All Required Credit Line Fields in Dashboard",
      "ID": "TC-156",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard and navigate to 'Dashboard - Single PoS - Credit Management' tab for a PoS with complete data in GEO system.",
          "Expected Result": "Dashboard loads the credit management tab for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are displayed: Zona Code, RICE Number, Basic credit line, Credit line extension, Total credit line, Consumed Credit line, Percentage of credit consumed, Residual credit line.",
          "Expected Result": "All required fields are visible and populated with data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS exists in GEO system with all required credit line fields populated. ZENIT is operational and connected to GEO.",
      "Execution Mode": "Manual",
      "Functionality": "Display of all required credit line fields in dashboard.",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all required credit line data in GEO system.",
      "Expected Result": "All required credit line fields are displayed and populated in the dashboard for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020"
    },
    {
      "Title": "Verify Data Refresh Frequency is Near Real-Time",
      "ID": "TC-157",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Update credit line data for a PoS in the GEO system (e.g., change Consumato Week value).",
          "Expected Result": "GEO system reflects the updated value for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the ZENIT Dashboard 'Dashboard - Single PoS - Credit Management' tab for the PoS.",
          "Expected Result": "Dashboard displays the previous value until refresh occurs."
        },
        {
          "Step": 3,
          "Step Description": "Measure the time taken for the updated value to appear in the ZENIT Dashboard.",
          "Expected Result": "Updated value appears in the dashboard within the defined near real-time window (e.g., less than 1 minute)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS exists in GEO system. ZENIT is operational and connected to GEO. Defined near real-time window is known (e.g., <1 minute).",
      "Execution Mode": "Manual",
      "Functionality": "Near real-time data refresh from GEO to ZENIT.",
      "Test Type": "performance",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with updatable credit line data in GEO system.",
      "Expected Result": "ZENIT Dashboard reflects GEO data changes within the near real-time window.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020"
    },
    {
      "Title": "Verify Handling of Missing or Incomplete Data from GEO System",
      "ID": "TC-158",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set up a PoS in GEO system with some credit line fields missing or null (e.g., missing Consumato Week).",
          "Expected Result": "GEO system contains incomplete data for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger ZENIT to acquire data from GEO system.",
          "Expected Result": "ZENIT retrieves the available data for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard and navigate to 'Dashboard - Single PoS - Credit Management' tab for the PoS.",
          "Expected Result": "Dashboard displays the credit line data for the PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that missing or null fields are handled gracefully (e.g., display as 'N/A', blank, or with a suitable message).",
          "Expected Result": "Dashboard displays missing fields as 'N/A', blank, or with a suitable message, and no error is shown."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS exists in GEO system with some credit line fields missing or null. ZENIT is operational and connected to GEO.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing or incomplete data from GEO system.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing or null credit line fields in GEO system.",
      "Expected Result": "ZENIT Dashboard handles missing or incomplete data gracefully without error.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020"
    },
    {
      "Title": "Verify Data Acquisition from SIMP for Credit Lines at PoS Level",
      "ID": "TC-159",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "Credit Management tab for a single PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the available list.",
          "Expected Result": "Credit Lines/Products data for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present for each Credit Line/Product: Zona Code, RICE Number, Alias, Credit Lines/Products, Basic credit line, Credit line extension, Total credit line, Consumed credit line, Percentage of credit consumed, Residual credit line.",
          "Expected Result": "All required fields are present and populated for each Credit Line/Product."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "SIMP system is available and contains valid Credit Lines/Products data for at least one PoS. User has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Data acquisition and display of SIMP Credit Lines/Products for PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with associated Credit Lines/Products in SIMP.",
      "Expected Result": "ZENIT retrieves and displays all required Credit Line/Product fields for the selected PoS in near real-time.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030"
    },
    {
      "Title": "Validate Calculation of Total Credit Line (Day and Week)",
      "ID": "TC-160",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with known credit line values.",
          "Expected Result": "Credit Management tab is displayed with credit line details."
        },
        {
          "Step": 2,
          "Step Description": "Identify the values for 'Fido Base Day', 'Estensione Day', 'Fido Base Week', and 'Estensione Week' for a Credit Line/Product.",
          "Expected Result": "Values for base and extension credit lines are visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that 'Fido Totale Day' equals 'Fido Base Day' + 'Estensione Day'.",
          "Expected Result": "'Fido Totale Day' is correctly calculated and displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that 'Fido Totale Week' equals 'Fido Base Week' + 'Estensione Week'.",
          "Expected Result": "'Fido Totale Week' is correctly calculated and displayed."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS with known credit line values exists in SIMP. User has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and display of total credit line values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'Fido Base Day', 'Estensione Day', 'Fido Base Week', 'Estensione Week' values set in SIMP.",
      "Expected Result": "Total credit line values are correctly calculated and displayed for both Day and Week.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030"
    },
    {
      "Title": "Validate Calculation of Percentage of Credit Consumed (Day and Week)",
      "ID": "TC-161",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with known consumption values.",
          "Expected Result": "Credit Management tab is displayed with consumption details."
        },
        {
          "Step": 2,
          "Step Description": "Identify the values for 'Consumato Day', 'Fido Totale Day', 'Consumato Week', and 'Fido Totale Week'.",
          "Expected Result": "Values for consumed and total credit lines are visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that '% consumato Day' equals ('Consumato Day' / 'Fido Totale Day') * 100.",
          "Expected Result": "'% consumato Day' is correctly calculated and displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that '% consumato Week' equals ('Consumato Week' / 'Fido Totale Week') * 100.",
          "Expected Result": "'% consumato Week' is correctly calculated and displayed."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS with known consumption and total credit line values exists in SIMP. User has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and display of percentage of credit consumed",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'Consumato Day', 'Fido Totale Day', 'Consumato Week', 'Fido Totale Week' values set in SIMP.",
      "Expected Result": "Percentage of credit consumed is correctly calculated and displayed for both Day and Week.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030"
    },
    {
      "Title": "Validate Calculation of Residual Credit Line (Day and Week)",
      "ID": "TC-162",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with known residual values.",
          "Expected Result": "Credit Management tab is displayed with residual credit details."
        },
        {
          "Step": 2,
          "Step Description": "Identify the values for 'Fido Totale Day', 'Consumato Day', 'Fido Totale Week', and 'Consumato Week'.",
          "Expected Result": "Values for total and consumed credit lines are visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that 'Residuo Day' equals 'Fido Totale Day' - 'Consumato Day'.",
          "Expected Result": "'Residuo Day' is correctly calculated and displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that 'Residuo Week' equals 'Fido Totale Week' - 'Consumato Week'.",
          "Expected Result": "'Residuo Week' is correctly calculated and displayed."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS with known total and consumed credit line values exists in SIMP. User has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and display of residual credit line",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'Fido Totale Day', 'Consumato Day', 'Fido Totale Week', 'Consumato Week' values set in SIMP.",
      "Expected Result": "Residual credit line is correctly calculated and displayed for both Day and Week.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030"
    },
    {
      "Title": "Verify Data Update Frequency is Near Real-Time",
      "ID": "TC-163",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Update a Credit Line/Product value (e.g., 'Fido Base Day') for a PoS in the SIMP system.",
          "Expected Result": "Credit Line/Product value is updated in SIMP."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for the affected PoS.",
          "Expected Result": "Credit Management tab is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the updated value is reflected in the ZENIT Dashboard within the expected near real-time window (e.g., within 1 minute).",
          "Expected Result": "Updated value is visible in ZENIT Dashboard within the near real-time window."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "User has access to both SIMP and ZENIT systems. PoS with existing Credit Line/Product data.",
      "Execution Mode": "Manual",
      "Functionality": "Near real-time data synchronization between SIMP and ZENIT",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with modifiable Credit Line/Product data in SIMP.",
      "Expected Result": "ZENIT Dashboard reflects SIMP data changes within the near real-time update window.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030"
    },
    {
      "Title": "Verify Data Acquisition Fallback to DWH Replica",
      "ID": "TC-164",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate SIMP system unavailability (e.g., disconnect or stop SIMP service).",
          "Expected Result": "SIMP system is unavailable."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS.",
          "Expected Result": "Credit Management tab is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Credit Lines/Products data is retrieved from the DWH replica and displayed correctly.",
          "Expected Result": "Credit Lines/Products data is present and accurate, sourced from DWH replica."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "DWH replica is available and contains up-to-date data. SIMP system is intentionally made unavailable. User has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Fallback data acquisition from DWH replica",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with Credit Line/Product data in DWH replica.",
      "Expected Result": "ZENIT retrieves and displays Credit Line/Product data from DWH replica when SIMP is unavailable.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030"
    },
    {
      "Title": "Verify Handling of Missing or Incomplete Data from SIMP/DWH",
      "ID": "TC-165",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure SIMP or DWH to provide incomplete data for a PoS (e.g., missing 'Fido Base Day' or 'Consumato Day').",
          "Expected Result": "PoS data in SIMP/DWH is incomplete."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for the affected PoS.",
          "Expected Result": "Credit Management tab is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the system handles missing or incomplete data (e.g., displays a placeholder, error message, or leaves the field blank).",
          "Expected Result": "System handles missing/incomplete data gracefully, with appropriate indication to the user."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "SIMP or DWH contains incomplete data for at least one PoS. User has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing/incomplete data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with missing or incomplete Credit Line/Product data in SIMP/DWH.",
      "Expected Result": "System displays missing/incomplete data fields appropriately without causing errors or misleading information.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030"
    },
    {
      "Title": "Verify Data Consistency Between SIMP and ZENIT",
      "ID": "TC-166",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the SIMP system and note the Credit Lines/Products data for a specific PoS.",
          "Expected Result": "Credit Lines/Products data is visible in SIMP."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for the same PoS.",
          "Expected Result": "Credit Management tab is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Compare each field (Zona Code, RICE Number, Alias, Credit Lines/Products, Basic credit line, Credit line extension, Total credit line, Consumed credit line, Percentage of credit consumed, Residual credit line) between SIMP and ZENIT.",
          "Expected Result": "All fields in ZENIT match the corresponding values in SIMP (or DWH if SIMP is unavailable)."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS with valid Credit Line/Product data exists in both SIMP and ZENIT. User has access to both systems.",
      "Execution Mode": "Manual",
      "Functionality": "Data consistency between SIMP and ZENIT",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known Credit Line/Product data in SIMP.",
      "Expected Result": "ZENIT displays data consistent with SIMP (or DWH) for all required fields.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030"
    },
    {
      "Title": "Verify Data Acquisition and Display for All Required Credit Line Fields (Day and Week)",
      "ID": "TC-167",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MST, SIMP, or DWH replica contains valid credit line data for a specific PoS (including all required fields for both Day and Week).",
          "Expected Result": "Source system(s) contain complete and valid data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for ZENIT to perform a data acquisition cycle (manual or scheduled).",
          "Expected Result": "ZENIT retrieves the latest data from the configured source."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for the selected PoS.",
          "Expected Result": "Dashboard loads and displays credit line data for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed for both Day and Week: Zona Code, RICE Number, Credit Lines/Products, Fido Base, Estensione, Fido Totale, Consumato, % consumato, Residuo.",
          "Expected Result": "All required fields are present and populated with correct values for both Day and Week."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "Test PoS with complete credit line data exists in MST, SIMP, or DWH. ZENIT is configured to retrieve from the correct source. User has access to the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Data acquisition and display of MST Credit Lines/Products for PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known credit line data for both Day and Week; valid user credentials.",
      "Expected Result": "All required credit line fields for both Day and Week are correctly acquired and displayed for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-040"
    },
    {
      "Title": "Verify Correct Calculation of Total, Percentage Consumed, and Residual Credit Lines (Day and Week)",
      "ID": "TC-168",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare MST, SIMP, or DWH with a PoS having known values for Fido Base Day, Estensione Day, Consumato Day, Fido Base Week, Estensione Week, Consumato Week.",
          "Expected Result": "Source system(s) contain the specified values for the test PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for ZENIT to acquire the data.",
          "Expected Result": "ZENIT retrieves the latest data for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Dashboard - Single PoS - Credit Management' tab for the PoS.",
          "Expected Result": "Dashboard displays the credit line data for the PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that 'Fido Totale Day' is equal to 'Fido Base Day' + 'Estensione Day'.",
          "Expected Result": "Displayed 'Fido Totale Day' matches the calculated value."
        },
        {
          "Step": 5,
          "Step Description": "Verify that '% consumato Day' is equal to ('Consumato Day' / 'Fido Totale Day') * 100.",
          "Expected Result": "Displayed '% consumato Day' matches the calculated value."
        },
        {
          "Step": 6,
          "Step Description": "Verify that 'Residuo Day' is equal to 'Fido Totale Day' - 'Consumato Day'.",
          "Expected Result": "Displayed 'Residuo Day' matches the calculated value."
        },
        {
          "Step": 7,
          "Step Description": "Repeat steps 4-6 for Week values ('Fido Totale Week', '% consumato Week', 'Residuo Week').",
          "Expected Result": "Displayed Week values match the calculated values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "Test PoS with known, controlled credit line values in the source system. ZENIT is operational and configured.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and display of derived credit line fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with specific test values for Fido Base, Estensione, Consumato (Day and Week); valid user credentials.",
      "Expected Result": "All calculated fields (Total, Percentage Consumed, Residual) are correctly computed and displayed for both Day and Week.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-040"
    },
    {
      "Title": "Verify Data Acquisition Frequency and Near Real-Time Update Behavior",
      "ID": "TC-169",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with existing credit line data in the source system (MST/SIMP/DWH).",
          "Expected Result": "PoS exists with valid data."
        },
        {
          "Step": 2,
          "Step Description": "Update one or more credit line fields (e.g., Consumato Day) in the source system for the PoS.",
          "Expected Result": "Source system reflects the updated value."
        },
        {
          "Step": 3,
          "Step Description": "Record the time of the update in the source system.",
          "Expected Result": "Update timestamp is noted."
        },
        {
          "Step": 4,
          "Step Description": "Monitor ZENIT Dashboard for the PoS in the 'Credit Management' tab and record when the updated value appears.",
          "Expected Result": "Dashboard reflects the updated value after a short interval."
        },
        {
          "Step": 5,
          "Step Description": "Calculate the elapsed time between the source update and Dashboard update.",
          "Expected Result": "Elapsed time is within the defined near real-time threshold (as per system specification or SLA)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "PoS with updatable data in the source system. ZENIT is running and connected. User has Dashboard access.",
      "Execution Mode": "Manual",
      "Functionality": "Near real-time data acquisition and update propagation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with modifiable credit line data; valid user credentials.",
      "Expected Result": "Dashboard reflects source data changes within the expected near real-time window.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify exact polling/refresh mechanism, only end-to-end update propagation.",
      "_polarion": "XPS-ZENIT-040"
    },
    {
      "Title": "Verify Handling of Missing or Incomplete Data from Source Systems",
      "ID": "TC-170",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure the source system (MST/SIMP/DWH) so that one or more required fields (e.g., Estensione Day) are missing or null for a test PoS.",
          "Expected Result": "Source system contains incomplete data for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for ZENIT to acquire data for the PoS.",
          "Expected Result": "ZENIT attempts to retrieve and process the incomplete data."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Dashboard - Single PoS - Credit Management' tab for the PoS.",
          "Expected Result": "Dashboard loads and displays available data for the PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the Dashboard displays missing or null fields (e.g., empty, zero, error message, or placeholder).",
          "Expected Result": "Dashboard handles missing data gracefully, following UI/UX guidelines (e.g., shows empty field, placeholder, or appropriate error message)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "Test PoS with incomplete data in the source system. ZENIT is operational. User has Dashboard access.",
      "Execution Mode": "Manual",
      "Functionality": "Robustness to incomplete or missing data during acquisition and display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with intentionally missing/null fields in the source system; valid user credentials.",
      "Expected Result": "Dashboard displays missing or incomplete data in a user-friendly and robust manner, without errors or crashes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover all possible missing field combinations.",
      "_polarion": "XPS-ZENIT-040"
    },
    {
      "Title": "Verify Data Acquisition from Alternative Sources (MST, SIMP, DWH)",
      "ID": "TC-171",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure ZENIT to acquire data from MST as the primary source. Ensure test PoS data is present in MST.",
          "Expected Result": "ZENIT is set to use MST and can access PoS data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data acquisition and verify data is displayed correctly in the Dashboard for the PoS.",
          "Expected Result": "Dashboard displays correct data from MST."
        },
        {
          "Step": 3,
          "Step Description": "Switch ZENIT configuration to use SIMP as the data source. Ensure test PoS data is present in SIMP.",
          "Expected Result": "ZENIT is set to use SIMP and can access PoS data."
        },
        {
          "Step": 4,
          "Step Description": "Trigger data acquisition and verify data is displayed correctly in the Dashboard for the PoS.",
          "Expected Result": "Dashboard displays correct data from SIMP."
        },
        {
          "Step": 5,
          "Step Description": "Switch ZENIT configuration to use DWH replica as the data source. Ensure test PoS data is present in DWH.",
          "Expected Result": "ZENIT is set to use DWH and can access PoS data."
        },
        {
          "Step": 6,
          "Step Description": "Trigger data acquisition and verify data is displayed correctly in the Dashboard for the PoS.",
          "Expected Result": "Dashboard displays correct data from DWH."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "Test PoS data is present and consistent in all three source systems. ZENIT supports source switching. User has Dashboard access.",
      "Execution Mode": "Manual",
      "Functionality": "Data acquisition from multiple possible sources",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with identical data in MST, SIMP, and DWH; valid user credentials.",
      "Expected Result": "ZENIT correctly acquires and displays data from each configured source system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not test source system failures or inconsistencies.",
      "_polarion": "XPS-ZENIT-040"
    },
    {
      "Title": "Verify System Behavior When Source System is Unavailable",
      "ID": "TC-172",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate unavailability of the configured source system (e.g., MST is offline or unreachable).",
          "Expected Result": "Source system is not accessible by ZENIT."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for ZENIT to attempt data acquisition for a PoS.",
          "Expected Result": "ZENIT attempts to connect to the source system and fails."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Dashboard - Single PoS - Credit Management' tab for the PoS.",
          "Expected Result": "Dashboard loads or attempts to load data for the PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the Dashboard and ZENIT handle the failure (e.g., error message, retry logic, fallback, or user notification).",
          "Expected Result": "System handles source unavailability gracefully, providing clear feedback to the user and avoiding crashes or data corruption."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - Credit Management",
      "Preconditions": "Configured source system can be made unavailable. ZENIT is operational. User has Dashboard access.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for source system unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with data in the (now unavailable) source system; valid user credentials.",
      "Expected Result": "System provides clear, user-friendly error handling when the source system is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify automatic failover or recovery mechanisms.",
      "_polarion": "XPS-ZENIT-040"
    },
    {
      "Title": "Verify Daily Automated Data Acquisition from COMMA6 to ZENIT",
      "ID": "TC-173",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure COMMA6 system contains up-to-date AWP data for all PoS as of the previous evening.",
          "Expected Result": "COMMA6 system has the latest data available for extraction."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily integration job between COMMA6 and ZENIT.",
          "Expected Result": "Integration job executes without errors."
        },
        {
          "Step": 3,
          "Step Description": "Access ZENIT system and verify that new data for each PoS is present for the current day (snapshot of previous evening).",
          "Expected Result": "ZENIT contains a new daily snapshot for each PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Acquisition",
      "Preconditions": "COMMA6 and ZENIT systems are operational and connected. Daily integration job is scheduled and enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Automated daily data acquisition and integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data in COMMA6 for at least two PoS with all required fields populated.",
      "Expected Result": "ZENIT system receives and stores a daily snapshot of AWP data for each PoS from COMMA6, reflecting the previous evening's data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050"
    },
    {
      "Title": "Validate Correctness and Completeness of Transferred PoS Data Fields",
      "ID": "TC-174",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In COMMA6, prepare PoS records with known values for all required fields (IdRice, ZonaRice, Nr AWP Management IAG, Nr AWP Management NO IAG, Nr AWP Third-party IAG, Nr AWP Third-partyNO IAG, Nr AWP Average, Type of Collection AWP under Management, Coin In Average AWP - YTD).",
          "Expected Result": "COMMA6 contains PoS records with controlled test data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily integration job to run.",
          "Expected Result": "Integration job completes successfully."
        },
        {
          "Step": 3,
          "Step Description": "In ZENIT, access the daily snapshot for each PoS and compare each field value with the source data in COMMA6.",
          "Expected Result": "All fields in ZENIT match the corresponding values in COMMA6 for each PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Acquisition",
      "Preconditions": "Test PoS data with known values is present in COMMA6. Integration job is scheduled.",
      "Execution Mode": "Manual",
      "Functionality": "Data field mapping and transfer accuracy",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records in COMMA6 with explicit values for all required fields.",
      "Expected Result": "All required PoS data fields are accurately and completely transferred from COMMA6 to ZENIT for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050"
    },
    {
      "Title": "Verify Daily Data Storage and Historical Retention in ZENIT",
      "ID": "TC-175",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ZENIT has received daily data snapshots for at least three consecutive days.",
          "Expected Result": "ZENIT contains at least three daily snapshots per PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the historical data for a selected PoS in ZENIT.",
          "Expected Result": "Historical daily snapshots are available for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each day's snapshot reflects the correct data as per the corresponding day's COMMA6 data.",
          "Expected Result": "Each snapshot matches the source data for its respective day."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Acquisition",
      "Preconditions": "ZENIT has been running daily integrations for at least three days. Historical data is not purged.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data storage and retention",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Three days of PoS data in COMMA6 and corresponding snapshots in ZENIT.",
      "Expected Result": "ZENIT stores and retains daily snapshots for each PoS, allowing historical analysis.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050"
    },
    {
      "Title": "Verify Dashboard Display of Daily PoS Data in Single PoS and ADI Data Tab",
      "ID": "TC-176",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "After daily integration, log in to ZENIT and navigate to the Dashboard - Single PoS for a specific PoS.",
          "Expected Result": "Dashboard - Single PoS loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all required data fields (as per requirement) are displayed with correct values for the selected PoS.",
          "Expected Result": "All fields are present and values match the latest daily snapshot."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the ADI Data Tab for the same PoS.",
          "Expected Result": "ADI Data Tab loads successfully."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the same data fields are displayed and consistent with the Single PoS view.",
          "Expected Result": "Data fields and values are consistent across both views."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Visualization",
      "Preconditions": "ZENIT contains at least one daily snapshot for the selected PoS. User has access to Dashboard and ADI Data Tab.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard data visualization",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known daily snapshot data in ZENIT.",
      "Expected Result": "All required PoS data fields are correctly displayed in both the Single PoS Dashboard and ADI Data Tab, matching the latest daily snapshot.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050"
    },
    {
      "Title": "Negative Test: Handle Missing or Incomplete Data from COMMA6",
      "ID": "TC-177",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In COMMA6, create a PoS record with one or more required fields missing or set to null.",
          "Expected Result": "COMMA6 contains a PoS record with incomplete data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily integration job to run.",
          "Expected Result": "Integration job processes the record."
        },
        {
          "Step": 3,
          "Step Description": "Check ZENIT for the corresponding PoS snapshot.",
          "Expected Result": "ZENIT either flags the record as incomplete, logs an error, or handles the missing data according to system design (e.g., default values, error messages)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Acquisition",
      "Preconditions": "Integration job is scheduled. COMMA6 contains at least one PoS record with missing data.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for incomplete data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in COMMA6 with missing required fields.",
      "Expected Result": "ZENIT handles missing or incomplete data gracefully, according to system requirements (e.g., error logging, default values, or user notification).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050"
    },
    {
      "Title": "Negative Test: Verify System Behavior When COMMA6 is Unavailable",
      "ID": "TC-178",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate COMMA6 system downtime during the scheduled daily integration window.",
          "Expected Result": "COMMA6 is unreachable by ZENIT."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily integration job to run.",
          "Expected Result": "Integration job attempts to connect to COMMA6 and fails."
        },
        {
          "Step": 3,
          "Step Description": "Check ZENIT system logs and error notifications.",
          "Expected Result": "ZENIT logs the failure and notifies relevant stakeholders according to system design."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Acquisition",
      "Preconditions": "Integration job is scheduled. Mechanism to simulate COMMA6 downtime is available.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for source system unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (simulate COMMA6 downtime).",
      "Expected Result": "ZENIT detects COMMA6 unavailability, logs the error, and notifies stakeholders as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050"
    },
    {
      "Title": "Verify Daily Automated Data Acquisition from NEXT VLT to ZENIT",
      "ID": "TC-179",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the integration between ZENIT and NEXT VLT is configured and operational.",
          "Expected Result": "Integration is active and ready for data exchange."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data acquisition process to run (at the expected time).",
          "Expected Result": "Data acquisition process initiates automatically without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data transfer logs or dashboard for completion status.",
          "Expected Result": "Data transfer completes successfully with no errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - VLT Data Acquisition",
      "Preconditions": "ZENIT and NEXT VLT systems are integrated and both systems are operational. Test environment contains at least one PoS with valid data.",
      "Execution Mode": "Manual",
      "Functionality": "Automated daily data acquisition and integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with IdRice, ZonaRice, Nr VLT, and Nr VLT Average data available in NEXT VLT.",
      "Expected Result": "ZENIT system automatically acquires and stores the previous day's VLT data for all PoS from NEXT VLT on a daily basis.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060"
    },
    {
      "Title": "Validate Correctness of Acquired Data Fields for Each PoS",
      "ID": "TC-180",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "After daily acquisition, access the ZENIT database or dashboard for a specific PoS.",
          "Expected Result": "Data for the selected PoS is available for the previous day."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are present and populated: IdRice, ZonaRice, Nr VLT, Nr VLT Average.",
          "Expected Result": "All required fields are present and not null."
        },
        {
          "Step": 3,
          "Step Description": "Cross-check the values of these fields with the source data in NEXT VLT for the same PoS and date.",
          "Expected Result": "Values in ZENIT match exactly with those in NEXT VLT for the reference date."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - VLT Data Acquisition",
      "Preconditions": "Successful daily data acquisition has occurred. Access to both ZENIT and NEXT VLT data for the same PoS and date.",
      "Execution Mode": "Manual",
      "Functionality": "Data field mapping and correctness",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS with known IdRice, ZonaRice, Nr VLT, and Nr VLT Average values in NEXT VLT.",
      "Expected Result": "ZENIT displays all required fields for each PoS, and values are accurate and consistent with NEXT VLT.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060"
    },
    {
      "Title": "Verify Data Availability in Dashboard - Single PoS View",
      "ID": "TC-181",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user with access to PoS data.",
          "Expected Result": "User is authenticated and dashboard is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section.",
          "Expected Result": "Single PoS dashboard view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS for which data was acquired in the last daily update.",
          "Expected Result": "PoS details are loaded."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the latest daily data (IdRice, ZonaRice, Nr VLT, Nr VLT Average) is displayed for the selected PoS.",
          "Expected Result": "All required fields are visible and reflect the latest daily snapshot."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard",
      "Preconditions": "At least one daily data acquisition has been completed. User credentials with dashboard access.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard data visualization",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with recent data acquisition.",
      "Expected Result": "The Single PoS dashboard displays the most recent daily data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060"
    },
    {
      "Title": "Verify Data Availability in Dashboard - Single PoS -- ADI Data Tab",
      "ID": "TC-182",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user with access to PoS data.",
          "Expected Result": "User is authenticated and dashboard is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section and select a PoS.",
          "Expected Result": "Single PoS dashboard view is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Switch to the 'ADI Data' tab within the Single PoS dashboard.",
          "Expected Result": "ADI Data tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the latest daily data (IdRice, ZonaRice, Nr VLT, Nr VLT Average) is displayed in the ADI Data tab.",
          "Expected Result": "All required fields are visible and reflect the latest daily snapshot."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard",
      "Preconditions": "At least one daily data acquisition has been completed. User credentials with dashboard access.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard ADI Data tab visualization",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with recent data acquisition.",
      "Expected Result": "The ADI Data tab displays the most recent daily data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060"
    },
    {
      "Title": "Verify System Behavior When No Data is Available for a PoS",
      "ID": "TC-183",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure there is a PoS in ZENIT for which no data has been acquired from NEXT VLT (e.g., new PoS or data acquisition failed).",
          "Expected Result": "PoS exists in ZENIT with no associated daily data."
        },
        {
          "Step": 2,
          "Step Description": "Access the dashboard and navigate to the Single PoS view for this PoS.",
          "Expected Result": "Dashboard loads the PoS details."
        },
        {
          "Step": 3,
          "Step Description": "Observe the data fields (IdRice, ZonaRice, Nr VLT, Nr VLT Average) for this PoS.",
          "Expected Result": "System displays a clear message or indicator that no data is available for the selected date, and fields are empty or marked as unavailable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard",
      "Preconditions": "At least one PoS exists in ZENIT with no daily data acquired.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling and empty state management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no data in ZENIT for the reference date.",
      "Expected Result": "System gracefully handles missing data by displaying an appropriate message or indicator in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060"
    },
    {
      "Title": "Verify Data Storage and Historical Retention for Daily Acquisitions",
      "ID": "TC-184",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "After several days of successful daily data acquisitions, access the ZENIT database or dashboard.",
          "Expected Result": "Historical data for multiple days is available."
        },
        {
          "Step": 2,
          "Step Description": "Select a PoS and review its data for several previous dates (e.g., last 7 days).",
          "Expected Result": "Data for each day is available and distinct."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the data for each date matches the corresponding snapshot from NEXT VLT for that day.",
          "Expected Result": "Historical data in ZENIT matches the source data for each date."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - VLT Data Acquisition",
      "Preconditions": "At least 7 days of daily data acquisition have occurred. Access to historical data in both ZENIT and NEXT VLT.",
      "Execution Mode": "Manual",
      "Functionality": "Data storage and historical retention",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with at least 7 days of data in both systems.",
      "Expected Result": "ZENIT retains and displays accurate historical daily data for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060"
    },
    {
      "Title": "Verify Handling of Data Acquisition Failure and Error Logging",
      "ID": "TC-185",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a failure in the data acquisition process (e.g., disconnect NEXT VLT or introduce invalid data).",
          "Expected Result": "Data acquisition process fails to complete."
        },
        {
          "Step": 2,
          "Step Description": "Check the ZENIT system logs or error dashboard for error messages related to the failure.",
          "Expected Result": "An appropriate error message is logged, indicating the cause of the failure."
        },
        {
          "Step": 3,
          "Step Description": "Verify that no partial or corrupt data is stored in ZENIT for the affected PoS/date.",
          "Expected Result": "ZENIT does not store incomplete or invalid data for the failed acquisition."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - VLT Data Acquisition",
      "Preconditions": "Ability to simulate data acquisition failure. Monitoring/logging enabled in ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling and logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with simulated acquisition failure.",
      "Expected Result": "ZENIT logs the error and prevents storage of invalid or partial data for failed acquisitions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060"
    },
    {
      "Title": "Verify Daily Automated Data Acquisition from GESTORETE to ZENIT",
      "ID": "TC-186",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the integration between ZENIT and GESTORETE is active and configured for daily data acquisition.",
          "Expected Result": "Integration is active and scheduled for daily execution."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled daily acquisition time to pass (e.g., after midnight).",
          "Expected Result": "ZENIT initiates an automated data acquisition process from GESTORETE."
        },
        {
          "Step": 3,
          "Step Description": "Check ZENIT logs or monitoring tools for confirmation of successful data acquisition.",
          "Expected Result": "Logs indicate successful data retrieval from GESTORETE for all PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "ZENIT and GESTORETE systems are operational and integration is configured for daily data acquisition.",
      "Execution Mode": "Manual",
      "Functionality": "Automated daily data acquisition and integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Configured PoS data in GESTORETE for at least one ZonaRice.",
      "Expected Result": "ZENIT automatically acquires and stores daily data from GESTORETE for all PoS without manual intervention.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Verify Correctness of Acquired Data Fields for Each PoS",
      "ID": "TC-187",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or wait for the daily data acquisition from GESTORETE to ZENIT to complete.",
          "Expected Result": "Data acquisition process completes successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for a specific ZonaRice.",
          "Expected Result": "Dashboard displays data for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present and populated: ZonaRice, Nr AWP other dealer, NOIAG Credits, NOIAG Hopper, Keys AWP Drawer, Keys AWP Counter, Keys AWP Change Coins.",
          "Expected Result": "All required fields are present and populated with data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "Daily data acquisition has been completed for at least one PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data field mapping and completeness",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known PoS with all fields populated in GESTORETE.",
      "Expected Result": "All required data fields for each PoS are correctly acquired and displayed in ZENIT.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Verify Data Snapshot Reflects Previous Evening’s State",
      "ID": "TC-188",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Update a PoS’s data in GESTORETE late in the evening (e.g., 23:00).",
          "Expected Result": "GESTORETE reflects the updated data for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the daily acquisition to occur (e.g., after midnight).",
          "Expected Result": "ZENIT performs the daily data acquisition."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for the updated ZonaRice.",
          "Expected Result": "Dashboard displays the data as it was in GESTORETE at the end of the previous day."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "PoS data in GESTORETE is updated before the daily snapshot time.",
      "Execution Mode": "Manual",
      "Functionality": "Data snapshot timing and accuracy",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known data changes in GESTORETE before snapshot time.",
      "Expected Result": "ZENIT displays the previous evening’s data snapshot for each PoS after daily acquisition.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Verify Data Storage for Each Daily Acquisition",
      "ID": "TC-189",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Allow daily data acquisition to run for at least two consecutive days.",
          "Expected Result": "ZENIT acquires and stores data for each day."
        },
        {
          "Step": 2,
          "Step Description": "Access historical data storage or audit logs in ZENIT for a specific PoS.",
          "Expected Result": "Historical records are available for each day’s acquisition."
        },
        {
          "Step": 3,
          "Step Description": "Compare the stored data for each day to ensure they reflect the correct daily snapshots.",
          "Expected Result": "Each day’s data matches the snapshot from GESTORETE for that day."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "ZENIT has performed daily acquisitions for at least two days.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data storage and historical record keeping",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with varying data in GESTORETE across multiple days.",
      "Expected Result": "ZENIT stores and allows retrieval of daily snapshots for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Verify Handling of Missing or Incomplete Data from GESTORETE",
      "ID": "TC-190",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure a PoS in GESTORETE with one or more required fields missing or empty.",
          "Expected Result": "GESTORETE contains incomplete data for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data acquisition process.",
          "Expected Result": "ZENIT attempts to acquire data from GESTORETE."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for the affected ZonaRice.",
          "Expected Result": "Dashboard displays missing or incomplete data appropriately (e.g., empty fields, error message, or warning indicator)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "At least one PoS in GESTORETE has missing or incomplete data.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for incomplete data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing fields in GESTORETE.",
      "Expected Result": "ZENIT handles missing or incomplete data gracefully and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Verify Dashboard - Single PoS Displays All Required Data Fields",
      "ID": "TC-191",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for a known ZonaRice after daily acquisition.",
          "Expected Result": "Dashboard loads successfully for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are displayed: ZonaRice, Nr AWP other dealer, NOIAG Credits, NOIAG Hopper, Keys AWP Drawer, Keys AWP Counter, Keys AWP Change Coins.",
          "Expected Result": "All required fields are visible and correctly labeled."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "Daily data acquisition has completed successfully.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard data presentation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all fields populated in GESTORETE.",
      "Expected Result": "Dashboard - Single PoS displays all required fields for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Verify Dashboard - Single PoS -- ADI Data Tab Displays All Required Data Fields",
      "ID": "TC-192",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard - Single PoS -- ADI Data Tab for a known ZonaRice after daily acquisition.",
          "Expected Result": "ADI Data Tab loads successfully for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following fields are displayed: ZonaRice, Nr AWP other dealer, NOIAG Credits, NOIAG Hopper, Keys AWP Drawer, Keys AWP Counter, Keys AWP Change Coins.",
          "Expected Result": "All required fields are visible and correctly labeled in the ADI Data Tab."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "Daily data acquisition has completed successfully.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard ADI Data Tab presentation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all fields populated in GESTORETE.",
      "Expected Result": "Dashboard - Single PoS -- ADI Data Tab displays all required fields for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Verify Correct Handling of Allowed Values for Key Ownership Fields",
      "ID": "TC-193",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In GESTORETE, set the Keys AWP Drawer, Keys AWP Counter, and Keys AWP Change Coins fields to 'GESTORE' for a PoS.",
          "Expected Result": "GESTORETE reflects 'GESTORE' as the value for all key fields."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily data acquisition.",
          "Expected Result": "ZENIT acquires the updated key ownership values."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for the affected ZonaRice.",
          "Expected Result": "Dashboard displays 'GESTORE' for all key ownership fields."
        },
        {
          "Step": 4,
          "Step Description": "Repeat steps 1-3 with the value 'ESERCENTE' for all key fields.",
          "Expected Result": "Dashboard displays 'ESERCENTE' for all key ownership fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "PoS exists in GESTORETE and can be edited.",
      "Execution Mode": "Manual",
      "Functionality": "Allowed values for key ownership fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with key fields set to 'GESTORE' and 'ESERCENTE' in GESTORETE.",
      "Expected Result": "ZENIT correctly displays allowed values ('GESTORE' or 'ESERCENTE') for key ownership fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Verify System Behavior When GESTORETE is Unavailable During Scheduled Acquisition",
      "ID": "TC-194",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate GESTORETE system downtime during the scheduled daily acquisition window.",
          "Expected Result": "ZENIT attempts to connect to GESTORETE and fails."
        },
        {
          "Step": 2,
          "Step Description": "Check ZENIT logs or monitoring tools for error handling and retry logic.",
          "Expected Result": "ZENIT logs the failure and, if implemented, retries acquisition as per configuration."
        },
        {
          "Step": 3,
          "Step Description": "Verify that users are notified of the acquisition failure (if notification is implemented).",
          "Expected Result": "Users receive an appropriate error or warning message regarding the failed acquisition."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "ZENIT-GESTORETE Integration",
      "Preconditions": "ZENIT and GESTORETE integration is configured; GESTORETE can be made unavailable for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for source system unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated GESTORETE downtime during acquisition window.",
      "Expected Result": "ZENIT handles GESTORETE unavailability gracefully and informs users or logs the error appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070"
    },
    {
      "Title": "Daily Import of Cerved Data for Active PoS",
      "ID": "TC-195",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system clock is set to trigger the daily scheduled import job.",
          "Expected Result": "System is ready to execute the daily import job at the scheduled time."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled time or manually trigger the import job (if allowed in test environment).",
          "Expected Result": "Import job starts and attempts to retrieve data from Cerved."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the import process for completion.",
          "Expected Result": "Import process completes without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that for each active PoS, the system retrieves the latest CGS and Activity Status from Cerved.",
          "Expected Result": "All active PoS have updated CGS and Activity Status fields in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Cerved Data Acquisition",
      "Preconditions": "Active PoS exist in the system (issued invoices in last 12 months). Cerved system is available and contains up-to-date data for these PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Automated daily data acquisition from Cerved for active PoS.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "List of active PoS, Cerved API credentials, test environment with scheduled job capability.",
      "Expected Result": "System successfully imports and updates CGS and Activity Status for all active PoS from Cerved once per day.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080"
    },
    {
      "Title": "Logging and Tracking of Cerved Data Updates",
      "ID": "TC-196",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a Cerved data import (manually or via scheduled job).",
          "Expected Result": "Import process starts."
        },
        {
          "Step": 2,
          "Step Description": "After import completion, access the system's log or audit trail for Cerved data updates.",
          "Expected Result": "Log entries are present for the import operation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each update to a PoS's CGS or Activity Status is logged with timestamp, PoS identifier, old value, and new value.",
          "Expected Result": "Each change is logged with all required details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Cerved Data Acquisition",
      "Preconditions": "At least one PoS has a change in CGS or Activity Status in Cerved since the previous import. Logging/audit functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Logging and tracking of Cerved data updates.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known data changes in Cerved, access to system logs or audit trail.",
      "Expected Result": "All updates to PoS Cerved data are logged and tracked with complete details for auditability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080"
    },
    {
      "Title": "Detection of Changes in CGS or Activity Status for Active PoS",
      "ID": "TC-197",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure at least one active PoS has a change in CGS or Activity Status in Cerved compared to the previous day.",
          "Expected Result": "Test data is prepared with a known change."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the daily import job.",
          "Expected Result": "Import job runs and completes."
        },
        {
          "Step": 3,
          "Step Description": "Check the system for records of PoS with detected changes.",
          "Expected Result": "System identifies and records only those PoS with changes in CGS or Activity Status."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Cerved Data Acquisition",
      "Preconditions": "Active PoS exist with at least one having a change in Cerved data since the last import.",
      "Execution Mode": "Manual",
      "Functionality": "Detection and processing of changes in Cerved data for active PoS.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Active PoS with simulated or real changes in Cerved data.",
      "Expected Result": "System correctly detects and processes only PoS with changes in CGS or Activity Status compared to the previous day.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080"
    },
    {
      "Title": "Initiation of Cerved Monitoring for New PoS During Inspection Phase",
      "ID": "TC-198",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Create a new PoS and initiate the inspection phase in the system.",
          "Expected Result": "New PoS is in inspection phase."
        },
        {
          "Step": 2,
          "Step Description": "Request a Cerved report for the new PoS as part of the assessment process.",
          "Expected Result": "System sends a request to Cerved for the new PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the new PoS is now being monitored in Cerved.",
          "Expected Result": "Cerved system reflects the new PoS as monitored."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Cerved Data Acquisition",
      "Preconditions": "System supports creation of new PoS and integration with Cerved for report requests.",
      "Execution Mode": "Manual",
      "Functionality": "Monitoring initiation for new PoS in Cerved during inspection phase.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "New PoS details, access to Cerved integration endpoints.",
      "Expected Result": "New PoS begins to be monitored in Cerved as soon as the first report request is made during inspection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080"
    },
    {
      "Title": "Correct Mapping of CGS to Risk Cluster According to Cerved Clustering Parameter",
      "ID": "TC-199",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain or simulate PoS records with CGS values at the boundaries and within each risk cluster range (e.g., 24, 25, 34, 35, 44, etc.).",
          "Expected Result": "Test data covers all risk cluster boundaries."
        },
        {
          "Step": 2,
          "Step Description": "Import or update these PoS records via the Cerved data acquisition process.",
          "Expected Result": "System processes the CGS values for each PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS -- Risk Data Tab for each PoS.",
          "Expected Result": "Risk cluster is displayed for each PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the displayed risk cluster matches the expected cluster for each CGS value according to the provided matrix.",
          "Expected Result": "Risk cluster mapping is correct for all tested CGS values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Cerved Data Acquisition",
      "Preconditions": "System is configured to map CGS to risk clusters as per the provided matrix. Test PoS with required CGS values exist or can be simulated.",
      "Execution Mode": "Manual",
      "Functionality": "Mapping of CGS to risk cluster for PoS.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with CGS values: n.a., 24, 25, 34, 35, 44, 45, 54, 55, 64, 65, 74, 75, 84, 85, 100.",
      "Expected Result": "Each PoS's risk cluster is correctly determined and displayed according to the Cerved Clustering Parameter matrix.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080"
    },
    {
      "Title": "Display of Cerved Data in Dashboard - Single PoS and Risk Data Tab",
      "ID": "TC-200",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Select a PoS with imported Cerved data (CGS and Activity Status) in the system.",
          "Expected Result": "PoS with Cerved data is available."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS for the selected PoS.",
          "Expected Result": "Dashboard loads and displays PoS details."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the Risk Data Tab within the Dashboard - Single PoS.",
          "Expected Result": "Risk Data Tab is accessible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the CGS, Activity Status, and Risk Cluster are displayed correctly and match the imported data.",
          "Expected Result": "All Cerved data fields are displayed accurately in the UI."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Cerved Data Acquisition",
      "Preconditions": "PoS with valid Cerved data exists in the system. User has access to the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Cerved data in the Dashboard UI.",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known Cerved data (CGS, Activity Status, Risk Cluster).",
      "Expected Result": "CGS, Activity Status, and Risk Cluster are correctly displayed for each PoS in the Dashboard - Single PoS and Risk Data Tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080"
    },
    {
      "Title": "Handling of Missing or Invalid CGS Values from Cerved",
      "ID": "TC-201",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a Cerved data import where a PoS has a missing or invalid CGS value (e.g., null, non-numeric, or out-of-range).",
          "Expected Result": "System receives a PoS record with missing/invalid CGS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the import process.",
          "Expected Result": "Import process completes."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the system handles and displays the missing/invalid CGS value in the Dashboard and logs.",
          "Expected Result": "System handles missing/invalid CGS gracefully (e.g., displays 'n.a.' or error message, logs the issue, does not crash)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Cerved Data Acquisition",
      "Preconditions": "System supports error handling for invalid data. Test PoS with missing/invalid CGS can be created or simulated.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing or invalid CGS values from Cerved.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing, null, non-numeric, or out-of-range CGS values.",
      "Expected Result": "System does not fail and provides clear handling and messaging for missing or invalid CGS values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080"
    },
    {
      "Title": "Import Failure and Retry Mechanism for Cerved Data Acquisition",
      "ID": "TC-202",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a failure in the connection to the Cerved system during the scheduled import (e.g., network outage, Cerved API down).",
          "Expected Result": "Import process fails due to external error."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system logs the failure with appropriate error details and timestamp.",
          "Expected Result": "Failure is logged with clear error message and timestamp."
        },
        {
          "Step": 3,
          "Step Description": "Check if the system automatically retries the import according to the defined retry policy (if applicable).",
          "Expected Result": "System retries the import as per configuration or notifies responsible parties if retry fails."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Cerved Data Acquisition",
      "Preconditions": "System has retry or error notification mechanism for import failures. Ability to simulate Cerved system unavailability.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling and retry for failed Cerved data imports.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated Cerved system outage or API error.",
      "Expected Result": "System logs import failures and handles retries or notifications according to requirements, ensuring no data loss or silent failures.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080"
    },
    {
      "Title": "Acquisition of Validated Borderò Data from Valorizzatore at End of Accounting Period",
      "ID": "TC-203",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that the accounting period has ended and Borderò data has been validated in Valorizzatore.",
          "Expected Result": "Borderò data is marked as validated and ready for extraction."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition process for the relevant accounting period (weekly or bi-weekly as applicable).",
          "Expected Result": "Zenit system initiates data acquisition from Valorizzatore."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data transfer process and verify that the following fields are extracted for each Borderò: idRice, ZonaRice, Borderò number, Accounting period (from - to), Total amount of Borderò.",
          "Expected Result": "All required fields are extracted and stored in Zenit system for each Borderò record."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Acquisition Module",
      "Preconditions": "Borderò data must be validated and available in Valorizzatore at the end of the accounting period.",
      "Execution Mode": "Manual",
      "Functionality": "Borderò Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample validated Borderò records in Valorizzatore for a completed accounting period.",
      "Expected Result": "Zenit system successfully acquires all validated Borderò data with required fields at the end of the accounting period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090"
    },
    {
      "Title": "Verification of Extracted Borderò Data Fields in Zenit System",
      "ID": "TC-204",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "After data acquisition, access the Zenit system's storage or database for the acquired Borderò records.",
          "Expected Result": "Access to the acquired Borderò data is granted."
        },
        {
          "Step": 2,
          "Step Description": "For each Borderò record, verify the presence and correctness of the following fields: idRice, ZonaRice, Borderò number, Accounting period (from - to), Total amount of Borderò.",
          "Expected Result": "Each Borderò record contains all required fields with correct values as per Valorizzatore source data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Acquisition Module",
      "Preconditions": "Borderò data acquisition process has been completed for at least one accounting period.",
      "Execution Mode": "Manual",
      "Functionality": "Data Field Verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Acquired Borderò records in Zenit system and corresponding source data from Valorizzatore.",
      "Expected Result": "All acquired Borderò records in Zenit system contain the required fields with values matching the source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090"
    },
    {
      "Title": "Calculation of Average Borderò Over Rolling 12 Months and YTD",
      "ID": "TC-205",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that Borderò data for at least 12 months is available in the Zenit system.",
          "Expected Result": "Zenit system contains Borderò data for the last 12 months."
        },
        {
          "Step": 2,
          "Step Description": "Access the calculation module or dashboard responsible for computing averages.",
          "Expected Result": "Calculation module/dashboard is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Trigger or review the calculation of the average Borderò over the rolling 12-month period and for the current year YTD.",
          "Expected Result": "System displays calculated averages for both rolling 12 months and YTD."
        },
        {
          "Step": 4,
          "Step Description": "Manually verify the correctness of the calculated averages using the acquired data.",
          "Expected Result": "Calculated averages match manual calculations based on the acquired data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Calculation Module",
      "Preconditions": "Borderò data for at least 12 months must be present in the Zenit system.",
      "Execution Mode": "Manual",
      "Functionality": "Average Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Borderò data for at least 12 months in Zenit system.",
      "Expected Result": "System correctly calculates and displays average Borderò values for rolling 12 months and YTD.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090"
    },
    {
      "Title": "Display of Borderò Data in Dashboard - Single PoS View",
      "ID": "TC-206",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit system with access to the Dashboard.",
          "Expected Result": "User is logged in and Dashboard is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS view for a specific PoS.",
          "Expected Result": "Dashboard - Single PoS view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Borderò data (idRice, ZonaRice, Borderò number, Accounting period, Total amount) is displayed for the selected PoS.",
          "Expected Result": "All required Borderò data fields are visible and correctly populated for the selected PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "Borderò data for the selected PoS must be present in the Zenit system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Zenit system with Borderò data for at least one PoS.",
      "Expected Result": "Borderò data is correctly displayed in the Dashboard - Single PoS view for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090"
    },
    {
      "Title": "Display of Borderò Data in Dashboard - Single PoS -- \"Borderò\" Data Tab",
      "ID": "TC-207",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit system and access the Dashboard.",
          "Expected Result": "User is logged in and Dashboard is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS view and select the \"Borderò\" Data Tab.",
          "Expected Result": "\"Borderò\" Data Tab is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Borderò data (idRice, ZonaRice, Borderò number, Accounting period, Total amount) is displayed in the \"Borderò\" Data Tab for the selected PoS.",
          "Expected Result": "All required Borderò data fields are visible and correctly populated in the \"Borderò\" Data Tab for the selected PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Module",
      "Preconditions": "Borderò data for the selected PoS must be present in the Zenit system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Zenit system with Borderò data for at least one PoS.",
      "Expected Result": "Borderò data is correctly displayed in the Dashboard - Single PoS -- \"Borderò\" Data Tab for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090"
    },
    {
      "Title": "Negative Test: Attempt Data Acquisition Before Borderò Validation",
      "ID": "TC-208",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that the accounting period has not ended or Borderò data has not been validated in Valorizzatore.",
          "Expected Result": "Borderò data is not marked as validated."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition process for the current accounting period.",
          "Expected Result": "Zenit system attempts to acquire data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system does not acquire unvalidated Borderò data and logs an appropriate error or warning message.",
          "Expected Result": "No unvalidated Borderò data is acquired; system logs an error or warning."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Acquisition Module",
      "Preconditions": "Borderò data is present in Valorizzatore but not validated.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Unvalidated Borderò records in Valorizzatore.",
      "Expected Result": "Zenit system does not acquire unvalidated Borderò data and logs an appropriate error or warning.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090"
    },
    {
      "Title": "Negative Test: Handle Missing or Incomplete Borderò Data During Acquisition",
      "ID": "TC-209",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that at least one Borderò record in Valorizzatore is missing one or more required fields (e.g., idRice, ZonaRice, Borderò number, Accounting period, or Total amount).",
          "Expected Result": "Borderò record with missing/incomplete data is present in Valorizzatore."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition process for the relevant accounting period.",
          "Expected Result": "Zenit system initiates data acquisition."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system handles the missing/incomplete data according to requirements (e.g., skips the record, logs an error, or flags the record for review).",
          "Expected Result": "System handles missing/incomplete data as per requirements and logs the appropriate message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Acquisition Module",
      "Preconditions": "At least one Borderò record in Valorizzatore is missing required data fields.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Borderò records with missing/incomplete fields in Valorizzatore.",
      "Expected Result": "Zenit system handles missing/incomplete Borderò data according to requirements and logs the appropriate message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090"
    },
    {
      "Title": "Automatic Acquisition of New Unpaid Data from SAP",
      "ID": "TC-210",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate creation of a new unpaid payment for a specific PoS in SAP.",
          "Expected Result": "A new unpaid payment is registered in SAP for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system to trigger the data acquisition flow.",
          "Expected Result": "The system detects the new unpaid payment event."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system retrieves the following data from SAP: IdRice (PoS Identifier), Unpaid Date, Unpaid Identifier.",
          "Expected Result": "The system obtains all required fields for the new unpaid payment."
        },
        {
          "Step": 4,
          "Step Description": "Check that the acquired data is sent to the Zenit system for further processing.",
          "Expected Result": "Zenit receives the correct unpaid data for the PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration",
      "Preconditions": "At least one PoS exists in SAP. System integration between SAP and Zenit is configured and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic data acquisition of new unpaids from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no prior unpaid, SAP credentials, test PoS identifier.",
      "Expected Result": "Whenever a new unpaid is detected in SAP for a PoS, the system automatically acquires and sends the required data (IdRice, Unpaid Date, Unpaid Identifier) to Zenit.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100"
    },
    {
      "Title": "Dashboard Display of Aggregated Unpaid Data (Current Year, 6 Months, 12 Months)",
      "ID": "TC-211",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure multiple unpaid payments exist for a PoS with varying dates (within current year, last 6 months, last 12 months, and older).",
          "Expected Result": "Test data is present in the system for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the Zenit Dashboard and navigate to the Single PoS view.",
          "Expected Result": "Single PoS Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Unpaids' tab for the PoS.",
          "Expected Result": "'Unpaids' tab displays aggregated unpaid data."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the total number of unpaid cases for the current year is correctly displayed.",
          "Expected Result": "Current year unpaid count matches the number of unpaids with dates in the current year."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the total number of unpaid cases over the last 6 months is correctly displayed.",
          "Expected Result": "6-month unpaid count matches the number of unpaids within the last 6 months."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the total number of unpaid cases over the last 12 months is correctly displayed.",
          "Expected Result": "12-month unpaid count matches the number of unpaids within the last 12 months."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit Dashboard",
      "Preconditions": "Unpaid data for the PoS is present in the system with various dates. User has access to Zenit Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Display of aggregated unpaid data on Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with unpaid records dated across different periods (current year, last 6 months, last 12 months, older).",
      "Expected Result": "Dashboard displays correct aggregated unpaid counts for current year, last 6 months, and last 12 months for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100"
    },
    {
      "Title": "Unpaid Data Visibility in Both 'Unpaids' and 'Risk Data' Tabs",
      "ID": "TC-212",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Zenit Dashboard and navigate to the Single PoS view for a PoS with unpaid data.",
          "Expected Result": "Single PoS Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the 'Unpaids' tab and note the displayed unpaid data and aggregated counts.",
          "Expected Result": "Unpaid data and aggregated counts are visible in the 'Unpaids' tab."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Risk Data' tab for the same PoS.",
          "Expected Result": "'Risk Data' tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the same unpaid data and aggregated counts are visible and consistent with the 'Unpaids' tab.",
          "Expected Result": "Unpaid data and counts in 'Risk Data' tab match those in 'Unpaids' tab."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit Dashboard",
      "Preconditions": "PoS with unpaid data exists. User has access to Zenit Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Visibility and consistency of unpaid data across Dashboard tabs",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with at least one unpaid record.",
      "Expected Result": "Unpaid data and aggregated counts are consistently displayed in both 'Unpaids' and 'Risk Data' tabs for the same PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100"
    },
    {
      "Title": "Error Handling When SAP is Unavailable During Data Acquisition",
      "ID": "TC-213",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate SAP system being unavailable (e.g., disconnect SAP or block network access).",
          "Expected Result": "SAP is unreachable from the system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a new unpaid payment event for a PoS in SAP (or simulate the event).",
          "Expected Result": "System attempts to acquire new unpaid data from SAP."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's behavior and error logging mechanisms.",
          "Expected Result": "System logs an error indicating SAP is unavailable and does not crash."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system retries data acquisition according to the defined retry policy (if applicable).",
          "Expected Result": "System attempts to reacquire data as per retry policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration",
      "Preconditions": "System is integrated with SAP. Mechanism to simulate SAP unavailability is in place.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling during SAP data acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with no prior unpaid, SAP credentials, test PoS identifier.",
      "Expected Result": "System handles SAP unavailability gracefully, logs the error, and retries data acquisition as per policy without data loss or crash.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100"
    },
    {
      "Title": "Boundary Test: Unpaid Data at Year, 6-Month, and 12-Month Cutoffs",
      "ID": "TC-214",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Create unpaid records for a PoS with dates exactly at the start of the current year, 6 months ago, and 12 months ago.",
          "Expected Result": "Unpaid records with boundary dates are present in the system."
        },
        {
          "Step": 2,
          "Step Description": "Access the Zenit Dashboard and navigate to the Single PoS view.",
          "Expected Result": "Single PoS Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Unpaids' tab and review the aggregated counts for current year, last 6 months, and last 12 months.",
          "Expected Result": "Aggregated counts are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that unpaid records on the exact boundary dates are included in the respective counts.",
          "Expected Result": "Boundary date records are correctly counted in the relevant period totals."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit Dashboard",
      "Preconditions": "PoS with unpaid records on boundary dates exists. User has access to Zenit Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary handling in unpaid data aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with unpaid records dated exactly at period boundaries (start of year, 6 months ago, 12 months ago).",
      "Expected Result": "Unpaid records with dates on the boundaries are included in the correct aggregated counts for current year, last 6 months, and last 12 months.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100"
    },
    {
      "Title": "Negative Test: Unpaid Data with Missing Required Fields",
      "ID": "TC-215",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate creation of a new unpaid payment in SAP for a PoS with one or more required fields (IdRice, Unpaid Date, Unpaid Identifier) missing or null.",
          "Expected Result": "Unpaid record with missing data is present in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data acquisition flow.",
          "Expected Result": "System attempts to acquire the new unpaid data."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's behavior and error logging mechanisms.",
          "Expected Result": "System logs an error or warning about missing required fields and does not process incomplete data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration",
      "Preconditions": "System is integrated with SAP. Ability to create unpaid records with missing fields in SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields during data acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with unpaid record missing one or more required fields.",
      "Expected Result": "System detects missing required fields, logs the issue, and does not process incomplete unpaid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100"
    },
    {
      "Title": "Automatic Data Acquisition Triggered by Guarantee Status Change",
      "ID": "TC-216",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the guarantee status for a specific POS in SAP (e.g., update the balance or type of guarantee).",
          "Expected Result": "The system detects the change in guarantee status for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered by the change.",
          "Expected Result": "The system initiates a data acquisition process from SAP for the affected POS."
        },
        {
          "Step": 3,
          "Step Description": "Check the logs or monitoring dashboard for evidence of the data acquisition event.",
          "Expected Result": "A log entry or event is recorded indicating the acquisition was triggered due to the status change."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Guarantees Data Acquisition",
      "Preconditions": "A POS with existing guarantee data in SAP. Access to SAP and system logs.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic data acquisition on guarantee status change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier, guarantee data in SAP",
      "Expected Result": "The system automatically triggers data acquisition from SAP whenever there is a change in the guarantee status for any POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101"
    },
    {
      "Title": "Correct Data Fields Sent on Guarantee Variation",
      "ID": "TC-217",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a variation in the guarantee for a POS in SAP (e.g., change the guarantee type or balance).",
          "Expected Result": "The system detects the variation and prepares to send updated data."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data sent by the system to ensure it includes all required fields: IdRice, Type of Guarantee, Total Balance Amount, Guarantee Start Date (if Bank guarantee), Guarantee Expiration Date (if Bank guarantee).",
          "Expected Result": "The data sent contains all required fields with correct values."
        },
        {
          "Step": 3,
          "Step Description": "For a non-Bank guarantee type, verify that Guarantee Start Date and Expiration Date are not included.",
          "Expected Result": "Start Date and Expiration Date fields are omitted for non-Bank guarantee types."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Guarantees Data Acquisition",
      "Preconditions": "A POS with guarantee data in SAP. Ability to simulate guarantee variations and monitor outgoing data.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantee data field validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier, guarantee types (Plan Provisions, Bank guarantee, Deposits), sample balances, dates",
      "Expected Result": "On guarantee variation, the system sends all required fields with correct values, including dates only for Bank guarantees.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101"
    },
    {
      "Title": "Dashboard Display of Guarantee Data for Single POS",
      "ID": "TC-218",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Dashboard for a specific POS after a guarantee status change has occurred and data has been updated.",
          "Expected Result": "The Dashboard loads the POS details."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Guarantees' tab for the selected POS.",
          "Expected Result": "The 'Guarantees' tab displays the latest guarantee data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the displayed data matches the most recent information sent from SAP, including all required fields.",
          "Expected Result": "Displayed data is accurate and up-to-date, reflecting the latest SAP data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Guarantees Data Acquisition",
      "Preconditions": "Guarantee data for the POS has been updated and acquired from SAP. User has access to the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantee data visualization in Dashboard",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "POS identifier with updated guarantee data",
      "Expected Result": "The Dashboard 'Guarantees' tab for a POS displays the latest guarantee data as acquired from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101"
    },
    {
      "Title": "No Data Acquisition Triggered When No Guarantee Change Occurs",
      "ID": "TC-219",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no changes are made to the guarantee status of a POS in SAP.",
          "Expected Result": "No guarantee status change is present."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the system for any data acquisition events related to the POS.",
          "Expected Result": "No data acquisition process is triggered for the POS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Guarantees Data Acquisition",
      "Preconditions": "A POS with stable guarantee data in SAP. Access to system logs or monitoring tools.",
      "Execution Mode": "Manual",
      "Functionality": "Data acquisition trigger validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier with unchanged guarantee data",
      "Expected Result": "The system does not trigger data acquisition when there is no change in guarantee status for a POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101"
    },
    {
      "Title": "Error Handling When SAP is Unavailable During Data Acquisition",
      "ID": "TC-220",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a guarantee status change for a POS in SAP.",
          "Expected Result": "The system attempts to trigger data acquisition from SAP."
        },
        {
          "Step": 2,
          "Step Description": "Simulate SAP being unavailable (e.g., disconnect SAP or block network access).",
          "Expected Result": "The system cannot connect to SAP."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's error handling and logging mechanisms.",
          "Expected Result": "The system logs an error and retries or notifies the appropriate stakeholders as per error handling policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Guarantees Data Acquisition",
      "Preconditions": "Ability to simulate SAP unavailability. POS with guarantee data in SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for SAP unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier, SAP connection settings",
      "Expected Result": "The system handles SAP unavailability gracefully, logs the error, and follows the defined retry or notification policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101"
    },
    {
      "Title": "Automatic Acquisition of Status Collection Data from SAP on Status Change",
      "ID": "TC-221",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the 'Status Collection' of a POS in SAP (e.g., update an open item status).",
          "Expected Result": "The system detects the change in 'Status Collection' for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered immediately after the change.",
          "Expected Result": "The data acquisition process is initiated without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Check the data sent by the system for the affected POS.",
          "Expected Result": "The data includes the correct IdRice and the updated 'Status Collection' flag, reflecting the most serious block according to the severity hierarchy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration - Status Collection",
      "Preconditions": "At least one POS exists in SAP with an open item. The system is connected to SAP and able to receive status updates.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic data acquisition on status change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with open items in SAP; test user with permissions to update status.",
      "Expected Result": "Whenever a 'Status Collection' status changes for a POS in SAP, the system automatically acquires and sends the updated information, including IdRice and the most serious block flag.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102"
    },
    {
      "Title": "Send Only the Most Serious Block per Customer, Ignoring Company Distinction",
      "ID": "TC-222",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "For a customer with multiple companies, assign different block statuses (e.g., legal block on one company, warning on another).",
          "Expected Result": "Multiple block statuses exist for the same customer across companies."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a status change in any of the open items for the customer.",
          "Expected Result": "The system detects the change and prepares to send updated data."
        },
        {
          "Step": 3,
          "Step Description": "Verify the data sent for the customer.",
          "Expected Result": "Only the most serious block (e.g., legal) is sent, ignoring less severe blocks and company distinctions."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration - Status Collection",
      "Preconditions": "Customer exists in SAP with multiple companies and different block statuses. System is integrated with SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Block severity hierarchy enforcement",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Customer with multiple companies and varying block statuses.",
      "Expected Result": "The system sends only the most serious block status for each customer, regardless of company distinctions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102"
    },
    {
      "Title": "Update Data on Every Open Item Status Change",
      "ID": "TC-223",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Change the status of an open item for a POS in SAP (e.g., from 'pending' to 'paid').",
          "Expected Result": "The system detects the status change."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system updates the 'Status Collection' data for the POS.",
          "Expected Result": "The updated data is sent, reflecting the new status."
        },
        {
          "Step": 3,
          "Step Description": "Repeat the status change for another open item for the same POS.",
          "Expected Result": "The system again detects the change and updates the data accordingly."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration - Status Collection",
      "Preconditions": "POS with multiple open items in SAP. System is connected to SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Continuous data update on open item status change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with multiple open items in SAP.",
      "Expected Result": "The system updates and sends 'Status Collection' data every time an open item status changes for a POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102"
    },
    {
      "Title": "Dashboard - Single PoS Displays Latest Status Collection Data",
      "ID": "TC-224",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a change in the 'Status Collection' status for a POS in SAP.",
          "Expected Result": "The system updates the 'Status Collection' data for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS view for the affected POS.",
          "Expected Result": "The dashboard loads successfully."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the dashboard displays the latest 'Status Collection' data, including IdRice and the most serious block flag.",
          "Expected Result": "The dashboard shows the updated information as per the latest change."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS",
      "Preconditions": "POS exists and is visible in the Dashboard. System is integrated with SAP and has received at least one status update.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard data visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with recent 'Status Collection' status change.",
      "Expected Result": "The Dashboard - Single PoS displays the most up-to-date 'Status Collection' data for the POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102"
    },
    {
      "Title": "Error Handling: No Data Sent When No Status Change Occurs",
      "ID": "TC-225",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no changes are made to the 'Status Collection' status of any POS in SAP.",
          "Expected Result": "No status change events are triggered."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the system for any data acquisition or transmission activity.",
          "Expected Result": "No data is sent or updated in the absence of status changes."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration - Status Collection",
      "Preconditions": "System is running and connected to SAP. No status changes are performed during the test window.",
      "Execution Mode": "Manual",
      "Functionality": "Error and idle state handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No status changes in SAP for any POS.",
      "Expected Result": "The system does not send or update any 'Status Collection' data when there are no status changes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102"
    },
    {
      "Title": "Automatic Acquisition of Updated 'Open Credits' from SAP on Status Change",
      "ID": "TC-226",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the status of 'Open Credits' for a specific PoS in SAP (e.g., create a new open credit or close an existing one).",
          "Expected Result": "The system detects the change in 'Open Credits' status for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered by the status change.",
          "Expected Result": "The system initiates the data acquisition process from SAP for the affected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Check the data sent by the system after the status change.",
          "Expected Result": "The system sends the updated 'Open Credits' data, including IdRice (PoS Identifier) and total balance amount, for the three companies without distinction."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "SAP Integration - Open Credits",
      "Preconditions": "At least one PoS exists in the system and is linked to SAP. The system is connected to SAP and able to receive status changes.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic data acquisition and update on 'Open Credits' status change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS test account with open credits in SAP; SAP credentials; test environment with integration enabled.",
      "Expected Result": "Upon any change in 'Open Credits' status for a PoS, the system automatically acquires and sends updated data (IdRice and total balance) for all three companies.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103"
    },
    {
      "Title": "Transmission of 'Open Credits' Data for All Companies Without Distinction",
      "ID": "TC-227",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate open credits for a PoS in SAP, ensuring open items exist for all three companies.",
          "Expected Result": "Open credits are present for the PoS across all three companies in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a status change for one or more open credits (e.g., partial payment, new credit).",
          "Expected Result": "The system detects the change and prepares to send updated data."
        },
        {
          "Step": 3,
          "Step Description": "Verify the data sent by the system after the change.",
          "Expected Result": "The system transmits the total balance amount for all open items, aggregating across the three companies, without distinguishing between them."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "SAP Integration - Open Credits",
      "Preconditions": "PoS with open credits in SAP for three companies. System integration with SAP is active.",
      "Execution Mode": "Manual",
      "Functionality": "Aggregation and transmission of open credits data for all companies",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits in SAP for three companies; SAP access; test environment.",
      "Expected Result": "The system sends the total balance of open credits for all three companies combined, without company-level distinction, upon any status change.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103"
    },
    {
      "Title": "Handling and Transmission of 'IAG' Credits Remaining Open After IAG Event",
      "ID": "TC-228",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate an IAG event for a PoS in SAP, ensuring that 'IAG' credits remain open for a few hours after the event.",
          "Expected Result": "'IAG' credits are present and remain open in SAP after the IAG event."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the system for acquisition and transmission of 'IAG' credit data during the period they remain open.",
          "Expected Result": "The system detects the open 'IAG' credits and triggers the data acquisition process."
        },
        {
          "Step": 3,
          "Step Description": "Verify the data sent by the system includes the 'IAG' credits as part of the open credits information.",
          "Expected Result": "The system transmits the open 'IAG' credits data (IdRice and total balance) as part of the overall open credits for the PoS."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "SAP Integration - Open Credits",
      "Preconditions": "PoS with 'IAG' credits in SAP. System integration with SAP is active. IAG event has occurred.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of 'IAG' credits in open credits data acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'IAG' credits in SAP; SAP access; test environment.",
      "Expected Result": "The system includes 'IAG' credits that remain open after the IAG event in the open credits data sent for the PoS.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103"
    },
    {
      "Title": "Display of Updated 'Open Credits' Data on Single PoS Dashboard",
      "ID": "TC-229",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a change in 'Open Credits' status for a PoS in SAP (e.g., create, update, or close an open credit).",
          "Expected Result": "The system acquires the updated 'Open Credits' data for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS view in the application.",
          "Expected Result": "The dashboard loads successfully for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the dashboard displays the most recent 'Open Credits' data (IdRice and total balance) for the PoS.",
          "Expected Result": "The dashboard shows the updated 'Open Credits' information corresponding to the latest data acquired from SAP."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "desktop",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Dashboard - Single PoS",
      "Preconditions": "PoS with open credits in SAP. System integration with SAP is active. Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Display of open credits data on PoS dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits in SAP; SAP access; dashboard access credentials.",
      "Expected Result": "The Single PoS dashboard displays the latest 'Open Credits' data (IdRice and total balance) for the PoS after any status change.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103"
    },
    {
      "Title": "Error Handling When SAP is Unavailable During Data Acquisition",
      "ID": "TC-230",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in 'Open Credits' status for a PoS in SAP.",
          "Expected Result": "The system attempts to acquire updated data from SAP."
        },
        {
          "Step": 2,
          "Step Description": "During the acquisition process, simulate SAP being unavailable (e.g., disconnect SAP or simulate a network failure).",
          "Expected Result": "The system detects the unavailability of SAP."
        },
        {
          "Step": 3,
          "Step Description": "Verify the system's error handling and logging mechanisms.",
          "Expected Result": "The system logs the error, does not send incomplete or outdated data, and may trigger a retry or alert as per design."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "SAP Integration - Open Credits",
      "Preconditions": "PoS with open credits in SAP. System integration with SAP is active. Mechanism to simulate SAP unavailability is in place.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling during SAP data acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits in SAP; SAP access; ability to simulate SAP downtime.",
      "Expected Result": "If SAP is unavailable during data acquisition, the system logs the error and does not send incomplete data. Appropriate error handling or retry logic is triggered.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103"
    },
    {
      "Title": "Automatic Data Acquisition Triggered by Hopper Status Change",
      "ID": "TC-231",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the status of the Hopper or Coin Changer for a specific PoS (e.g., update the hopper balance).",
          "Expected Result": "The system detects the status change event for the specified PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system initiates the data acquisition flow from SAP automatically upon detecting the status change.",
          "Expected Result": "The system sends a request to SAP to obtain updated Hopper and Coin Changer information for the affected PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "SAP Integration - Hopper & Coin Changer",
      "Preconditions": "At least one PoS is configured and connected to the system. The SAP integration is active and reachable.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic data acquisition on Hopper/Coin Changer status change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID: 12345; Initial Hopper Balance: 100.00; Updated Hopper Balance: 80.00",
      "Expected Result": "The system automatically triggers the SAP data acquisition flow whenever a Hopper or Coin Changer status change occurs for any PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104"
    },
    {
      "Title": "Transmission of Required Data Fields on Hopper/Coin Changer Variation",
      "ID": "TC-232",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the Hopper or Coin Changer status for a PoS (e.g., simulate a coin payout or refill).",
          "Expected Result": "The system detects the variation and prepares data for transmission."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data sent to SAP and verify the presence and correctness of all required fields: IdRice (PoS Identifier), IAG Hopper Balance Amount - Severance, IAG Hopper Balance Amount - Recovery, Coin exchange balance amount.",
          "Expected Result": "All required data fields are present and populated with correct values in the transmission to SAP."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "SAP Integration - Hopper & Coin Changer",
      "Preconditions": "PoS and SAP integration are operational. Test PoS has valid balances for all required fields.",
      "Execution Mode": "Manual",
      "Functionality": "Data field transmission on Hopper/Coin Changer variation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID: 67890; Severance: 50.00; Recovery: 30.00; Coin Exchange: 20.00",
      "Expected Result": "Upon variation, the system transmits all required data fields to SAP with accurate values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104"
    },
    {
      "Title": "Dashboard Data Update After Hopper/Coin Changer Status Change",
      "ID": "TC-233",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Cause a change in the Hopper or Coin Changer status for a PoS (e.g., simulate a coin payout).",
          "Expected Result": "The system detects the change and updates the data in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS view for the affected PoS.",
          "Expected Result": "The dashboard displays the updated Hopper and Coin Changer data corresponding to the recent change."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS",
      "Preconditions": "PoS and SAP integration are operational. User has access to the Dashboard - Single PoS view.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard data visualization after Hopper/Coin Changer update",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID: 24680; Initial and updated balances as per test scenario.",
      "Expected Result": "The Dashboard - Single PoS view reflects the latest Hopper and Coin Changer data after a status change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104"
    },
    {
      "Title": "No Data Acquisition Triggered Without Hopper/Coin Changer Status Change",
      "ID": "TC-234",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Monitor the system for a period during which no Hopper or Coin Changer status changes occur for any PoS.",
          "Expected Result": "No data acquisition flow is triggered from SAP during this period."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "SAP Integration - Hopper & Coin Changer",
      "Preconditions": "PoS and SAP integration are operational. No status changes are performed during the observation period.",
      "Execution Mode": "Manual",
      "Functionality": "No unnecessary data acquisition without status change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID: 13579; No status changes during test window.",
      "Expected Result": "The system does not trigger SAP data acquisition when there are no Hopper or Coin Changer status changes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104"
    },
    {
      "Title": "Error Handling When SAP is Unreachable During Data Acquisition",
      "ID": "TC-235",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a Hopper or Coin Changer status change for a PoS.",
          "Expected Result": "The system attempts to initiate data acquisition from SAP."
        },
        {
          "Step": 2,
          "Step Description": "During the data acquisition attempt, simulate SAP being unreachable (e.g., network failure or SAP service down).",
          "Expected Result": "The system detects the failure to reach SAP and logs an appropriate error."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system retries the data acquisition according to the defined retry policy (if applicable).",
          "Expected Result": "The system retries the data acquisition as per configuration or notifies the appropriate monitoring system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "SAP Integration - Hopper & Coin Changer",
      "Preconditions": "PoS and SAP integration are operational. Mechanism exists to simulate SAP unavailability.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for SAP unavailability during data acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID: 11223; Simulated SAP downtime window.",
      "Expected Result": "The system handles SAP unavailability gracefully, logs the error, and retries or notifies as per system design.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104"
    },
    {
      "Title": "Daily Acquisition of Winnings Monitoring Data from DWH",
      "ID": "TC-236",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the DWH system has generated the daily winnings monitoring data for the current day.",
          "Expected Result": "DWH contains the latest winnings monitoring data for the day."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's daily data acquisition process at the end of the day.",
          "Expected Result": "Zenit system initiates data acquisition from DWH."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Zenit system successfully acquires the winnings monitoring data from DWH.",
          "Expected Result": "Zenit system receives and stores the winnings monitoring data without errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "DWH system has completed daily extraction and data is available. Zenit system is operational and connected to DWH.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data acquisition from DWH",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample daily winnings monitoring data in DWH for the current day.",
      "Expected Result": "Zenit system acquires the daily winnings monitoring data from DWH at the end of each day without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Aggregation of Sport Tickets Paid at Other Sales Points",
      "ID": "TC-237",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure DWH contains sport ticket data paid at other sales points with all required fields populated.",
          "Expected Result": "DWH contains sport ticket data with seller PoS, sell date, payment PoS, and payment date."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition and aggregation process.",
          "Expected Result": "Zenit system starts data acquisition and aggregation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the aggregation is performed based on seller PoS identifier, sell date, payment PoS identifier, and payment date.",
          "Expected Result": "Aggregated data is grouped by seller PoS, sell date, payment PoS, and payment date."
        },
        {
          "Step": 4,
          "Step Description": "Check that the aggregated data includes Seller Agency Code, Seller PoS identifier, Competence Day, Cash day, Winning payment Day, Agency Code Payment, PoS Identifier of the payment, Amount bet, and Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "DWH contains valid sport ticket data paid at other sales points. Zenit system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Aggregation of sport tickets paid at other sales points",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sport ticket data with various seller PoS, sell dates, payment PoS, and payment dates.",
      "Expected Result": "Zenit system aggregates sport tickets paid at other sales points as specified, including all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Aggregation of Unpaid Winning Sports Tickets",
      "ID": "TC-238",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure DWH contains unpaid winning sports ticket data with all required fields populated.",
          "Expected Result": "DWH contains unpaid winning sports ticket data with seller PoS and sell date."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition and aggregation process.",
          "Expected Result": "Zenit system starts data acquisition and aggregation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the aggregation is performed based on seller PoS identifier and sell date.",
          "Expected Result": "Aggregated data is grouped by seller PoS and sell date."
        },
        {
          "Step": 4,
          "Step Description": "Check that the aggregated data includes Seller Agency Code, Seller PoS identifier, Competence Day, Cash day, Amount bet, and Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "DWH contains valid unpaid winning sports ticket data. Zenit system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Aggregation of unpaid winning sports tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Unpaid winning sports ticket data with various seller PoS and sell dates.",
      "Expected Result": "Zenit system aggregates unpaid winning sports tickets as specified, including all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Aggregation of Unpaid Winning Virtual Race Tickets",
      "ID": "TC-239",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure DWH contains unpaid winning virtual race ticket data with all required fields populated.",
          "Expected Result": "DWH contains unpaid winning virtual race ticket data with seller PoS and sell date."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition and aggregation process.",
          "Expected Result": "Zenit system starts data acquisition and aggregation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the aggregation is performed based on seller PoS identifier and sell date.",
          "Expected Result": "Aggregated data is grouped by seller PoS and sell date."
        },
        {
          "Step": 4,
          "Step Description": "Check that the aggregated data includes Seller Agency Code, Seller PoS identifier, Competence Day, Cash day, Amount bet, and Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "DWH contains valid unpaid winning virtual race ticket data. Zenit system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Aggregation of unpaid winning virtual race tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Unpaid winning virtual race ticket data with various seller PoS and sell dates.",
      "Expected Result": "Zenit system aggregates unpaid winning virtual race tickets as specified, including all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Validation of Seller Agency Code Formatting (Standard and Corner PoS)",
      "ID": "TC-240",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare DWH data with Seller Agency Codes for both standard and Corner PoS types.",
          "Expected Result": "DWH contains Seller Agency Codes in both standard (e.g., 000045) and Corner PoS format (e.g., 0001-000045)."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition and aggregation process.",
          "Expected Result": "Zenit system starts data acquisition and aggregation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Seller Agency Code in the aggregated data is formatted as a 6-character string left-padded with zeros for standard PoS.",
          "Expected Result": "Seller Agency Code is correctly formatted for standard PoS (e.g., 000045)."
        },
        {
          "Step": 4,
          "Step Description": "Verify that for Corner PoS, the Seller Agency Code includes the 4-character zone number, hyphen, and 6-character SIMP code (e.g., 0001-000045).",
          "Expected Result": "Seller Agency Code is correctly formatted for Corner PoS (e.g., 0001-000045)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "DWH contains both standard and Corner PoS Seller Agency Codes. Zenit system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Seller Agency Code formatting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Seller Agency Codes for standard and Corner PoS in DWH data.",
      "Expected Result": "Seller Agency Code is correctly formatted for both standard and Corner PoS in the aggregated data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Validation of Field Formatting and Data Consistency",
      "ID": "TC-241",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare DWH data with all required fields, including edge cases (e.g., minimum/maximum values, invalid formats).",
          "Expected Result": "DWH contains data with various field values and formats."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition and aggregation process.",
          "Expected Result": "Zenit system starts data acquisition and aggregation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all fields in the aggregated data are formatted according to specifications (e.g., date fields as yyyy-mm-dd, numeric fields as required, string fields left-padded with zeros).",
          "Expected Result": "All fields are correctly formatted in the aggregated data."
        },
        {
          "Step": 4,
          "Step Description": "Check that data consistency is maintained (e.g., no missing or mismatched fields, correct aggregation logic).",
          "Expected Result": "Aggregated data is consistent and accurate."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "DWH contains data with various field values and formats. Zenit system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Field formatting and data consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "DWH data with edge cases for all required fields.",
      "Expected Result": "All fields in the aggregated data are correctly formatted and data consistency is maintained.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Dashboard Display of Aggregated Winnings Data per PoS",
      "ID": "TC-242",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure Zenit system has acquired and aggregated winnings monitoring data for at least one PoS.",
          "Expected Result": "Aggregated data is available in Zenit system for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS - 'Winning Data' Tab for the selected PoS.",
          "Expected Result": "Dashboard displays the 'Winning Data' tab for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the aggregated winnings data is displayed correctly, matching the data acquired and processed by Zenit.",
          "Expected Result": "Displayed data matches the aggregated data in Zenit system for the selected PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "Zenit system has completed data acquisition and aggregation for at least one PoS. Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard display of aggregated winnings data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Aggregated winnings data for at least one PoS in Zenit system.",
      "Expected Result": "Dashboard displays the correct aggregated winnings data for each PoS in the 'Winning Data' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Negative Test: Handling of Missing Required Fields in DWH Data",
      "ID": "TC-243",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare DWH data with missing required fields (e.g., missing Seller PoS identifier, sell date, or amount fields).",
          "Expected Result": "DWH contains data with missing required fields."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition and aggregation process.",
          "Expected Result": "Zenit system starts data acquisition and aggregation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Zenit system identifies and handles records with missing required fields according to error handling specifications (e.g., logs error, skips record, or raises alert).",
          "Expected Result": "Zenit system handles missing fields as specified, without processing incomplete records."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "DWH contains data with missing required fields. Zenit system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing required fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "DWH data with missing required fields.",
      "Expected Result": "Zenit system correctly handles records with missing required fields according to error handling specifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Negative Test: Handling of Invalid Field Formats in DWH Data",
      "ID": "TC-244",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare DWH data with invalid field formats (e.g., incorrect date format, non-numeric values in amount fields, improperly padded strings).",
          "Expected Result": "DWH contains data with invalid field formats."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition and aggregation process.",
          "Expected Result": "Zenit system starts data acquisition and aggregation."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Zenit system identifies and handles records with invalid field formats according to error handling specifications (e.g., logs error, skips record, or raises alert).",
          "Expected Result": "Zenit system handles invalid field formats as specified, without processing invalid records."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Winnings Monitoring Data Acquisition",
      "Preconditions": "DWH contains data with invalid field formats. Zenit system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for invalid field formats",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "DWH data with invalid field formats.",
      "Expected Result": "Zenit system correctly handles records with invalid field formats according to error handling specifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110"
    },
    {
      "Title": "Verify Terminal Data Acquisition and Display for Single PoS",
      "ID": "TC-245",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the list.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab.",
          "Expected Result": "The 'PoS Master Data' tab is opened, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the following information is displayed for each Terminal Type: IdRice (PoS identifier), Type ID, Type Name, and Number of Terminals.",
          "Expected Result": "For each Terminal Type at the selected PoS, IdRice, Type ID, Type Name, and Number of Terminals are correctly displayed as per data from ORION."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - PoS Master Data",
      "Preconditions": "User has access to ZENIT Dashboard. At least one PoS with terminal data exists in ORION.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with multiple terminal types and data in ORION.",
      "Expected Result": "Terminal data (IdRice, Type ID, Type Name, Number of Terminals) for each Terminal Type at the selected PoS is accurately displayed in the 'PoS Master Data' tab, matching the data in ORION.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120"
    },
    {
      "Title": "Verify Handling of PoS with No Terminal Data",
      "ID": "TC-246",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS that has no terminal data in ORION.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab.",
          "Expected Result": "The 'PoS Master Data' tab is opened."
        },
        {
          "Step": 5,
          "Step Description": "Verify the display when no terminal data is available for the selected PoS.",
          "Expected Result": "A clear message is shown indicating that no terminal data is available for this PoS, and no terminal data rows are displayed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - PoS Master Data",
      "Preconditions": "User has access to ZENIT Dashboard. At least one PoS exists in ORION with no terminal data.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no terminal data in ORION.",
      "Expected Result": "If a PoS has no terminal data, the 'PoS Master Data' tab displays a clear message and no terminal data rows.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120"
    },
    {
      "Title": "Verify Data Consistency Between ZENIT and ORION for Terminal Data",
      "ID": "TC-247",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain terminal data for a specific PoS directly from ORION (IdRice, Type ID, Type Name, Number of Terminals for each Terminal Type).",
          "Expected Result": "Terminal data for the selected PoS is available from ORION."
        },
        {
          "Step": 2,
          "Step Description": "Login to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Single PoS' section and select the same PoS as in Step 1.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab.",
          "Expected Result": "The 'PoS Master Data' tab is opened, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Compare the terminal data displayed in ZENIT with the data obtained from ORION.",
          "Expected Result": "All terminal data fields (IdRice, Type ID, Type Name, Number of Terminals) in ZENIT exactly match the data from ORION for the selected PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - PoS Master Data",
      "Preconditions": "User has access to both ZENIT Dashboard and ORION. PoS with terminal data exists in both systems.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Synchronization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with terminal data in both ZENIT and ORION.",
      "Expected Result": "Terminal data displayed in ZENIT for each PoS and Terminal Type is consistent and matches the data in ORION.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120"
    },
    {
      "Title": "Verify Display of Multiple Terminal Types for a Single PoS",
      "ID": "TC-248",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS that has multiple terminal types in ORION.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab.",
          "Expected Result": "The 'PoS Master Data' tab is opened, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all terminal types for the selected PoS are displayed, each with correct Type ID, Type Name, and Number of Terminals.",
          "Expected Result": "Each terminal type associated with the PoS is listed with accurate Type ID, Type Name, and Number of Terminals."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - PoS Master Data",
      "Preconditions": "User has access to ZENIT Dashboard. PoS with multiple terminal types exists in ORION.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with multiple terminal types in ORION.",
      "Expected Result": "All terminal types for the selected PoS are displayed with correct details in the 'PoS Master Data' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120"
    },
    {
      "Title": "Verify System Behavior When ORION is Unavailable",
      "ID": "TC-249",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate ORION system unavailability (e.g., disconnect ORION or block network access).",
          "Expected Result": "ORION is not reachable from ZENIT."
        },
        {
          "Step": 2,
          "Step Description": "Login to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Single PoS' section and select any PoS.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab.",
          "Expected Result": "The 'PoS Master Data' tab attempts to load terminal data."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's response to the unavailability of ORION.",
          "Expected Result": "A clear error message is displayed indicating that terminal data cannot be retrieved due to ORION unavailability. No outdated or partial data is shown."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Dashboard - PoS Master Data",
      "Preconditions": "User has access to ZENIT Dashboard. ORION is temporarily unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling - Data Source Unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; ORION system offline or unreachable.",
      "Expected Result": "When ORION is unavailable, ZENIT displays a clear error message and does not show outdated or partial terminal data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120"
    },
    {
      "Title": "Verify acquisition and display of available Cerved reports for a specific PoS",
      "ID": "TC-250",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard as a valid user.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a specific PoS.",
          "Expected Result": "Single PoS screen is displayed with all relevant modules."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed, showing the list of available documents from Cerved for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the list of available Cerved reports is displayed.",
          "Expected Result": "All available Cerved reports for the selected PoS are listed with correct metadata (e.g., report name, date, type)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit Dashboard - Cerved Integration",
      "Preconditions": "At least one Cerved report is available for the selected PoS. User has valid credentials and access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved report acquisition and listing for PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with available Cerved reports.",
      "Expected Result": "The system acquires and displays all available Cerved reports for the selected PoS in the 'Documents' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130"
    },
    {
      "Title": "Verify viewing of a single Cerved report from the Documents tab",
      "ID": "TC-251",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard as a valid user.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a specific PoS.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed with a list of available Cerved reports."
        },
        {
          "Step": 4,
          "Step Description": "Click on a specific Cerved report in the list.",
          "Expected Result": "The selected Cerved report is opened and its content is displayed for viewing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit Dashboard - Cerved Integration",
      "Preconditions": "At least one Cerved report is available for the selected PoS. User has valid credentials and access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved report viewing for PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with available Cerved reports.",
      "Expected Result": "The user is able to view the content of the selected Cerved report from the Documents tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130"
    },
    {
      "Title": "Verify system behavior when no Cerved reports are available for a PoS",
      "ID": "TC-252",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard as a valid user.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a PoS with no available Cerved reports.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of available documents.",
          "Expected Result": "A message is displayed indicating that no Cerved reports are available for the selected PoS, and the list is empty."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit Dashboard - Cerved Integration",
      "Preconditions": "Selected PoS has no Cerved reports available. User has valid credentials and access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved report acquisition for PoS with no available reports",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no available Cerved reports.",
      "Expected Result": "The system displays an appropriate message when no Cerved reports are available for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130"
    },
    {
      "Title": "Verify error handling when Cerved service is unavailable during report acquisition",
      "ID": "TC-253",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard as a valid user.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a specific PoS.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen while the Cerved service is intentionally made unavailable (simulate service outage).",
          "Expected Result": "The system attempts to acquire reports from Cerved."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system's response to the service outage.",
          "Expected Result": "An error message is displayed indicating that the Cerved service is unavailable, and no reports are shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit Dashboard - Cerved Integration",
      "Preconditions": "Cerved service is unavailable. User has valid credentials and access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for Cerved report acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Cerved service unavailable for test PoS.",
      "Expected Result": "The system displays an appropriate error message when the Cerved service is unavailable during report acquisition.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130"
    },
    {
      "Title": "Verify user access control for Cerved report acquisition and viewing",
      "ID": "TC-254",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard as a user without permission to view Cerved reports.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a specific PoS.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the availability of Cerved reports and access controls.",
          "Expected Result": "Cerved reports are not displayed, or access is denied with an appropriate message indicating insufficient permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit Dashboard - Cerved Integration",
      "Preconditions": "User account does not have permission to view Cerved reports. PoS has available Cerved reports.",
      "Execution Mode": "Manual",
      "Functionality": "Access control for Cerved report acquisition and viewing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials without Cerved report access; PoS with available Cerved reports.",
      "Expected Result": "Users without appropriate permissions cannot view or acquire Cerved reports and receive a suitable access denied message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130"
    },
    {
      "Title": "Verify document acquisition and listing for a specific PoS from Arxivar",
      "ID": "TC-255",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a specific PoS.",
          "Expected Result": "Single PoS screen is displayed with all relevant modules."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed, showing the module reserved for Source system 'Documents'."
        },
        {
          "Step": 4,
          "Step Description": "Trigger the acquisition of documents from Arxivar (if not automatically triggered).",
          "Expected Result": "System sends a request to Arxivar to acquire available documents for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to retrieve and display the list of available documents.",
          "Expected Result": "A list of available documents from Arxivar is displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration - Documents Module",
      "Preconditions": "User has valid credentials. The PoS exists and has documents available in Arxivar. Network connectivity to Arxivar is available.",
      "Execution Mode": "Manual",
      "Functionality": "Document acquisition and listing from Arxivar for a specific PoS.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with documents in Arxivar.",
      "Expected Result": "The system acquires and displays the list of available documents from Arxivar for the selected PoS in the 'Documents' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131"
    },
    {
      "Title": "Verify document viewing functionality for a listed document from Arxivar",
      "ID": "TC-256",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a specific PoS.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed with the list of documents from Arxivar."
        },
        {
          "Step": 4,
          "Step Description": "Click on a document in the list to view it.",
          "Expected Result": "The selected document is opened and displayed to the user for viewing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration - Documents Module",
      "Preconditions": "User is logged in. The PoS has at least one document available in Arxivar.",
      "Execution Mode": "Manual",
      "Functionality": "Document viewing from the list of acquired Arxivar documents.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with at least one document in Arxivar.",
      "Expected Result": "The user can successfully view the content of a document acquired from Arxivar by clicking on it in the list.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131"
    },
    {
      "Title": "Verify system behavior when no documents are available for a PoS in Arxivar",
      "ID": "TC-257",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a PoS with no documents in Arxivar.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the documents list area.",
          "Expected Result": "A message indicating 'No documents available' or an empty list is displayed, and no errors occur."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration - Documents Module",
      "Preconditions": "User is logged in. The selected PoS has no documents in Arxivar.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of empty document lists from Arxivar.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no documents in Arxivar.",
      "Expected Result": "The system gracefully handles the absence of documents, displaying an appropriate message or empty list without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131"
    },
    {
      "Title": "Verify error handling when Arxivar service is unavailable during document acquisition",
      "ID": "TC-258",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for any PoS.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Simulate Arxivar service unavailability (e.g., disconnect network or stop Arxivar service).",
          "Expected Result": "Arxivar service is unavailable."
        },
        {
          "Step": 5,
          "Step Description": "Trigger the acquisition of documents from Arxivar.",
          "Expected Result": "System attempts to acquire documents and detects the service is unavailable."
        },
        {
          "Step": 6,
          "Step Description": "Observe the system response.",
          "Expected Result": "An appropriate error message is displayed to the user, and the system does not crash."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration - Documents Module",
      "Preconditions": "User is logged in. Arxivar service is made unavailable before document acquisition is triggered.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for Arxivar service unavailability during document acquisition.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; PoS; Arxivar service unavailable.",
      "Expected Result": "The system displays a clear error message when Arxivar is unavailable and does not crash or hang.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131"
    },
    {
      "Title": "Verify UI responsiveness and usability when displaying a large number of documents",
      "ID": "TC-259",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS screen for a PoS with a large number of documents in Arxivar (e.g., 100+).",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed, and the system begins loading the document list."
        },
        {
          "Step": 4,
          "Step Description": "Observe the loading time and UI responsiveness as the list of documents is displayed.",
          "Expected Result": "The document list loads within an acceptable time frame, and the UI remains responsive (e.g., supports scrolling, searching, or pagination if implemented)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Arxivar Integration - Documents Module",
      "Preconditions": "User is logged in. The selected PoS has a large number of documents in Arxivar.",
      "Execution Mode": "Manual",
      "Functionality": "UI performance and usability with large document lists from Arxivar.",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; PoS with 100+ documents in Arxivar.",
      "Expected Result": "The system efficiently displays a large list of documents without significant delay or UI issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131"
    },
    {
      "Title": "Successful Login with Valid Credentials",
      "ID": "TC-260",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application's login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid username and password into the respective fields.",
          "Expected Result": "Username and password are accepted as input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User is authenticated and redirected to the application's home/dashboard page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User account exists and is active. User is logged out.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password (e.g., user@example.com / Password123)",
      "Expected Result": "User is successfully logged in and redirected to the home/dashboard page.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOGIN-001"
    },
    {
      "Title": "Login Attempt with Invalid Credentials",
      "ID": "TC-261",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application's login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid username and/or password into the respective fields.",
          "Expected Result": "Username and password are accepted as input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "Authentication fails and an error message is displayed (e.g., 'Invalid username or password')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged out.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and/or password (e.g., user@example.com / WrongPass)",
      "Expected Result": "User is not logged in and receives an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOGIN-002"
    },
    {
      "Title": "Login Attempt with Empty Credentials",
      "ID": "TC-262",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application's login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Leave the username and password fields empty.",
          "Expected Result": "Fields remain empty."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "Authentication is not attempted and an error message is displayed (e.g., 'Username and password are required')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged out.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No input (empty fields)",
      "Expected Result": "User is not logged in and receives an error message indicating required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOGIN-003"
    },
    {
      "Title": "Successful Logout from Application",
      "ID": "TC-263",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is logged in and on the home/dashboard page."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Logout' button or link.",
          "Expected Result": "User is logged out and redirected to the login page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user session",
      "Expected Result": "User is logged out and redirected to the login page. Session is terminated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOGOUT-001"
    },
    {
      "Title": "Session Expiry and Automatic Logout",
      "ID": "TC-264",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is logged in and on the home/dashboard page."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for the session timeout period (e.g., 15 minutes).",
          "Expected Result": "Session remains active until timeout."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform any action after the session timeout period.",
          "Expected Result": "User is automatically logged out and redirected to the login page. A session expiry message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged in. Session timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user session",
      "Expected Result": "User is automatically logged out after session expiry and redirected to the login page.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOGOUT-002"
    },
    {
      "Title": "Login with Case Sensitivity Check",
      "ID": "TC-265",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application's login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid username with incorrect case (e.g., USER@EXAMPLE.COM) and the correct password.",
          "Expected Result": "Username is accepted as input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "Authentication fails and an error message is displayed if the system is case-sensitive."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged out. System is configured to treat usernames as case-sensitive.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username with incorrect case and correct password",
      "Expected Result": "User is not logged in if the username is case-sensitive. Appropriate error message is displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOGIN-004"
    },
    {
      "Title": "Full Access User - Access to All ZENIT Features",
      "ID": "TC-266",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'Full Access User' role.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation section.",
          "Expected Result": "User can view and consult all available data."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the data extraction section and attempt to extract data.",
          "Expected Result": "User can extract data without restrictions."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the massive import section and attempt to perform a massive import operation.",
          "Expected Result": "User can access and execute massive import functionality."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the threshold management section and attempt to manage thresholds.",
          "Expected Result": "User can fully manage all thresholds (add, edit, delete)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A user account with 'Full Access User' role exists and is assigned to at least one country.",
      "Execution Mode": "Manual",
      "Functionality": "Role-based access control for Full Access User",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with 'Full Access User' role; test data for import and threshold management.",
      "Expected Result": "Full Access User can access and perform all ZENIT features as per their role, with no access restrictions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-200"
    },
    {
      "Title": "Operator User - Access to Partial ZENIT Features",
      "ID": "TC-267",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'Operator User' role.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation section.",
          "Expected Result": "User can view and consult all available data."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the data extraction section and attempt to extract data.",
          "Expected Result": "User can extract data."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the threshold management section and attempt to manage thresholds.",
          "Expected Result": "User can partially manage thresholds (as defined in the requirements, e.g., edit but not delete)."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to access the massive import section.",
          "Expected Result": "User is denied access to massive import functionality."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A user account with 'Operator User' role exists and is assigned to at least one country.",
      "Execution Mode": "Manual",
      "Functionality": "Role-based access control for Operator User",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with 'Operator User' role; test data for threshold management.",
      "Expected Result": "Operator User can access consultation, extraction, and partial threshold management, but cannot access massive import.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-200"
    },
    {
      "Title": "Observer User - Access to Consultation and Data Extraction Only",
      "ID": "TC-268",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'Observer User' role.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation section.",
          "Expected Result": "User can view and consult all available data."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the data extraction section and attempt to extract data.",
          "Expected Result": "User can extract data."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to access the threshold management section.",
          "Expected Result": "User is denied access to threshold management functionality."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to access the massive import section.",
          "Expected Result": "User is denied access to massive import functionality."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A user account with 'Observer User' role exists and is assigned to at least one country.",
      "Execution Mode": "Manual",
      "Functionality": "Role-based access control for Observer User",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with 'Observer User' role.",
      "Expected Result": "Observer User can only consult and extract data; all other features are inaccessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-200"
    },
    {
      "Title": "IT Support - Read-Only Access to Log Information via Splunk",
      "ID": "TC-269",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'IT Support' role.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the log information section (Splunk integration).",
          "Expected Result": "User can view log information via Splunk."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access data consultation, extraction, massive import, or threshold management sections.",
          "Expected Result": "User is denied access to all features except log information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A user account with 'IT Support' role exists and is assigned to at least one country.",
      "Execution Mode": "Manual",
      "Functionality": "Role-based access control for IT Support",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with 'IT Support' role.",
      "Expected Result": "IT Support user can only view log information via Splunk; all other features are inaccessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-200"
    },
    {
      "Title": "User Role Assignment Per Country - Different Privileges in Different Countries",
      "ID": "TC-270",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user assigned 'Full Access User' role for Italy and 'Observer User' role for Albania.",
          "Expected Result": "User is successfully authenticated and prompted to select a country context if not already selected."
        },
        {
          "Step": 2,
          "Step Description": "Select 'Italy' as the country context.",
          "Expected Result": "User has access to all ZENIT features as a Full Access User."
        },
        {
          "Step": 3,
          "Step Description": "Switch to 'Albania' as the country context.",
          "Expected Result": "User's available features are restricted to those of an Observer User (consultation and extraction only)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A user account exists with 'Full Access User' role for Italy and 'Observer User' role for Albania.",
      "Execution Mode": "Manual",
      "Functionality": "Country-specific role assignment and access control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with multi-country role assignments.",
      "Expected Result": "User's available features change dynamically based on the selected country and assigned role.",
      "Country": "Italy, Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-200"
    },
    {
      "Title": "User Group Role Assignment - Access Based on Group Membership",
      "ID": "TC-271",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Assign a user to the 'Italy Credit Team' group with the 'Operator User' role.",
          "Expected Result": "User is successfully assigned to the group and role."
        },
        {
          "Step": 2,
          "Step Description": "Login as the user and navigate to the Dashboard.",
          "Expected Result": "User is authenticated and Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access features available to the 'Operator User' role.",
          "Expected Result": "User can access consultation, extraction, and partial threshold management."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to access features not available to the 'Operator User' role (e.g., massive import).",
          "Expected Result": "User is denied access to features not permitted by their group role."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A user account exists and is assigned to the 'Italy Credit Team' group with the 'Operator User' role.",
      "Execution Mode": "Manual",
      "Functionality": "Group-based role assignment and access control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials assigned to a group with a specific role.",
      "Expected Result": "User's access is determined by group membership and assigned role.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-200"
    },
    {
      "Title": "Negative Test - Unauthorized Access Attempt by Observer User",
      "ID": "TC-272",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'Observer User' role.",
          "Expected Result": "User is authenticated and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the massive import section via direct URL or navigation.",
          "Expected Result": "Access is denied and an appropriate error message is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access the threshold management section via direct URL or navigation.",
          "Expected Result": "Access is denied and an appropriate error message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A user account with 'Observer User' role exists.",
      "Execution Mode": "Manual",
      "Functionality": "Access control enforcement for unauthorized actions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with 'Observer User' role.",
      "Expected Result": "Observer User cannot access unauthorized features and receives clear error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-200"
    },
    {
      "Title": "Negative Test - IT Support User Attempts to Modify Logs",
      "ID": "TC-273",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'IT Support' role.",
          "Expected Result": "User is authenticated and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the log information section (Splunk integration).",
          "Expected Result": "User can view log information."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to modify or delete log entries.",
          "Expected Result": "Modification or deletion is not permitted; an error or warning is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A user account with 'IT Support' role exists.",
      "Execution Mode": "Manual",
      "Functionality": "Read-only enforcement for IT Support role",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with 'IT Support' role.",
      "Expected Result": "IT Support user cannot modify or delete logs; only read access is permitted.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-200"
    },
    {
      "Title": "Successful Login with MFA (Push Notification)",
      "ID": "TC-274",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page and click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid company username and password, then submit.",
          "Expected Result": "System accepts credentials and prompts for second factor authentication."
        },
        {
          "Step": 3,
          "Step Description": "Approve the login request via push notification on the Authenticator App.",
          "Expected Result": "System verifies the second factor and grants access to the ZENIT back-office, displaying the correct environment (e.g., TEST, PROD)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication / Login",
      "Preconditions": "User is registered in ZENIT, has MFA and Authenticator App configured, and is enabled for login.",
      "Execution Mode": "Manual",
      "Functionality": "Login with MFA (Push Notification)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password for a login-enabled user; Authenticator App installed and configured.",
      "Expected Result": "User is authenticated and redirected to the ZENIT home page with environment clearly displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201"
    },
    {
      "Title": "Successful Login with MFA (OTP Code)",
      "ID": "TC-275",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page and click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid company username and password, then submit.",
          "Expected Result": "System accepts credentials and prompts for second factor authentication."
        },
        {
          "Step": 3,
          "Step Description": "Open the Authenticator App on the mobile device and retrieve the current OTP code.",
          "Expected Result": "OTP code is visible in the Authenticator App."
        },
        {
          "Step": 4,
          "Step Description": "Enter the OTP code into the system interface and submit.",
          "Expected Result": "System verifies the OTP and grants access to the ZENIT back-office, displaying the correct environment."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication / Login",
      "Preconditions": "User is registered in ZENIT, has MFA and Authenticator App configured, and is enabled for login.",
      "Execution Mode": "Manual",
      "Functionality": "Login with MFA (OTP Code)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password for a login-enabled user; Authenticator App installed and configured; valid OTP code.",
      "Expected Result": "User is authenticated and redirected to the ZENIT home page with environment clearly displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201"
    },
    {
      "Title": "Login Attempt with Invalid Credentials",
      "ID": "TC-276",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page and click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid username or password and submit.",
          "Expected Result": "System displays an error message: 'Invalid credentials' and allows another attempt."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication / Login",
      "Preconditions": "User is registered in ZENIT and has MFA configured.",
      "Execution Mode": "Manual",
      "Functionality": "Login with invalid credentials",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username or password.",
      "Expected Result": "User is not authenticated and receives an 'Invalid credentials' error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201"
    },
    {
      "Title": "Login Attempt with Invalid Second Factor (OTP/Push)",
      "ID": "TC-277",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page and click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid company username and password, then submit.",
          "Expected Result": "System accepts credentials and prompts for second factor authentication."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid OTP code or reject the push notification in the Authenticator App.",
          "Expected Result": "System displays an error message indicating the second factor is invalid and denies access."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication / Login",
      "Preconditions": "User is registered in ZENIT, has MFA and Authenticator App configured, and is enabled for login.",
      "Execution Mode": "Manual",
      "Functionality": "Login with invalid second factor",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password; invalid OTP code or rejected push notification.",
      "Expected Result": "User is not authenticated and receives an error message for invalid second factor.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201"
    },
    {
      "Title": "Logout Functionality",
      "ID": "TC-278",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back-office successfully (as per TC-001 or TC-002).",
          "Expected Result": "User is authenticated and on the ZENIT home page."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Logout' or 'Exit' button in the application.",
          "Expected Result": "System closes the user session and redirects to the login page."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access a protected resource or page via browser back or direct URL.",
          "Expected Result": "System denies access and redirects to the login page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication / Logout",
      "Preconditions": "User is logged in to ZENIT back-office.",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid login session.",
      "Expected Result": "User session is terminated and access to protected resources is blocked until next login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201"
    },
    {
      "Title": "Environment Display on Login",
      "ID": "TC-279",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page in a specific environment (e.g., TEST, PROD, DEV, PREPROD).",
          "Expected Result": "Login page loads for the selected environment."
        },
        {
          "Step": 2,
          "Step Description": "Log in successfully using valid credentials and MFA.",
          "Expected Result": "After login, the system clearly displays the current environment (e.g., banner, label, or header)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Environment Display",
      "Preconditions": "User is registered in ZENIT, has MFA configured, and accesses a specific environment.",
      "Execution Mode": "Manual",
      "Functionality": "Environment indication",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid credentials; access to multiple environments.",
      "Expected Result": "User can unambiguously identify the current environment after login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201"
    },
    {
      "Title": "Audit Log for Login and Logout Events",
      "ID": "TC-280",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back-office successfully (as per TC-001 or TC-002).",
          "Expected Result": "User is authenticated and on the ZENIT home page."
        },
        {
          "Step": 2,
          "Step Description": "Log out of the application using the 'Logout' or 'Exit' button.",
          "Expected Result": "User session is terminated."
        },
        {
          "Step": 3,
          "Step Description": "Access the audit log (requires appropriate permissions or admin access).",
          "Expected Result": "Audit log contains entries for both login and logout events with correct timestamps and user identification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Audit Logging",
      "Preconditions": "User is registered in ZENIT, has MFA configured, and has access to audit logs (admin or auditor profile).",
      "Execution Mode": "Manual",
      "Functionality": "Audit logging for login/logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid credentials; access to audit logs.",
      "Expected Result": "Login and logout events are recorded in the audit log for traceability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201"
    },
    {
      "Title": "Automatic Logout After 5 Minutes of Inactivity",
      "ID": "TC-281",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Do not perform any interaction (mouse, keyboard, touch, etc.) for 5 minutes.",
          "Expected Result": "No activity is detected by the system during this period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system after 5 minutes of inactivity.",
          "Expected Result": "System displays a notification (e.g., pop-up) warning that the session is about to expire due to inactivity, possibly with a countdown timer."
        },
        {
          "Step": 4,
          "Step Description": "Do not interact with the system after the notification appears. Wait until the countdown timer expires.",
          "Expected Result": "System automatically logs out the user, logs the disconnect event, and redirects to the login screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Web Application",
      "Preconditions": "User is logged into the ZENIT system. No other active sessions for the same user.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management - Automatic Logout for Inactivity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user: testuser, password: Test@123)",
      "Expected Result": "User is automatically logged out after 5 minutes of inactivity, a disconnect event is logged, and the user is redirected to the login screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202"
    },
    {
      "Title": "Session Remains Active with Continuous User Activity",
      "ID": "TC-282",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform any user interaction (e.g., click, type, or move mouse) at least once every 4 minutes for a total duration of 10 minutes.",
          "Expected Result": "Each interaction is registered by the system as activity."
        },
        {
          "Step": 3,
          "Step Description": "Observe whether the system displays any inactivity notification or logs out the user during this period.",
          "Expected Result": "No inactivity notification is displayed and the user remains logged in throughout the 10-minute period."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Web Application",
      "Preconditions": "User is logged into the ZENIT system. No other active sessions for the same user.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management - Activity Monitoring",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user: testuser, password: Test@123)",
      "Expected Result": "User session remains active and uninterrupted as long as user activity is detected within the inactivity threshold.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202"
    },
    {
      "Title": "Session Continuation Upon User Response to Inactivity Notification",
      "ID": "TC-283",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Do not perform any interaction for 5 minutes.",
          "Expected Result": "No activity is detected by the system during this period."
        },
        {
          "Step": 3,
          "Step Description": "When the inactivity notification with countdown appears, click the 'Continue' button before the countdown expires.",
          "Expected Result": "System registers the interaction and cancels the pending automatic logout."
        },
        {
          "Step": 4,
          "Step Description": "Continue using the system normally for at least 2 more minutes.",
          "Expected Result": "User remains logged in and no further inactivity notification appears during this period."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Web Application",
      "Preconditions": "User is logged into the ZENIT system. No other active sessions for the same user.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management - Inactivity Notification and Session Extension",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user: testuser, password: Test@123)",
      "Expected Result": "User session continues without logout if the user responds to the inactivity notification before the countdown expires.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202"
    },
    {
      "Title": "System Logs Disconnect Event Upon Automatic Logout",
      "ID": "TC-284",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Do not perform any interaction for 5 minutes and allow the system to automatically log out the user after inactivity notification and countdown.",
          "Expected Result": "User is logged out and redirected to the login screen."
        },
        {
          "Step": 3,
          "Step Description": "Access the system logs as an administrator or via backend tools.",
          "Expected Result": "A disconnect event corresponding to the user's session logout due to inactivity is present in the system logs, including timestamp and user identifier."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Backend",
      "Preconditions": "User is logged into the ZENIT system. Access to system logs is available.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management - Logging of Automatic Logout Events",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user: testuser, password: Test@123); access to system logs.",
      "Expected Result": "A disconnect event is logged in the system logs when a user is automatically logged out due to inactivity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202"
    },
    {
      "Title": "Session Timeout Notification Includes Countdown Timer and Action Option",
      "ID": "TC-285",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Do not perform any interaction for 5 minutes.",
          "Expected Result": "No activity is detected by the system during this period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the inactivity notification when it appears.",
          "Expected Result": "Notification includes a visible countdown timer and a 'Continue' button or similar action to keep the session active."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Web Application",
      "Preconditions": "User is logged into the ZENIT system. No other active sessions for the same user.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management - Inactivity Notification UI",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user: testuser, password: Test@123)",
      "Expected Result": "Inactivity notification displays a countdown timer and an action option to continue the session.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202"
    },
    {
      "Title": "Verify login tracking records all required user information upon successful authentication",
      "ID": "TC-286",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the application dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Access the secure database or audit log as an authorized personnel.",
          "Expected Result": "A new login record is present for the authenticated user."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the login record contains the following fields: Username, Surname and First Name, Email address, Title, Department, Date of Last Login, Status of the Username, and Role.",
          "Expected Result": "All required fields are present and correctly populated in the login record."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication & Audit Logging",
      "Preconditions": "User account exists with all profile fields populated. Tester has access to the secure audit log database as authorized personnel.",
      "Execution Mode": "Manual",
      "Functionality": "Login tracking and audit logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; access to audit log database.",
      "Expected Result": "Upon successful login, all required user information is recorded in the secure database as per SOX compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203"
    },
    {
      "Title": "Verify login tracking does not record information for failed authentication attempts",
      "ID": "TC-287",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to login to the application with invalid credentials (e.g., incorrect password).",
          "Expected Result": "Authentication fails and user is not granted access."
        },
        {
          "Step": 2,
          "Step Description": "Access the secure database or audit log as an authorized personnel.",
          "Expected Result": "No new login record is created for the failed authentication attempt."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Authentication & Audit Logging",
      "Preconditions": "User account exists. Tester has access to the secure audit log database as authorized personnel.",
      "Execution Mode": "Manual",
      "Functionality": "Login tracking and audit logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid user credentials; access to audit log database.",
      "Expected Result": "No login record is created in the database for failed authentication attempts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203"
    },
    {
      "Title": "Verify only authorized personnel can access login tracking records",
      "ID": "TC-288",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application as a user without audit log access privileges.",
          "Expected Result": "User is authenticated and redirected to the application dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the secure database or audit log containing login tracking records.",
          "Expected Result": "Access is denied and an appropriate error message is displayed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication & Audit Logging",
      "Preconditions": "User account exists without audit log access privileges. Audit log database is present.",
      "Execution Mode": "Manual",
      "Functionality": "Audit log access control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials without audit log access; audit log database.",
      "Expected Result": "Only authorized personnel can access login tracking records; unauthorized users are denied access.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203"
    },
    {
      "Title": "Verify login tracking records are stored securely in the database",
      "ID": "TC-289",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid user credentials.",
          "Expected Result": "User is successfully authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Access the database storage configuration as an authorized administrator.",
          "Expected Result": "Database is configured with encryption and access controls as per security policy."
        },
        {
          "Step": 3,
          "Step Description": "Review the storage of login tracking records for evidence of encryption or secure storage mechanisms.",
          "Expected Result": "Login tracking records are stored securely and are not accessible in plain text to unauthorized users."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication & Audit Logging",
      "Preconditions": "User account exists. Tester has administrator access to database configuration.",
      "Execution Mode": "Manual",
      "Functionality": "Secure storage of audit logs",
      "Test Type": "vapt",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; access to database configuration.",
      "Expected Result": "Login tracking records are securely stored in the database with appropriate encryption and access controls.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203"
    },
    {
      "Title": "Verify login tracking records update 'Date of Last Login' field correctly on subsequent logins",
      "ID": "TC-290",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid user credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log and note the 'Date of Last Login' for the user.",
          "Expected Result": "The 'Date of Last Login' matches the current login timestamp."
        },
        {
          "Step": 3,
          "Step Description": "Logout and wait for a measurable time interval (e.g., 5 minutes).",
          "Expected Result": "User is logged out."
        },
        {
          "Step": 4,
          "Step Description": "Login again with the same user credentials.",
          "Expected Result": "User is authenticated."
        },
        {
          "Step": 5,
          "Step Description": "Access the audit log and verify the 'Date of Last Login' field is updated to the new login timestamp.",
          "Expected Result": "The 'Date of Last Login' reflects the most recent login time."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Authentication & Audit Logging",
      "Preconditions": "User account exists. Tester has access to audit log database.",
      "Execution Mode": "Manual",
      "Functionality": "Login tracking and audit logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; access to audit log database.",
      "Expected Result": "The 'Date of Last Login' field is updated correctly on each successful login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203"
    },
    {
      "Title": "Verify login tracking records correct 'Status of the Username' for active and inactive users",
      "ID": "TC-291",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with a user account that is active.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log and verify the 'Status of the Username' field for the login record.",
          "Expected Result": "The 'Status of the Username' is recorded as 'Active'."
        },
        {
          "Step": 3,
          "Step Description": "Deactivate the user account in the system.",
          "Expected Result": "User account status is set to 'Inactive'."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to login with the deactivated user account.",
          "Expected Result": "Authentication fails."
        },
        {
          "Step": 5,
          "Step Description": "Access the audit log and verify that no new login record is created for the deactivated account.",
          "Expected Result": "No login record is created for the failed login attempt with an inactive account."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Authentication & Audit Logging",
      "Preconditions": "User account exists and can be deactivated. Tester has access to audit log database.",
      "Execution Mode": "Manual",
      "Functionality": "Login tracking and audit logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Active and inactive user credentials; access to audit log database.",
      "Expected Result": "The 'Status of the Username' is correctly recorded for active users and no login record is created for inactive users.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203"
    },
    {
      "Title": "Verify Control Room Team Can Access Login Tracking Data in Splunk",
      "ID": "TC-292",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application using valid Control Room team credentials.",
          "Expected Result": "User is successfully authenticated and gains access to the Splunk dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard or section dedicated to ZENIT login tracking information.",
          "Expected Result": "The dashboard or section for ZENIT login tracking is visible and accessible."
        },
        {
          "Step": 3,
          "Step Description": "Search for recent login events recorded in the ZENIT system.",
          "Expected Result": "A list of recent login events from the ZENIT system is displayed, including relevant details (e.g., username, timestamp, IP address)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Data Access Tracking",
      "Preconditions": "User must be a member of the Control Room team with valid Splunk access. ZENIT system must be configured to send login tracking data to Splunk.",
      "Execution Mode": "Manual",
      "Functionality": "Visualization of login tracking data by authorized team",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room team credentials; ZENIT login events present in Splunk.",
      "Expected Result": "Control Room team member can view ZENIT login tracking information in Splunk without errors or access issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204"
    },
    {
      "Title": "Verify Unauthorized User Cannot Access ZENIT Login Tracking Data in Splunk",
      "ID": "TC-293",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application using credentials of a user not belonging to the Control Room team.",
          "Expected Result": "User is authenticated and gains access to Splunk with limited permissions."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to navigate to the ZENIT login tracking dashboard or section.",
          "Expected Result": "Access to the ZENIT login tracking dashboard or section is denied or not visible."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Data Access Tracking",
      "Preconditions": "User must not be a member of the Control Room team. ZENIT system must be configured to send login tracking data to Splunk.",
      "Execution Mode": "Manual",
      "Functionality": "Access control for login tracking data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Control Room user credentials; ZENIT login events present in Splunk.",
      "Expected Result": "Unauthorized users cannot access or view ZENIT login tracking information in Splunk.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204"
    },
    {
      "Title": "Verify ZENIT Login Tracking Data is Up-to-Date in Splunk",
      "ID": "TC-294",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with a test user account to generate a new login event.",
          "Expected Result": "Login event is successfully generated in the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Log in to Splunk as a Control Room team member.",
          "Expected Result": "User is authenticated and can access the Splunk dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the ZENIT login tracking dashboard and search for the test user's recent login event.",
          "Expected Result": "The new login event appears in the Splunk dashboard within an acceptable time frame (e.g., less than 5 minutes after the event)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Data Access Tracking",
      "Preconditions": "Test user account available in ZENIT. Control Room team member has Splunk access. ZENIT system is configured to send login events to Splunk.",
      "Execution Mode": "Manual",
      "Functionality": "Timeliness of login tracking data visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials for ZENIT; Control Room team credentials for Splunk.",
      "Expected Result": "ZENIT login tracking data is updated in Splunk in near real-time after login events occur.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204"
    },
    {
      "Title": "Verify Login Tracking Data Includes Required Fields",
      "ID": "TC-295",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Splunk as a Control Room team member.",
          "Expected Result": "User is authenticated and can access the Splunk dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the ZENIT login tracking dashboard and select a recent login event.",
          "Expected Result": "Details of the selected login event are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the login event includes all required fields (e.g., username, timestamp, IP address, login status).",
          "Expected Result": "All required fields are present and populated with correct values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Data Access Tracking",
      "Preconditions": "Control Room team member has Splunk access. ZENIT system is configured to send login events with all required fields.",
      "Execution Mode": "Manual",
      "Functionality": "Completeness of login tracking data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room team credentials; ZENIT login events with all required fields.",
      "Expected Result": "Each login event in Splunk contains all required fields as per specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204"
    },
    {
      "Title": "Verify Error Handling When ZENIT Login Tracking Data is Unavailable in Splunk",
      "ID": "TC-296",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where ZENIT login tracking data is not sent to Splunk (e.g., disconnect data source or stop data feed).",
          "Expected Result": "ZENIT login tracking data is not available in Splunk."
        },
        {
          "Step": 2,
          "Step Description": "Log in to Splunk as a Control Room team member and navigate to the ZENIT login tracking dashboard.",
          "Expected Result": "A clear error message or notification is displayed indicating that login tracking data is currently unavailable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Data Access Tracking",
      "Preconditions": "Control Room team member has Splunk access. Ability to simulate data unavailability in test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing login tracking data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room team credentials; test environment where ZENIT data feed can be interrupted.",
      "Expected Result": "System displays a clear error or notification when ZENIT login tracking data is unavailable in Splunk.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204"
    },
    {
      "Title": "Simultaneous Data Update by Multiple Users",
      "ID": "TC-297",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the shared data record (e.g., customer profile).",
          "Expected Result": "User A successfully accesses the data record."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same data record as User A.",
          "Expected Result": "User B successfully accesses the same data record."
        },
        {
          "Step": 3,
          "Step Description": "User A edits a field (e.g., phone number) and saves the changes.",
          "Expected Result": "System accepts and saves User A's changes."
        },
        {
          "Step": 4,
          "Step Description": "User B, without refreshing, edits a different field (e.g., email address) and saves the changes.",
          "Expected Result": "System accepts User B's changes without overwriting User A's update. Both changes are reflected in the record."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Data Management Module",
      "Preconditions": "Both User A and User B have valid credentials and access rights. The shared data record exists.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency management for simultaneous data updates",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; existing data record with editable fields.",
      "Expected Result": "System maintains data consistency and integrity, reflecting both users' changes without data loss or conflict.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent updates to different fields of the same record.",
      "_polarion": "XPS-ZENIT-210"
    },
    {
      "Title": "Conflict Detection on Simultaneous Edit of Same Field",
      "ID": "TC-298",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and opens a shared data record for editing.",
          "Expected Result": "User A accesses the data record in edit mode."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and opens the same data record for editing.",
          "Expected Result": "User B accesses the data record in edit mode."
        },
        {
          "Step": 3,
          "Step Description": "User A changes the value of a specific field (e.g., address) and saves the record.",
          "Expected Result": "System saves User A's changes successfully."
        },
        {
          "Step": 4,
          "Step Description": "User B, without refreshing, changes the same field to a different value and attempts to save.",
          "Expected Result": "System detects the conflict and prompts User B with a conflict resolution message (e.g., 'This record has been modified by another user. Please review the latest changes.')."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Data Management Module",
      "Preconditions": "Both User A and User B have valid credentials and access rights. The shared data record exists.",
      "Execution Mode": "Manual",
      "Functionality": "Conflict detection and resolution for concurrent edits",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; existing data record with editable fields.",
      "Expected Result": "System detects concurrent modification and prevents silent overwrites, prompting the user to resolve the conflict.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers conflict detection for simultaneous edits to the same field.",
      "_polarion": "XPS-ZENIT-210"
    },
    {
      "Title": "Simultaneous Record Creation by Multiple Users",
      "ID": "TC-299",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and initiates the creation of a new record with unique identifier 'X'.",
          "Expected Result": "User A is able to fill in the new record form."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and simultaneously initiates the creation of a new record with the same unique identifier 'X'.",
          "Expected Result": "User B is able to fill in the new record form."
        },
        {
          "Step": 3,
          "Step Description": "User A submits the new record creation form.",
          "Expected Result": "System creates the new record with identifier 'X' for User A."
        },
        {
          "Step": 4,
          "Step Description": "User B submits the new record creation form with the same identifier 'X'.",
          "Expected Result": "System rejects User B's submission and displays an error message indicating that the identifier 'X' already exists."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Data Management Module",
      "Preconditions": "Both User A and User B have valid credentials and access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency management for record creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; unique identifier 'X'.",
      "Expected Result": "System prevents duplicate record creation and maintains data integrity.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent creation of records with unique constraints.",
      "_polarion": "XPS-ZENIT-210"
    },
    {
      "Title": "Simultaneous Deletion and Update of the Same Record",
      "ID": "TC-300",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and opens a shared data record for editing.",
          "Expected Result": "User A accesses the data record in edit mode."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and opens the same data record for deletion.",
          "Expected Result": "User B accesses the data record and selects the delete option."
        },
        {
          "Step": 3,
          "Step Description": "User B deletes the record and confirms the deletion.",
          "Expected Result": "System deletes the record and removes it from the database."
        },
        {
          "Step": 4,
          "Step Description": "User A, without refreshing, attempts to save changes to the now-deleted record.",
          "Expected Result": "System displays an error message to User A indicating that the record no longer exists and cannot be updated."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Data Management Module",
      "Preconditions": "Both User A and User B have valid credentials and access rights. The shared data record exists.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency management for simultaneous update and deletion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; existing data record.",
      "Expected Result": "System prevents updates to deleted records and maintains data consistency.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent update and deletion scenarios.",
      "_polarion": "XPS-ZENIT-210"
    },
    {
      "Title": "Concurrent Read Operations by Multiple Users",
      "ID": "TC-301",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to a shared data record.",
          "Expected Result": "User A successfully accesses and views the data record."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same data record at the same time.",
          "Expected Result": "User B successfully accesses and views the same data record."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Low",
      "Test Stage": "test",
      "Reference System": "Data Management Module",
      "Preconditions": "Both User A and User B have valid credentials and access rights. The shared data record exists.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrent read access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; existing data record.",
      "Expected Result": "System allows multiple users to read the same data simultaneously without errors or data inconsistency.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent read-only access.",
      "_polarion": "XPS-ZENIT-210"
    },
    {
      "Title": "Access Settings Menu from Main Interface",
      "ID": "TC-302",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the BO ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and main interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate and click on the 'Settings' icon or menu option from the main interface.",
          "Expected Result": "Settings menu is displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Settings Menu",
      "Preconditions": "User is authenticated and on the main interface of BO ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "Access to Settings Menu",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials",
      "Expected Result": "Settings menu is accessible from the main interface.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-211"
    },
    {
      "Title": "Verify Language Selection Displays Only Italian in Phase 1",
      "ID": "TC-303",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the language selection option within the menu.",
          "Expected Result": "Language selection dropdown or list is visible."
        },
        {
          "Step": 3,
          "Step Description": "Click on the language selection control to view available options.",
          "Expected Result": "Only 'Italian' is available for selection."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Language Selection",
      "Preconditions": "User is logged in and has accessed the Settings menu.",
      "Execution Mode": "Manual",
      "Functionality": "Language Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Only 'Italian' is available for language selection in Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-211"
    },
    {
      "Title": "Verify Date and Amount Formats Change to Italian Locale",
      "ID": "TC-304",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu and ensure 'Italian' is selected as the language.",
          "Expected Result": "'Italian' is selected as the current language."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a section of the application where dates and amounts are displayed (e.g., transaction history).",
          "Expected Result": "Dates and amounts are visible on the screen."
        },
        {
          "Step": 3,
          "Step Description": "Observe the format of displayed dates and amounts.",
          "Expected Result": "Dates are in dd/mm/yyyy format and amounts are in 0.000,00 € format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Language Selection - Locale Formats",
      "Preconditions": "User is logged in, 'Italian' is selected, and there is data with dates and amounts to display.",
      "Execution Mode": "Manual",
      "Functionality": "Locale Formatting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data with dates and amounts",
      "Expected Result": "Dates and amounts are displayed in Italian locale formats when 'Italian' is selected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-211"
    },
    {
      "Title": "Change Theme Style to Dark and Verify UI Update",
      "ID": "TC-305",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the theme style option (light/dark).",
          "Expected Result": "Theme style selection control is visible."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Dark' theme style and confirm the change if prompted.",
          "Expected Result": "Application UI updates to dark theme immediately or after confirmation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Theme Style Selection",
      "Preconditions": "User is logged in and has accessed the Settings menu.",
      "Execution Mode": "Manual",
      "Functionality": "Theme Style Change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Application UI switches to dark theme upon selection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-211"
    },
    {
      "Title": "Change Font Size to Large and Verify UI Update",
      "ID": "TC-306",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the font size option (normal/large).",
          "Expected Result": "Font size selection control is visible."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Large' font size and confirm the change if prompted.",
          "Expected Result": "Application UI updates to use larger fonts immediately or after confirmation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Font Size Selection",
      "Preconditions": "User is logged in and has accessed the Settings menu.",
      "Execution Mode": "Manual",
      "Functionality": "Font Size Change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Application UI switches to large font size upon selection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-211"
    },
    {
      "Title": "Verify Settings Persist After Logout and Login",
      "ID": "TC-307",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Settings menu.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Change theme style to 'Dark' and font size to 'Large'.",
          "Expected Result": "UI updates to dark theme and large font size."
        },
        {
          "Step": 3,
          "Step Description": "Log out of the application.",
          "Expected Result": "User is logged out successfully."
        },
        {
          "Step": 4,
          "Step Description": "Log in again with the same user credentials.",
          "Expected Result": "User is logged in and main interface is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the theme style is still 'Dark' and font size is still 'Large'.",
          "Expected Result": "User interface retains dark theme and large font size settings."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Settings Persistence",
      "Preconditions": "User account exists and can log in/out.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Persistence",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials",
      "Expected Result": "User settings for theme and font size persist after logout and login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-211"
    },
    {
      "Title": "Attempt to Select Unavailable Language (Negative Test)",
      "ID": "TC-308",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to select a language other than 'Italian' (e.g., check if English is selectable).",
          "Expected Result": "No other languages are available for selection; only 'Italian' can be selected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Language Selection - Negative",
      "Preconditions": "User is logged in and has accessed the Settings menu.",
      "Execution Mode": "Manual",
      "Functionality": "Language Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "User cannot select any language other than Italian in Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-211"
    },
    {
      "Title": "Verify UI Responsiveness After Changing Theme and Font Size",
      "ID": "TC-309",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Change theme style to 'Dark' and font size to 'Large'.",
          "Expected Result": "UI updates to dark theme and large font size."
        },
        {
          "Step": 3,
          "Step Description": "Navigate through various application screens (e.g., dashboard, reports, settings).",
          "Expected Result": "All screens display correctly with dark theme and large font size, with no layout or readability issues."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "UI Responsiveness",
      "Preconditions": "User is logged in and has accessed the Settings menu.",
      "Execution Mode": "Manual",
      "Functionality": "UI Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "All application screens remain usable and visually correct after changing theme and font size.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-211"
    },
    {
      "Title": "Verify Log Entry Creation for User Login Event",
      "ID": "TC-310",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the application is running and the logging/auditing feature is enabled.",
          "Expected Result": "Application is operational and logging/auditing is active."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the application using valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 3,
          "Step Description": "Access the log/audit records as an administrator or authorized user.",
          "Expected Result": "Log/audit records are accessible."
        },
        {
          "Step": 4,
          "Step Description": "Search for the log entry corresponding to the recent login event.",
          "Expected Result": "A log entry exists for the login event, containing correct timestamp, user ID, and event type."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Log/Audit Module",
      "Preconditions": "Logging/auditing feature is enabled. User account exists. Tester has access to log/audit records.",
      "Execution Mode": "Manual",
      "Functionality": "User authentication logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; admin access to logs.",
      "Expected Result": "A log entry is created for each successful user login, containing accurate details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOG-001"
    },
    {
      "Title": "Verify Log Entry for Failed Login Attempt",
      "ID": "TC-311",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the application is running and logging/auditing is enabled.",
          "Expected Result": "Application is operational and logging/auditing is active."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to log in with an invalid password for a valid user account.",
          "Expected Result": "Login attempt fails with an error message."
        },
        {
          "Step": 3,
          "Step Description": "Access the log/audit records as an administrator or authorized user.",
          "Expected Result": "Log/audit records are accessible."
        },
        {
          "Step": 4,
          "Step Description": "Search for the log entry corresponding to the failed login attempt.",
          "Expected Result": "A log entry exists for the failed login attempt, containing correct timestamp, user ID, event type, and failure reason."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Log/Audit Module",
      "Preconditions": "Logging/auditing feature is enabled. User account exists. Tester has access to log/audit records.",
      "Execution Mode": "Manual",
      "Functionality": "Authentication failure logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user account; invalid password; admin access to logs.",
      "Expected Result": "A log entry is created for each failed login attempt, including failure reason and details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOG-002"
    },
    {
      "Title": "Verify Log Entry for Data Modification Event",
      "ID": "TC-312",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the application is running and logging/auditing is enabled.",
          "Expected Result": "Application is operational and logging/auditing is active."
        },
        {
          "Step": 2,
          "Step Description": "Log in as a user with permission to modify data.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 3,
          "Step Description": "Modify a record (e.g., update user profile information).",
          "Expected Result": "Record is updated successfully."
        },
        {
          "Step": 4,
          "Step Description": "Access the log/audit records as an administrator or authorized user.",
          "Expected Result": "Log/audit records are accessible."
        },
        {
          "Step": 5,
          "Step Description": "Search for the log entry corresponding to the data modification event.",
          "Expected Result": "A log entry exists for the data modification, containing correct timestamp, user ID, event type, and details of the modification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Log/Audit Module",
      "Preconditions": "Logging/auditing feature is enabled. User account with modification rights exists. Tester has access to log/audit records.",
      "Execution Mode": "Manual",
      "Functionality": "Data modification logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User with modification rights; admin access to logs.",
      "Expected Result": "A log entry is created for each data modification, including user, timestamp, and change details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOG-003"
    },
    {
      "Title": "Verify Log Entry Integrity and Tamper Resistance",
      "ID": "TC-313",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the application is running and logging/auditing is enabled.",
          "Expected Result": "Application is operational and logging/auditing is active."
        },
        {
          "Step": 2,
          "Step Description": "Perform an auditable action (e.g., login, data modification).",
          "Expected Result": "Action is completed and logged."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to modify or delete the corresponding log entry using unauthorized access or direct database manipulation.",
          "Expected Result": "Modification or deletion attempt is blocked or detected."
        },
        {
          "Step": 4,
          "Step Description": "Access the log/audit records as an administrator or authorized user.",
          "Expected Result": "Log/audit records remain intact and unaltered, or any tampering attempt is logged."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Log/Audit Module",
      "Preconditions": "Logging/auditing feature is enabled. Tester has access to log/audit records and database.",
      "Execution Mode": "Manual",
      "Functionality": "Log integrity and security",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Auditable action; admin access to logs; database access for tampering attempt.",
      "Expected Result": "Log entries cannot be modified or deleted without detection; tampering attempts are logged.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOG-004"
    },
    {
      "Title": "Verify Log Retention and Purge Policy Enforcement",
      "ID": "TC-314",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the application is running and logging/auditing is enabled.",
          "Expected Result": "Application is operational and logging/auditing is active."
        },
        {
          "Step": 2,
          "Step Description": "Generate log entries by performing various actions (e.g., login, data modification).",
          "Expected Result": "Log entries are created for each action."
        },
        {
          "Step": 3,
          "Step Description": "Simulate the passage of time beyond the configured log retention period (e.g., by adjusting system date/time or using test utilities).",
          "Expected Result": "System time reflects the end of the retention period."
        },
        {
          "Step": 4,
          "Step Description": "Access the log/audit records as an administrator or authorized user.",
          "Expected Result": "Log/audit records are accessible."
        },
        {
          "Step": 5,
          "Step Description": "Verify that log entries older than the retention period are purged according to policy.",
          "Expected Result": "Log entries older than the retention period are no longer present; recent entries remain."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Log/Audit Module",
      "Preconditions": "Logging/auditing feature is enabled. Log retention policy is configured. Tester has access to log/audit records.",
      "Execution Mode": "Manual",
      "Functionality": "Log retention and purge",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Actions to generate logs; admin access to logs; ability to simulate time passage.",
      "Expected Result": "Log entries are retained and purged according to the configured retention policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOG-005"
    },
    {
      "Title": "Verify Log Entry for Unauthorized Access Attempt",
      "ID": "TC-315",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the application is running and logging/auditing is enabled.",
          "Expected Result": "Application is operational and logging/auditing is active."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access a restricted resource with a user account lacking necessary permissions.",
          "Expected Result": "Access is denied with an appropriate error message."
        },
        {
          "Step": 3,
          "Step Description": "Access the log/audit records as an administrator or authorized user.",
          "Expected Result": "Log/audit records are accessible."
        },
        {
          "Step": 4,
          "Step Description": "Search for the log entry corresponding to the unauthorized access attempt.",
          "Expected Result": "A log entry exists for the unauthorized access attempt, containing correct timestamp, user ID, event type, and resource details."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Log/Audit Module",
      "Preconditions": "Logging/auditing feature is enabled. User account with limited permissions exists. Tester has access to log/audit records.",
      "Execution Mode": "Manual",
      "Functionality": "Unauthorized access logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User with limited permissions; admin access to logs.",
      "Expected Result": "A log entry is created for each unauthorized access attempt, including user, timestamp, and resource details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-LOG-006"
    },
    {
      "Title": "Verify Log Entry Format for Modification Operations",
      "ID": "TC-316",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a modification operation on the database (e.g., update a user record) as an authorized user.",
          "Expected Result": "A log entry is generated for the modification operation."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the generated log entry from the log storage system.",
          "Expected Result": "The log entry is accessible for review by authorized personnel."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the log entry description matches the required template: #*<applicationName>*# #AUDIT# #*<actionCategory>*# User '<username>' having role '<userRole>' has performed the following action: <actionDescription>",
          "Expected Result": "The log entry description strictly follows the specified template with correct values for applicationName, actionCategory, username, userRole, and actionDescription."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operations Tracking / Logging",
      "Preconditions": "User with modification privileges exists. Logging system is enabled and configured as per company standards.",
      "Execution Mode": "Manual",
      "Functionality": "Log traceability for modification operations",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample modification operation data",
      "Expected Result": "All modification operations generate log entries with descriptions that strictly adhere to the required template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-220"
    },
    {
      "Title": "Verify Log Entry Format for Validation Actions",
      "ID": "TC-317",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a validation action in the application as an authorized user (e.g., validate a transaction).",
          "Expected Result": "A log entry is generated for the validation action."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the generated log entry from the log storage system.",
          "Expected Result": "The log entry is accessible for review by authorized personnel."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the log entry description matches the required template: #*<applicationName>*# #AUDIT# #*<actionCategory>*# User '<username>' having role '<userRole>' has performed the following action: <actionDescription>",
          "Expected Result": "The log entry description strictly follows the specified template with correct values for applicationName, actionCategory, username, userRole, and actionDescription."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Operations Tracking / Logging",
      "Preconditions": "User with validation privileges exists. Logging system is enabled and configured as per company standards.",
      "Execution Mode": "Manual",
      "Functionality": "Log traceability for validation actions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample validation action data",
      "Expected Result": "All validation actions generate log entries with descriptions that strictly adhere to the required template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-220"
    },
    {
      "Title": "Verify Extended Retention Policy for Audit Logs",
      "ID": "TC-318",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a modification or validation operation that triggers an audit log entry.",
          "Expected Result": "An audit log entry is generated and stored."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the standard log retention period to elapse (simulate or check system configuration).",
          "Expected Result": "Standard logs are purged according to the retention policy."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the audit log entry generated in Step 1 is still retained beyond the standard log retention period.",
          "Expected Result": "Audit log entry is retained as per the extended retention policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operations Tracking / Logging",
      "Preconditions": "Log retention policies are configured. Audit log retention is set longer than standard logs.",
      "Execution Mode": "Manual",
      "Functionality": "Audit log retention management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample operation data, retention policy configuration",
      "Expected Result": "Audit logs are retained for a longer period than standard logs, as per configuration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-220"
    },
    {
      "Title": "Verify Immutability of Audit Logs",
      "ID": "TC-319",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform an operation that generates an audit log entry.",
          "Expected Result": "Audit log entry is generated and stored."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to modify the generated audit log entry using administrative or direct database access.",
          "Expected Result": "System prevents modification of the audit log entry; an error or access denied message is returned."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to delete the generated audit log entry using administrative or direct database access.",
          "Expected Result": "System prevents deletion of the audit log entry; an error or access denied message is returned."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operations Tracking / Logging",
      "Preconditions": "Audit log system is enabled. User with administrative privileges is available for negative testing.",
      "Execution Mode": "Manual",
      "Functionality": "Audit log immutability",
      "Test Type": "vapt",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample operation data, admin credentials",
      "Expected Result": "Audit logs are immutable and cannot be modified or deleted once registered.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-220"
    },
    {
      "Title": "Verify Access Control for Audit Logs (Safety)",
      "ID": "TC-320",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access audit logs as an unauthorized user (e.g., user without audit log viewing privileges).",
          "Expected Result": "Access to audit logs is denied; an error or access denied message is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access audit logs as an authorized user (if applicable at this phase).",
          "Expected Result": "Access to audit logs is not available to any user at this phase, as per requirement."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operations Tracking / Logging",
      "Preconditions": "Audit log system is enabled. Users with and without audit log access privileges exist.",
      "Execution Mode": "Manual",
      "Functionality": "Audit log access control",
      "Test Type": "vapt",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with and without audit log access privileges",
      "Expected Result": "Audit logs are protected from unauthorized access and are not accessible to any user at this phase.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-220"
    },
    {
      "Title": "Verify No Visibility of Audit Logs to Authorized Users (Accessibility)",
      "ID": "TC-321",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user with the highest possible privileges.",
          "Expected Result": "User is authenticated and has access to all permitted application features."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to view or retrieve audit logs through the application interface or API.",
          "Expected Result": "Audit logs are not visible or accessible to the user; no interface or API endpoint is available for audit log retrieval."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Operations Tracking / Logging",
      "Preconditions": "Audit log system is enabled. User with highest privileges exists.",
      "Execution Mode": "Manual",
      "Functionality": "Audit log accessibility restriction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin user credentials",
      "Expected Result": "Audit logs are not visible or accessible to any user at this phase, including authorized users.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-220"
    },
    {
      "Title": "Verify Dashboard Layout and Data Aggregation per Mockup Specification",
      "ID": "TC-322",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard - Credit Management module with a valid user account.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard interface."
        },
        {
          "Step": 2,
          "Step Description": "Observe the layout and arrangement of dashboard components as displayed.",
          "Expected Result": "Dashboard layout matches the ZENIT - Dashboard Mockup specification for the user's access profile."
        },
        {
          "Step": 3,
          "Step Description": "Review the data aggregation and presentation logic for each dashboard component.",
          "Expected Result": "Data is aggregated and displayed according to the business rules defined in the mockup documentation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "User has valid credentials and appropriate access profile. ZENIT - Dashboard Mockup is available for reference.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard layout and data aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with different access profiles; ZENIT - Dashboard Mockup documentation.",
      "Expected Result": "Dashboard layout and data aggregation logic conform to the ZENIT - Dashboard Mockup for the user's access profile.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only layout and aggregation logic as per mockup; does not verify export functionality.",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Dashboard Layout Adjusts Based on Access Profile",
      "ID": "TC-323",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard - Credit Management module with a user account assigned to Access Profile A.",
          "Expected Result": "Dashboard displays components and data as defined for Access Profile A in the mockup."
        },
        {
          "Step": 2,
          "Step Description": "Log out and log in with a user account assigned to Access Profile B.",
          "Expected Result": "Dashboard displays components and data as defined for Access Profile B, which may differ from Profile A."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "Multiple user accounts exist with different access profiles. ZENIT - Dashboard Mockup defines component visibility per profile.",
      "Execution Mode": "Manual",
      "Functionality": "Access profile-based dashboard modularization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials for Access Profile A and B; mockup documentation.",
      "Expected Result": "Dashboard modularizes and displays components according to the logged-in user's access profile.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on access profile-driven modularization; does not cover data export.",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Excel Export Functionality for Dashboard Data",
      "ID": "TC-324",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard - Credit Management module with a valid user account.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate and click the 'Export to Excel' button or link on the dashboard interface.",
          "Expected Result": "System initiates the export process and prompts to download an Excel file."
        },
        {
          "Step": 3,
          "Step Description": "Download and open the exported Excel file.",
          "Expected Result": "Excel file opens successfully and contains dashboard data in the format specified by the documentation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "User is logged in and dashboard data is available. Export functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Excel export of dashboard data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; sample dashboard data; export format documentation.",
      "Expected Result": "Dashboard data is exported to Excel in the correct format as per specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard export scenario; does not test edge cases or error handling.",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Exported Excel File Naming Convention",
      "ID": "TC-325",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard - Credit Management module and export dashboard data to Excel.",
          "Expected Result": "System generates and downloads an Excel file."
        },
        {
          "Step": 2,
          "Step Description": "Check the name of the downloaded Excel file.",
          "Expected Result": "File name matches the naming convention described in the documentation (e.g., includes date, dashboard name, etc.)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "Export functionality is available. Naming convention is defined in documentation.",
      "Execution Mode": "Manual",
      "Functionality": "Excel export file naming",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; documentation on file naming convention.",
      "Expected Result": "Exported Excel file name follows the documented naming convention.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify file content, only naming.",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Excel Export Handles Large Data Sets",
      "ID": "TC-326",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate the dashboard with a large volume of data (e.g., 10,000+ records).",
          "Expected Result": "Dashboard loads and displays all records without error."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the Excel export process from the dashboard.",
          "Expected Result": "System processes the export and prompts to download the Excel file."
        },
        {
          "Step": 3,
          "Step Description": "Download and open the exported Excel file.",
          "Expected Result": "Excel file contains all records and is formatted correctly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "Test environment supports large data sets. Export functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Excel export with large data sets",
      "Test Type": "performance",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Large dashboard data set (10,000+ records).",
      "Expected Result": "Excel export completes successfully and includes all data without truncation or errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on performance and completeness for large data sets.",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Error Handling When Excel Export Fails",
      "ID": "TC-327",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a backend failure or disconnect the network before initiating Excel export.",
          "Expected Result": "Dashboard remains accessible but export is not initiated."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to export dashboard data to Excel.",
          "Expected Result": "System displays an appropriate error message indicating the export failed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "Ability to simulate backend failure or network disconnect. Export functionality is available.",
      "Execution Mode": "Manual",
      "Functionality": "Excel export error handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials; method to simulate backend failure.",
      "Expected Result": "User is informed of the export failure with a clear error message; no corrupted or partial file is downloaded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for export functionality.",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Search PoS with All Valid Filters - Positive Scenario",
      "ID": "TC-328",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT as a valid user with any profile.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function in the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed with all search filters visible."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values in all available filters (e.g., select a Zone from the list, enter Rice=123, IdRice=456789, valid 11-digit Vat Number, valid 16-char Tax Code, valid Company Name, valid Denomination, select Channel 1 and Channel 2, select Cluster, enter valid City, check 'Closed PoS' if desired).",
          "Expected Result": "All input fields accept the entered values without error."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System performs the search and displays a table/list of PoS matching the criteria."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the results table displays columns for IdRice, ZonaRice, Channel 1, Channel 2, Cluster, Status, Denomination, Company Name, City, Vat Number, Holder Tax Code, Scoring, RedList, and KA. Each row represents a single PoS.",
          "Expected Result": "All expected columns are present and populated with correct data for each PoS found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and has access to the 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Search with all filters",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample valid data for all filters.",
      "Expected Result": "System displays a correctly populated table of PoS matching all entered search criteria, with all required columns present.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Search PoS with No Results Found",
      "ID": "TC-329",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT as a valid user.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function.",
          "Expected Result": "Search interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter filter values that do not match any PoS (e.g., IdRice=9999999, Company Name='NonExistentCompany').",
          "Expected Result": "Fields accept the input."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System performs the search."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system response.",
          "Expected Result": "A notification is displayed indicating that no results were found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and on the 'Search PoS' page.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Search - No results scenario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; filter values guaranteed not to match any PoS.",
      "Expected Result": "System displays a clear notification that no PoS were found matching the search criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Input Validation - Invalid Vat Number (Too Short)",
      "ID": "TC-330",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT and access the 'Search PoS' function.",
          "Expected Result": "User is on the 'Search PoS' page."
        },
        {
          "Step": 2,
          "Step Description": "Enter a Vat Number with fewer than 11 digits (e.g., '123456789').",
          "Expected Result": "Field accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System detects the invalid Vat Number and displays an error message indicating the input is incorrect."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and on the 'Search PoS' page.",
      "Execution Mode": "Manual",
      "Functionality": "Input validation for Vat Number",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; invalid Vat Number (less than 11 digits).",
      "Expected Result": "System prevents the search and displays a clear error message for the invalid Vat Number input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Reset Search Filters Functionality",
      "ID": "TC-331",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT and access the 'Search PoS' function.",
          "Expected Result": "User is on the 'Search PoS' page."
        },
        {
          "Step": 2,
          "Step Description": "Enter values in multiple search filters (e.g., select a Zone, enter a Company Name, select Channel 1).",
          "Expected Result": "Fields are populated with the entered values."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'RESET' button.",
          "Expected Result": "All search filters are cleared and reset to their default state."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and on the 'Search PoS' page.",
      "Execution Mode": "Manual",
      "Functionality": "Reset search filters",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample filter values.",
      "Expected Result": "All search fields are cleared and ready for a new search after clicking 'RESET'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Select and View Single PoS Details from Search Results",
      "ID": "TC-332",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT and perform a search that returns at least one PoS.",
          "Expected Result": "A list/table of PoS is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click the edit icon next to a PoS in the results table.",
          "Expected Result": "System navigates to the 'Single PoS' screen for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the header displays key PoS information (IdRice, ZonaRice, Channel 1, Channel 2, Cluster, Status, Nr AWP, Nr VLT, Coin in medio YTD, Type of Collection AWP, Denomination, Company Name, City, Vat Number, Scoring, KA, RedList, Status Collection, Credits, Guarantees, Upload Coin).",
          "Expected Result": "All specified fields are present and populated with correct data in the header."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the default tab 'Credit Management' is visible and loaded.",
          "Expected Result": "Credit Management tab is displayed with relevant data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and has performed a search with at least one result.",
      "Execution Mode": "Manual",
      "Functionality": "View Single PoS details",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; search criteria that return at least one PoS.",
      "Expected Result": "System displays the Single PoS screen with all required header fields and the default tab loaded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Manual Refresh of Single PoS Data",
      "ID": "TC-333",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT and perform a search to display PoS results.",
          "Expected Result": "PoS results are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a PoS to view its details (navigate to Single PoS screen).",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'REFRESH' button on the Single PoS screen.",
          "Expected Result": "System updates and refreshes the displayed PoS data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and viewing a Single PoS screen.",
      "Execution Mode": "Manual",
      "Functionality": "Manual refresh of PoS data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one PoS available for selection.",
      "Expected Result": "PoS data is refreshed and updated on the Single PoS screen after clicking 'REFRESH'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Input Validation - Invalid Tax Code (Wrong Length)",
      "ID": "TC-334",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT and access the 'Search PoS' function.",
          "Expected Result": "User is on the 'Search PoS' page."
        },
        {
          "Step": 2,
          "Step Description": "Enter a Tax Code with fewer than 16 characters (e.g., 'ABC123').",
          "Expected Result": "Field accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System detects the invalid Tax Code and displays an error message indicating the input is incorrect."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and on the 'Search PoS' page.",
      "Execution Mode": "Manual",
      "Functionality": "Input validation for Tax Code",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; invalid Tax Code (less than 16 characters).",
      "Expected Result": "System prevents the search and displays a clear error message for the invalid Tax Code input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Input Validation - Out-of-Range Numeric Fields (Rice, IdRice)",
      "ID": "TC-335",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT and access the 'Search PoS' function.",
          "Expected Result": "User is on the 'Search PoS' page."
        },
        {
          "Step": 2,
          "Step Description": "Enter a value outside the valid range for Rice (e.g., 0 or 10000).",
          "Expected Result": "Field accepts the input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System detects the out-of-range value and displays an error message."
        },
        {
          "Step": 4,
          "Step Description": "Repeat steps 2-3 for IdRice with a value outside 1-9999999 (e.g., 0 or 10000000).",
          "Expected Result": "System detects the out-of-range value and displays an error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and on the 'Search PoS' page.",
      "Execution Mode": "Manual",
      "Functionality": "Input validation for numeric fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; out-of-range values for Rice and IdRice.",
      "Expected Result": "System prevents the search and displays clear error messages for out-of-range numeric inputs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Autocomplete Functionality for City Field",
      "ID": "TC-336",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT and access the 'Search PoS' function.",
          "Expected Result": "User is on the 'Search PoS' page."
        },
        {
          "Step": 2,
          "Step Description": "Begin typing a valid city name in the City (Località) field (e.g., 'Mil').",
          "Expected Result": "A list of matching city names appears as suggestions."
        },
        {
          "Step": 3,
          "Step Description": "Select a city from the autocomplete suggestions.",
          "Expected Result": "Selected city is populated in the City field."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and on the 'Search PoS' page.",
      "Execution Mode": "Manual",
      "Functionality": "Autocomplete for City field",
      "Test Type": "ux_ui",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials; partial city name (e.g., 'Mil').",
      "Expected Result": "Autocomplete suggestions are displayed and selectable for the City field.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Asynchronous Navigation Between Single PoS Sections",
      "ID": "TC-337",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to ZENIT and access the Single PoS screen for any PoS.",
          "Expected Result": "Single PoS screen is displayed with header and default tab."
        },
        {
          "Step": 2,
          "Step Description": "Click on each available section/tab (e.g., Credit Management, PoS Master Data, Contracts, Guarantees, Unpaids, Borderò, ADI Data, Risk Data, Winning Data, Business Data, View Documents, Notes, Related PoS).",
          "Expected Result": "Each section/tab loads its content asynchronously without reloading the entire page."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the header remains fixed and visible during navigation between sections.",
          "Expected Result": "Header is always visible and unchanged during section/tab navigation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Credit Management Dashboard",
      "Preconditions": "User is logged in and viewing a Single PoS screen.",
      "Execution Mode": "Manual",
      "Functionality": "Asynchronous navigation between Single PoS sections",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one PoS available for selection.",
      "Expected Result": "Sections/tabs load asynchronously and the header remains fixed during navigation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300"
    },
    {
      "Title": "Export List of PoS to Excel - Filename and Content Verification",
      "ID": "TC-338",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns a list of PoS in the Zenit application.",
          "Expected Result": "A table displaying multiple PoS is shown."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "An Excel file download is triggered."
        },
        {
          "Step": 3,
          "Step Description": "Save the downloaded file locally.",
          "Expected Result": "File is saved on the local machine."
        },
        {
          "Step": 4,
          "Step Description": "Verify the filename format is 'PoSFound_<yyyymmddhhmm>.xlsx', where <yyyymmddhhmm> matches the extraction timestamp.",
          "Expected Result": "Filename matches the required pattern and timestamp."
        },
        {
          "Step": 5,
          "Step Description": "Open the Excel file and compare its content with the data displayed in the table after the search.",
          "Expected Result": "All data presented in the table is present and matches the Excel file content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Export to Excel",
      "Preconditions": "User is logged into Zenit and has access to the search and export functionality. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Export list of PoS to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; search criteria returning multiple PoS.",
      "Expected Result": "Excel file is generated with correct filename and contains all data from the search result table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311"
    },
    {
      "Title": "Export Single PoS to Excel - Filename and Content Verification",
      "ID": "TC-339",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Search for a specific Single PoS using its unique identifier in the Zenit application.",
          "Expected Result": "Details of the Single PoS are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "An Excel file download is triggered."
        },
        {
          "Step": 3,
          "Step Description": "Save the downloaded file locally.",
          "Expected Result": "File is saved on the local machine."
        },
        {
          "Step": 4,
          "Step Description": "Verify the filename format is 'SinglePoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx', where <idrice> and <zonarice> match the PoS details and <yyyymmddhhmm> matches the extraction timestamp.",
          "Expected Result": "Filename matches the required pattern and values."
        },
        {
          "Step": 5,
          "Step Description": "Open the Excel file and verify it contains all header data and all information related to all sections for the Single PoS.",
          "Expected Result": "Excel file contains all header and section data for the selected Single PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Export to Excel",
      "Preconditions": "User is logged into Zenit and has access to the search and export functionality. The Single PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Export Single PoS to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Single PoS with known idrice and zonarice.",
      "Expected Result": "Excel file is generated with correct filename and contains all header and section data for the Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311"
    },
    {
      "Title": "Export Related PoS to Excel - Filename and Content Verification",
      "ID": "TC-340",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Search for a Single PoS and navigate to its Related PoS section in the Zenit application.",
          "Expected Result": "A table displaying Related PoS is shown."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Export to Excel' button in the Related PoS section.",
          "Expected Result": "An Excel file download is triggered."
        },
        {
          "Step": 3,
          "Step Description": "Save the downloaded file locally.",
          "Expected Result": "File is saved on the local machine."
        },
        {
          "Step": 4,
          "Step Description": "Verify the filename format is 'RelatedPoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx', where <idrice> and <zonarice> match the reference PoS and <yyyymmddhhmm> matches the extraction timestamp.",
          "Expected Result": "Filename matches the required pattern and values."
        },
        {
          "Step": 5,
          "Step Description": "Open the Excel file and verify it contains all Related PoS data presented in the table.",
          "Expected Result": "Excel file contains all data for the Related PoS as shown in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Export to Excel",
      "Preconditions": "User is logged into Zenit and has access to the search and export functionality. The Single PoS has at least one Related PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Export Related PoS to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Single PoS with known idrice and zonarice and at least one Related PoS.",
      "Expected Result": "Excel file is generated with correct filename and contains all data for the Related PoS as displayed in the table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311"
    },
    {
      "Title": "Export to Excel - Filename Format Negative Test (Invalid Timestamp)",
      "ID": "TC-341",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search and export any PoS data to Excel.",
          "Expected Result": "An Excel file download is triggered."
        },
        {
          "Step": 2,
          "Step Description": "Check the filename of the downloaded file for correct timestamp format (<yyyymmddhhmm>).",
          "Expected Result": "Filename contains a valid timestamp in the required format."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to export at a known time and verify that the timestamp in the filename matches the system time (to the minute).",
          "Expected Result": "Timestamp in filename matches the system time at export."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Export to Excel",
      "Preconditions": "User is logged into Zenit and has access to the export functionality. System time is known and synchronized.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel filename validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; known system time.",
      "Expected Result": "Filename always contains a valid timestamp matching the export time; any deviation is a defect.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only timestamp validation in filename.",
      "_polarion": "XPS-ZENIT-311"
    },
    {
      "Title": "Export to Excel - Data Consistency After Search Update",
      "ID": "TC-342",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search for PoS and note the results displayed in the table.",
          "Expected Result": "A table with PoS results is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click 'Export to Excel' and download the file.",
          "Expected Result": "Excel file is downloaded."
        },
        {
          "Step": 3,
          "Step Description": "Change the search criteria and perform a new search.",
          "Expected Result": "Table updates to reflect new search results."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Export to Excel' again and download the new file.",
          "Expected Result": "A new Excel file is downloaded."
        },
        {
          "Step": 5,
          "Step Description": "Compare the contents of both Excel files with their respective table data at the time of export.",
          "Expected Result": "Each Excel file matches the table data at the time of its respective export."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Export to Excel",
      "Preconditions": "User is logged into Zenit and has access to the search and export functionality. Multiple search criteria are available.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel data consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; multiple search criteria.",
      "Expected Result": "Each exported Excel file reflects the data present in the table at the time of export, ensuring no stale or incorrect data is exported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data consistency after search update.",
      "_polarion": "XPS-ZENIT-311"
    },
    {
      "Title": "Export to Excel - Error Handling When No Data is Present",
      "ID": "TC-343",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns no PoS results in the Zenit application.",
          "Expected Result": "A message indicating no results found is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to click the 'Export to Excel' button.",
          "Expected Result": "System either disables the export button or displays an appropriate error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Export to Excel",
      "Preconditions": "User is logged into Zenit and has access to the search and export functionality. System contains no PoS matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel error handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; search criteria returning zero results.",
      "Expected Result": "Export to Excel is not allowed when no data is present, and user is informed appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for empty search results.",
      "_polarion": "XPS-ZENIT-311"
    },
    {
      "Title": "Default Activation of Credit Management Section for Single PoS",
      "ID": "TC-344",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Select an individual PoS from the list or search for a specific PoS.",
          "Expected Result": "The PoS details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the sections displayed on the PoS details page.",
          "Expected Result": "The 'Credit Management' section is active and visible by default, providing an overview of credit lines/products."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "User has valid credentials and at least one PoS is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Default activation and visibility of Credit Management section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with and without credit lines",
      "Expected Result": "The 'Credit Management' section is active and visible by default when viewing an individual PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "Display of Credit Lines and Products in Credit Management Section",
      "ID": "TC-345",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the Credit Management section for a PoS with all credit lines assigned.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify the presence of the following sections: 'FIDO SIMP GG' (Daily), 'FIDO SIMP WK' (Weekly), and 'FIDO GEO' (Weekly).",
          "Expected Result": "All three sections are present and clearly labeled."
        },
        {
          "Step": 3,
          "Step Description": "Within 'FIDO SIMP GG', verify the presence of product lines: TOTOCALCIO, IPPICA, SPORT QF, VIRTUAL, and GLOBALE.",
          "Expected Result": "All specified product lines are present as rows in the table."
        },
        {
          "Step": 4,
          "Step Description": "Within 'FIDO SIMP WK', verify the presence of product lines: TOTOCALCIO, IPPICA, SPORT QF, VIRTUAL, and GLOBALE.",
          "Expected Result": "All specified product lines are present as rows in the table."
        },
        {
          "Step": 5,
          "Step Description": "Within 'FIDO GEO', verify the presence of product lines: GNTN, CORNER, ONLINE, and TOTALE.",
          "Expected Result": "All specified product lines are present as rows in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "PoS has all types of credit lines/products assigned.",
      "Execution Mode": "Manual",
      "Functionality": "Display of credit lines/products per section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all credit lines/products assigned",
      "Expected Result": "All required credit lines/products are displayed in their respective sections as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "Display of Credit Line Information Fields for Each Product Line",
      "ID": "TC-346",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Credit Management section for a PoS with at least one credit line assigned.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "For each product line in all sections, verify the presence of the following columns: Base Amount (BASE), Extension Amount (ESTENSIONE), Total (TOTALE), Consumed (CONSUMATO), % Consumed (%CONSUMO), Residue (RESIDUO).",
          "Expected Result": "All specified columns are present for each product line."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "PoS with at least one credit line assigned.",
      "Execution Mode": "Manual",
      "Functionality": "Display of required information fields for each credit line/product",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with at least one credit line assigned",
      "Expected Result": "Each product line displays all required information fields as columns.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "Correct Calculation and Display of Credit Line Values",
      "ID": "TC-347",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Credit Management section for a PoS with known credit line values.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "For a selected product line, verify that Total (TOTALE) equals Base Amount (BASE) plus Extension Amount (ESTENSIONE).",
          "Expected Result": "TOTALE = BASE + ESTENSIONE for the product line."
        },
        {
          "Step": 3,
          "Step Description": "Verify that % Consumed (%CONSUMO) equals (CONSUMATO / TOTALE) * 100%.",
          "Expected Result": "%CONSUMO is correctly calculated and displayed as a percentage."
        },
        {
          "Step": 4,
          "Step Description": "Verify that Residue (RESIDUO) equals TOTALE minus CONSUMATO.",
          "Expected Result": "RESIDUO = TOTALE - CONSUMATO for the product line."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "PoS with known, non-zero credit line values for at least one product line.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and display of credit line values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known credit line values (e.g., BASE=1000, ESTENSIONE=200, CONSUMATO=500)",
      "Expected Result": "All calculated fields (TOTALE, %CONSUMO, RESIDUO) are correct for each product line.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "Display of Zero Values When No Credit Line Exists",
      "ID": "TC-348",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Credit Management section for a PoS with no credit lines assigned.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all data fields (BASE, ESTENSIONE, TOTALE, CONSUMATO, %CONSUMO, RESIDUO) display zero values for all product lines.",
          "Expected Result": "All fields display zero values for all product lines."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "PoS with no credit lines assigned.",
      "Execution Mode": "Manual",
      "Functionality": "Display of zero values in absence of credit lines",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no credit lines assigned",
      "Expected Result": "All fields display zero values when no credit line exists for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "Display and Calculation of Summary Totals at Bottom of Credit Management Section",
      "ID": "TC-349",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Credit Management section for a PoS with multiple credit lines assigned.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Scroll to the bottom of the Credit Management section and locate the Totals Section.",
          "Expected Result": "Totals Section is visible at the bottom of the page."
        },
        {
          "Step": 3,
          "Step Description": "Verify that 'Total Daily Credits' is displayed and equals the sum of all metrics related to daily credits (FIDO SIMP GG).",
          "Expected Result": "Total Daily Credits is correctly calculated and displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that 'Total Weekly Credits (Rolling + Static)' is displayed and equals the sum of all weekly credits (FIDO SIMP WK + FIDO GEO).",
          "Expected Result": "Total Weekly Credits (Rolling + Static) is correctly calculated and displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "PoS with multiple credit lines assigned (daily and weekly).",
      "Execution Mode": "Manual",
      "Functionality": "Display and calculation of summary totals",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with multiple credit lines assigned (known values for daily and weekly credits)",
      "Expected Result": "Summary totals for daily and weekly credits are displayed and correctly calculated at the bottom of the section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "UI Structure: Table Layout and Section Organization in Credit Management",
      "ID": "TC-350",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Credit Management section for any PoS.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that each credit type section (FIDO SIMP GG, FIDO SIMP WK, FIDO GEO) contains a table.",
          "Expected Result": "Each section contains a table."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each table has rows for product lines and columns for the required fields.",
          "Expected Result": "Each table is organized with product lines as rows and required fields as columns."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "PoS with at least one credit line assigned.",
      "Execution Mode": "Manual",
      "Functionality": "UI structure and organization of Credit Management section",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with at least one credit line assigned",
      "Expected Result": "Each section is organized as a table with correct rows and columns.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "Boundary Value: Maximum and Minimum Credit Line Values Display and Calculation",
      "ID": "TC-351",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Credit Management section for a PoS with credit lines set to maximum allowed values.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all fields (BASE, ESTENSIONE, TOTALE, CONSUMATO, %CONSUMO, RESIDUO) display and calculate correctly for maximum values.",
          "Expected Result": "All fields display and calculate correctly for maximum values."
        },
        {
          "Step": 3,
          "Step Description": "Repeat steps 1-2 for a PoS with credit lines set to minimum (zero) values.",
          "Expected Result": "All fields display and calculate correctly for minimum values (zero)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "PoS with credit lines set to maximum and minimum allowed values.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value handling for credit line fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with credit lines at maximum and minimum values",
      "Expected Result": "Fields display and calculate correctly for both maximum and minimum (zero) values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "Error Handling: Display When Credit Line Data is Missing or Corrupted",
      "ID": "TC-352",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where the credit line data for a PoS is missing or corrupted (e.g., via test data injection or backend manipulation).",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system displays an appropriate error message or fallback (e.g., zero values or 'Data not available') for affected fields.",
          "Expected Result": "System displays a clear error message or fallback for missing/corrupted data without crashing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Credit Management",
      "Preconditions": "PoS with missing or corrupted credit line data (test environment setup required).",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing/corrupted credit line data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with missing/corrupted credit line data",
      "Expected Result": "System handles missing/corrupted data gracefully, displaying appropriate messages or fallbacks.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330"
    },
    {
      "Title": "Verify PoS Master Data Visualization for All Fields",
      "ID": "TC-353",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard with a user profile that has full access to PoS Master Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "PoS Master Data section is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following PoS data fields are visible and populated: PV Type, Business Type, Network Cluster, Tax Code PoS, Address, Fraction, Province Code, Postal Code, Region, Country, Phone, Phone 2, email.",
          "Expected Result": "All listed PoS data fields are visible and display correct values."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following Holder data fields are visible and populated: Last Name of Holder, First Name of Holder, Tax Code of Holder, Mobile of Holder, Mobile of Holder 2.",
          "Expected Result": "All listed Holder data fields are visible and display correct values."
        },
        {
          "Step": 5,
          "Step Description": "Verify that for each Line of Business (LdB), the following fields are visible: LdB Name, LdB Status, Date of the last transfer.",
          "Expected Result": "All LdB data fields are visible for each LdB and display correct values."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the following Betting data fields are visible and populated: SIMP Code, SIMP Alias, Sports Concession Code, Horse-Racing Concession Code, Sports Grant Code, Horse-Racing Grant Code.",
          "Expected Result": "All listed Betting data fields are visible and display correct values."
        },
        {
          "Step": 7,
          "Step Description": "Verify that for each terminal type, the following fields are visible: Terminal Type, Number of Terminals by Type.",
          "Expected Result": "All Terminal data fields are visible and display correct values."
        },
        {
          "Step": 8,
          "Step Description": "Verify that the following Other data fields are visible and populated: Prepaid flag, Mysisal flag, Activation date of the channel 1, Date of the last transfer (Voltura), AM (last name and first name).",
          "Expected Result": "All Other data fields are visible and display correct values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - PoS Master Data",
      "Preconditions": "User has valid credentials with full access rights. At least one PoS with complete master data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Master Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS entry with all master data fields populated; user profile with full access.",
      "Expected Result": "All PoS Master Data fields are visible and correctly populated for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335"
    },
    {
      "Title": "Verify Data Visibility Based on User Profile Restrictions",
      "ID": "TC-354",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard with a user profile that has restricted access (e.g., cannot view Holder data).",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "PoS Master Data section is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only the data fields permitted by the user profile are visible (e.g., Holder data fields are hidden or masked).",
          "Expected Result": "Only authorized data fields are visible; restricted fields are hidden or masked as per profile permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - PoS Master Data",
      "Preconditions": "User has valid credentials with restricted access rights. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile-Based Data Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS entry with all master data fields populated; user profile with restricted access.",
      "Expected Result": "Only data fields permitted by the user profile are visible; restricted fields are not accessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335"
    },
    {
      "Title": "Verify Correct Display of LdB Data for Multiple Lines of Business",
      "ID": "TC-355",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard with a user profile that has access to LdB data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry with multiple Lines of Business.",
          "Expected Result": "PoS Master Data section is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each LdB, the fields LdB Name, LdB Status, and Date of the last transfer are displayed.",
          "Expected Result": "All LdB entries are listed with their respective fields correctly displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - PoS Master Data",
      "Preconditions": "User has valid credentials with access to LdB data. At least one PoS with multiple LdBs exists.",
      "Execution Mode": "Manual",
      "Functionality": "LdB Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS entry with multiple LdBs; user profile with LdB access.",
      "Expected Result": "All LdB data fields are displayed for each Line of Business associated with the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335"
    },
    {
      "Title": "Verify Handling of Missing or Incomplete PoS Master Data",
      "ID": "TC-356",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard with a user profile that has access to PoS Master Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry with missing or incomplete master data fields (e.g., missing email or phone).",
          "Expected Result": "PoS Master Data section is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the interface displays missing or incomplete data fields (e.g., empty, placeholder, or error message).",
          "Expected Result": "Missing or incomplete fields are displayed as empty, with a placeholder, or with an appropriate message indicating data is unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - PoS Master Data",
      "Preconditions": "User has valid credentials. At least one PoS with missing or incomplete master data exists.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Master Data Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS entry with missing or incomplete master data fields.",
      "Expected Result": "Missing or incomplete PoS Master Data fields are handled gracefully and clearly indicated to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335"
    },
    {
      "Title": "Verify Data Extraction is Limited to Visible Fields per User Profile",
      "ID": "TC-357",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard with a user profile that has restricted access to certain PoS Master Data fields.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry.",
          "Expected Result": "PoS Master Data section is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to extract or export the PoS Master Data (e.g., via export button or print function).",
          "Expected Result": "Only the data fields visible to the user profile are included in the extraction/export; restricted fields are not present."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - PoS Master Data",
      "Preconditions": "User has valid credentials with restricted access. At least one PoS exists.",
      "Execution Mode": "Manual",
      "Functionality": "Data Extraction Based on User Profile",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS entry with all master data fields; user profile with restricted access.",
      "Expected Result": "Data extraction/export includes only the fields visible to the current user profile.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335"
    },
    {
      "Title": "Verify UI Layout and Label Consistency for PoS Master Data Fields",
      "ID": "TC-358",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard with a user profile that has access to PoS Master Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry.",
          "Expected Result": "PoS Master Data section is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all field labels match the specification (e.g., 'PV Type', 'Business Type', etc.) and are consistently formatted.",
          "Expected Result": "All field labels are present, correctly named, and consistently formatted as per requirements."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the layout is clear, with logical grouping of PoS, Holder, LdB, Betting, Terminal, and Other data sections.",
          "Expected Result": "UI layout is clear, with each data group visually separated and easy to identify."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - PoS Master Data",
      "Preconditions": "User has valid credentials. At least one PoS exists.",
      "Execution Mode": "Manual",
      "Functionality": "UI/UX Consistency",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS entry with all master data fields.",
      "Expected Result": "Field labels and UI layout are consistent and match the specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335"
    },
    {
      "Title": "Display of Contracts List for Single PoS",
      "ID": "TC-359",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard as a user with access to a single Point of Sale (PoS).",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the list of contracts displayed in the 'Contracts' section.",
          "Expected Result": "A list of contracts associated with the PoS is displayed, showing Contract Type, Contract Name, and Upload Date for each contract."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Contracts",
      "Preconditions": "User has valid credentials and access to a PoS with at least one contract uploaded.",
      "Execution Mode": "Manual",
      "Functionality": "Display of contract documentation list for PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with contracts (at least one contract with all required fields populated)",
      "Expected Result": "The 'Contracts' section displays a list of contracts for the PoS, each showing Contract Type, Contract Name, and Upload Date.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340"
    },
    {
      "Title": "Verify Contract Type Values in Contracts List",
      "ID": "TC-360",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the 'Contract Type' field for each contract listed.",
          "Expected Result": "Each contract displays a valid Contract Type (Betting, VLT, AWP, PGS, or PGI)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Contracts",
      "Preconditions": "User has access to a PoS with contracts of various types.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Contract Type field values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with contracts of all specified types (Betting, VLT, AWP, PGS, PGI)",
      "Expected Result": "All contracts display only the allowed Contract Type values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340"
    },
    {
      "Title": "Verify Upload Date Format in Contracts List",
      "ID": "TC-361",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the 'Upload Date' field for each contract listed.",
          "Expected Result": "Each contract displays an upload date in the correct format (e.g., DD/MM/YYYY or as specified by system locale)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Contracts",
      "Preconditions": "User has access to a PoS with contracts uploaded on different dates.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Upload Date field format",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with contracts uploaded on various dates",
      "Expected Result": "All contracts display the upload date in the correct and consistent format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340"
    },
    {
      "Title": "Verify Absence of Contracts Displays Appropriate Message",
      "ID": "TC-362",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for a PoS with no contracts uploaded.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the content of the 'Contracts' section.",
          "Expected Result": "A message is displayed indicating that no contracts are available for this PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Contracts",
      "Preconditions": "User has access to a PoS with no contracts uploaded.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of empty contracts list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with no contracts",
      "Expected Result": "A clear message is shown when no contracts are available for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340"
    },
    {
      "Title": "Verify Contract Document Viewing Redirects to External System",
      "ID": "TC-363",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the view/open icon or link for a contract document.",
          "Expected Result": "User is redirected to or the document is opened in the external system currently in use for contract viewing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Contracts",
      "Preconditions": "User has access to a PoS with at least one contract and the external system for document viewing is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Integration with external contract document viewing system",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, PoS with contracts, access to external document system",
      "Expected Result": "Contract document viewing is performed through the external system as per current process.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340"
    },
    {
      "Title": "Verify Handling of External System Unavailability for Contract Viewing",
      "ID": "TC-364",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to view a contract document when the external system is unavailable (simulate outage or disconnect).",
          "Expected Result": "An appropriate error message is displayed indicating the external system is unavailable and the document cannot be viewed at this time."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Contracts",
      "Preconditions": "User has access to a PoS with at least one contract. External system for document viewing is intentionally made unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for external system integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, PoS with contracts, external system offline or unreachable",
      "Expected Result": "User is informed with a clear error message if the external system for contract viewing is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340"
    },
    {
      "Title": "Display of Guarantee Data Fields in Dashboard - Single PoS",
      "ID": "TC-365",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard as a user with access to a Single PoS.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Guarantees' section for the selected PoS.",
          "Expected Result": "The 'Guarantees' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present: Start Date, Expiration Date, Bank Guarantee, Deposits, Reserves, Total Guarantees.",
          "Expected Result": "All specified fields are visible in the 'Guarantees' section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Guarantees",
      "Preconditions": "User has valid credentials and at least one PoS with guarantee data available.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with guarantee data",
      "Expected Result": "All guarantee data fields are displayed as specified in the requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345"
    },
    {
      "Title": "Validation of Date Formats for Start Date and Expiration Date",
      "ID": "TC-366",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the 'Guarantees' section for a Single PoS.",
          "Expected Result": "'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Check the format of the 'Start Date' and 'Expiration Date' fields.",
          "Expected Result": "Dates are displayed in dd/mm/yyyy or another standard date format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Guarantees",
      "Preconditions": "Guarantee data with valid start and expiration dates exists for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Date Format Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with guarantee data containing various date formats",
      "Expected Result": "Start Date and Expiration Date are displayed in the correct date format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345"
    },
    {
      "Title": "Validation of Monetary Value Formats for Guarantee Amounts",
      "ID": "TC-367",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the 'Guarantees' section for a Single PoS.",
          "Expected Result": "'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Check the format of the 'Bank Guarantee', 'Deposits', and 'Reserves' fields.",
          "Expected Result": "Each field displays a monetary value in the correct format (e.g., 10,000.00 €)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Guarantees",
      "Preconditions": "Guarantee data with monetary values exists for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Monetary Value Format Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with various monetary values for guarantees",
      "Expected Result": "All monetary values are displayed in the correct format as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345"
    },
    {
      "Title": "Calculation and Display of Total Guarantees",
      "ID": "TC-368",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the 'Guarantees' section for a Single PoS.",
          "Expected Result": "'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Note the values of 'Bank Guarantee', 'Deposits', and 'Reserves'.",
          "Expected Result": "Values are visible and readable."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Total Guarantees' field displays the sum of the above three fields.",
          "Expected Result": "'Total Guarantees' equals the sum of 'Bank Guarantee', 'Deposits', and 'Reserves'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Guarantees",
      "Preconditions": "Guarantee data with non-zero values for all three fields exists for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Total Guarantees Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known values for Bank Guarantee, Deposits, and Reserves",
      "Expected Result": "Total Guarantees is correctly calculated and displayed as the sum of the three fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345"
    },
    {
      "Title": "Handling of Missing or Null Guarantee Data",
      "ID": "TC-369",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the 'Guarantees' section for a Single PoS with missing or null guarantee data.",
          "Expected Result": "'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify how the system displays fields with missing or null values (e.g., empty, zero, or placeholder).",
          "Expected Result": "Fields with missing data are displayed as empty, zero, or with a standard placeholder (e.g., 'N/A')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Guarantees",
      "Preconditions": "PoS exists with one or more guarantee fields set to null or missing.",
      "Execution Mode": "Manual",
      "Functionality": "Null/Missing Data Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing/null guarantee data",
      "Expected Result": "System handles missing or null guarantee data gracefully and displays appropriate placeholders.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345"
    },
    {
      "Title": "Boundary Value Test for Large Monetary Amounts in Guarantees",
      "ID": "TC-370",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the 'Guarantees' section for a Single PoS with large monetary values.",
          "Expected Result": "'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that 'Bank Guarantee', 'Deposits', 'Reserves', and 'Total Guarantees' correctly display large values (e.g., 99,999,999.99 €).",
          "Expected Result": "All fields display large monetary values without truncation or formatting errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Guarantees",
      "Preconditions": "PoS exists with large monetary values for guarantee fields.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary Value Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with large monetary values for guarantees",
      "Expected Result": "Large monetary values are displayed correctly and without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345"
    },
    {
      "Title": "Negative Test - Invalid Date Format in Guarantee Data",
      "ID": "TC-371",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the 'Guarantees' section for a Single PoS with an invalid date format in the guarantee data.",
          "Expected Result": "'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify how the system handles and displays invalid date formats (e.g., 2023/31/12).",
          "Expected Result": "System displays an error, warning, or a standard placeholder for invalid date formats."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Guarantees",
      "Preconditions": "PoS exists with at least one guarantee date in an invalid format.",
      "Execution Mode": "Manual",
      "Functionality": "Invalid Data Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with invalid date format in guarantee data",
      "Expected Result": "System handles invalid date formats gracefully and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345"
    },
    {
      "Title": "Verify display of Unpaids for Current Year on Single PoS Dashboard",
      "ID": "TC-372",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a Single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard section.",
          "Expected Result": "Single PoS dashboard is displayed with all relevant widgets."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' section on the dashboard.",
          "Expected Result": "The 'Unpaids' section is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Check the value displayed for 'Current Year' in the Unpaids section.",
          "Expected Result": "The number of defaults recorded from the beginning of the calendar year until today is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Cross-verify the displayed value with the backend data for the current year defaults for the selected PoS.",
          "Expected Result": "The displayed value matches the backend data for current year defaults."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Unpaids",
      "Preconditions": "User has valid credentials and access to a Single PoS with existing Unpaids data for the current year. Backend data is available for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Unpaids for Current Year",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend Unpaids data for current year.",
      "Expected Result": "The 'Current Year' value in the Unpaids section accurately reflects the number of defaults from the beginning of the calendar year until today for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-350"
    },
    {
      "Title": "Verify display of Unpaids for Rolling 6 Months on Single PoS Dashboard",
      "ID": "TC-373",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a Single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard section.",
          "Expected Result": "Single PoS dashboard is displayed with all relevant widgets."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' section on the dashboard.",
          "Expected Result": "The 'Unpaids' section is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Check the value displayed for 'Rolling 6 months' in the Unpaids section.",
          "Expected Result": "The number of defaults recorded in the last 6 months is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Cross-verify the displayed value with the backend data for the last 6 months' defaults for the selected PoS.",
          "Expected Result": "The displayed value matches the backend data for rolling 6 months defaults."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Unpaids",
      "Preconditions": "User has valid credentials and access to a Single PoS with existing Unpaids data for the last 6 months. Backend data is available for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Unpaids for Rolling 6 Months",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend Unpaids data for last 6 months.",
      "Expected Result": "The 'Rolling 6 months' value in the Unpaids section accurately reflects the number of defaults in the last 6 months for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-350"
    },
    {
      "Title": "Verify display of Unpaids for Rolling 12 Months on Single PoS Dashboard",
      "ID": "TC-374",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a Single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard section.",
          "Expected Result": "Single PoS dashboard is displayed with all relevant widgets."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' section on the dashboard.",
          "Expected Result": "The 'Unpaids' section is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Check the value displayed for 'Rolling 12 months' in the Unpaids section.",
          "Expected Result": "The number of defaults recorded in the last 12 months is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Cross-verify the displayed value with the backend data for the last 12 months' defaults for the selected PoS.",
          "Expected Result": "The displayed value matches the backend data for rolling 12 months defaults."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Unpaids",
      "Preconditions": "User has valid credentials and access to a Single PoS with existing Unpaids data for the last 12 months. Backend data is available for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Unpaids for Rolling 12 Months",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend Unpaids data for last 12 months.",
      "Expected Result": "The 'Rolling 12 months' value in the Unpaids section accurately reflects the number of defaults in the last 12 months for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-350"
    },
    {
      "Title": "Verify Unpaids section handles absence of data gracefully",
      "ID": "TC-375",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a Single PoS with no Unpaids data for the current year, last 6 months, and last 12 months.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard section.",
          "Expected Result": "Single PoS dashboard is displayed with all relevant widgets."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' section on the dashboard.",
          "Expected Result": "The 'Unpaids' section is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Check the values displayed for 'Current Year', 'Rolling 6 months', and 'Rolling 12 months' in the Unpaids section.",
          "Expected Result": "Each value is displayed as zero or with an appropriate 'No data' message, as per UI specification."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Unpaids",
      "Preconditions": "User has valid credentials and access to a Single PoS with no Unpaids data in any period. UI specification for empty data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of empty Unpaids data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with no Unpaids data.",
      "Expected Result": "The Unpaids section displays zero or an appropriate message for each period when there is no data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-350"
    },
    {
      "Title": "Verify Unpaids values update correctly after a new default is recorded",
      "ID": "TC-376",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a Single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard section and note the current values in the Unpaids section for all periods.",
          "Expected Result": "Current values for 'Current Year', 'Rolling 6 months', and 'Rolling 12 months' are noted."
        },
        {
          "Step": 3,
          "Step Description": "Simulate or record a new default for the selected PoS in the backend system.",
          "Expected Result": "A new default is successfully recorded in the backend for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Refresh the Single PoS dashboard.",
          "Expected Result": "Dashboard reloads and the Unpaids section is updated."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the values in the Unpaids section have incremented by one for each relevant period (depending on the date of the new default).",
          "Expected Result": "The Unpaids values for each period reflect the new default according to its date."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Unpaids",
      "Preconditions": "User has valid credentials and access to a Single PoS. Ability to add a new default in the backend. Initial Unpaids values are known.",
      "Execution Mode": "Manual",
      "Functionality": "Dynamic update of Unpaids values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend access to add default.",
      "Expected Result": "The Unpaids values update correctly after a new default is recorded, reflecting the change in all relevant periods.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-350"
    },
    {
      "Title": "Verify correct calculation of Unpaids for boundary dates (start/end of periods)",
      "ID": "TC-377",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a Single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Ensure the backend has defaults recorded exactly on the boundary dates (e.g., January 1st for Current Year, exactly 6 months ago, exactly 12 months ago).",
          "Expected Result": "Backend contains defaults with dates matching the period boundaries."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the Single PoS dashboard section.",
          "Expected Result": "Single PoS dashboard is displayed with all relevant widgets."
        },
        {
          "Step": 4,
          "Step Description": "Locate the 'Unpaids' section and check the values for each period.",
          "Expected Result": "The Unpaids section displays values including the defaults on the boundary dates."
        },
        {
          "Step": 5,
          "Step Description": "Cross-verify the displayed values with backend data, ensuring boundary defaults are included as per specification.",
          "Expected Result": "Displayed values correctly include defaults on the boundary dates for each period."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Unpaids",
      "Preconditions": "User has valid credentials and access to a Single PoS. Backend contains defaults on period boundary dates.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary date calculation for Unpaids",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend Unpaids data with boundary dates.",
      "Expected Result": "Defaults recorded on the boundary dates are correctly included in the Unpaids counts for each period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-350"
    },
    {
      "Title": "Display of Last Borderò Number on Dashboard",
      "ID": "TC-378",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the value displayed for 'Last Borderò Number'.",
          "Expected Result": "The 'Last Borderò Number' field displays the numeric identifier of the most recent borderò (e.g., '1645')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Borderò",
      "Preconditions": "At least one borderò record exists in the system for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Display of last borderò number",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access; PoS with at least one borderò record.",
      "Expected Result": "The dashboard correctly displays the numeric identifier of the most recent borderò for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355"
    },
    {
      "Title": "Display of Accounting Period Dates on Dashboard",
      "ID": "TC-379",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the values displayed for 'Start of Accounting Period' and 'End of Accounting Period'.",
          "Expected Result": "The 'Start of Accounting Period' and 'End of Accounting Period' fields display the correct start and end dates for the accounting period of the last borderò."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Borderò",
      "Preconditions": "At least one borderò record with valid accounting period dates exists for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Display of accounting period dates",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access; PoS with at least one borderò record with valid dates.",
      "Expected Result": "The dashboard displays the correct start and end dates of the accounting period for the last borderò.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355"
    },
    {
      "Title": "Display of Last Borderò Amount on Dashboard",
      "ID": "TC-380",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the value displayed for 'Last Borderò Amount'.",
          "Expected Result": "The 'Last Borderò Amount' field displays the total economic value of the last borderò (e.g., '1,000.00 €')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Borderò",
      "Preconditions": "At least one borderò record with a valid amount exists for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Display of last borderò amount",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access; PoS with at least one borderò record with a valid amount.",
      "Expected Result": "The dashboard displays the correct total economic value of the last borderò for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355"
    },
    {
      "Title": "Calculation and Display of Average Amount Current Year",
      "ID": "TC-381",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the value displayed for 'Average Amount Current Year'.",
          "Expected Result": "The 'Average Amount Current Year' field displays the average of all borderò amounts recorded from the beginning of the current year to date."
        },
        {
          "Step": 4,
          "Step Description": "Verify the calculation by dividing the sum of all borderò amounts for the current year by the number of borderòs.",
          "Expected Result": "The displayed average matches the calculated value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Borderò",
      "Preconditions": "Multiple borderò records exist for the current year for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and display of average borderò amount for current year",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access; PoS with multiple borderò records for the current year.",
      "Expected Result": "The dashboard displays the correct average amount for borderòs recorded in the current year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355"
    },
    {
      "Title": "Calculation and Display of Average Amount Rolling 12 Months",
      "ID": "TC-382",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the value displayed for 'Average Amount Rolling 12 Months'.",
          "Expected Result": "The 'Average Amount Rolling 12 Months' field displays the average of all borderò amounts recorded in the last 12 months."
        },
        {
          "Step": 4,
          "Step Description": "Verify the calculation by dividing the sum of all borderò amounts in the last 12 months by the number of borderòs in that period.",
          "Expected Result": "The displayed average matches the calculated value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Borderò",
      "Preconditions": "Multiple borderò records exist for the last 12 months for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and display of average borderò amount for rolling 12 months",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access; PoS with multiple borderò records in the last 12 months.",
      "Expected Result": "The dashboard displays the correct average amount for borderòs recorded in the last 12 months.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355"
    },
    {
      "Title": "Visibility and Functionality of ArchiCON Link Button for Privileged Users",
      "ID": "TC-383",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with privileges to access the ArchiCON link.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the ArchiCON link button is visible.",
          "Expected Result": "The ArchiCON link button is visible to the user."
        },
        {
          "Step": 4,
          "Step Description": "Click the ArchiCON link button.",
          "Expected Result": "User is redirected to the ArchiCON platform and can consult the Borderò based on assigned permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Borderò",
      "Preconditions": "User has privileges to access the ArchiCON link; PoS with at least one borderò record.",
      "Execution Mode": "Manual",
      "Functionality": "Visibility and functionality of ArchiCON link for privileged users",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with ArchiCON privileges; PoS with at least one borderò record.",
      "Expected Result": "Privileged users see the ArchiCON link button and are redirected to the ArchiCON platform with access to the relevant Borderò.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355"
    },
    {
      "Title": "Invisibility of ArchiCON Link Button for Non-Privileged Users",
      "ID": "TC-384",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user without privileges to access the ArchiCON link.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the ArchiCON link button is not visible.",
          "Expected Result": "The ArchiCON link button is not visible to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Borderò",
      "Preconditions": "User does not have privileges to access the ArchiCON link; PoS with at least one borderò record.",
      "Execution Mode": "Manual",
      "Functionality": "Visibility control of ArchiCON link for non-privileged users",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials without ArchiCON privileges; PoS with at least one borderò record.",
      "Expected Result": "Non-privileged users do not see the ArchiCON link button on the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355"
    },
    {
      "Title": "Error Handling When No Borderò Records Exist",
      "ID": "TC-385",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section for a PoS with no borderò records.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the fields for Last Borderò Number, Accounting Period, Amounts, and averages.",
          "Expected Result": "The fields display a message such as 'No data available' or remain empty, and no errors are shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Borderò",
      "Preconditions": "Selected PoS has no borderò records in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for empty borderò data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access; PoS with no borderò records.",
      "Expected Result": "The dashboard gracefully handles the absence of borderò data, displaying appropriate messages without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355"
    },
    {
      "Title": "AWP Data Visualization - Structured Aggregation by Management Type and Collection Method",
      "ID": "TC-386",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the XPS-ZENIT-360 Dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "Dashboard loads successfully and the ADI Data section is visible."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section for a selected PoS.",
          "Expected Result": "ADI Data section is displayed with AWP and VLT data blocks."
        },
        {
          "Step": 3,
          "Step Description": "Verify that AWP data is displayed in three separate blocks: AWP Management, AWP AC Management, and AWP Third Parties.",
          "Expected Result": "Three distinct blocks for AWP data are visible, each labeled appropriately."
        },
        {
          "Step": 4,
          "Step Description": "Within each block, check that AWP numbers are divided by collection method: IAG and NOIAG.",
          "Expected Result": "Each block displays AWP numbers for both IAG and NOIAG collection methods."
        },
        {
          "Step": 5,
          "Step Description": "Verify that each block also displays the total AWP for that block.",
          "Expected Result": "A total AWP value is shown for each block, summing IAG and NOIAG values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ADI Data",
      "Preconditions": "User is authenticated and has access to a PoS with AWP and VLT data configured.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with AWP data for all management types and collection methods (IAG, NOIAG).",
      "Expected Result": "AWP data is correctly structured and aggregated by management type and collection method, with accurate totals per block.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360-DASHBOARD-ADI-REQ-01"
    },
    {
      "Title": "AWP Management - Key Association Details Display",
      "ID": "TC-387",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the XPS-ZENIT-360 Dashboard and navigate to the ADI Data section for a PoS with AWP Management data.",
          "Expected Result": "ADI Data section is displayed with AWP Management block visible."
        },
        {
          "Step": 2,
          "Step Description": "Locate the AWP Management block and inspect the details for key associations.",
          "Expected Result": "Details for Drawer, Counter, and Change Machine keys are visible within the AWP Management block."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each key (Drawer, Counter, Change Machine) shows the associated entity (e.g., 'ESERCENTE').",
          "Expected Result": "Each key is associated with a specific entity, and the association is clearly displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ADI Data",
      "Preconditions": "PoS has AWP Management data with key associations configured.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Key Association Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with AWP Management and key associations (Drawer, Counter, Change Machine).",
      "Expected Result": "AWP Management block displays key associations for Drawer, Counter, and Change Machine with correct entity names.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360-DASHBOARD-ADI-REQ-02"
    },
    {
      "Title": "Total Summary - AWP and VLT Data Accuracy and YTD Averages",
      "ID": "TC-388",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the dashboard and access the ADI Data section for a PoS with both AWP and VLT data.",
          "Expected Result": "ADI Data section is displayed with summary area visible."
        },
        {
          "Step": 2,
          "Step Description": "Locate the total summary section for AWP and VLT.",
          "Expected Result": "Summary section displays total AWP, average AWP (YTD), total VLT, and average VLT (YTD)."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the displayed totals and averages match the underlying data for the selected PoS.",
          "Expected Result": "Displayed totals and YTD averages are accurate and consistent with the PoS data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ADI Data",
      "Preconditions": "PoS has valid AWP and VLT data, including YTD averages.",
      "Execution Mode": "Manual",
      "Functionality": "AWP and VLT Summary Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with historical and current AWP and VLT data for YTD calculation.",
      "Expected Result": "Total and average values for AWP and VLT are displayed accurately in the summary section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360-DASHBOARD-ADI-REQ-03"
    },
    {
      "Title": "Loading Coins (Hopper) Data Visualization - Breakdown and Total Calculation",
      "ID": "TC-389",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the ADI Data section for a PoS with hopper data.",
          "Expected Result": "ADI Data section is displayed with hopper data area visible."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following breakdowns are displayed: Hopper NOIAG, Hopper IAG - End of Relationship, Change Machine IAG - End of Relationship, Hopper IAG - Recovery.",
          "Expected Result": "All specified breakdowns are visible with corresponding amounts."
        },
        {
          "Step": 3,
          "Step Description": "Check that the total amount is displayed as the sum of all breakdowns.",
          "Expected Result": "Total amount equals the sum of all individual breakdowns."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ADI Data",
      "Preconditions": "PoS has hopper data for all required breakdowns.",
      "Execution Mode": "Manual",
      "Functionality": "Hopper Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with hopper data for all breakdown types and total calculation.",
      "Expected Result": "Hopper data is displayed with correct breakdowns and total calculation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360-DASHBOARD-ADI-REQ-04"
    },
    {
      "Title": "AWP Data Visualization - Handling of Missing or Incomplete Data",
      "ID": "TC-390",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the ADI Data section for a PoS with missing or incomplete AWP data (e.g., missing one management type or collection method).",
          "Expected Result": "ADI Data section loads with some AWP data missing."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the interface handles missing data gracefully (e.g., displays 'N/A', zero, or a suitable placeholder).",
          "Expected Result": "Missing or incomplete data is clearly indicated without causing UI errors or misalignment."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ADI Data",
      "Preconditions": "PoS with partial or missing AWP data for at least one block or collection method.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Visualization - Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with intentionally incomplete AWP data.",
      "Expected Result": "The UI displays missing or incomplete AWP data with clear indicators and without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360-DASHBOARD-ADI-REQ-05"
    },
    {
      "Title": "Hopper Data Visualization - Handling of Zero or Negative Values",
      "ID": "TC-391",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the ADI Data section for a PoS with zero or negative values in hopper data breakdowns.",
          "Expected Result": "ADI Data section loads with hopper data showing zero or negative values."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the interface displays zero or negative values correctly and calculates the total accordingly.",
          "Expected Result": "Zero or negative values are displayed as entered, and the total reflects the correct sum."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - ADI Data",
      "Preconditions": "PoS with hopper data containing zero or negative values in at least one breakdown.",
      "Execution Mode": "Manual",
      "Functionality": "Hopper Data Visualization - Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with zero and negative values in hopper data breakdowns.",
      "Expected Result": "Zero and negative values are displayed and summed correctly in the hopper data section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360-DASHBOARD-ADI-REQ-06"
    },
    {
      "Title": "Verify Display of Risk Data Table with All Columns for Single PoS",
      "ID": "TC-392",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Dashboard as a user with access to Single PoS details.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS section and select a specific Point of Sale.",
          "Expected Result": "Single PoS details page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Risk Data' section on the page.",
          "Expected Result": "The 'Risk Data' section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the summary table is displayed with the following columns: RedList, Insolvent Rolling 6 months, General Reason, SIMP Management, SIMP Reason, Scoring, Risk Cluster, Activity Status.",
          "Expected Result": "All specified columns are present in the table header in the correct order."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Risk Data",
      "Preconditions": "User has valid credentials and access to the Dashboard. At least one PoS with risk data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Risk Data Table",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with risk data",
      "Expected Result": "The Risk Data table is displayed with all required columns for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365"
    },
    {
      "Title": "Verify Correct Values and Formats in Risk Data Table Columns",
      "ID": "TC-393",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the Single PoS 'Risk Data' section as described in TC-XPS-ZENIT-365-001.",
          "Expected Result": "Risk Data table is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Check the value in the 'RedList' column for the selected PoS.",
          "Expected Result": "Value is either 'Yes' or 'No'."
        },
        {
          "Step": 3,
          "Step Description": "Check the value in the 'Insolvent Rolling 6 months' column.",
          "Expected Result": "Value is a non-negative integer (e.g., 0, 1, 2, ...)."
        },
        {
          "Step": 4,
          "Step Description": "Check the value in the 'General Reason' column.",
          "Expected Result": "Value is a brief text description (e.g., 'Customer at risk')."
        },
        {
          "Step": 5,
          "Step Description": "Check the value in the 'SIMP Management' column.",
          "Expected Result": "Value is a valid status or outcome (e.g., 'Checked', 'Not Checked')."
        },
        {
          "Step": 6,
          "Step Description": "Check the value in the 'SIMP Reason' column.",
          "Expected Result": "Value is a detailed text description related to SIMP checks."
        },
        {
          "Step": 7,
          "Step Description": "Check the value in the 'Scoring' column.",
          "Expected Result": "Value is a numerical score (e.g., 0-1000) assigned by Cerved."
        },
        {
          "Step": 8,
          "Step Description": "Check the value in the 'Risk Cluster' column.",
          "Expected Result": "Value is a risk category (e.g., 'Low', 'Medium', 'High')."
        },
        {
          "Step": 9,
          "Step Description": "Check the value in the 'Activity Status' column.",
          "Expected Result": "Value is a valid status (e.g., 'ACTIVE', 'SUSPENDED', 'CLOSED')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Risk Data",
      "Preconditions": "Risk Data table is visible for a PoS with populated data.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Risk Data Table Values and Formats",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known risk data values for each column",
      "Expected Result": "All columns display values in the correct format and within valid ranges for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365"
    },
    {
      "Title": "Verify Handling of Missing or Null Risk Data Values",
      "ID": "TC-394",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the Single PoS 'Risk Data' section for a PoS with incomplete or missing risk data.",
          "Expected Result": "Risk Data table is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Check each column for handling of missing or null values (e.g., RedList, Insolvent Rolling 6 months, etc.).",
          "Expected Result": "Missing or null values are displayed as '-' or an appropriate placeholder, and the table layout remains consistent."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Risk Data",
      "Preconditions": "At least one PoS exists with missing/null values in one or more risk data fields.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of Missing Risk Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing/null risk data fields",
      "Expected Result": "The table displays placeholders for missing/null values without breaking the layout or causing errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365"
    },
    {
      "Title": "Verify Sorting Functionality on Risk Data Table Columns",
      "ID": "TC-395",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the Single PoS 'Risk Data' section with multiple PoS entries displayed (if applicable).",
          "Expected Result": "Risk Data table with multiple rows is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click on the header of the 'Scoring' column to sort the table.",
          "Expected Result": "Table rows are sorted in ascending order by Scoring."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Scoring' column header again to sort in descending order.",
          "Expected Result": "Table rows are sorted in descending order by Scoring."
        },
        {
          "Step": 4,
          "Step Description": "Repeat steps 2-3 for 'Insolvent Rolling 6 months' and 'Risk Cluster' columns.",
          "Expected Result": "Table rows are sorted correctly for each column."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Risk Data",
      "Preconditions": "Risk Data table displays multiple PoS entries with varying values.",
      "Execution Mode": "Manual",
      "Functionality": "Sorting of Risk Data Table",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Multiple PoS entries with different risk data values",
      "Expected Result": "Sorting works correctly for sortable columns, updating the table order as expected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Assumes table supports sorting; if not, this test is not applicable.",
      "_polarion": "XPS-ZENIT-365"
    },
    {
      "Title": "Verify Access Control for Risk Data Section",
      "ID": "TC-396",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the Single PoS 'Risk Data' section as a user without the required permissions.",
          "Expected Result": "Access to the Risk Data section is denied or the section is not visible."
        },
        {
          "Step": 2,
          "Step Description": "Login as a user with the required permissions and access the same section.",
          "Expected Result": "Risk Data section is visible and accessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Risk Data",
      "Preconditions": "User accounts with and without access permissions exist.",
      "Execution Mode": "Manual",
      "Functionality": "Access Control for Risk Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User accounts with different permission levels",
      "Expected Result": "Only authorized users can view the Risk Data section; unauthorized users are restricted.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365"
    },
    {
      "Title": "Verify Responsiveness of Risk Data Table on Different Screen Sizes",
      "ID": "TC-397",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login and navigate to the Single PoS 'Risk Data' section on a desktop browser.",
          "Expected Result": "Risk Data table is displayed correctly on a standard desktop resolution."
        },
        {
          "Step": 2,
          "Step Description": "Resize the browser window to simulate a tablet screen size.",
          "Expected Result": "Risk Data table adjusts layout appropriately for tablet view (e.g., columns remain readable, no horizontal scroll required unless necessary)."
        },
        {
          "Step": 3,
          "Step Description": "Resize the browser window to simulate a mobile screen size.",
          "Expected Result": "Risk Data table remains usable and readable, with columns stacked or scrollable as per responsive design."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Risk Data",
      "Preconditions": "Responsive design is implemented for the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Responsiveness of Risk Data Table",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "Risk Data table remains accessible and readable across desktop, tablet, and mobile screen sizes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365"
    },
    {
      "Title": "Verify Error Handling When Risk Data Service is Unavailable",
      "ID": "TC-398",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a backend service outage for the Risk Data API (e.g., by disabling the service or using a mock).",
          "Expected Result": "Risk Data service is unavailable."
        },
        {
          "Step": 2,
          "Step Description": "Login and navigate to the Single PoS 'Risk Data' section.",
          "Expected Result": "An appropriate error message is displayed to the user (e.g., 'Risk Data is temporarily unavailable'), and the rest of the page remains functional."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Risk Data",
      "Preconditions": "Ability to simulate or mock backend service outages.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling for Risk Data Service",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "User is informed of the service unavailability without page crash or data corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365"
    },
    {
      "Title": "Display of Monitoring Categories - Section and Table Structure",
      "ID": "TC-399",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user with access to the Winning Data dashboard for a single PoS.",
          "Expected Result": "User is successfully authenticated and navigated to the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Observe the main dashboard interface for Winning Data.",
          "Expected Result": "Three distinct sections are displayed: 'Sport Ticket Payments in Other Agencies', 'Ticket Sports Not Paid', and 'Ticket VR Not Paid'."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each section contains a table with headers, aggregated rows, and subtotals.",
          "Expected Result": "Each section displays a table with appropriate headers, aggregated data rows, and a subtotal row at the bottom."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "User is authorized and has access to the dashboard. Winning data is available for the current reference day.",
      "Execution Mode": "Manual",
      "Functionality": "Display of monitoring categories and table structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample winning data for all three categories.",
      "Expected Result": "All three monitoring categories are displayed with correct table structure, headers, aggregated rows, and subtotals.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Detailed Visualization of Winning Data Fields",
      "ID": "TC-400",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user and navigate to the Winning Data dashboard.",
          "Expected Result": "User is on the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Expand a row in the 'Sport Ticket Payments in Other Agencies' section to view detailed data.",
          "Expected Result": "Detailed data for the selected win is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify the presence and format of the following fields: Seller Agency Code, Competence Day, Cash Day, Winning Payment Day, Agency Code Payment, PoS Identifier of the payment, Amount Bet, Amount Won.",
          "Expected Result": "All fields are present. Seller Agency Code and Agency Code Payment are 6-character strings left-padded with zeros. PoS Identifier is a 4-character string left-padded with zeros. Dates are in correct format. Amounts are numeric."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "User is authorized. At least one record exists in 'Sport Ticket Payments in Other Agencies' with all detailed fields populated.",
      "Execution Mode": "Manual",
      "Functionality": "Detailed visualization of winning data fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample data with all required fields populated.",
      "Expected Result": "All required fields are displayed with correct format and values in the detailed view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Seller Agency Code Format for Standard and Corner PoS",
      "ID": "TC-401",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the Winning Data dashboard.",
          "Expected Result": "User is on the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Expand a row in any section to view the Seller Agency Code for a standard PoS.",
          "Expected Result": "Seller Agency Code is a 6-character string left-padded with zeros (e.g., 000045)."
        },
        {
          "Step": 3,
          "Step Description": "Expand a row for a 'Corner' type PoS and observe the Seller Agency Code.",
          "Expected Result": "Seller Agency Code is in the format 'ZZZZ-XXXXXX', where ZZZZ is the 4-digit zone number left-padded with zeros, and XXXXXX is the 6-digit SIMP code left-padded with zeros (e.g., 0001-000045)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "Test data includes both standard and 'Corner' type PoS records.",
      "Execution Mode": "Manual",
      "Functionality": "Seller Agency Code formatting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample data for standard and 'Corner' PoS.",
      "Expected Result": "Seller Agency Code is correctly formatted for both standard and 'Corner' PoS types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Reference Day Management - Automatic and Manual Selection",
      "ID": "TC-402",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Winning Data dashboard.",
          "Expected Result": "Dashboard loads with data for the automatically identified reference day (most recent data upload date)."
        },
        {
          "Step": 2,
          "Step Description": "Observe the displayed reference day and verify it matches the most recent data upload date.",
          "Expected Result": "Reference day matches the most recent data upload date."
        },
        {
          "Step": 3,
          "Step Description": "Manually select an alternative reference day from the available options.",
          "Expected Result": "Dashboard updates to display data for the selected reference day."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "Multiple data upload dates exist. User is authorized.",
      "Execution Mode": "Manual",
      "Functionality": "Reference day management (automatic and manual)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, data for multiple reference days.",
      "Expected Result": "Dashboard correctly identifies and displays the reference day automatically, and updates data when a different day is selected manually.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Expand/Collapse Functionality for Aggregated and Detailed Data",
      "ID": "TC-403",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Winning Data dashboard.",
          "Expected Result": "Dashboard is displayed with aggregated data."
        },
        {
          "Step": 2,
          "Step Description": "Click the expand icon on a specific row in any section.",
          "Expected Result": "Detailed data for that row is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click the collapse icon on the same row.",
          "Expected Result": "Detailed data for that row is hidden."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Expand/Collapse All' button.",
          "Expected Result": "All rows in all sections are expanded or collapsed accordingly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "User is authorized. Data with multiple rows is available in each section.",
      "Execution Mode": "Manual",
      "Functionality": "Expand/collapse interactive navigation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, data with multiple rows per section.",
      "Expected Result": "Expand/collapse functions work correctly for individual rows and globally via the 'Expand/Collapse All' button.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Authorization Level Enforcement for Dashboard Access and Data Visibility",
      "ID": "TC-404",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the Winning Data dashboard as a user without the required authorization level.",
          "Expected Result": "Access is denied or dashboard is not visible."
        },
        {
          "Step": 2,
          "Step Description": "Log in as a user with the required authorization level.",
          "Expected Result": "Dashboard is accessible and visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that data visibility and available actions are consistent with the user's authorization level.",
          "Expected Result": "User can only view and interact with data permitted by their authorization level."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "Test users with different authorization levels exist.",
      "Execution Mode": "Manual",
      "Functionality": "Authorization and access control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials with and without required authorization.",
      "Expected Result": "Only authorized users can access the dashboard and see data/actions according to their permissions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Correct Aggregation and Subtotal Calculation per Section",
      "ID": "TC-405",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Winning Data dashboard.",
          "Expected Result": "Dashboard is displayed with all three sections."
        },
        {
          "Step": 2,
          "Step Description": "For 'Sport Ticket Payments in Other Agencies', verify that aggregation and subtotals are organized by payment date.",
          "Expected Result": "Aggregated rows and subtotals are grouped by payment date."
        },
        {
          "Step": 3,
          "Step Description": "For 'Ticket Sports Not Paid' and 'Ticket VR Not Paid', verify that aggregation and subtotals are organized by competence date.",
          "Expected Result": "Aggregated rows and subtotals are grouped by competence date."
        },
        {
          "Step": 4,
          "Step Description": "Check that 'Total Winnings Amount' and 'Number of Winnings' are correctly calculated for the reference date in each section.",
          "Expected Result": "Totals and counts match the sum of the detailed data for the reference date."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "Test data includes multiple records with varying payment and competence dates.",
      "Execution Mode": "Manual",
      "Functionality": "Aggregation and subtotal calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample data with multiple payment and competence dates.",
      "Expected Result": "Aggregations and subtotals are correct and organized as specified for each section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Field Presence and Conditional Display for 'Tickets Paid at Other Sales Points'",
      "ID": "TC-406",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Winning Data dashboard.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Expand a row in the 'Sport Ticket Payments in Other Agencies' section.",
          "Expected Result": "Detailed data is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present: Winning Payment Day, Agency Code Payment, PoS Identifier of the payment.",
          "Expected Result": "All three fields are present in the detailed view."
        },
        {
          "Step": 4,
          "Step Description": "Expand a row in 'Ticket Sports Not Paid' or 'Ticket VR Not Paid' sections.",
          "Expected Result": "Detailed data is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Verify that Winning Payment Day, Agency Code Payment, and PoS Identifier of the payment are NOT present.",
          "Expected Result": "These fields are not displayed in the detailed view for these sections."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "Test data includes records for all three sections, with appropriate field population.",
      "Execution Mode": "Manual",
      "Functionality": "Conditional field display in detailed view",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample data for all three sections.",
      "Expected Result": "Fields specific to 'tickets paid at other sales points' are only displayed in that section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Negative Test - Invalid Reference Day Selection",
      "ID": "TC-407",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Winning Data dashboard.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to select a reference day that is not available (e.g., a date with no data upload).",
          "Expected Result": "System prevents selection and displays an appropriate error or warning message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Winning Data",
      "Preconditions": "User is authorized. No data exists for the invalid date.",
      "Execution Mode": "Manual",
      "Functionality": "Reference day validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, attempt to select a non-existent reference day.",
      "Expected Result": "System does not allow selection of unavailable reference days and provides clear feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370"
    },
    {
      "Title": "Verify GNTN Amount Collected Data Visualization for a Valid PoS",
      "ID": "TC-408",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'GNTN amount collected' sub-section.",
          "Expected Result": "The 'GNTN amount collected' sub-section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed: Total media amount collected for GNTN (YTD) on a weekly basis, Upload date, Reference week, Reference year.",
          "Expected Result": "All required fields are present and populated with correct data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Business Data",
      "Preconditions": "PoS of type 'Corner' exists with valid GNTN data imported via Massive Importer.",
      "Execution Mode": "Manual",
      "Functionality": "GNTN Amount Collected Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID with GNTN data, valid user credentials",
      "Expected Result": "The 'GNTN amount collected' sub-section displays all required fields with correct and up-to-date data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375"
    },
    {
      "Title": "Verify Business Data Visualization for 'Corner' PoS Type",
      "ID": "TC-409",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization block.",
          "Expected Result": "The 'Corner' block is visible and organized in a table layout with distinct data groups."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all required data fields (Amount Collected Data, Revenue Data, Fee Data, Business Contribution, Online Revenues, Calculated Fields) are displayed and populated.",
          "Expected Result": "All specified fields are present and populated with correct data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Business Data",
      "Preconditions": "PoS of type 'Corner' exists with valid business data imported via Massive Importer.",
      "Execution Mode": "Manual",
      "Functionality": "Corner Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID of type 'Corner', valid user credentials, imported business data",
      "Expected Result": "The 'Corner' data visualization displays all required fields in a clear, organized table layout with accurate data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375"
    },
    {
      "Title": "Verify Business Data Visualization for 'Shop' PoS Type",
      "ID": "TC-410",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a PoS of type 'Shop'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Shop' data visualization block.",
          "Expected Result": "The 'Shop' block is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed: Total Revenues, Business Contribution, Business Contribution Online, Business Contribution Post Online.",
          "Expected Result": "All specified fields are present and populated with correct data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Business Data",
      "Preconditions": "PoS of type 'Shop' exists with valid business data imported via Massive Importer.",
      "Execution Mode": "Manual",
      "Functionality": "Shop Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID of type 'Shop', valid user credentials, imported business data",
      "Expected Result": "The 'Shop' data visualization displays all required fields with accurate data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375"
    },
    {
      "Title": "Verify Business Data Visualization for 'Gaming Hall' PoS Type",
      "ID": "TC-411",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a PoS of type 'Gaming Hall'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Gaming Hall' data visualization block.",
          "Expected Result": "The 'Gaming Hall' block is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed: VLT Revenues, AWP Revenues, Business Contribution, Business Contribution Post Online.",
          "Expected Result": "All specified fields are present and populated with correct data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Business Data",
      "Preconditions": "PoS of type 'Gaming Hall' exists with valid business data imported via Massive Importer.",
      "Execution Mode": "Manual",
      "Functionality": "Gaming Hall Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID of type 'Gaming Hall', valid user credentials, imported business data",
      "Expected Result": "The 'Gaming Hall' data visualization displays all required fields with accurate data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375"
    },
    {
      "Title": "Verify 'No Data Available' Message for Unsupported PoS Type",
      "ID": "TC-412",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a PoS of an unsupported type (not Corner, Shop, or Gaming Hall).",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that neither 'Corner', 'Shop', nor 'Gaming Hall' blocks are displayed.",
          "Expected Result": "No business data blocks are visible."
        },
        {
          "Step": 4,
          "Step Description": "Check for the presence of a 'no data available' message or absence of the section.",
          "Expected Result": "A 'no data available' message is displayed or the section is not visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Business Data",
      "Preconditions": "PoS of unsupported type exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "No Data Available Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID of unsupported type, valid user credentials",
      "Expected Result": "For unsupported PoS types, the system displays a 'no data available' message or hides the section entirely.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375"
    },
    {
      "Title": "Verify Calculated Fields in 'Corner' Data Visualization",
      "ID": "TC-413",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization block and identify the calculated fields: BC Year Projection, Decile, Exposure Risk.",
          "Expected Result": "Calculated fields are visible in the 'Corner' block."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the values for BC Year Projection, Decile, and Exposure Risk are correctly calculated based on the provided formulas and displayed data.",
          "Expected Result": "Calculated fields display correct values as per the formulas: BC Year Projection = (Business Contribution (YTD) / <Previous Months>) * 12; Decile = BC Year Projection / 10; Exposure Risk = Current year medium borderò * 1.8."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Business Data",
      "Preconditions": "PoS of type 'Corner' exists with valid business data and all required fields for calculation.",
      "Execution Mode": "Manual",
      "Functionality": "Corner Calculated Fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS ID of type 'Corner', valid user credentials, imported business data with known values for calculation",
      "Expected Result": "Calculated fields in the 'Corner' block are accurate and match the expected results based on the input data and formulas.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375"
    },
    {
      "Title": "Verify Data Import Frequency and Data Freshness for GNTN and Business Data",
      "ID": "TC-414",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a PoS of any supported type.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check the upload date for the 'GNTN amount collected' data (should be weekly) and for the 'Business Data' (should be monthly).",
          "Expected Result": "Upload dates are present and reflect the correct import frequency (weekly for GNTN, monthly for Business Data)."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the most recent data corresponds to the latest import cycle (e.g., last week for GNTN, last month for Business Data).",
          "Expected Result": "Displayed data is up-to-date and matches the latest import cycle."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Business Data",
      "Preconditions": "Recent data imports have been performed for both GNTN and Business Data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import Frequency and Freshness",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS IDs with recent data imports, valid user credentials",
      "Expected Result": "The dashboard displays the most recent data for both GNTN and Business Data, with upload dates reflecting the correct import frequency.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375"
    },
    {
      "Title": "Verify Table Layout and Data Grouping in 'Corner' Data Visualization",
      "ID": "TC-415",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization block.",
          "Expected Result": "The 'Corner' block is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the data is organized in a table layout with distinct data groups (Amount Collected, Revenue, Fee, etc.), and that sections/blocks are clearly separated either horizontally or vertically.",
          "Expected Result": "Data is presented in a clear, organized table layout with distinct, readable groups and sections."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Business Data",
      "Preconditions": "PoS of type 'Corner' exists with valid business data imported via Massive Importer.",
      "Execution Mode": "Manual",
      "Functionality": "Corner Table Layout and Data Grouping",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS ID of type 'Corner', valid user credentials, imported business data",
      "Expected Result": "The 'Corner' data visualization is organized in a user-friendly table layout with clear data grouping and separation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375"
    },
    {
      "Title": "Access Documents Section and Display Documents from Cerved and Arxivar",
      "ID": "TC-416",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section on the dashboard.",
          "Expected Result": "The 'Documents' section is loaded."
        },
        {
          "Step": 3,
          "Step Description": "Observe the list of documents displayed, ensuring they are grouped by source (Cerved and Arxivar).",
          "Expected Result": "A structured list of documents is displayed, divided by source (Cerved and Arxivar)."
        },
        {
          "Step": 4,
          "Step Description": "Verify that each document entry displays at least the document name and its source.",
          "Expected Result": "Each document entry shows the document name and the source (Cerved or Arxivar)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Documents",
      "Preconditions": "User is logged in with appropriate privileges. Cerved and Arxivar systems are reachable and have available documents.",
      "Execution Mode": "Manual",
      "Functionality": "Display and grouping of documents from external sources",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access rights; test data in Cerved and Arxivar systems with at least one document each.",
      "Expected Result": "The 'Documents' section displays a structured, up-to-date list of documents from both Cerved and Arxivar, grouped by source, with each document showing its name and source.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380"
    },
    {
      "Title": "View Document Using Default Viewer",
      "ID": "TC-417",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section on the dashboard.",
          "Expected Result": "The 'Documents' section is loaded and documents are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on a document entry from the list (from either Cerved or Arxivar).",
          "Expected Result": "The selected document is opened using the default viewer (e.g., PDF Viewer or similar tool)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Documents",
      "Preconditions": "User is logged in with appropriate privileges. At least one document is available in the list. Default viewer is installed and configured.",
      "Execution Mode": "Manual",
      "Functionality": "Document viewing via default tool",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access rights; at least one document available in Cerved or Arxivar.",
      "Expected Result": "Upon clicking a document, it is opened in the default viewer (e.g., PDF Viewer) for the user to view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380"
    },
    {
      "Title": "Handle Cerved System Unavailability",
      "ID": "TC-418",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Cerved system being unavailable (e.g., disconnect Cerved API endpoint or use test environment with Cerved down).",
          "Expected Result": "Cerved system is unreachable from the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section on the dashboard.",
          "Expected Result": "An error message is displayed indicating that the Cerved system is not available. Documents from Arxivar (if available) are still displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Documents",
      "Preconditions": "User is logged in with appropriate privileges. Cerved system is intentionally made unavailable. Arxivar system is reachable and has available documents.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for external system unavailability (Cerved)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access rights; Arxivar has at least one document; Cerved is unavailable.",
      "Expected Result": "If Cerved is unavailable, an appropriate error message is shown and documents from Arxivar are still accessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380"
    },
    {
      "Title": "Handle Arxivar System Unavailability",
      "ID": "TC-419",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Arxivar system being unavailable (e.g., disconnect Arxivar API endpoint or use test environment with Arxivar down).",
          "Expected Result": "Arxivar system is unreachable from the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section on the dashboard.",
          "Expected Result": "An error message is displayed indicating that the Arxivar system is not available. Documents from Cerved (if available) are still displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Documents",
      "Preconditions": "User is logged in with appropriate privileges. Arxivar system is intentionally made unavailable. Cerved system is reachable and has available documents.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for external system unavailability (Arxivar)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with access rights; Cerved has at least one document; Arxivar is unavailable.",
      "Expected Result": "If Arxivar is unavailable, an appropriate error message is shown and documents from Cerved are still accessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380"
    },
    {
      "Title": "Security and Private Access to Documents Section",
      "ID": "TC-420",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the 'Documents' section without logging in (e.g., direct URL access or session expired).",
          "Expected Result": "Access is denied and the user is redirected to the login page or shown an appropriate error message."
        },
        {
          "Step": 2,
          "Step Description": "Log in with a user account that does NOT have privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is logged in but does not see the 'Documents' section or receives an access denied message when attempting to access it."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Documents",
      "Preconditions": "User account without privileges exists. System is configured to restrict access based on user roles.",
      "Execution Mode": "Manual",
      "Functionality": "Security and access control for documents section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials without access rights; attempt direct access without login.",
      "Expected Result": "Only authorized users can access the 'Documents' section; unauthorized access is prevented and properly handled.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380"
    },
    {
      "Title": "Display Notes List for Selected POS (Descending Order)",
      "ID": "TC-421",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard and select a specific POS.",
          "Expected Result": "Dashboard for the selected POS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section for the selected POS.",
          "Expected Result": "The 'Notes' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of notes displayed.",
          "Expected Result": "All notes associated with the POS are displayed in descending order by date (most recent at the top). Each note shows insert date, author, and text content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Notes/Comment",
      "Preconditions": "User is logged in with permission to view notes. At least two notes exist for the selected POS with different dates.",
      "Execution Mode": "Manual",
      "Functionality": "Display of notes for POS in dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials with view permission; POS with multiple notes (different dates, authors, content).",
      "Expected Result": "Notes for the selected POS are displayed in descending order by date, each with insert date, author, and text content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385"
    },
    {
      "Title": "Display Message When No Notes Exist for POS",
      "ID": "TC-422",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard and select a POS with no notes.",
          "Expected Result": "Dashboard for the selected POS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section for the selected POS.",
          "Expected Result": "A message 'No notes present for this POS' is displayed. No notes are shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Notes/Comment",
      "Preconditions": "User is logged in with permission to view notes. The selected POS has no notes recorded.",
      "Execution Mode": "Manual",
      "Functionality": "Display message when no notes exist",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials with view permission; POS with no notes.",
      "Expected Result": "Message 'No notes present for this POS' is displayed when no notes exist for the POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385"
    },
    {
      "Title": "Hide or Disable Notes Section for Unauthorized Users",
      "ID": "TC-423",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user without permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard and select any POS.",
          "Expected Result": "Dashboard for the selected POS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access the 'Notes' section for the selected POS.",
          "Expected Result": "The notes area is hidden or disabled. A message such as 'Unauthorized access to the POS note' is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Notes/Comment",
      "Preconditions": "User is logged in without permission to view notes.",
      "Execution Mode": "Manual",
      "Functionality": "Access control for notes section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials without view permission; any POS.",
      "Expected Result": "Notes section is hidden or disabled and an unauthorized access message is displayed for users without permission.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385"
    },
    {
      "Title": "Add New Note with Write Permission and Verify Logging",
      "ID": "TC-424",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with write permission for notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard and select a specific POS.",
          "Expected Result": "Dashboard for the selected POS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section for the selected POS.",
          "Expected Result": "The 'Notes' section is displayed with an editable text field and 'Save' and 'Cancel' buttons."
        },
        {
          "Step": 4,
          "Step Description": "Enter a new note in the text field and click 'Save'.",
          "Expected Result": "The new note is saved, appears at the top of the notes list with correct metadata (date, author, content), and the operation is logged in the system logs."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Notes/Comment",
      "Preconditions": "User is logged in with write permission for notes. POS is selected.",
      "Execution Mode": "Manual",
      "Functionality": "Add new note and verify logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials with write permission; POS; note content for test.",
      "Expected Result": "New note is added, displayed at the top with correct metadata, and the operation is logged.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385"
    },
    {
      "Title": "Cancel Note Addition Does Not Save Note",
      "ID": "TC-425",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with write permission for notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard and select a specific POS.",
          "Expected Result": "Dashboard for the selected POS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section for the selected POS.",
          "Expected Result": "The 'Notes' section is displayed with an editable text field and 'Save' and 'Cancel' buttons."
        },
        {
          "Step": 4,
          "Step Description": "Enter a new note in the text field and click 'Cancel'.",
          "Expected Result": "The note is not saved, does not appear in the notes list, and no log entry is created for note addition."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Notes/Comment",
      "Preconditions": "User is logged in with write permission for notes. POS is selected.",
      "Execution Mode": "Manual",
      "Functionality": "Cancel note addition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials with write permission; POS; note content for test.",
      "Expected Result": "Note is not saved or displayed, and no log entry is created when 'Cancel' is used.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385"
    },
    {
      "Title": "Verify Note Metadata Display (Date, Author, Content)",
      "ID": "TC-426",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard and select a POS with at least one note.",
          "Expected Result": "Dashboard for the selected POS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section for the selected POS.",
          "Expected Result": "The 'Notes' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the displayed notes and verify that each note shows the insert date, author, and text content.",
          "Expected Result": "Each note displays the correct insert date, author, and text content as per the database records."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS - Notes/Comment",
      "Preconditions": "User is logged in with permission to view notes. POS has at least one note with known metadata.",
      "Execution Mode": "Manual",
      "Functionality": "Display of note metadata",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials with view permission; POS with at least one note (known date, author, content).",
      "Expected Result": "Each note displays correct insert date, author, and text content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385"
    },
    {
      "Title": "Display Related PoS Table with Matching Results (Default: Exclude Closed PoS)",
      "ID": "TC-427",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in and has access to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with known related PoS (excluding closed PoS).",
          "Expected Result": "The 'Single PoS' dashboard is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS, excluding closed PoS by default."
        },
        {
          "Step": 4,
          "Step Description": "Observe the results displayed in the table/list.",
          "Expected Result": "A table is displayed listing all related PoS matching at least one of the specified criteria. Each row represents a single PoS, with columns for PoS data and relationship info (e.g., 'Same VAT Number Holder')."
        },
        {
          "Step": 5,
          "Step Description": "Verify the presence and functionality of the 'Export to Excel' button.",
          "Expected Result": "The 'Export to Excel' button is visible and enabled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Related PoS",
      "Preconditions": "User is logged in with privileges to view Related PoS. At least one related PoS exists for the selected PoS (excluding closed PoS).",
      "Execution Mode": "Manual",
      "Functionality": "Display of Related PoS and export functionality (excluding closed PoS by default)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; PoS with known related PoS (excluding closed PoS)",
      "Expected Result": "The system displays a table of related PoS (excluding closed PoS), with correct relationship info and an enabled 'Export to Excel' button.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390"
    },
    {
      "Title": "No Related PoS Found – Notification and Disabled Export",
      "ID": "TC-428",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in and has access to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with no related PoS (excluding closed PoS).",
          "Expected Result": "The 'Single PoS' dashboard is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS, excluding closed PoS by default."
        },
        {
          "Step": 4,
          "Step Description": "Observe the results area and the 'Export to Excel' button.",
          "Expected Result": "A notification is displayed indicating that no results were found. No table is shown. The 'Export to Excel' button is disabled or not visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Related PoS",
      "Preconditions": "User is logged in with privileges to view Related PoS. Selected PoS has no related PoS (excluding closed PoS).",
      "Execution Mode": "Manual",
      "Functionality": "Handling of no results scenario and export button state",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; PoS with no related PoS (excluding closed PoS)",
      "Expected Result": "A notification is shown for no results, no table is displayed, and the 'Export to Excel' button is disabled or hidden.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390"
    },
    {
      "Title": "Include Closed PoS in Related PoS Search",
      "ID": "TC-429",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in and has access to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with related closed PoS.",
          "Expected Result": "The 'Single PoS' dashboard is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS, excluding closed PoS by default."
        },
        {
          "Step": 4,
          "Step Description": "Select the checkbox 'Include closed PoS'.",
          "Expected Result": "The system re-initiates the search, now including closed PoS in the comparison."
        },
        {
          "Step": 5,
          "Step Description": "Observe the results displayed in the table/list.",
          "Expected Result": "The table now includes related PoS that are closed, with correct relationship info. Each row represents a single PoS, including closed ones."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Related PoS",
      "Preconditions": "User is logged in with privileges to view Related PoS. Selected PoS has related closed PoS in the database.",
      "Execution Mode": "Manual",
      "Functionality": "Inclusion of closed PoS in related PoS search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; PoS with related closed PoS",
      "Expected Result": "The system displays a table including both open and closed related PoS when the checkbox is selected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390"
    },
    {
      "Title": "Access Details of a Related PoS from the List",
      "ID": "TC-430",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in and has access to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with related PoS.",
          "Expected Result": "The 'Single PoS' dashboard is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard and wait for the results table to load.",
          "Expected Result": "The table of related PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click the edit icon next to a related PoS in the table.",
          "Expected Result": "The system retrieves and displays the details of the selected PoS on the 'Single PoS' screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Related PoS",
      "Preconditions": "User is logged in with privileges to view Related PoS. At least one related PoS is present in the results table.",
      "Execution Mode": "Manual",
      "Functionality": "Navigation to related PoS details from the list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; PoS with related PoS",
      "Expected Result": "Clicking the edit icon displays the selected PoS details on the 'Single PoS' screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390"
    },
    {
      "Title": "Database Connection Error Handling in Related PoS Section",
      "ID": "TC-431",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in and has access to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and access the 'Related PoS' section.",
          "Expected Result": "The system attempts to initiate a search for related PoS."
        },
        {
          "Step": 3,
          "Step Description": "Simulate a database connection error or timeout (e.g., by disconnecting the database or using a test environment with forced error).",
          "Expected Result": "The system displays an error message to the user: 'Error retrieving data'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Related PoS",
      "Preconditions": "User is logged in with privileges to view Related PoS. Database connection is interrupted or unavailable during the search.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for database connection issues in Related PoS section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; test environment with database error simulation",
      "Expected Result": "An error message 'Error retrieving data' is displayed when a database connection error occurs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390"
    },
    {
      "Title": "Verify All Comparison Criteria for Related PoS Search",
      "ID": "TC-432",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in and has access to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with known related PoS for each comparison criterion (e.g., same VAT number, same email, etc.).",
          "Expected Result": "The 'Single PoS' dashboard is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS."
        },
        {
          "Step": 4,
          "Step Description": "Observe the results table and verify that each related PoS is listed with the correct relationship info (e.g., 'Same VAT Number Holder', 'Same Email', etc.).",
          "Expected Result": "Each related PoS is displayed with the correct relationship type(s) according to the matching criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Related PoS",
      "Preconditions": "User is logged in with privileges to view Related PoS. Test data includes PoS with related PoS for each comparison criterion.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of all comparison criteria for related PoS search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; PoS with related PoS for each comparison criterion",
      "Expected Result": "All related PoS are displayed with accurate relationship info for each matching criterion.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390"
    },
    {
      "Title": "Import Excel File with Correct Template and Data",
      "ID": "TC-433",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Download the standard Excel template for a specific data type from the provided link.",
          "Expected Result": "Excel template is downloaded successfully."
        },
        {
          "Step": 4,
          "Step Description": "Copy valid data into the template, ensuring all columns match the expected data types and structure. Remove any formulas by using 'Paste values'.",
          "Expected Result": "Excel file contains only static values, correct headers, and no formulas."
        },
        {
          "Step": 5,
          "Step Description": "Save the file in .xlsx format with a valid name as per the mapping documentation.",
          "Expected Result": "File is saved in .xlsx format with the correct name."
        },
        {
          "Step": 6,
          "Step Description": "Upload the prepared Excel file using the Massive Importer interface.",
          "Expected Result": "File is uploaded successfully and validated by the system."
        },
        {
          "Step": 7,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "Data is imported into Zenit without errors, and a success message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer feature. Excel template and mapping documentation are available.",
      "Execution Mode": "Manual",
      "Functionality": "Data import via Massive Importer using correct template and data.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; valid Excel template; valid data as per mapping.",
      "Expected Result": "Data is imported successfully into Zenit with no errors and a confirmation message is shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-001"
    },
    {
      "Title": "Attempt Import with Integration Active (Informational Message)",
      "ID": "TC-434",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit as a user with access to Massive Importer.",
          "Expected Result": "User is logged in successfully."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that integration with the data owner's system is active (simulate or set integration flag as active).",
          "Expected Result": "Integration is confirmed as active."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the Massive Importer section and attempt to upload a valid Excel file for a data type now available via integration.",
          "Expected Result": "System detects active integration and displays an informational message indicating that Massive Importer should only be used as a backup."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "Integration with the data owner's system is active for the selected data type.",
      "Execution Mode": "Manual",
      "Functionality": "Informational message when attempting import with integration active.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; integration flag active; valid Excel file for integrated data type.",
      "Expected Result": "System displays an informational message and prevents or discourages import when integration is active.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-002"
    },
    {
      "Title": "Reject Excel File with Modified Structure",
      "ID": "TC-435",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file based on the template but modify the structure (e.g., add/remove columns, change column order, or data types).",
          "Expected Result": "Excel file structure is intentionally altered."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the modified Excel file via the Massive Importer.",
          "Expected Result": "System validates the file structure."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system response.",
          "Expected Result": "System rejects the file and displays an error message indicating structure mismatch."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Modified Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Excel file structure during import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with altered structure.",
      "Expected Result": "System rejects the file and displays an error message about structure mismatch.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-003"
    },
    {
      "Title": "Reject Excel File with Formulas Present",
      "ID": "TC-436",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file using the template but leave formulas in one or more cells.",
          "Expected Result": "Excel file contains formulas."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the Excel file with formulas via the Massive Importer.",
          "Expected Result": "System validates the file content."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system response.",
          "Expected Result": "System rejects the file and displays an error message indicating that formulas are not allowed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Excel file with formulas is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of absence of formulas in imported Excel files.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with formulas.",
      "Expected Result": "System rejects the file and displays an error message about formulas being present.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-004"
    },
    {
      "Title": "Reject Excel File Not in .xlsx Format",
      "ID": "TC-437",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file in .xls or .csv format instead of .xlsx.",
          "Expected Result": "Excel file is in an unsupported format."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the non-.xlsx file via the Massive Importer.",
          "Expected Result": "System validates the file format."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system response.",
          "Expected Result": "System rejects the file and displays an error message indicating only .xlsx files are accepted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Excel file in unsupported format is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Excel file format during import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file in .xls or .csv format.",
      "Expected Result": "System rejects the file and displays an error message about file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-005"
    },
    {
      "Title": "Reject Excel File with Empty Rows in Data Block",
      "ID": "TC-438",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file using the template but insert empty rows within the data block.",
          "Expected Result": "Excel file contains empty rows within the data block."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the Excel file with empty rows via the Massive Importer.",
          "Expected Result": "System validates the file content."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system response.",
          "Expected Result": "System rejects the file and displays an error message indicating empty rows are not allowed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Excel file with empty rows is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of absence of empty rows in imported Excel files.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with empty rows.",
      "Expected Result": "System rejects the file and displays an error message about empty rows.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-006"
    },
    {
      "Title": "Reject Excel File with Multiple Worksheets",
      "ID": "TC-439",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file using the template but add an additional worksheet.",
          "Expected Result": "Excel file contains more than one worksheet."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the Excel file with multiple worksheets via the Massive Importer.",
          "Expected Result": "System validates the file content."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system response.",
          "Expected Result": "System rejects the file and displays an error message indicating only one worksheet is allowed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Excel file with multiple worksheets is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of single worksheet requirement in imported Excel files.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with multiple worksheets.",
      "Expected Result": "System rejects the file and displays an error message about multiple worksheets.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-007"
    },
    {
      "Title": "Reject Excel File with Merged Cells or Advanced Elements",
      "ID": "TC-440",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file using the template but include merged cells, pivot tables, or other advanced Excel elements.",
          "Expected Result": "Excel file contains merged cells or advanced elements."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the Excel file with advanced elements via the Massive Importer.",
          "Expected Result": "System validates the file content."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system response.",
          "Expected Result": "System rejects the file and displays an error message indicating advanced elements are not allowed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Excel file with merged cells or advanced elements is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of absence of merged cells and advanced elements in imported Excel files.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with merged cells or advanced elements.",
      "Expected Result": "System rejects the file and displays an error message about advanced elements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-008"
    },
    {
      "Title": "Import Large Excel File Within Size Limit",
      "ID": "TC-441",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare a valid Excel file with a size just below the maximum allowed limit (e.g., 14.9 MB if the limit is 15 MB).",
          "Expected Result": "Excel file is valid and within the size limit."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the large Excel file via the Massive Importer.",
          "Expected Result": "System accepts the file and processes the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Large Excel file within size limit is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import of large Excel files within allowed size limit.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file just below size limit.",
      "Expected Result": "System accepts and imports the file successfully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-009"
    },
    {
      "Title": "Reject Excel File Exceeding Size Limit",
      "ID": "TC-442",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare a valid Excel file with a size exceeding the maximum allowed limit (e.g., 15.1 MB if the limit is 15 MB).",
          "Expected Result": "Excel file is valid but exceeds the size limit."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the oversized Excel file via the Massive Importer.",
          "Expected Result": "System rejects the file and displays an error message indicating the file size exceeds the allowed limit."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Oversized Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of file size limit during import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file exceeding size limit.",
      "Expected Result": "System rejects the file and displays an error message about file size.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-010"
    },
    {
      "Title": "Import Data via Double Submission When File Exceeds Size Limit",
      "ID": "TC-443",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to the Massive Importer section.",
          "Expected Result": "User is on the Massive Importer interface."
        },
        {
          "Step": 2,
          "Step Description": "Prepare two valid Excel files, each containing a portion of the data and each within the allowed size limit, together representing the full dataset.",
          "Expected Result": "Two Excel files are prepared, each within the size limit."
        },
        {
          "Step": 3,
          "Step Description": "Upload the first Excel file via the Massive Importer and confirm import.",
          "Expected Result": "First file is imported successfully."
        },
        {
          "Step": 4,
          "Step Description": "Upload the second Excel file via the Massive Importer and confirm import.",
          "Expected Result": "Second file is imported successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer",
      "Preconditions": "User has access to Zenit and the Massive Importer. Two Excel files, each within size limit, are prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Double submission for large data sets exceeding single file size limit.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; two Excel files within size limit.",
      "Expected Result": "Both files are imported successfully, and the full dataset is loaded into Zenit.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-MI-011"
    },
    {
      "Title": "Import File with Valid Data for PoS Update",
      "ID": "TC-444",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Massive Importer application as an authorized user.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList Data' importer type from the available options.",
          "Expected Result": "The file upload interface for 'Import RedList Data' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Download Template' to obtain the correct file format.",
          "Expected Result": "Template file is downloaded successfully."
        },
        {
          "Step": 5,
          "Step Description": "Fill in the template with valid PoS data as per the required fields and save the file (e.g., RedListData_Valid.xlsx).",
          "Expected Result": "File is saved with valid data in the correct format."
        },
        {
          "Step": 6,
          "Step Description": "Upload the completed file using the 'Upload' button.",
          "Expected Result": "File is uploaded and passes the structural check."
        },
        {
          "Step": 7,
          "Step Description": "Start the massive import process by clicking 'Start Import'.",
          "Expected Result": "System validates the data, displays a summary (e.g., '500 PoS will be updated'), and prompts for confirmation."
        },
        {
          "Step": 8,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays evidence of successful updates."
        },
        {
          "Step": 9,
          "Step Description": "Navigate to the history section and verify the entry for the recent import.",
          "Expected Result": "History contains the file name, summary of the outcome, and allows download of the output file."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - RedList Data",
      "Preconditions": "User has valid credentials and access to the Massive Importer. No ongoing import operations. Template is available for download.",
      "Execution Mode": "Manual",
      "Functionality": "Massive import of PoS data using valid file format and data.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid PoS data in template format (e.g., RedListData_Valid.xlsx)",
      "Expected Result": "PoS data is updated as per the uploaded file. History logs the operation with correct file name and outcome. Output file is downloadable and contains no errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500"
    },
    {
      "Title": "Import File with Missing Mandatory Fields",
      "ID": "TC-445",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Massive Importer application as an authorized user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types Corner - PGS' importer type.",
          "Expected Result": "File upload interface for 'Import Contract Types Corner - PGS' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Download the template and fill it with data, intentionally leaving one or more mandatory fields empty.",
          "Expected Result": "File is saved with missing mandatory fields."
        },
        {
          "Step": 5,
          "Step Description": "Upload the incomplete file using the 'Upload' button.",
          "Expected Result": "System performs a structural check and detects missing mandatory fields."
        },
        {
          "Step": 6,
          "Step Description": "Attempt to start the import process.",
          "Expected Result": "System blocks the import and displays an error message indicating which mandatory fields are missing."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Contract Types Corner - PGS",
      "Preconditions": "User has access to the system. Template is available. File with missing mandatory fields is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Structural validation of imported file for mandatory fields.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Template file with missing mandatory fields (e.g., ContractTypesPGS_MissingFields.xlsx)",
      "Expected Result": "System rejects the file and displays clear error messages for missing mandatory fields. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500"
    },
    {
      "Title": "Import File with Invalid Data Format",
      "ID": "TC-446",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Massive Importer application.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Shops' importer type.",
          "Expected Result": "File upload interface for 'Import Profit and Loss - Shops' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Download the template and fill it with data, intentionally entering invalid formats (e.g., text in numeric fields, invalid date formats).",
          "Expected Result": "File is saved with invalid data formats."
        },
        {
          "Step": 5,
          "Step Description": "Upload the file with invalid data formats.",
          "Expected Result": "System performs a structural check and passes (if structure is correct), then performs data validation and detects format errors."
        },
        {
          "Step": 6,
          "Step Description": "Attempt to start the import process.",
          "Expected Result": "System blocks the import and displays error messages specifying the invalid data formats."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Profit and Loss - Shops",
      "Preconditions": "User has access. File with invalid data formats is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Data validation for correct formats during massive import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Template file with invalid data formats (e.g., ProfitLossShops_InvalidFormat.xlsx)",
      "Expected Result": "System rejects the file and displays specific error messages for each invalid data format. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500"
    },
    {
      "Title": "Import File with Data Integrity Violations",
      "ID": "TC-447",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Massive Importer application.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' importer type.",
          "Expected Result": "File upload interface for 'Import DB Corner' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Download the template and fill it with data that violates data integrity rules (e.g., referencing non-existent PoS IDs).",
          "Expected Result": "File is saved with data integrity violations."
        },
        {
          "Step": 5,
          "Step Description": "Upload the file with data integrity violations.",
          "Expected Result": "System performs structural and format checks, then detects data integrity issues during validation."
        },
        {
          "Step": 6,
          "Step Description": "Attempt to start the import process.",
          "Expected Result": "System blocks the import and displays error messages indicating the data integrity violations."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - DB Corner",
      "Preconditions": "User has access. File with data integrity violations is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Data integrity validation during massive import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Template file with data integrity violations (e.g., DBCorner_IntegrityViolation.xlsx)",
      "Expected Result": "System rejects the file and displays clear error messages for data integrity violations. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500"
    },
    {
      "Title": "Verify History Section Logs All Import Operations",
      "ID": "TC-448",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Massive Importer application.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Perform a successful import operation using a valid file (reuse steps from TC-XPSZENIT500-001).",
          "Expected Result": "Import operation completes successfully."
        },
        {
          "Step": 4,
          "Step Description": "Perform a failed import operation using a file with errors (reuse steps from TC-XPSZENIT500-002 or TC-XPSZENIT500-003).",
          "Expected Result": "Import operation fails as expected."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the history section below the import form.",
          "Expected Result": "History table is displayed with entries for both successful and failed imports."
        },
        {
          "Step": 6,
          "Step Description": "Verify that each entry contains the file name, summary of the outcome, and allows download of the output file.",
          "Expected Result": "Each history entry contains correct file name, outcome summary, and a download link for the output file."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - History Section",
      "Preconditions": "At least one successful and one failed import operation have been performed.",
      "Execution Mode": "Manual",
      "Functionality": "Logging and display of import history.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Files used in previous test cases (valid and invalid imports)",
      "Expected Result": "History section accurately logs all import operations with correct details and downloadable output files.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500"
    },
    {
      "Title": "Verify Output File Contains Error Descriptions for Failed Records",
      "ID": "TC-449",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Massive Importer application.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Perform an import operation using a file with some records containing errors (e.g., invalid PoS IDs).",
          "Expected Result": "Import operation completes with partial success (some records fail)."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the history section and locate the entry for the recent import.",
          "Expected Result": "History entry is present with a download link for the output file."
        },
        {
          "Step": 5,
          "Step Description": "Download the output file from the history entry.",
          "Expected Result": "Output file is downloaded successfully."
        },
        {
          "Step": 6,
          "Step Description": "Open the output file and verify that the ERROR DESC column contains appropriate error descriptions for failed records (e.g., 'PoS unavailable on DB').",
          "Expected Result": "ERROR DESC column is populated with correct error messages for each failed record."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Output File Error Handling",
      "Preconditions": "At least one import operation with failed records has been performed. Output file is available in history.",
      "Execution Mode": "Manual",
      "Functionality": "Error reporting in output files for failed import records.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File with a mix of valid and invalid records (e.g., MixedRecordsWithErrors.xlsx)",
      "Expected Result": "Output file lists all failed records with appropriate error descriptions in the ERROR DESC column.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500"
    },
    {
      "Title": "Import File with Unsupported Structure or Format",
      "ID": "TC-450",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Massive Importer application.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select any importer type (e.g., 'Import Cerved Data').",
          "Expected Result": "File upload interface for selected importer is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file with an unsupported structure or format (e.g., CSV instead of required XLSX, or missing columns).",
          "Expected Result": "System performs a structural check and detects unsupported structure or format."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to start the import process.",
          "Expected Result": "System blocks the import and displays an error message indicating the file structure or format is invalid."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - File Structure Validation",
      "Preconditions": "User has access. File with unsupported structure or format is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Structural validation of imported file format and structure.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File with unsupported structure/format (e.g., CervedData_InvalidStructure.csv)",
      "Expected Result": "System rejects the file and displays a clear error message for unsupported structure or format. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500"
    },
    {
      "Title": "Verify Download of Template File for Each Importer Type",
      "ID": "TC-451",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Massive Importer application.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "For each importer type listed (e.g., 'Import RedList Data', 'Import Contract Types Corner - PGS', etc.), select the importer type.",
          "Expected Result": "File upload interface for the selected importer is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Download Template' for the selected importer type.",
          "Expected Result": "Template file for the selected importer type is downloaded successfully."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Template Download",
      "Preconditions": "User has access. All importer types are available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Template file download for each importer type.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Template file is downloadable for each importer type and matches the required format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500"
    },
    {
      "Title": "Successful Import of Valid Red List Excel File",
      "ID": "TC-452",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file named 'REDLIST_M06_2024.xlsx' containing the required 'DATABASE' sheet and valid PoS data.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the upload action.",
          "Expected Result": "System processes the file and displays a success message indicating the Red List has been imported."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Risk Data' tab for a known PoS from the imported file.",
          "Expected Result": "Imported Red List data for the selected PoS is visible and accurate in the 'Risk Data' tab."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials. The reference Excel file 'REDLIST_M06_2024.xlsx' is available and contains the 'DATABASE' sheet with valid PoS data.",
      "Execution Mode": "Manual",
      "Functionality": "Red List import via Excel upload",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel file 'REDLIST_M06_2024.xlsx' with 'DATABASE' sheet and PoS data.",
      "Expected Result": "Red List Excel file is successfully imported, and data is visible for each PoS in the Dashboard's 'Risk Data' tab.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501"
    },
    {
      "Title": "Import Fails with Incorrect File Name Format",
      "ID": "TC-453",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file named 'REDLIST_JUNE_2024.xlsx' (incorrect naming convention).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file name format."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials. The Excel file 'REDLIST_JUNE_2024.xlsx' is available but does not follow the required naming convention.",
      "Execution Mode": "Manual",
      "Functionality": "Red List import file name validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file 'REDLIST_JUNE_2024.xlsx' (invalid name).",
      "Expected Result": "System prevents import and displays an error for incorrect file name format.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501"
    },
    {
      "Title": "Import Fails When 'DATABASE' Sheet is Missing",
      "ID": "TC-454",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file named 'REDLIST_M06_2024.xlsx' that does NOT contain a 'DATABASE' sheet.",
          "Expected Result": "System rejects the file and displays an error message indicating the required sheet is missing."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials. The Excel file 'REDLIST_M06_2024.xlsx' is available but lacks the 'DATABASE' sheet.",
      "Execution Mode": "Manual",
      "Functionality": "Red List import file content validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file 'REDLIST_M06_2024.xlsx' without 'DATABASE' sheet.",
      "Expected Result": "System prevents import and displays an error for missing 'DATABASE' sheet.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501"
    },
    {
      "Title": "Import Fails When File Contains Invalid Data Format",
      "ID": "TC-455",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file named 'REDLIST_M06_2024.xlsx' with the 'DATABASE' sheet, but with missing or malformed PoS data (e.g., missing required columns or invalid data types).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid or incomplete data."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials. The Excel file 'REDLIST_M06_2024.xlsx' is available with 'DATABASE' sheet but contains invalid or incomplete data.",
      "Execution Mode": "Manual",
      "Functionality": "Red List import data validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file 'REDLIST_M06_2024.xlsx' with invalid/malformed data in 'DATABASE' sheet.",
      "Expected Result": "System prevents import and displays an error for invalid or incomplete data.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501"
    },
    {
      "Title": "Verify Data Visibility After Successful Import",
      "ID": "TC-456",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and successfully import a valid Red List Excel file as per TC-XPS-ZENIT-501-001.",
          "Expected Result": "Red List file is imported successfully."
        },
        {
          "Step": 3,
          "Step Description": "Go to the 'Dashboard - Single PoS - Risk Data' tab for a PoS included in the imported file.",
          "Expected Result": "The imported Red List data is displayed for the selected PoS in the 'Risk Data' tab."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "User has valid credentials. A valid Red List Excel file has been successfully imported.",
      "Execution Mode": "Manual",
      "Functionality": "Red List data visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Successfully imported Red List data.",
      "Expected Result": "Imported Red List data is visible and accurate for each PoS in the Dashboard's 'Risk Data' tab.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501"
    },
    {
      "Title": "Attempt Import Without Selecting a File",
      "ID": "TC-457",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Upload' or 'Confirm' button without selecting any file.",
          "Expected Result": "System displays an error message indicating that no file was selected for upload."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Low",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials. No file is selected for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Red List import file selection validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; No file selected.",
      "Expected Result": "System prevents import and displays an error when no file is selected.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501"
    },
    {
      "Title": "Verify Synchronization Reminder with GEO and SIMP Systems",
      "ID": "TC-458",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import RedList'.",
          "Expected Result": "'Import RedList' upload interface is shown."
        },
        {
          "Step": 3,
          "Step Description": "Observe the interface for any informational message or reminder regarding synchronization with GEO and SIMP systems before uploading the file.",
          "Expected Result": "System displays a reminder or informational message about synchronizing the Red List upload with GEO and SIMP systems."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Low",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Red List import synchronization reminder",
      "Test Type": "content",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User is reminded to synchronize the Red List upload with GEO and SIMP systems.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501"
    },
    {
      "Title": "Successful Import of PGS Contract Types via Massive Importer",
      "ID": "TC-459",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGS'.",
          "Expected Result": "File upload interface for PGS contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid PGS contract Excel file prepared using the system-provided template.",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS included in the import file.",
          "Expected Result": "Imported PGS contract data is visible and correctly updated for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. A valid PGS contract Excel file, prepared using the system template, is available.",
      "Execution Mode": "Manual",
      "Functionality": "Importing PGS contract types via Excel template",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid PGS contract Excel file (system template, correct data, valid ZONA RICE values)",
      "Expected Result": "PGS contract data is successfully imported and visible in the Contracts tab for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Successful Import of PGI Contract Types via Massive Importer",
      "ID": "TC-460",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGI'.",
          "Expected Result": "File upload interface for PGI contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid PGI contract Excel file prepared using the system-provided template.",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS included in the import file.",
          "Expected Result": "Imported PGI contract data is visible and correctly updated for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. A valid PGI contract Excel file, prepared using the system template, is available.",
      "Execution Mode": "Manual",
      "Functionality": "Importing PGI contract types via Excel template",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid PGI contract Excel file (system template, correct data, valid ZONA RICE values)",
      "Expected Result": "PGI contract data is successfully imported and visible in the Contracts tab for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure (PGS)",
      "ID": "TC-461",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGS'.",
          "Expected Result": "File upload interface for PGS contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file with an invalid structure (e.g., missing required columns, extra columns, or incorrect sheet name).",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating that the file structure is invalid and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. An invalid PGS contract Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Excel template structure for PGS import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid PGS contract Excel file (e.g., missing columns, extra columns, wrong sheet name)",
      "Expected Result": "System rejects the file and displays a clear error message about the invalid template structure. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Import Fails with Invalid Data in Excel File (PGI)",
      "ID": "TC-462",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGI'.",
          "Expected Result": "File upload interface for PGI contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a PGI contract Excel file with invalid data (e.g., missing required fields, invalid ZONA RICE values, or incorrect data types).",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating the specific data validation errors and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. An invalid PGI contract Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data in Excel file for PGI import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid PGI contract Excel file (e.g., missing required fields, invalid ZONA RICE values)",
      "Expected Result": "System rejects the file and displays a clear error message about the invalid data. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Import Fails When Uploading Original BOA File Instead of System Template",
      "ID": "TC-463",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'Import Contract Types Corner - PGS' or 'Import Contract Types Corner - PGI'.",
          "Expected Result": "File upload interface for the selected contract type is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select the original BOA file (\"REV Rete Attiva <ddmmyyyy>\") with both PGI and PGS sheets.",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating that the file is not in the required template format and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. The original BOA file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of file format for import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original BOA file (not in system template format)",
      "Expected Result": "System rejects the original BOA file and displays a clear error message about the required template. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Import Fails When Required Fields Are Missing in Template (PGS)",
      "ID": "TC-464",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGS'.",
          "Expected Result": "File upload interface for PGS contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a PGS contract Excel file missing one or more required fields (e.g., ZONA RICE).",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating which required fields are missing and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. A PGS contract Excel file missing required fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields in PGS import template",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PGS contract Excel file missing required fields (e.g., ZONA RICE)",
      "Expected Result": "System rejects the file and displays a clear error message about the missing required fields. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Import Fails When ZONA RICE Reference Key Does Not Match Any PoS",
      "ID": "TC-465",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'Import Contract Types Corner - PGS' or 'Import Contract Types Corner - PGI'.",
          "Expected Result": "File upload interface for the selected contract type is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a contract Excel file with ZONA RICE values that do not correspond to any existing PoS in the system.",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating that the ZONA RICE reference key does not match any PoS and aborts the import for those records."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. A contract Excel file with invalid ZONA RICE values is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of ZONA RICE reference key during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Contract Excel file with ZONA RICE values not present in the system",
      "Expected Result": "System rejects records with invalid ZONA RICE values and displays a clear error message. No data is imported for those records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Import Fails When Uploading a Non-Excel File",
      "ID": "TC-466",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'Import Contract Types Corner - PGS' or 'Import Contract Types Corner - PGI'.",
          "Expected Result": "File upload interface for the selected contract type is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a non-Excel file (e.g., .pdf, .txt, .csv).",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating that only Excel files are accepted and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. A non-Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of file type during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Non-Excel file (e.g., .pdf, .txt, .csv)",
      "Expected Result": "System rejects non-Excel files and displays a clear error message. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Import Fails When Uploading an Empty Excel File",
      "ID": "TC-467",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'Import Contract Types Corner - PGS' or 'Import Contract Types Corner - PGI'.",
          "Expected Result": "File upload interface for the selected contract type is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an empty Excel file (no data, only headers or completely blank).",
          "Expected Result": "Selected file name is displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating that the file contains no data and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. An empty Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of empty Excel file during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Empty Excel file (no data, only headers or blank)",
      "Expected Result": "System rejects empty Excel files and displays a clear error message. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502"
    },
    {
      "Title": "Successful Import of Valid AWP Contract Types Excel File",
      "ID": "TC-468",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "'Import Contract Types - AWP' import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the standard AWP template, containing correct data for multiple PoS with unique ZONA RICE values.",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to complete validation and processing.",
          "Expected Result": "System confirms successful import and displays a success message."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for one of the imported PoS.",
          "Expected Result": "Contractual information for the selected PoS is updated as per the imported data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and a valid AWP contract Excel template filled with correct data.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid AWP Excel template with correct data for multiple PoS.",
      "Expected Result": "AWP contract data is successfully imported and visible in the Dashboard for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure",
      "ID": "TC-469",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "Import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file that does not conform to the required AWP template structure (e.g., missing columns, extra columns, incorrect sheet name).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an incorrectly structured Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (wrong structure).",
      "Expected Result": "System prevents import and displays a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504"
    },
    {
      "Title": "Import Fails with Missing Mandatory Data in Excel",
      "ID": "TC-470",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Contract Types - AWP'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file with missing mandatory fields (e.g., missing ZONA RICE values for some rows).",
          "Expected Result": "System rejects the file and displays an error message specifying the missing mandatory data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with missing mandatory data.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with missing ZONA RICE values.",
      "Expected Result": "System prevents import and displays a clear error message about missing mandatory data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504"
    },
    {
      "Title": "Import Fails with Duplicate ZONA RICE Keys in Excel",
      "ID": "TC-471",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Contract Types - AWP'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file containing duplicate ZONA RICE values for different rows.",
          "Expected Result": "System rejects the file and displays an error message indicating duplicate ZONA RICE keys."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with duplicate ZONA RICE values.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate ZONA RICE values.",
      "Expected Result": "System prevents import and displays a clear error message about duplicate ZONA RICE keys.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504"
    },
    {
      "Title": "Import Fails with Invalid Data Types in Excel",
      "ID": "TC-472",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Contract Types - AWP'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file where one or more fields contain invalid data types (e.g., text in a numeric field).",
          "Expected Result": "System rejects the file and displays an error message indicating the invalid data type(s)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with invalid data types.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid data types.",
      "Expected Result": "System prevents import and displays a clear error message about invalid data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504"
    },
    {
      "Title": "Import Fails with Empty Excel File",
      "ID": "TC-473",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Contract Types - AWP'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an empty Excel file (no data rows).",
          "Expected Result": "System rejects the file and displays an error message indicating that the file is empty or contains no data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an empty Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Empty Excel file.",
      "Expected Result": "System prevents import and displays a clear error message about the empty file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504"
    },
    {
      "Title": "Import Fails with Incorrect File Format (Non-Excel)",
      "ID": "TC-474",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Contract Types - AWP'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload a file in a non-Excel format (e.g., .csv, .pdf, .txt).",
          "Expected Result": "System rejects the file and displays an error message indicating unsupported file format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and a non-Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Non-Excel file (e.g., .csv, .pdf, .txt).",
      "Expected Result": "System prevents import and displays a clear error message about unsupported file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504"
    },
    {
      "Title": "Verify Data Visibility After Successful Import",
      "ID": "TC-475",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and successfully import a valid AWP contract Excel file.",
          "Expected Result": "System confirms successful import."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for each PoS included in the import.",
          "Expected Result": "Imported contractual information is visible and matches the data from the Excel file for each PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "User has access to ZENIT system and has successfully imported valid AWP contract data.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP / Data Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Successfully imported AWP contract data.",
      "Expected Result": "Imported contract data is visible and accurate in the Dashboard for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504"
    },
    {
      "Title": "Successful Import of Valid Betting and VLT Contract Types Excel File",
      "ID": "TC-476",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare the Excel template for Contract Types as provided by the system.",
          "Expected Result": "Excel template is available and ready for data entry."
        },
        {
          "Step": 2,
          "Step Description": "Extract Betting and VLT contract data from 'ELENCO CONTRATTI PV SPECIALIZZATI.xlsx'.",
          "Expected Result": "Relevant contract data is identified and ready for transcription."
        },
        {
          "Step": 3,
          "Step Description": "Transcribe the extracted Betting and VLT contract data into the provided Excel template, ensuring all required fields and structure are maintained.",
          "Expected Result": "Excel template is correctly filled with valid contract data."
        },
        {
          "Step": 4,
          "Step Description": "Access the ZENIT application and navigate to the 'Massive Importer' section.",
          "Expected Result": "User is in the 'Massive Importer' section."
        },
        {
          "Step": 5,
          "Step Description": "Select 'Import Contract Types - Specializzati'.",
          "Expected Result": "'Import Contract Types - Specializzati' option is selected."
        },
        {
          "Step": 6,
          "Step Description": "Upload the prepared Excel template and submit the import request.",
          "Expected Result": "System processes the uploaded file."
        },
        {
          "Step": 7,
          "Step Description": "Wait for the import validation to complete.",
          "Expected Result": "System confirms successful validation and import."
        },
        {
          "Step": 8,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a relevant PoS.",
          "Expected Result": "Imported contract data is visible and correctly updated for the selected PoS."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT with permissions to import contract types. System-provided Excel template is available. Valid Betting and VLT contract data is available for import.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - Specializzati",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "System Excel template, valid Betting and VLT contract data, user credentials with import permissions.",
      "Expected Result": "Contractual information for each PoS is updated in ZENIT and visible in the dashboard after successful import.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505"
    },
    {
      "Title": "Import Fails with Incorrect Excel Template Structure",
      "ID": "TC-477",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an Excel file with incorrect structure (e.g., missing required columns, extra columns, or incorrect sheet name).",
          "Expected Result": "Excel file is ready with intentional structural errors."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT application and navigate to the 'Massive Importer' section.",
          "Expected Result": "User is in the 'Massive Importer' section."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Contract Types - Specializzati'.",
          "Expected Result": "'Import Contract Types - Specializzati' option is selected."
        },
        {
          "Step": 4,
          "Step Description": "Upload the incorrectly structured Excel file and submit the import request.",
          "Expected Result": "System processes the uploaded file."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the import validation to complete.",
          "Expected Result": "System displays an error message indicating the template structure is invalid and import is rejected."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT with permissions to import contract types. Incorrectly structured Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - Specializzati",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing/extra columns or incorrect sheet name, user credentials with import permissions.",
      "Expected Result": "System rejects the import and displays a clear error message about the template structure.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505"
    },
    {
      "Title": "Import Fails with Invalid Data in Excel Template",
      "ID": "TC-478",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare the correct Excel template for Contract Types.",
          "Expected Result": "Excel template is available and ready for data entry."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid data (e.g., missing mandatory fields, invalid data types, or out-of-range values) for Betting and VLT contracts.",
          "Expected Result": "Excel template contains invalid data."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT application and navigate to the 'Massive Importer' section.",
          "Expected Result": "User is in the 'Massive Importer' section."
        },
        {
          "Step": 4,
          "Step Description": "Select 'Import Contract Types - Specializzati'.",
          "Expected Result": "'Import Contract Types - Specializzati' option is selected."
        },
        {
          "Step": 5,
          "Step Description": "Upload the Excel template with invalid data and submit the import request.",
          "Expected Result": "System processes the uploaded file."
        },
        {
          "Step": 6,
          "Step Description": "Wait for the import validation to complete.",
          "Expected Result": "System displays an error message indicating the specific data validation errors and import is rejected."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT with permissions to import contract types. Excel template with invalid data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - Specializzati",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel template with invalid/missing data, user credentials with import permissions.",
      "Expected Result": "System rejects the import and displays detailed error messages about the invalid data.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505"
    },
    {
      "Title": "Import Fails When Uploading the Original Source File Instead of the Template",
      "ID": "TC-479",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain the original file 'ELENCO CONTRATTI PV SPECIALIZZATI.xlsx' without any modifications.",
          "Expected Result": "Original source file is available."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT application and navigate to the 'Massive Importer' section.",
          "Expected Result": "User is in the 'Massive Importer' section."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Contract Types - Specializzati'.",
          "Expected Result": "'Import Contract Types - Specializzati' option is selected."
        },
        {
          "Step": 4,
          "Step Description": "Upload the original source file and submit the import request.",
          "Expected Result": "System processes the uploaded file."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the import validation to complete.",
          "Expected Result": "System displays an error message indicating that the file format is not accepted and import is rejected."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT with permissions to import contract types. Original source file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - Specializzati",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Original 'ELENCO CONTRATTI PV SPECIALIZZATI.xlsx' file, user credentials with import permissions.",
      "Expected Result": "System rejects the import and displays a clear error message about the file format.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505"
    },
    {
      "Title": "Verify Data Visibility in Dashboard After Successful Import",
      "ID": "TC-480",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Successfully import valid Betting and VLT contract types using the correct Excel template (as per TC-001).",
          "Expected Result": "Import is completed successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS included in the import.",
          "Expected Result": "Dashboard is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the imported contract data is visible and matches the data from the uploaded Excel template.",
          "Expected Result": "Contract data is correctly displayed and matches the imported values."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "Successful import of valid contract types has been completed. User has access to the dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - Specializzati",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Imported contract data, user credentials with dashboard access.",
      "Expected Result": "Imported contract data is visible and accurate in the dashboard for each relevant PoS.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505"
    },
    {
      "Title": "Import Fails When Required Reference Key (ZONA RICE) is Missing",
      "ID": "TC-481",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare the correct Excel template for Contract Types.",
          "Expected Result": "Excel template is available and ready for data entry."
        },
        {
          "Step": 2,
          "Step Description": "Enter Betting and VLT contract data omitting the ZONA RICE reference key for one or more rows.",
          "Expected Result": "Excel template contains rows with missing ZONA RICE values."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT application and navigate to the 'Massive Importer' section.",
          "Expected Result": "User is in the 'Massive Importer' section."
        },
        {
          "Step": 4,
          "Step Description": "Select 'Import Contract Types - Specializzati'.",
          "Expected Result": "'Import Contract Types - Specializzati' option is selected."
        },
        {
          "Step": 5,
          "Step Description": "Upload the Excel template with missing ZONA RICE values and submit the import request.",
          "Expected Result": "System processes the uploaded file."
        },
        {
          "Step": 6,
          "Step Description": "Wait for the import validation to complete.",
          "Expected Result": "System displays an error message indicating that ZONA RICE is required and import is rejected."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT with permissions to import contract types. Excel template with missing ZONA RICE values is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - Specializzati",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel template with missing ZONA RICE, user credentials with import permissions.",
      "Expected Result": "System rejects the import and displays a clear error message about the missing ZONA RICE reference key.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505"
    },
    {
      "Title": "Successful Import of RETINA Data via Excel Template",
      "ID": "TC-482",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select a correctly filled Excel file using the RETINA template, including valid PoS data, week number, and year.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' section and select a PoS included in the import.",
          "Expected Result": "Imported data for the selected PoS, including week number and year, is correctly displayed on the dashboard."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT with appropriate permissions. RETINA Excel template is available and filled with valid data for at least one PoS, including week number and year.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA data via Excel template and update PoS information.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid RETINA Excel file with PoS data, week number, and year.",
      "Expected Result": "RETINA data is successfully imported, PoS information is updated, and data is visible on the dashboard with correct week and year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Import Fails with Incorrect Excel Template Structure",
      "ID": "TC-483",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import RETINA'.",
          "Expected Result": "'Import RETINA' upload interface is shown."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload an Excel file that does not conform to the RETINA template structure (e.g., missing required columns or sheets).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. An Excel file with incorrect structure is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of RETINA template structure during import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid RETINA Excel file (e.g., missing required columns or sheets).",
      "Expected Result": "System prevents import and displays a clear error message about the template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Import Fails When Required Fields Are Missing in Excel",
      "ID": "TC-484",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import RETINA'.",
          "Expected Result": "Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a RETINA Excel file missing required fields (e.g., missing week number, year, IDRICE, or ZonaRice).",
          "Expected Result": "System rejects the file and displays an error message specifying the missing required fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. RETINA Excel file with missing required fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields in RETINA import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file missing week number, year, IDRICE, or ZonaRice.",
      "Expected Result": "Import is blocked and user is informed about the missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Import Fails When Duplicate PoS Keys (IDRICE + ZonaRice) Are Present",
      "ID": "TC-485",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import RETINA'.",
          "Expected Result": "Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a RETINA Excel file containing duplicate rows with the same IDRICE and ZonaRice values.",
          "Expected Result": "System rejects the file and displays an error message indicating duplicate PoS keys."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. RETINA Excel file with duplicate PoS keys is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of unique PoS keys during RETINA import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with duplicate IDRICE and ZonaRice combinations.",
      "Expected Result": "Import is blocked and user is informed about duplicate PoS keys.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Import Fails When Week Number or Year Is Invalid",
      "ID": "TC-486",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import RETINA'.",
          "Expected Result": "Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a RETINA Excel file with invalid week number (e.g., 0 or 54) or invalid year (e.g., non-numeric or out of range).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid week number or year."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. RETINA Excel file with invalid week number or year is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of week number and year fields during RETINA import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with week number 0, 54, or year as 'abcd'.",
      "Expected Result": "Import is blocked and user is informed about invalid week number or year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Import Fails When Non-Numeric Data Is Provided in Numeric Fields",
      "ID": "TC-487",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import RETINA'.",
          "Expected Result": "Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a RETINA Excel file where numeric fields (e.g., IDRICE, week number, year) contain non-numeric data.",
          "Expected Result": "System rejects the file and displays an error message indicating invalid data types."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. RETINA Excel file with non-numeric data in numeric fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data types in RETINA import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with 'abc' in IDRICE or week number fields.",
      "Expected Result": "Import is blocked and user is informed about invalid data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Import Fails When File Is Not an Excel File",
      "ID": "TC-488",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import RETINA'.",
          "Expected Result": "Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload a file that is not an Excel file (e.g., .csv, .txt, .pdf).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file format."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. Non-Excel file is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of file format during RETINA import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File with .csv, .txt, or .pdf extension.",
      "Expected Result": "Import is blocked and user is informed about invalid file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Verify Data Update for Existing PoS After Successful Import",
      "ID": "TC-489",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import RETINA'.",
          "Expected Result": "Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid RETINA Excel file with updated data for an existing PoS (matching IDRICE and ZonaRice).",
          "Expected Result": "System processes the file and displays a success message."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to 'Dashboard - Single PoS - Business Data' and select the updated PoS.",
          "Expected Result": "Dashboard displays the updated data for the PoS, including the new week number and year."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. Existing PoS data is present in the system. RETINA Excel file with updated data for the PoS is available.",
      "Execution Mode": "Manual",
      "Functionality": "Update of existing PoS data via RETINA import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with updated data for an existing PoS (same IDRICE and ZonaRice).",
      "Expected Result": "PoS data is updated and visible on the dashboard with correct week and year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Verify New PoS Creation After Successful Import",
      "ID": "TC-490",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import RETINA'.",
          "Expected Result": "Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid RETINA Excel file containing data for a new PoS (unique IDRICE and ZonaRice not present in the system).",
          "Expected Result": "System processes the file and displays a success message."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to 'Dashboard - Single PoS - Business Data' and search for the new PoS.",
          "Expected Result": "Dashboard displays the new PoS with imported data, including week number and year."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. RETINA Excel file with data for a new PoS is available.",
      "Execution Mode": "Manual",
      "Functionality": "Creation of new PoS via RETINA import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with data for a new PoS (unique IDRICE and ZonaRice).",
      "Expected Result": "New PoS is created and visible on the dashboard with correct data, week, and year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Verify Dashboard Displays Correct Week and Year After Import",
      "ID": "TC-491",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import RETINA'.",
          "Expected Result": "Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid RETINA Excel file with specific week number and year.",
          "Expected Result": "System processes the file and displays a success message."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to 'Dashboard - Single PoS - Business Data' and select a PoS from the import.",
          "Expected Result": "Dashboard displays the correct week number and year as imported from the Excel file."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - RETINA Import",
      "Preconditions": "User has access to ZENIT. RETINA Excel file with specific week number and year is available.",
      "Execution Mode": "Manual",
      "Functionality": "Display of week number and year on dashboard after RETINA import.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with week number 12 and year 2024.",
      "Expected Result": "Dashboard displays the correct week number and year for imported PoS data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510"
    },
    {
      "Title": "Successful Import of Valid P&L Shops Excel File",
      "ID": "TC-492",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Shops' option.",
          "Expected Result": "Import interface for P&L Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file filled according to the system's template, including correct month and year of reference.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Import Profit and Loss - Shops",
      "Preconditions": "User has access to ZENIT system and a valid Excel template filled with correct data, including month and year of reference.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel file with correct structure and data for at least one PoS, including month and year.",
      "Expected Result": "The system successfully imports the data, updates the information for each PoS using Zona Rice as the reference key, and displays a success message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure",
      "ID": "TC-493",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Profit and Loss - Shops'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, or incorrect sheet name).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Import Profit and Loss - Shops",
      "Preconditions": "User has access to ZENIT system and an Excel file with incorrect structure.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with missing required columns or incorrect sheet name.",
      "Expected Result": "The system rejects the file and displays a clear error message about the invalid template structure. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511"
    },
    {
      "Title": "Import Fails When Month and Year of Reference Are Missing",
      "ID": "TC-494",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import Profit and Loss - Shops'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file that is otherwise valid but missing the month and/or year of reference.",
          "Expected Result": "System rejects the file and displays an error message indicating that the month and year of reference are required."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Import Profit and Loss - Shops",
      "Preconditions": "User has access to ZENIT system and an Excel file missing month/year reference.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing month and/or year of reference.",
      "Expected Result": "The system rejects the file and displays a clear error message about missing month/year of reference. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511"
    },
    {
      "Title": "Import Fails When Zona Rice Reference Key Is Missing or Invalid",
      "ID": "TC-495",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import Profit and Loss - Shops'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file where one or more rows are missing the Zona Rice reference key or contain an invalid value.",
          "Expected Result": "System rejects the file and displays an error message indicating the missing or invalid Zona Rice reference key."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Import Profit and Loss - Shops",
      "Preconditions": "User has access to ZENIT system and an Excel file with missing/invalid Zona Rice reference key.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with missing or invalid Zona Rice reference key in one or more rows.",
      "Expected Result": "The system rejects the file and displays a clear error message about the missing or invalid Zona Rice reference key. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511"
    },
    {
      "Title": "Dashboard Displays Imported Data for Each PoS",
      "ID": "TC-496",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Successfully import a valid P&L Shops Excel file for a given month and year (as per TC-511-001).",
          "Expected Result": "Import is successful."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' tab for a PoS included in the import.",
          "Expected Result": "Business Data tab displays the imported Collection, Revenues, and Fees data for the selected PoS, with the correct month and year of reference."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for the same PoS.",
          "Expected Result": "ADI Data tab displays the imported data for the selected PoS, with the correct month and year of reference."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard - Single PoS",
      "Preconditions": "At least one successful import of valid data for a PoS has been performed.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with imported data for a specific month and year.",
      "Expected Result": "The dashboard displays the imported Collection, Revenues, and Fees data for each PoS, with the correct month and year of reference in both Business Data and ADI Data tabs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511"
    },
    {
      "Title": "Import Fails When Required Data Fields Are Missing in Excel",
      "ID": "TC-497",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import Profit and Loss - Shops'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file missing one or more required data fields (e.g., Collection, Revenues, or Fees).",
          "Expected Result": "System rejects the file and displays an error message indicating which required fields are missing."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Import Profit and Loss - Shops",
      "Preconditions": "User has access to ZENIT system and an Excel file missing required data fields.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing Collection, Revenues, or Fees columns.",
      "Expected Result": "The system rejects the file and displays a clear error message about missing required data fields. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511"
    },
    {
      "Title": "Import Fails When File Format Is Not Excel",
      "ID": "TC-498",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import Profit and Loss - Shops'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload a file that is not in Excel format (e.g., CSV, PDF, or TXT).",
          "Expected Result": "System rejects the file and displays an error message indicating that only Excel files are accepted."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Import Profit and Loss - Shops",
      "Preconditions": "User has access to ZENIT system and a non-Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; File in CSV, PDF, or TXT format.",
      "Expected Result": "The system rejects the file and displays a clear error message about invalid file format. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511"
    },
    {
      "Title": "Import Fails When Duplicate Data for Same Month and Year Is Uploaded",
      "ID": "TC-499",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Successfully import a valid P&L Shops Excel file for a specific month and year.",
          "Expected Result": "Import is successful."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to import another Excel file with data for the same PoS, month, and year.",
          "Expected Result": "System rejects the file and displays an error message indicating that data for the same month and year already exists."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Massive Importer - Import Profit and Loss - Shops",
      "Preconditions": "At least one successful import for a specific PoS, month, and year has been performed.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Two Excel files with the same PoS, month, and year.",
      "Expected Result": "The system rejects the duplicate import and displays a clear error message. No duplicate data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511"
    },
    {
      "Title": "Successful Import of Valid P&L Gaming Hall Data Excel File",
      "ID": "TC-500",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' option.",
          "Expected Result": "Import interface for P&L Gaming Hall is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select a valid Excel file structured according to the standard template, containing correct Collection, Revenues, Fees, Zona Rice, and the required month and year.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System validates the file and displays a success message indicating that the data has been imported."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the Dashboard - Single PoS - 'Business Data' and 'ADI Data' tabs for a PoS included in the import.",
          "Expected Result": "Imported data for the selected PoS is correctly displayed, including the month and year of reference."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Import Profit and Loss - Gaming Hall",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. The Excel template is correctly filled with valid data, including month and year.",
      "Execution Mode": "Manual",
      "Functionality": "Importing P&L data for Gaming Hall via Excel template",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct structure and data for at least one PoS, including month and year.",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the correct information on the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512"
    },
    {
      "Title": "Import Fails with Missing Month and Year in Excel Template",
      "ID": "TC-501",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Gaming Hall'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file structured according to the template but missing the month and year fields.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System displays a validation error indicating that the month and year are required and the import is not performed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Import Profit and Loss - Gaming Hall",
      "Preconditions": "User has access to the ZENIT system. Excel template is missing month and year fields.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing month and year fields.",
      "Expected Result": "System rejects the import and displays a clear error message about missing month and year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512"
    },
    {
      "Title": "Import Fails with Incorrect Excel Template Structure",
      "ID": "TC-502",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer'.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Gaming Hall'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, or incorrect sheet name).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System displays a validation error indicating the template structure is invalid and the import is not performed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Import Profit and Loss - Gaming Hall",
      "Preconditions": "User has access to the ZENIT system. Excel file with incorrect structure is available.",
      "Execution Mode": "Manual",
      "Functionality": "Template structure validation during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing/extra columns or incorrect sheet name.",
      "Expected Result": "System rejects the import and displays a clear error message about the template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512"
    },
    {
      "Title": "Import Fails with Invalid Zona Rice Reference Key",
      "ID": "TC-503",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer'.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Gaming Hall'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with a Zona Rice value that does not exist in the system.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System displays a validation error indicating that the Zona Rice reference key is invalid and the import is not performed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Import Profit and Loss - Gaming Hall",
      "Preconditions": "User has access to the ZENIT system. Excel file with invalid Zona Rice value is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Zona Rice reference key during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with a Zona Rice value not present in the system.",
      "Expected Result": "System rejects the import and displays a clear error message about the invalid Zona Rice reference key.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512"
    },
    {
      "Title": "Import Fails with Non-Numeric Values in Numeric Fields",
      "ID": "TC-504",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer'.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Gaming Hall'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file where numeric fields (e.g., Collection, Revenues, Fees) contain non-numeric values (e.g., text or special characters).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System displays a validation error indicating that numeric fields contain invalid data and the import is not performed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Import Profit and Loss - Gaming Hall",
      "Preconditions": "User has access to the ZENIT system. Excel file with non-numeric values in numeric fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data types during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with text or special characters in numeric fields.",
      "Expected Result": "System rejects the import and displays a clear error message about invalid data types in numeric fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512"
    },
    {
      "Title": "Import Fails with Duplicate Zona Rice Entries in Excel File",
      "ID": "TC-505",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer'.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Gaming Hall'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing duplicate Zona Rice entries.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System displays a validation error indicating duplicate Zona Rice entries and the import is not performed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Import Profit and Loss - Gaming Hall",
      "Preconditions": "User has access to the ZENIT system. Excel file with duplicate Zona Rice entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of unique Zona Rice entries during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate Zona Rice entries.",
      "Expected Result": "System rejects the import and displays a clear error message about duplicate Zona Rice entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512"
    },
    {
      "Title": "Import Fails When Original CdG File Is Uploaded Instead of Template",
      "ID": "TC-506",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer'.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Gaming Hall'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload the original CdG file (e.g., 'P&L GAMING HALL YTD M05 2024 sent.xlsx') instead of the required template.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System displays a validation error indicating that the file does not match the required template and the import is not performed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Import Profit and Loss - Gaming Hall",
      "Preconditions": "User has access to the ZENIT system. Original CdG file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of correct template usage during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Original CdG file (not the system template).",
      "Expected Result": "System rejects the import and displays a clear error message about using the correct template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512"
    },
    {
      "Title": "Verify Dashboard Displays Imported Data with Correct Month and Year",
      "ID": "TC-507",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS - 'Business Data' tab for a PoS included in a successful import.",
          "Expected Result": "'Business Data' tab is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the imported Collection, Revenues, and Fees data are displayed for the correct month and year.",
          "Expected Result": "Dashboard displays the imported data with the correct month and year of reference."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'ADI Data' tab for the same PoS.",
          "Expected Result": "'ADI Data' tab is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported data is also reflected in the 'ADI Data' tab for the correct month and year.",
          "Expected Result": "'ADI Data' tab displays the imported data with the correct month and year of reference."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Import Profit and Loss - Gaming Hall",
      "Preconditions": "A successful import of valid data has been performed for at least one PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard data display after import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Previously imported valid data for a PoS, including month and year.",
      "Expected Result": "Dashboard displays the imported data for the correct PoS, month, and year in both 'Business Data' and 'ADI Data' tabs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512"
    },
    {
      "Title": "Successful Import of Valid P&L Corner Excel File",
      "ID": "TC-508",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "Import interface for P&L Corner is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file that follows the required template, including correct month and year of reference, and valid PoS data.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System validates the file and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' and 'ADI Data' tabs for a PoS included in the import.",
          "Expected Result": "Imported Collection, Revenues, and Fees data for the selected PoS are correctly displayed, including the correct month and year of reference."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. The Excel template is correctly filled with valid data, including month and year of reference.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct structure, PoS data, and reference month/year.",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the correct information on the dashboard.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513"
    },
    {
      "Title": "Import Fails with Incorrect Excel Template Structure",
      "ID": "TC-509",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "Import interface for P&L Corner is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not follow the required template structure (e.g., missing columns, extra sheets, or incorrect headers).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System rejects the file and displays a clear error message indicating the template structure is invalid."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. An Excel file with an incorrect structure is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required columns or incorrect headers.",
      "Expected Result": "System prevents import and provides a clear error message about the template structure.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513"
    },
    {
      "Title": "Import Fails When Month and Year Reference Are Missing",
      "ID": "TC-510",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Profit and Loss - Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file that follows the template but omits the month and/or year of reference.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System rejects the file and displays an error message indicating that the month and year of reference are required."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file missing month/year reference is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing month and/or year reference fields.",
      "Expected Result": "System prevents import and displays an error message about missing month/year reference.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513"
    },
    {
      "Title": "Import Fails When Zona Rice Reference Key is Missing or Invalid",
      "ID": "TC-511",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Profit and Loss - Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file that follows the template but contains missing or invalid Zona Rice reference keys for one or more PoS entries.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System rejects the file and displays an error message indicating missing or invalid Zona Rice reference key."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with missing/invalid Zona Rice reference is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing or invalid Zona Rice reference key.",
      "Expected Result": "System prevents import and displays an error message about missing/invalid Zona Rice reference key.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513"
    },
    {
      "Title": "Import Fails When Required Data Fields Are Missing or Invalid",
      "ID": "TC-512",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Profit and Loss - Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file that follows the template but has missing or invalid data in required fields (e.g., Collection, Revenues, Fees).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System rejects the file and displays an error message indicating which required fields are missing or invalid."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with missing/invalid required data fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing or invalid Collection, Revenues, or Fees fields.",
      "Expected Result": "System prevents import and displays an error message about missing/invalid required fields.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513"
    },
    {
      "Title": "Dashboard Displays Imported Data with Correct Month and Year",
      "ID": "TC-513",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' tab for a PoS included in a previous successful import.",
          "Expected Result": "Business Data tab is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the imported Collection, Revenues, and Fees data are displayed for the correct month and year of reference.",
          "Expected Result": "Data is displayed with the correct values and the correct month/year reference."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for the same PoS.",
          "Expected Result": "ADI Data tab is displayed with the correct imported data and month/year reference."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "At least one successful import has been performed for the PoS and month/year under test.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Previously imported data for a specific PoS and month/year.",
      "Expected Result": "Dashboard displays the correct imported data and month/year reference for the selected PoS.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513"
    },
    {
      "Title": "Import Fails When Attempting to Upload Original CdG File Instead of Template",
      "ID": "TC-514",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Profit and Loss - Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the original CdG file (e.g., 'P&L Corner YTD M05 2024 SENT.xlsx') without transcribing data into the required template.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System rejects the file and displays an error message indicating that the file does not match the required template."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Original CdG file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Original CdG file (not in template format).",
      "Expected Result": "System prevents import and displays an error message about incorrect file format/template.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513"
    },
    {
      "Title": "Import Fails When Uploading a File with Duplicate PoS Entries",
      "ID": "TC-515",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Profit and Loss - Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file that follows the template but contains duplicate entries for the same PoS and month/year.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 4,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System rejects the file and displays an error message indicating duplicate PoS entries for the same month/year."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Low",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with duplicate PoS entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate PoS entries for the same month/year.",
      "Expected Result": "System prevents import and displays an error message about duplicate entries.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513"
    },
    {
      "Title": "Successful Import of QR Corner Data via Excel Template",
      "ID": "TC-516",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option '*Import \"QR Corner\"*'.",
          "Expected Result": "File upload dialog for QR Corner import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a correctly filled Excel template containing valid PoS data (including 'Zona Rice' as reference key and 'Date Activated' for channel 1).",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "System processes the file and displays a success message indicating that the data has been imported successfully."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Master Data' tab for a PoS included in the import.",
          "Expected Result": "Imported 'Date Activated' and related data are visible and correctly updated for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the correct Excel template filled with valid PoS data.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Correctly filled Excel template with PoS data including 'Zona Rice' and 'Date Activated'.",
      "Expected Result": "QR Corner data is successfully imported and visible in the Master Data tab for each PoS.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514"
    },
    {
      "Title": "Import Fails with Incorrect Excel Template Structure",
      "ID": "TC-517",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select '*Import \"QR Corner\"*'.",
          "Expected Result": "File upload dialog is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra sheets, incorrect headers).",
          "Expected Result": "System rejects the file and displays an error message indicating template structure is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an incorrectly structured Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Data Import - Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Incorrectly structured Excel file (e.g., missing required columns).",
      "Expected Result": "System prevents import and displays a clear error message about the invalid template structure.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514"
    },
    {
      "Title": "Import Fails with Invalid Data in Excel Template",
      "ID": "TC-518",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select '*Import \"QR Corner\"*'.",
          "Expected Result": "File upload dialog is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel template with invalid data (e.g., missing 'Zona Rice', invalid date format in 'Date Activated', empty mandatory fields).",
          "Expected Result": "System rejects the file and displays an error message specifying the data validation errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an Excel template with invalid data.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Data Import - Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template with invalid or missing data (e.g., missing 'Zona Rice', wrong date format).",
      "Expected Result": "System prevents import and displays a clear error message about the data validation issues.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514"
    },
    {
      "Title": "Attempt to Import Original Network Distribution File (Not Template)",
      "ID": "TC-519",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select '*Import \"QR Corner\"*'.",
          "Expected Result": "File upload dialog is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload the original 'QR_Corner_<month> <yyyy>' file received from Network Distribution (not transcribed into the template).",
          "Expected Result": "System rejects the file and displays an error message indicating that the file format is not supported."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the original Network Distribution Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Data Import - File Type Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original 'QR_Corner_<month> <yyyy>' file from Network Distribution.",
      "Expected Result": "System prevents import and displays a clear error message about unsupported file format.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514"
    },
    {
      "Title": "Verify Data Visibility After Successful Import",
      "ID": "TC-520",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Master Data' tab for a PoS included in a previous successful import.",
          "Expected Result": "Master Data tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Date Activated' and other imported fields are correctly displayed and match the imported data.",
          "Expected Result": "Imported data is visible and accurate for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "At least one successful QR Corner import has been performed for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Data Import - Data Verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with imported data.",
      "Expected Result": "Imported QR Corner data is visible and correct in the Master Data tab for each PoS.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514"
    },
    {
      "Title": "Import Fails When Required Fields Are Missing in Template",
      "ID": "TC-521",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select '*Import \"QR Corner\"*'.",
          "Expected Result": "File upload dialog is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel template missing required fields (e.g., 'Zona Rice' or 'Date Activated').",
          "Expected Result": "System rejects the file and displays an error message specifying the missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an Excel template missing required fields.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Data Import - Required Fields Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template missing required fields.",
      "Expected Result": "System prevents import and displays a clear error message about missing required fields.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514"
    },
    {
      "Title": "Successful Import of Offline PoS Data via Massive Importer",
      "ID": "TC-522",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "The import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Download the provided Excel template for Offline PoS data (if not already available).",
          "Expected Result": "Excel template is downloaded successfully."
        },
        {
          "Step": 5,
          "Step Description": "Fill the template with valid historical PoS data, ensuring all required fields (including ID Rice and Zona Rice) are completed.",
          "Expected Result": "Excel file is correctly filled with valid data."
        },
        {
          "Step": 6,
          "Step Description": "Upload the completed Excel file via the import interface.",
          "Expected Result": "System validates the file and displays a success message if validation passes."
        },
        {
          "Step": 7,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for one of the imported PoS using ID Rice and Zona Rice.",
          "Expected Result": "Imported PoS data is visible and matches the uploaded information."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to Zenit with permissions to use the Massive Importer. Excel template is available. Test PoS data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with at least one historical PoS entry (including ID Rice and Zona Rice).",
      "Expected Result": "Offline PoS data is successfully imported, stored, and visible in the Dashboard for each PoS. No errors occur during the process.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520"
    },
    {
      "Title": "Import Fails with Missing Required Fields in Excel",
      "ID": "TC-523",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Offline PoS Data Storage'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Prepare an Excel file with one or more PoS entries missing required fields (e.g., missing ID Rice or Zona Rice).",
          "Expected Result": "Excel file is prepared with missing required data."
        },
        {
          "Step": 4,
          "Step Description": "Upload the incomplete Excel file via the import interface.",
          "Expected Result": "System validates the file and displays an error message indicating missing required fields. Import is rejected."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to Zenit. Excel template is available. Test data with missing required fields is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with at least one PoS entry missing ID Rice or Zona Rice.",
      "Expected Result": "System rejects the import and displays a clear error message about missing required fields. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520"
    },
    {
      "Title": "Update Existing Offline PoS Data via Re-Import",
      "ID": "TC-524",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import Offline PoS Data Storage'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file with a PoS entry (using a specific ID Rice and Zona Rice) and complete the import.",
          "Expected Result": "PoS data is imported successfully."
        },
        {
          "Step": 4,
          "Step Description": "Modify the same PoS entry in the Excel file (e.g., change a field value such as legal status or loss transition).",
          "Expected Result": "Excel file is updated with new data for the same PoS."
        },
        {
          "Step": 5,
          "Step Description": "Re-upload the modified Excel file via the import interface.",
          "Expected Result": "System validates and updates the existing PoS data in Zenit."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to 'Dashboard - Single PoS' and search for the updated PoS.",
          "Expected Result": "Dashboard displays the updated data for the PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to Zenit. Initial PoS data has been imported. Modified data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with existing PoS entry, then modified and re-uploaded.",
      "Expected Result": "Existing PoS data is updated in Zenit according to the new import. Changes are reflected in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520"
    },
    {
      "Title": "Ensure Write-off Applied Flag Data is Stored but Not Displayed",
      "ID": "TC-525",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and navigate to 'Massive Importer'.",
          "Expected Result": "User is logged in and import interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file with a PoS entry including the 'Write-off applied Flag' field set to a specific value.",
          "Expected Result": "Excel file is prepared with the Write-off applied Flag populated."
        },
        {
          "Step": 3,
          "Step Description": "Upload the Excel file via the import interface.",
          "Expected Result": "System validates and imports the data successfully."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to 'Dashboard - Single PoS' and search for the imported PoS.",
          "Expected Result": "PoS data is visible, but the Write-off applied Flag is not displayed on the Dashboard."
        },
        {
          "Step": 5,
          "Step Description": "Query the backend database or use an admin interface to verify that the Write-off applied Flag value is stored for the PoS.",
          "Expected Result": "Write-off applied Flag is present and correctly stored in the backend, despite not being visible on the Dashboard."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to Zenit and backend/admin tools. Excel file with Write-off applied Flag is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Excel file with Write-off applied Flag set for at least one PoS entry.",
      "Expected Result": "Write-off applied Flag is stored in the system but not displayed on the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520"
    },
    {
      "Title": "Reject Import if Excel File Contains PoS Already in MDM System",
      "ID": "TC-526",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and access 'Massive Importer'.",
          "Expected Result": "User is logged in and import interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file with a PoS entry that is already present in the MDM system.",
          "Expected Result": "Excel file is prepared with duplicate PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Upload the Excel file via the import interface.",
          "Expected Result": "System validates the file and rejects the import, displaying an error message indicating that the PoS already exists in MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to Zenit. MDM system contains at least one PoS. Excel file with duplicate PoS is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with PoS entry matching an existing MDM PoS.",
      "Expected Result": "System rejects the import and provides a clear error message for PoS already present in MDM. No duplicate data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520"
    },
    {
      "Title": "Import Fails with Invalid Excel File Format",
      "ID": "TC-527",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and access 'Massive Importer'.",
          "Expected Result": "User is logged in and import interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to upload a file that is not in the required Excel format (e.g., CSV, TXT, or corrupted Excel file).",
          "Expected Result": "System validates the file and rejects it, displaying an error message about invalid file format."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to Zenit. Invalid file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid file (e.g., CSV, TXT, or corrupted Excel).",
      "Expected Result": "System rejects the file and displays an appropriate error message. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520"
    },
    {
      "Title": "Ensure No Automatic Acquisition of Personal Data from Other Systems During Import",
      "ID": "TC-528",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit and access 'Massive Importer'.",
          "Expected Result": "User is logged in and import interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file with PoS entries, intentionally omitting some personal data fields.",
          "Expected Result": "Excel file is prepared with missing personal data."
        },
        {
          "Step": 3,
          "Step Description": "Upload the Excel file via the import interface.",
          "Expected Result": "System validates the file and either rejects the import due to missing personal data or imports only the provided data without supplementing from other systems."
        },
        {
          "Step": 4,
          "Step Description": "Verify in the Dashboard and backend that no additional personal data has been acquired from external systems for the imported PoS.",
          "Expected Result": "Only the data provided in the Excel file is present for the imported PoS. No automatic data acquisition from other systems occurs."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to Zenit. Excel file with missing personal data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Excel file with PoS entries missing some personal data fields.",
      "Expected Result": "No personal data is acquired from other systems; only data from the uploaded file is present for imported PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520"
    },
    {
      "Title": "Import Tracking Winnings - Tickets Paid at Other Agencies (Valid File)",
      "ID": "TC-529",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Tickets paid at other agencies'.",
          "Expected Result": "File upload interface for 'Tickets paid at other agencies' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel file using the provided template, containing correct data for Sport Tickets paid at other agencies.",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message indicating that Tracking Winnings information has been updated."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Winning Data' tab for a relevant PoS.",
          "Expected Result": "Imported data for the selected PoS is visible and matches the uploaded file."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the correct Excel template. Valid data is prepared in the template.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings - Tickets paid at other agencies",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct structure and data for 'Tickets paid at other agencies'.",
      "Expected Result": "Tracking Winnings data for 'Tickets paid at other agencies' is successfully imported and visible in the dashboard for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530"
    },
    {
      "Title": "Import Tracking Winnings - Unpaid Winning SPORT Tickets (Invalid Template Structure)",
      "ID": "TC-530",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning SPORT tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning SPORT tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, or incorrect headers).",
          "Expected Result": "System rejects the file and displays an error message indicating template structure is invalid."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Invalid Excel file is prepared (wrong structure).",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings - Unpaid winning SPORT tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with incorrect structure for 'Unpaid winning SPORT tickets'.",
      "Expected Result": "System prevents import and displays a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530"
    },
    {
      "Title": "Import Tracking Winnings - Unpaid Winning VR Tickets (Invalid Data)",
      "ID": "TC-531",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning VR tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning VR tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with the correct template but containing invalid data (e.g., missing mandatory fields, invalid PoS identifier, or incorrect data types).",
          "Expected Result": "System rejects the file and displays an error message indicating the specific data validation errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with correct template but invalid data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings - Unpaid winning VR tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with correct template but invalid data for 'Unpaid winning VR tickets'.",
      "Expected Result": "System prevents import and displays detailed error messages for each invalid data entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530"
    },
    {
      "Title": "Import Tracking Winnings - Tickets Paid at Other Agencies (Duplicate PoS Identifier)",
      "ID": "TC-532",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Tickets paid at other agencies'.",
          "Expected Result": "File upload interface for 'Tickets paid at other agencies' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with duplicate Seller PoS identifiers in the data rows.",
          "Expected Result": "System rejects the file and displays an error message indicating duplicate PoS identifiers."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with duplicate PoS identifiers is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings - Tickets paid at other agencies",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate Seller PoS identifiers for 'Tickets paid at other agencies'.",
      "Expected Result": "System prevents import and displays an error message about duplicate PoS identifiers.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530"
    },
    {
      "Title": "Import Tracking Winnings - Unpaid Winning SPORT Tickets (Successful Import and Dashboard Verification)",
      "ID": "TC-533",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning SPORT tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning SPORT tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel file using the provided template, containing correct data for unpaid winning SPORT tickets.",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message indicating that Tracking Winnings information has been updated."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Winning Data' tab for a relevant PoS.",
          "Expected Result": "Imported data for the selected PoS is visible and matches the uploaded file."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the correct Excel template. Valid data is prepared in the template.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings - Unpaid winning SPORT tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct structure and data for 'Unpaid winning SPORT tickets'.",
      "Expected Result": "Tracking Winnings data for 'Unpaid winning SPORT tickets' is successfully imported and visible in the dashboard for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530"
    },
    {
      "Title": "Import Tracking Winnings - Unpaid Winning VR Tickets (File with Extra Columns)",
      "ID": "TC-534",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning VR tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning VR tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with extra columns not defined in the template.",
          "Expected Result": "System rejects the file and displays an error message indicating the presence of unexpected columns."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with extra columns is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings - Unpaid winning VR tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with extra columns for 'Unpaid winning VR tickets'.",
      "Expected Result": "System prevents import and displays an error message about extra columns in the file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530"
    },
    {
      "Title": "Import Tracking Winnings - Tickets Paid at Other Agencies (File with Missing Mandatory Fields)",
      "ID": "TC-535",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Tickets paid at other agencies'.",
          "Expected Result": "File upload interface for 'Tickets paid at other agencies' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with missing mandatory fields (e.g., missing Seller PoS identifier or ticket number).",
          "Expected Result": "System rejects the file and displays an error message indicating which mandatory fields are missing."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with missing mandatory fields is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings - Tickets paid at other agencies",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing mandatory fields for 'Tickets paid at other agencies'.",
      "Expected Result": "System prevents import and displays an error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530"
    },
    {
      "Title": "Import Tracking Winnings - Unpaid Winning SPORT Tickets (File with Invalid File Format)",
      "ID": "TC-536",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning SPORT tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning SPORT tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file in an unsupported format (e.g., CSV, PDF, or TXT).",
          "Expected Result": "System rejects the file and displays an error message indicating only Excel files are supported."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. File in unsupported format is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings - Unpaid winning SPORT tickets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File in unsupported format (e.g., CSV, PDF, TXT) for 'Unpaid winning SPORT tickets'.",
      "Expected Result": "System prevents import and displays an error message about unsupported file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530"
    },
    {
      "Title": "Successful Import of Valid AWP Altro Concessionario Excel File",
      "ID": "TC-537",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "File upload interface for 'Import AWP - Altro Concessionario' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Download Template' button to obtain the standard Excel template.",
          "Expected Result": "Standard Excel template is downloaded successfully."
        },
        {
          "Step": 5,
          "Step Description": "Fill the template with valid AWP data, ensuring each record corresponds to an AWP and 'Zona Rice' is correctly populated for each PoS.",
          "Expected Result": "Excel template is correctly filled with valid data."
        },
        {
          "Step": 6,
          "Step Description": "Upload the completed Excel template using the provided interface.",
          "Expected Result": "System accepts the file and begins validation."
        },
        {
          "Step": 7,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "System confirms successful import and updates the information for each PoS using 'Zona Rice' as the reference key."
        },
        {
          "Step": 8,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for a PoS included in the import.",
          "Expected Result": "Imported AWP data is visible and correctly reflects the number of AWPs for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials and access to the 'Massive Importer' section. The standard Excel template is available. Test PoS exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; valid, correctly filled Excel template with at least two PoS and multiple AWP records.",
      "Expected Result": "AWP data is imported successfully, and the Dashboard displays the correct number of AWPs per PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure",
      "ID": "TC-538",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, incorrect sheet name).",
          "Expected Result": "System rejects the file and displays a clear validation error message indicating the template structure is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials and access to the 'Massive Importer' section. An invalid Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Data Import - Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with incorrect structure (e.g., missing required columns).",
      "Expected Result": "System rejects the upload and provides a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533"
    },
    {
      "Title": "Import Fails When Required Fields Are Missing in Excel",
      "ID": "TC-539",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel template where one or more required fields (e.g., 'Zona Rice') are left blank for some records.",
          "Expected Result": "System rejects the file and displays a validation error message indicating missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials and access to the 'Massive Importer' section. Excel file with missing required fields is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Data Import - Field Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with some 'Zona Rice' fields left blank.",
      "Expected Result": "System rejects the upload and provides a clear error message about missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533"
    },
    {
      "Title": "Import Fails When Duplicate Records Exist for the Same PoS and AWP",
      "ID": "TC-540",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel template containing duplicate records for the same PoS and AWP.",
          "Expected Result": "System rejects the file and displays a validation error message indicating duplicate records are present."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials and access to the 'Massive Importer' section. Excel file with duplicate records is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Data Import - Duplicate Record Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate PoS and AWP records.",
      "Expected Result": "System rejects the upload and provides a clear error message about duplicate records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533"
    },
    {
      "Title": "Import Fails When File Extension Is Not .xlsx",
      "ID": "TC-541",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file with an extension other than .xlsx (e.g., .csv, .xls, .txt).",
          "Expected Result": "System rejects the file and displays a validation error message indicating only .xlsx files are accepted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials and access to the 'Massive Importer' section. Non-.xlsx file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Data Import - File Type Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; file with .csv, .xls, or .txt extension.",
      "Expected Result": "System rejects the upload and provides a clear error message about invalid file type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533"
    },
    {
      "Title": "AWP Data Correctly Aggregated Per PoS After Import",
      "ID": "TC-542",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel template with multiple records for the same PoS (different AWPs).",
          "Expected Result": "System accepts the file and begins validation."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "System confirms successful import."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for the PoS included in the import.",
          "Expected Result": "The number of AWPs displayed matches the number of records imported for that PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials and access to the 'Massive Importer' section. Valid Excel file with multiple AWPs for a single PoS is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Data Import - Aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with multiple AWP records for the same PoS.",
      "Expected Result": "Dashboard displays the correct aggregated number of AWPs per PoS as per the imported data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533"
    },
    {
      "Title": "Import Fails When 'Zona Rice' Value Does Not Match Any Existing PoS",
      "ID": "TC-543",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel template where 'Zona Rice' contains a value not present in the system's PoS records.",
          "Expected Result": "System rejects the file and displays a validation error message indicating that 'Zona Rice' does not match any existing PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials and access to the 'Massive Importer' section. Excel file with non-existent 'Zona Rice' value is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Data Import - Reference Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with 'Zona Rice' value not present in PoS master data.",
      "Expected Result": "System rejects the upload and provides a clear error message about unmatched 'Zona Rice'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533"
    },
    {
      "Title": "Import Fails When Excel File Is Empty",
      "ID": "TC-544",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an empty Excel template (no records).",
          "Expected Result": "System rejects the file and displays a validation error message indicating that the file contains no data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has valid credentials and access to the 'Massive Importer' section. Empty Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Data Import - Empty File Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; empty Excel template.",
      "Expected Result": "System rejects the upload and provides a clear error message about the file being empty.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533"
    },
    {
      "Title": "Successful Import of Valid DATABASE RETE Excel File",
      "ID": "TC-545",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "The import interface for DATABASE RETE is displayed, allowing file selection."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file structured according to the DATABASE RETE template, containing correct data for Unpaid winning VR tickets.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for a PoS included in the imported file.",
          "Expected Result": "The imported data for the selected PoS is visible and correctly updated."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and a valid DATABASE RETE Excel template file with correct data is available.",
      "Execution Mode": "Manual",
      "Functionality": "DATABASE RETE import via Excel template",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid DATABASE RETE Excel file with correct structure and data.",
      "Expected Result": "The DATABASE RETE Excel file is successfully imported, and the data is correctly updated and visible for each PoS in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534"
    },
    {
      "Title": "Import Fails with Incorrect Excel Template Structure",
      "ID": "TC-546",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import DATABASE RETE'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required DATABASE RETE template structure (e.g., missing columns, extra sheets, incorrect headers).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an incorrectly structured Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "DATABASE RETE import validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (wrong structure).",
      "Expected Result": "The system prevents import and displays a clear error message about the template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534"
    },
    {
      "Title": "Import Fails with Invalid Data in Excel File",
      "ID": "TC-547",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import DATABASE RETE'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a DATABASE RETE Excel file with invalid data (e.g., missing required fields, invalid ID Rice or Zona Rice, non-numeric values in numeric fields).",
          "Expected Result": "System validates the data and displays an error message specifying the data issues."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with invalid data is available.",
      "Execution Mode": "Manual",
      "Functionality": "DATABASE RETE import data validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid data (e.g., missing or malformed fields).",
      "Expected Result": "The system rejects the import and provides a clear error message about the data issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534"
    },
    {
      "Title": "Import Fails When Required Fields Are Missing in Excel File",
      "ID": "TC-548",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import DATABASE RETE'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a DATABASE RETE Excel file missing required fields (e.g., ID Rice or Zona Rice columns are empty or absent).",
          "Expected Result": "System validates the file and displays an error message indicating missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file missing required fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "DATABASE RETE import required fields validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing required fields.",
      "Expected Result": "The system rejects the import and displays an error message about missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534"
    },
    {
      "Title": "Attempt to Import Original Credit Office File (Not in Template)",
      "ID": "TC-549",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import DATABASE RETE'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload the original Credit Office file named 'DATABASE RETE M<m> <yyyy>' (not transcribed into the DATABASE RETE template).",
          "Expected Result": "System rejects the file and displays an error message indicating the file is not in the correct template."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and the original Credit Office file is available.",
      "Execution Mode": "Manual",
      "Functionality": "DATABASE RETE import template enforcement",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original Credit Office file (not in template).",
      "Expected Result": "The system prevents import and displays an error message about the required template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534"
    },
    {
      "Title": "Verify Data Update for Each PoS After Successful Import",
      "ID": "TC-550",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and import a valid DATABASE RETE Excel file containing data for multiple PoS.",
          "Expected Result": "Import is successful and a confirmation message is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS'.",
          "Expected Result": "Dashboard for single PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Search for each PoS included in the imported file and verify that the data matches the imported values.",
          "Expected Result": "Data for each PoS is updated and matches the imported Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "User has access to ZENIT system and a valid DATABASE RETE Excel file with multiple PoS data is available.",
      "Execution Mode": "Manual",
      "Functionality": "DATABASE RETE data update and dashboard verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid DATABASE RETE Excel file with multiple PoS data.",
      "Expected Result": "Data for each PoS is correctly updated and visible in the dashboard after import.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534"
    },
    {
      "Title": "Import Fails When Duplicate Entries for Same PoS Exist in Excel File",
      "ID": "TC-551",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import DATABASE RETE'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a DATABASE RETE Excel file containing duplicate entries for the same PoS (same ID Rice and Zona Rice).",
          "Expected Result": "System detects duplicate entries and displays an error message indicating the issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with duplicate PoS entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "DATABASE RETE import duplicate entry validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate PoS entries.",
      "Expected Result": "The system rejects the import and displays an error message about duplicate entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534"
    },
    {
      "Title": "Import Fails When File Extension Is Not .xlsx",
      "ID": "TC-552",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import DATABASE RETE'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file with an extension other than .xlsx (e.g., .csv, .xls, .txt).",
          "Expected Result": "System rejects the file and displays an error message indicating only .xlsx files are accepted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and a non-.xlsx file is available.",
      "Execution Mode": "Manual",
      "Functionality": "DATABASE RETE import file type validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; File with unsupported extension.",
      "Expected Result": "The system prevents import and displays an error message about the required .xlsx file type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534"
    },
    {
      "Title": "Successful Import of Valid DB Corner Excel Template",
      "ID": "TC-553",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the system's standard template, containing correct data for Unpaid winning VR tickets.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the upload and initiate the import process.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for a PoS included in the imported file.",
          "Expected Result": "Imported data for the selected PoS is correctly displayed and updated in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and possesses a valid Excel template file with correct data for import.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel template file with correct data for Unpaid winning VR tickets.",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the new data in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure",
      "ID": "TC-554",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template structure (e.g., missing columns, incorrect sheet names).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an invalid Excel file (wrong structure).",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (wrong structure, missing columns, or incorrect sheet names).",
      "Expected Result": "System prevents import and displays a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Import Fails with Missing Required Data Fields",
      "ID": "TC-555",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a valid Excel template file with missing required data fields (e.g., missing ID Rice or Zona Rice values).",
          "Expected Result": "System rejects the file and displays an error message indicating missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an Excel template file with missing required fields.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template file with missing required fields (e.g., ID Rice or Zona Rice).",
      "Expected Result": "System prevents import and displays a clear error message about missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Import Fails with Duplicate Reference Keys (ID Rice + Zona Rice)",
      "ID": "TC-556",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a valid Excel template file containing duplicate rows with the same ID Rice and Zona Rice values.",
          "Expected Result": "System rejects the file and displays an error message indicating duplicate reference keys."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an Excel template file with duplicate reference keys.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template file with duplicate ID Rice and Zona Rice values.",
      "Expected Result": "System prevents import and displays a clear error message about duplicate reference keys.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Import Fails with Non-Numeric or Invalid Data Types in Numeric Fields",
      "ID": "TC-557",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a valid Excel template file where numeric fields (e.g., ticket amount) contain non-numeric or invalid data (e.g., text, special characters).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid data types."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an Excel template file with invalid data types in numeric fields.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template file with non-numeric values in numeric fields.",
      "Expected Result": "System prevents import and displays a clear error message about invalid data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Import Fails with Empty Excel File",
      "ID": "TC-558",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an empty Excel template file (no data rows).",
          "Expected Result": "System rejects the file and displays an error message indicating that the file is empty or contains no data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an empty Excel template file.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Empty Excel template file.",
      "Expected Result": "System prevents import and displays a clear error message about the empty file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Import Fails with Incorrect File Extension (Non-Excel File)",
      "ID": "TC-559",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file with an incorrect extension (e.g., .csv, .txt, .pdf) instead of .xlsx.",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file type."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and a non-Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; File with incorrect extension (e.g., .csv, .txt, .pdf).",
      "Expected Result": "System prevents import and displays a clear error message about the invalid file type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Import Fails with Data Not Related to Unpaid Winning VR Tickets",
      "ID": "TC-560",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a valid Excel template file containing data not related to Unpaid winning VR tickets (e.g., paid tickets, unrelated transactions).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid data content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and an Excel template file with unrelated data.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template file with unrelated data (not unpaid winning VR tickets).",
      "Expected Result": "System prevents import and displays a clear error message about invalid data content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Verify Data Visibility in Dashboard After Successful Import",
      "ID": "TC-561",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and successfully import a valid Excel template file as per TC-001.",
          "Expected Result": "Import is successful and confirmation message is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section.",
          "Expected Result": "'Dashboard - Single PoS' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Search for a PoS that was included in the imported file.",
          "Expected Result": "PoS is found and displayed."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported data is visible and correctly reflected for the selected PoS.",
          "Expected Result": "Imported data is accurately displayed for the PoS in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "User has access to the ZENIT system and has successfully imported a valid Excel template file.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Data Import and Dashboard Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Successfully imported data for a PoS.",
      "Expected Result": "Imported data is visible and correct in the 'Dashboard - Single PoS' for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535"
    },
    {
      "Title": "Successful Import of Valid GNTN Credit Situation Excel File",
      "ID": "TC-562",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "File upload interface for GNTN Credit Situation import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a valid Excel file structured according to the standard template, containing correct GNTN Credit Situation data.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' for a PoS included in the import file.",
          "Expected Result": "Imported GNTN Credit Situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and the standard Excel template with valid GNTN Credit Situation data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation via Excel upload",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel file with correct structure and data for multiple PoS.",
      "Expected Result": "The system successfully imports the GNTN Credit Situation data and updates the Dashboard for each PoS accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536"
    },
    {
      "Title": "Import Fails with Incorrect Excel Template Structure",
      "ID": "TC-563",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, incorrect headers).",
          "Expected Result": "The file is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to attempt the import.",
          "Expected Result": "System displays an error message indicating that the file structure is invalid and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system; Invalid Excel file (wrong structure) is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Excel template structure during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with incorrect structure.",
      "Expected Result": "System rejects the file and provides a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536"
    },
    {
      "Title": "Import Fails with Invalid Data in Excel File",
      "ID": "TC-564",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with the correct template structure but containing invalid data (e.g., non-numeric values in numeric fields, missing required fields, invalid Zona Code or Rice Number).",
          "Expected Result": "The file is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to attempt the import.",
          "Expected Result": "System displays an error message indicating the specific data validation errors and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system; Excel file with correct structure but invalid data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of data content during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid data (e.g., text in numeric fields, missing required fields).",
      "Expected Result": "System rejects the file and provides a clear error message about the data validation issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536"
    },
    {
      "Title": "Import Fails When Attempting to Upload Original BO File",
      "ID": "TC-565",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select the original BO file (e.g., 'SITUAZIONE_FIDI_Giochi Numerici_<yyyyymmdd_hhmmss>.xlsx') without transcribing data into the standard template.",
          "Expected Result": "The file is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to attempt the import.",
          "Expected Result": "System displays an error message indicating that the file format is not supported and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system; Original BO file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Rejection of unsupported file formats during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original BO file (not in standard template).",
      "Expected Result": "System rejects the original BO file and provides a clear error message about unsupported format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536"
    },
    {
      "Title": "Verify Data Update for Multiple PoS After Successful Import",
      "ID": "TC-566",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a valid Excel file containing GNTN Credit Situation data for multiple PoS (with unique Zona Code and Rice Number combinations).",
          "Expected Result": "The file is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to start the import process.",
          "Expected Result": "System processes the file and displays a success message."
        },
        {
          "Step": 6,
          "Step Description": "For each PoS included in the import file, navigate to 'Dashboard - Single PoS - Credit Management'.",
          "Expected Result": "Imported data is correctly displayed for each PoS as per the uploaded file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system; Valid Excel file with multiple PoS data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Update and display of imported data for multiple PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel file with multiple PoS entries.",
      "Expected Result": "System updates and displays the imported GNTN Credit Situation data for all PoS included in the file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536"
    },
    {
      "Title": "Import Fails When Required Fields Are Missing in Excel File",
      "ID": "TC-567",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with the correct template structure but with one or more required fields (e.g., Zona Code or Rice Number) left blank.",
          "Expected Result": "The file is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to attempt the import.",
          "Expected Result": "System displays an error message indicating missing required fields and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system; Excel file with missing required fields is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with missing required fields.",
      "Expected Result": "System rejects the file and provides a clear error message about missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536"
    },
    {
      "Title": "Import Fails When Duplicate Zona Code and Rice Number Combinations Exist",
      "ID": "TC-568",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with duplicate Zona Code and Rice Number combinations in different rows.",
          "Expected Result": "The file is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to attempt the import.",
          "Expected Result": "System displays an error message indicating duplicate reference keys and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system; Excel file with duplicate Zona Code and Rice Number combinations is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of unique reference keys during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate reference keys.",
      "Expected Result": "System rejects the file and provides a clear error message about duplicate Zona Code and Rice Number combinations.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536"
    },
    {
      "Title": "Import Fails When File Extension Is Not .xlsx",
      "ID": "TC-569",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a file with an unsupported extension (e.g., .xls, .csv, .txt).",
          "Expected Result": "The file is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to attempt the import.",
          "Expected Result": "System displays an error message indicating unsupported file type and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system; File with unsupported extension is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of file extension during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; File with unsupported extension.",
      "Expected Result": "System rejects files that are not .xlsx and provides a clear error message about unsupported file type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536"
    },
    {
      "Title": "Successful Import of Valid Corner Credit Situation Excel File",
      "ID": "TC-570",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "File upload interface for Corner Credit Situation import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file filled according to the standard template (with correct Zona Code and Rice Number for each PoS).",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' for a PoS included in the import.",
          "Expected Result": "Imported credit situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT with appropriate permissions. Valid Excel template is prepared with correct data.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel template file with correct data for multiple PoS.",
      "Expected Result": "The system successfully imports the data, updates the credit situation for each PoS, and displays the updated data in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure",
      "ID": "TC-571",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, or incorrect headers).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System displays an error message indicating that the file structure is invalid and import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT. Invalid Excel file is prepared (e.g., missing required columns).",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (wrong structure).",
      "Expected Result": "System rejects the file and displays a clear error message about the invalid template structure. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537"
    },
    {
      "Title": "Import Fails with Invalid Data in Excel (e.g., Missing Zona Code or Rice Number)",
      "ID": "TC-572",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file with missing or invalid Zona Code or Rice Number values.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System displays an error message indicating which rows have missing or invalid reference keys and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT. Excel file with missing/invalid Zona Code or Rice Number is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with missing/invalid reference keys.",
      "Expected Result": "System rejects the file and provides a clear error message about the missing/invalid data. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537"
    },
    {
      "Title": "Attempt to Import Original ANAFIDIWEB File (Not in Template)",
      "ID": "TC-573",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select the original ANAFIDIWEB file (not transcribed into the template).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System displays an error message indicating that the file format is not supported and import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT. Original ANAFIDIWEB file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original ANAFIDIWEB file.",
      "Expected Result": "System rejects the original file and displays a clear error message about unsupported format. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537"
    },
    {
      "Title": "Verify Data Update in Dashboard After Successful Import",
      "ID": "TC-574",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and import a valid Excel file as per TC-001.",
          "Expected Result": "Import is successful and confirmation message is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' for a PoS included in the import.",
          "Expected Result": "Dashboard displays updated credit situation data for the selected PoS, matching the imported values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "User has access to ZENIT. Valid Excel file is imported successfully.",
      "Execution Mode": "Manual",
      "Functionality": "View Imported Corner Credit Situation Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Successfully imported data for at least one PoS.",
      "Expected Result": "Dashboard displays the updated credit situation data for each PoS as per the imported file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537"
    },
    {
      "Title": "Import Fails When Required Fields Are Empty in Excel",
      "ID": "TC-575",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file where required fields (e.g., credit amount, Zona Code, Rice Number) are empty for one or more rows.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System displays an error message indicating which rows have empty required fields and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT. Excel file with empty required fields is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with empty required fields.",
      "Expected Result": "System rejects the file and provides a clear error message about the missing required fields. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537"
    },
    {
      "Title": "Import Fails When Duplicate Entries Exist for Same Zona Code and Rice Number",
      "ID": "TC-576",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file containing duplicate rows for the same Zona Code and Rice Number.",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System displays an error message indicating duplicate entries and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT. Excel file with duplicate entries is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate Zona Code and Rice Number entries.",
      "Expected Result": "System rejects the file and provides a clear error message about duplicate entries. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537"
    },
    {
      "Title": "Import Fails When File Extension Is Not .xlsx",
      "ID": "TC-577",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "File upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a file with an unsupported extension (e.g., .csv, .xls, .txt).",
          "Expected Result": "File is selected for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System displays an error message indicating that only .xlsx files are supported and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT. File with unsupported extension is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; File with unsupported extension.",
      "Expected Result": "System rejects files with unsupported extensions and displays a clear error message. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537"
    },
    {
      "Title": "Successful Import of Valid Conti Gioco Credit Situation Excel File",
      "ID": "TC-578",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Choose File' and select a valid Excel file structured according to the system's standard template, containing correct data for multiple PoS (with valid Zona Code and Rice Number).",
          "Expected Result": "Selected file is attached for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' for one of the imported PoS.",
          "Expected Result": "Imported credit situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and the standard Excel template with valid data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel file with correct structure and data for multiple PoS.",
      "Expected Result": "The system successfully imports the provided Excel file, updates the credit situation for each PoS, and displays the data correctly in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure",
      "ID": "TC-579",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Choose File' and select an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, incorrect headers).",
          "Expected Result": "Selected file is attached for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating that the file structure is invalid and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an invalid Excel file is prepared (wrong structure).",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (wrong structure).",
      "Expected Result": "The system rejects the file and displays a clear error message about the invalid template structure. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538"
    },
    {
      "Title": "Import Fails with Missing Mandatory Data (Zona Code or Rice Number)",
      "ID": "TC-580",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Choose File' and select an Excel file with missing mandatory fields (e.g., missing Zona Code or Rice Number for one or more rows).",
          "Expected Result": "Selected file is attached for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating missing mandatory data and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with missing mandatory data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing Zona Code or Rice Number in one or more rows.",
      "Expected Result": "The system rejects the file and displays a clear error message about missing mandatory data. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538"
    },
    {
      "Title": "Import Fails with Duplicate Entries for Same PoS (Zona Code + Rice Number)",
      "ID": "TC-581",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Choose File' and select an Excel file containing duplicate entries for the same PoS (same Zona Code and Rice Number in multiple rows).",
          "Expected Result": "Selected file is attached for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating duplicate entries and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with duplicate PoS entries is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate Zona Code and Rice Number entries.",
      "Expected Result": "The system rejects the file and displays a clear error message about duplicate entries. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538"
    },
    {
      "Title": "Import Fails with Invalid Data Types in Excel File",
      "ID": "TC-582",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Choose File' and select an Excel file where one or more fields contain invalid data types (e.g., text in numeric fields, invalid date formats).",
          "Expected Result": "Selected file is attached for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating invalid data types and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with invalid data types is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid data types in one or more fields.",
      "Expected Result": "The system rejects the file and displays a clear error message about invalid data types. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538"
    },
    {
      "Title": "Verify Data is Not Updated When Import Fails",
      "ID": "TC-583",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' and note the current credit situation for a specific PoS.",
          "Expected Result": "Current credit situation data is visible and noted."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Conti Gioco Credit Situation'.",
          "Expected Result": "File upload interface for 'Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an invalid Excel file (e.g., wrong structure, missing mandatory data, or invalid data types).",
          "Expected Result": "System displays an error message and aborts the import."
        },
        {
          "Step": 5,
          "Step Description": "Return to the 'Dashboard - Single PoS - Credit Management' for the same PoS.",
          "Expected Result": "Credit situation data remains unchanged from the value noted in Step 2."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system; PoS with known credit situation exists; Invalid Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file; PoS with known credit situation.",
      "Expected Result": "No data is updated in the system when the import fails. The dashboard continues to show the previous credit situation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538"
    },
    {
      "Title": "Verify Import Option is Not Available for Unauthorized Users",
      "ID": "TC-584",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with a user account that does not have permission to perform imports.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check if the 'Import Conti Gioco Credit Situation' option is visible or accessible.",
          "Expected Result": "The 'Import Conti Gioco Credit Situation' option is not visible or is disabled for unauthorized users."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User account without import permissions exists.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials for an account without import permissions.",
      "Expected Result": "Unauthorized users cannot access or use the import functionality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538"
    },
    {
      "Title": "Verify System Handles Large Excel Files (Performance Test)",
      "ID": "TC-585",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Choose File' and select a valid Excel file with a large number of PoS records (e.g., 10,000+ rows).",
          "Expected Result": "Selected file is attached for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System processes the file within acceptable time limits and displays a success message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and a large valid Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials; Large Excel file (10,000+ rows).",
      "Expected Result": "The system successfully imports large files within acceptable performance thresholds without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Performance aspects only; does not cover functional correctness of all records.",
      "_polarion": "XPS-ZENIT-538"
    },
    {
      "Title": "Successful Import of SIMP Credit Situation via Excel Template",
      "ID": "TC-586",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "'Import SIMP Credit Situation' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file structured according to the SIMP Credit Management template, containing correct data for multiple PoS (with valid IdRice and Zona Rice).",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for one of the imported PoS.",
          "Expected Result": "Imported SIMP Credit Situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and a valid Excel template file with correct SIMP Credit Situation data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel template file with correct data for at least two PoS (including IdRice and Zona Rice).",
      "Expected Result": "SIMP Credit Situation data is successfully imported and visible in the dashboard for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure",
      "ID": "TC-587",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "Upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file that does not conform to the required SIMP Credit Management template structure (e.g., missing columns, incorrect headers).",
          "Expected Result": "File is selected."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an invalid Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (e.g., missing required columns or incorrect headers).",
      "Expected Result": "System prevents import and displays a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539"
    },
    {
      "Title": "Import Fails When Required Fields Are Missing in Excel",
      "ID": "TC-588",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "Upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file with missing required fields (e.g., missing IdRice or Zona Rice for some rows).",
          "Expected Result": "File is selected."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System rejects the file and displays an error message indicating missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with missing required fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing IdRice or Zona Rice in some rows.",
      "Expected Result": "System prevents import and displays a clear error message about missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539"
    },
    {
      "Title": "Import Fails with Duplicate IdRice and Zona Rice Combinations",
      "ID": "TC-589",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "Upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file containing duplicate rows with the same IdRice and Zona Rice combination.",
          "Expected Result": "File is selected."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System rejects the file and displays an error message indicating duplicate reference keys."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with duplicate IdRice and Zona Rice is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate IdRice and Zona Rice rows.",
      "Expected Result": "System prevents import and displays a clear error message about duplicate reference keys.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539"
    },
    {
      "Title": "Import Fails with Invalid Data Types in Excel Fields",
      "ID": "TC-590",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "Upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file where one or more fields contain invalid data types (e.g., text in numeric fields).",
          "Expected Result": "File is selected."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System rejects the file and displays an error message indicating invalid data types."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and an Excel file with invalid data types is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid data types in one or more fields.",
      "Expected Result": "System prevents import and displays a clear error message about invalid data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539"
    },
    {
      "Title": "Import Fails When Uploading a Non-Excel File",
      "ID": "TC-591",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "Upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a non-Excel file (e.g., PDF, TXT, CSV).",
          "Expected Result": "File is selected."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button.",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to ZENIT system and a non-Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Non-Excel file (e.g., PDF, TXT, CSV).",
      "Expected Result": "System prevents import and displays a clear error message about invalid file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539"
    },
    {
      "Title": "Verify Data Visibility After Successful Import",
      "ID": "TC-592",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS included in a previously successful import.",
          "Expected Result": "Dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the SIMP Credit Situation data displayed for the PoS.",
          "Expected Result": "Data matches the information imported from the Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Dashboard",
      "Preconditions": "A successful import of SIMP Credit Situation data has been performed for at least one PoS.",
      "Execution Mode": "Manual",
      "Functionality": "View SIMP Credit Situation Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with imported SIMP Credit Situation data.",
      "Expected Result": "Imported SIMP Credit Situation data is accurately displayed in the dashboard for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539"
    },
    {
      "Title": "Successful Import of Valid Cerved Data Excel File",
      "ID": "TC-593",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "The import interface for Cerved Data is displayed, allowing file upload."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the Cerved Data template (e.g., CervedDataTemplate.xlsx) containing correct data for multiple PoS with valid VAT numbers or Tax Codes.",
          "Expected Result": "The file is uploaded and validated successfully. A confirmation message is displayed indicating successful import."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for a PoS included in the imported file.",
          "Expected Result": "The PoS details are displayed, and the imported Cerved Data is visible and correctly updated."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system and the 'Massive Importer' section. The Cerved Data Excel template is available and filled with valid data.",
      "Execution Mode": "Manual",
      "Functionality": "Import Cerved Data via Excel template",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Cerved Data Excel template with correct data for multiple PoS.",
      "Expected Result": "Cerved Data is successfully imported and visible for each PoS in the dashboard. No errors are reported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540"
    },
    {
      "Title": "Import Fails with Invalid Excel Template Structure",
      "ID": "TC-594",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "The import interface for Cerved Data is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required Cerved Data template structure (e.g., missing columns, extra columns, or incorrect headers).",
          "Expected Result": "The system rejects the file and displays a clear validation error message indicating the template structure is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. An invalid Excel file is prepared (wrong structure).",
      "Execution Mode": "Manual",
      "Functionality": "Validation of Excel template structure during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (wrong structure).",
      "Expected Result": "System prevents import and displays a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540"
    },
    {
      "Title": "Import Fails with Invalid or Missing Reference Key (VAT Number/Tax Code)",
      "ID": "TC-595",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a validly structured Excel file where one or more rows have missing or invalid VAT numbers or Tax Codes.",
          "Expected Result": "The system rejects the file or the affected rows and displays a validation error message specifying the issue with the reference key."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with missing/invalid VAT number or Tax Code is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of reference key (VAT/Tax Code) during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with missing/invalid VAT/Tax Code.",
      "Expected Result": "System prevents import and displays a clear error message about missing or invalid reference key.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540"
    },
    {
      "Title": "Import Fails with Direct Upload of Original Cerved File",
      "ID": "TC-596",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload the original 'CERVED PER RED LIST.xlsx' file without transcribing data into the system template.",
          "Expected Result": "The system rejects the file and displays a validation error message indicating the file is not in the required template format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Original Cerved file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Prevention of direct import of original Cerved file",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original Cerved file (CERVED PER RED LIST.xlsx).",
      "Expected Result": "System prevents import and displays a clear error message about the file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540"
    },
    {
      "Title": "Partial Import with Mixed Valid and Invalid Rows",
      "ID": "TC-597",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a validly structured Excel file containing both valid and invalid rows (e.g., some rows with missing VAT/Tax Code, others correct).",
          "Expected Result": "The system processes the file, imports valid rows, and rejects invalid ones, displaying a summary of imported and rejected rows with reasons."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and verify that only valid PoS data has been updated.",
          "Expected Result": "Only PoS with valid data in the import file are updated; invalid ones remain unchanged."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Excel file with mixed valid/invalid rows is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Partial import and error reporting for mixed data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with mixed valid and invalid rows.",
      "Expected Result": "System imports valid rows, rejects invalid ones, and provides a clear summary report.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540"
    },
    {
      "Title": "Import Fails with Empty Excel File",
      "ID": "TC-598",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an empty Excel file (no data rows, only headers).",
          "Expected Result": "The system rejects the file and displays an error message indicating that the file contains no data to import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Empty Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of empty file during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Empty Excel file (only headers, no data).",
      "Expected Result": "System prevents import and displays a clear error message about missing data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540"
    },
    {
      "Title": "Import Fails with Corrupted or Non-Excel File",
      "ID": "TC-599",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a corrupted Excel file or a file with a non-Excel extension (e.g., .txt, .csv, .pdf).",
          "Expected Result": "The system rejects the file and displays an error message indicating the file is invalid or corrupted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Massive Importer",
      "Preconditions": "User has access to the ZENIT system. Corrupted or non-Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of file type and integrity during import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Corrupted Excel file or non-Excel file.",
      "Expected Result": "System prevents import and displays a clear error message about file validity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540"
    },
    {
      "Title": "Verify Data Visibility After Successful Import",
      "ID": "TC-600",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and successfully import a valid Cerved Data Excel file.",
          "Expected Result": "File is imported successfully with confirmation message."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS'.",
          "Expected Result": "Dashboard for single PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Search for a PoS included in the imported file and view its details.",
          "Expected Result": "Imported Cerved Data is visible and correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - Dashboard - Single PoS",
      "Preconditions": "User has access to the ZENIT system. Successful import of valid Cerved Data Excel file has been performed.",
      "Execution Mode": "Manual",
      "Functionality": "Data visibility after import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Successfully imported Cerved Data Excel file.",
      "Expected Result": "Imported Cerved Data is visible and accurate for each PoS in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540"
    },
    {
      "Title": "Verify Successful Execution of Back-End Procedure with Valid Input",
      "ID": "TC-601",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid input payload as per the back-end procedure specification.",
          "Expected Result": "Input payload is ready and meets all required schema and data constraints."
        },
        {
          "Step": 2,
          "Step Description": "Send the input payload to the back-end procedure endpoint via the appropriate API call (e.g., HTTP POST).",
          "Expected Result": "Request is successfully sent to the back-end procedure."
        },
        {
          "Step": 3,
          "Step Description": "Observe the response returned by the back-end procedure.",
          "Expected Result": "Response is received without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the response contains the expected output data and status code (e.g., HTTP 200 OK).",
          "Expected Result": "Response data matches the expected output and status code indicates success."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Back-End Procedure",
      "Preconditions": "Back-end service is deployed and accessible. Valid authentication credentials are available if required.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Execution",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid input payload as per procedure specification.",
      "Expected Result": "Back-end procedure executes successfully and returns the correct output for valid input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-BE-001"
    },
    {
      "Title": "Verify Back-End Procedure Handles Invalid Input Gracefully",
      "ID": "TC-602",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an invalid input payload (e.g., missing required fields, incorrect data types).",
          "Expected Result": "Invalid input payload is ready."
        },
        {
          "Step": 2,
          "Step Description": "Send the invalid input payload to the back-end procedure endpoint via the appropriate API call.",
          "Expected Result": "Request is sent to the back-end procedure."
        },
        {
          "Step": 3,
          "Step Description": "Observe the response returned by the back-end procedure.",
          "Expected Result": "Response is received from the back-end procedure."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the response contains an appropriate error message and status code (e.g., HTTP 400 Bad Request).",
          "Expected Result": "Error message and status code correctly indicate the nature of the input error."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Back-End Procedure",
      "Preconditions": "Back-end service is deployed and accessible. Valid authentication credentials are available if required.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Input Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid input payloads (e.g., missing fields, wrong data types).",
      "Expected Result": "Back-end procedure returns a clear error message and appropriate status code for invalid input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-BE-001"
    },
    {
      "Title": "Verify Back-End Procedure Handles System Errors Gracefully",
      "ID": "TC-603",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a system error (e.g., database unavailable, internal exception) during back-end procedure execution.",
          "Expected Result": "System error condition is triggered."
        },
        {
          "Step": 2,
          "Step Description": "Send a valid input payload to the back-end procedure endpoint.",
          "Expected Result": "Request is sent to the back-end procedure."
        },
        {
          "Step": 3,
          "Step Description": "Observe the response returned by the back-end procedure.",
          "Expected Result": "Response is received from the back-end procedure."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the response contains an appropriate error message and status code (e.g., HTTP 500 Internal Server Error).",
          "Expected Result": "Error message and status code correctly indicate a system error."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Back-End Procedure",
      "Preconditions": "Back-end service is deployed and accessible. Mechanism to simulate system errors is available.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid input payload; system error simulation setup.",
      "Expected Result": "Back-end procedure returns a clear error message and appropriate status code for system errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-BE-001"
    },
    {
      "Title": "Verify Back-End Procedure Logging for Audit and Debugging",
      "ID": "TC-604",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Send a valid input payload to the back-end procedure endpoint.",
          "Expected Result": "Request is sent and processed by the back-end procedure."
        },
        {
          "Step": 2,
          "Step Description": "Access the back-end system logs after execution.",
          "Expected Result": "System logs are accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the logs contain entries for the request, including input data, execution status, and any errors if applicable.",
          "Expected Result": "Logs contain accurate and complete information for the request."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Back-End Procedure",
      "Preconditions": "Back-end service is deployed and accessible. Tester has access to system logs.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid input payload.",
      "Expected Result": "Back-end procedure logs all relevant information for audit and debugging purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-BE-001"
    },
    {
      "Title": "Verify Back-End Procedure Performance Under Load",
      "ID": "TC-605",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a set of valid input payloads for concurrent execution.",
          "Expected Result": "Multiple valid input payloads are ready."
        },
        {
          "Step": 2,
          "Step Description": "Send multiple concurrent requests to the back-end procedure endpoint (e.g., using a load testing tool).",
          "Expected Result": "Concurrent requests are sent to the back-end procedure."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the response times and system resource usage during the test.",
          "Expected Result": "Performance metrics are collected."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the back-end procedure meets the defined performance criteria (e.g., response time, throughput).",
          "Expected Result": "Back-end procedure performs within acceptable limits under load."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Back-End Procedure",
      "Preconditions": "Back-end service is deployed and accessible. Load testing tools are available.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Performance",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": true,
      "Dataset": "Multiple valid input payloads.",
      "Expected Result": "Back-end procedure maintains acceptable performance under load conditions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-BE-001"
    },
    {
      "Title": "Verify Daily Nightly Snapshot Scheduling and Execution",
      "ID": "TC-606",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system date and time is set to a typical operational day.",
          "Expected Result": "System clock is set correctly."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled nightly snapshot time to occur.",
          "Expected Result": "System triggers the daily snapshot process at the scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the snapshot process for completion.",
          "Expected Result": "Snapshot process completes without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that a new data archive is created for the current date.",
          "Expected Result": "A new archive file/folder is present, labeled with the correct date and time."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Historical Archiving Module",
      "Preconditions": "System is operational; snapshot schedule is configured; test environment contains sample PoS data.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data snapshot scheduling and execution",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data; system clock set to current date.",
      "Expected Result": "A daily snapshot is automatically created at the scheduled time, labeled with the correct date and time, and contains the expected data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600"
    },
    {
      "Title": "Verify Deletion of Closed PoS Data After Configurable Retention Period",
      "ID": "TC-607",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify PoS records marked as closed and not under legal management or with recent loss transitions.",
          "Expected Result": "Closed PoS records are identified according to criteria."
        },
        {
          "Step": 2,
          "Step Description": "Set the system retention period to 10 years (or another configurable value).",
          "Expected Result": "Retention period is set successfully."
        },
        {
          "Step": 3,
          "Step Description": "Simulate passage of time so that some closed PoS records exceed the retention period.",
          "Expected Result": "Some PoS records are now eligible for deletion."
        },
        {
          "Step": 4,
          "Step Description": "Trigger the nightly archiving process.",
          "Expected Result": "Archiving process runs as scheduled."
        },
        {
          "Step": 5,
          "Step Description": "Verify that eligible closed PoS records are deleted from the archive.",
          "Expected Result": "Only PoS records exceeding the retention period and not under exceptions are deleted."
        },
        {
          "Step": 6,
          "Step Description": "Verify that PoS under legal management or with recent loss transitions are retained.",
          "Expected Result": "PoS records under exception criteria are not deleted."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Historical Archiving Module",
      "Preconditions": "System contains PoS records with various statuses and closure dates; retention period is configurable.",
      "Execution Mode": "Manual",
      "Functionality": "Retention policy enforcement for PoS data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with different closure dates, statuses, and exception flags.",
      "Expected Result": "Closed PoS data not under exception and exceeding the retention period are deleted; exception PoS are retained.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600"
    },
    {
      "Title": "Verify Temporary Logical Closure of PoS and Delayed Permanent Deletion",
      "ID": "TC-608",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Mark a PoS as closed and configure a temporary logical closure period (e.g., 30 days).",
          "Expected Result": "PoS is marked as logically closed and not visible in standard queries."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the logically closed PoS during the closure period.",
          "Expected Result": "PoS is not displayed or accessible to users."
        },
        {
          "Step": 3,
          "Step Description": "Simulate passage of the logical closure period (e.g., 30 days).",
          "Expected Result": "Logical closure period expires."
        },
        {
          "Step": 4,
          "Step Description": "Trigger the archiving process after the logical closure period.",
          "Expected Result": "System processes PoS for permanent deletion."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the PoS is permanently deleted after the logical closure period.",
          "Expected Result": "PoS is no longer present in the archive or retrievable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Historical Archiving Module",
      "Preconditions": "System supports logical closure; PoS records exist for testing; logical closure period is configurable.",
      "Execution Mode": "Manual",
      "Functionality": "Temporary logical closure and delayed deletion of PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records eligible for logical closure; closure period configuration.",
      "Expected Result": "PoS is hidden during logical closure and permanently deleted after the period expires.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600"
    },
    {
      "Title": "Verify Continuous and Complete Data Storage Without Interruptions",
      "ID": "TC-609",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review archive logs and storage for a defined period (e.g., 30 consecutive days).",
          "Expected Result": "Archive entries exist for each day in the period."
        },
        {
          "Step": 2,
          "Step Description": "Check that each daily archive is labeled with the correct date and time.",
          "Expected Result": "Each archive is correctly timestamped."
        },
        {
          "Step": 3,
          "Step Description": "Verify that no days are missing from the archive sequence.",
          "Expected Result": "No gaps in daily archiving; all days are present."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Historical Archiving Module",
      "Preconditions": "System has been running and archiving for at least 30 days; access to archive logs and storage.",
      "Execution Mode": "Manual",
      "Functionality": "Continuous daily data storage and labeling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Archive logs and storage files for at least 30 days.",
      "Expected Result": "Data is archived daily without interruption, each labeled with date and time, and no days are missing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600"
    },
    {
      "Title": "Verify Data Storage Content and Archiving Type per External Specification",
      "ID": "TC-610",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain the external file 'ZENIT - Elenco Dati V04.1.xlsx' specifying data to be archived and archiving type.",
          "Expected Result": "Specification file is available and readable."
        },
        {
          "Step": 2,
          "Step Description": "For each data point listed as 'daily' in the file, verify it is present in the daily archive.",
          "Expected Result": "All required daily data points are present in the archive."
        },
        {
          "Step": 3,
          "Step Description": "For data points listed as 'weekly' or 'monthly', verify they are archived at the correct frequency.",
          "Expected Result": "Weekly/monthly data points are present at correct intervals."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Historical Archiving Module",
      "Preconditions": "Access to the external specification file; system has archived data for at least one week and one month.",
      "Execution Mode": "Manual",
      "Functionality": "Data content and archiving frequency compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT - Elenco Dati V04.1.xlsx; archived data for multiple periods.",
      "Expected Result": "Archived data matches the external specification for content and frequency.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600"
    },
    {
      "Title": "Verify Retrieval and Analysis of Historical Data for Any Daily Storage",
      "ID": "TC-611",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system's historical data retrieval interface or API.",
          "Expected Result": "Historical data retrieval interface/API is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request data for a specific date from the archive.",
          "Expected Result": "System returns the correct data for the requested date."
        },
        {
          "Step": 3,
          "Step Description": "Request data for a range of dates (e.g., last 7 days).",
          "Expected Result": "System returns data for all requested dates."
        },
        {
          "Step": 4,
          "Step Description": "Perform analysis or reporting on the retrieved data.",
          "Expected Result": "Analysis/reporting functions operate correctly on historical data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Historical Archiving Module",
      "Preconditions": "Archived data exists for multiple dates; access to retrieval interface/API.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data retrieval and analysis",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Archived data for multiple dates; access credentials for retrieval interface.",
      "Expected Result": "Historical data can be retrieved and analyzed for any archived day or period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600"
    },
    {
      "Title": "Verify Efficient Storage and System Performance During Archiving",
      "ID": "TC-612",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Monitor system resource usage (CPU, memory, disk I/O) during the nightly archiving process.",
          "Expected Result": "Resource usage remains within acceptable limits."
        },
        {
          "Step": 2,
          "Step Description": "Measure the time taken to complete the archiving process for a typical data volume.",
          "Expected Result": "Archiving completes within the expected time frame."
        },
        {
          "Step": 3,
          "Step Description": "Increase data volume to simulate high-load conditions and repeat archiving.",
          "Expected Result": "System maintains performance and does not degrade significantly."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Historical Archiving Module",
      "Preconditions": "System monitoring tools are available; test environment can simulate varying data volumes.",
      "Execution Mode": "Manual",
      "Functionality": "Efficient storage and performance under load",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Test data sets of varying sizes; monitoring tools.",
      "Expected Result": "System stores data efficiently and maintains optimal performance even under increased load.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600"
    },
    {
      "Title": "Verify Scalability for Large Volumes and Easy Retrieval of Daily Storage",
      "ID": "TC-613",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate the system with a large volume of PoS data (e.g., simulate several years of daily archives).",
          "Expected Result": "System contains a large historical data set."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to retrieve daily storage for random dates across the data set.",
          "Expected Result": "System retrieves data quickly and accurately for any date."
        },
        {
          "Step": 3,
          "Step Description": "Monitor system response times and resource usage during retrieval.",
          "Expected Result": "Response times remain within acceptable limits and system remains stable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Historical Archiving Module",
      "Preconditions": "Test environment supports large data volumes; tools available to measure response times.",
      "Execution Mode": "Manual",
      "Functionality": "System scalability and retrieval performance",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large historical data set (simulated or real); monitoring tools.",
      "Expected Result": "System scales to handle large data volumes and allows easy, fast retrieval of any daily storage.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600"
    },
    {
      "Title": "Verify MDM PoS Master Data Integration via Web Services (Near Real Time)",
      "ID": "TC-614",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger an update of PoS Master Data in the MDM system.",
          "Expected Result": "MDM system processes the update and exposes the new data via its Web Service interface."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a request from the consuming application to fetch PoS Master Data via the MDM Web Service.",
          "Expected Result": "Consuming application successfully connects to the MDM Web Service."
        },
        {
          "Step": 3,
          "Step Description": "Validate that the returned PoS Master Data reflects the recent update and is received within the expected near real-time window (e.g., < 1 minute).",
          "Expected Result": "PoS Master Data is accurate, up-to-date, and delivered within the near real-time SLA."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "MDM Integration",
      "Preconditions": "MDM system is operational and accessible; consuming application is configured to connect to MDM Web Service; test PoS data available.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Master Data Synchronization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS Master Data record (e.g., PoS ID: 12345, Name: Test Store)",
      "Expected Result": "PoS Master Data is synchronized between MDM and consuming application in near real time via Web Services.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-001"
    },
    {
      "Title": "Validate CERVED Data and Report Retrieval (Daily/On Demand) via Web Services",
      "ID": "TC-615",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Schedule a daily data retrieval job from CERVED via Web Services.",
          "Expected Result": "Job is scheduled and executes at the configured time."
        },
        {
          "Step": 2,
          "Step Description": "Manually trigger an on-demand request for CERVED Data and Report via Web Services.",
          "Expected Result": "On-demand request is accepted and processed by the CERVED service."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the data and report returned match the expected format and content as per CERVED specifications.",
          "Expected Result": "Data and report are complete, accurate, and in the correct format."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "CERVED Integration",
      "Preconditions": "CERVED Web Service is available; test credentials and access rights are configured.",
      "Execution Mode": "Manual",
      "Functionality": "CERVED Data and Report Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample CERVED Data and Report request parameters (e.g., Company ID: 67890)",
      "Expected Result": "CERVED Data and Reports are retrievable both on a scheduled (daily) and on-demand basis via Web Services.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-002"
    },
    {
      "Title": "Check GEO Credit Lines Situation Data Synchronization via Database (Near Real Time)",
      "ID": "TC-616",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Update a credit line situation in the GEO source system.",
          "Expected Result": "GEO system updates the credit line situation and commits the change to the database."
        },
        {
          "Step": 2,
          "Step Description": "Query the integrated database for the updated credit line situation record.",
          "Expected Result": "Database returns the updated credit line situation reflecting the recent change."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the update is available in the database within the near real-time window (e.g., < 1 minute).",
          "Expected Result": "Data is synchronized and available in near real time."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Database",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "GEO Integration",
      "Preconditions": "GEO system and database are operational; test credit line data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Lines Situation Synchronization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test Credit Line record (e.g., Credit Line ID: 24680, Status: Active)",
      "Expected Result": "Credit Lines Situation data is synchronized in near real time between GEO and the integrated database.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-003"
    },
    {
      "Title": "Verify SAP 'Unpaids' Data Integration via Web Services (Near Real Time)",
      "ID": "TC-617",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Create or update an 'Unpaids' record in SAP.",
          "Expected Result": "SAP system processes the new or updated 'Unpaids' record."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the integration process to fetch 'Unpaids' data from SAP via Web Services.",
          "Expected Result": "Integration process connects to SAP Web Service and requests 'Unpaids' data."
        },
        {
          "Step": 3,
          "Step Description": "Validate that the 'Unpaids' data received matches the SAP record and is delivered within the near real-time window.",
          "Expected Result": "'Unpaids' data is accurate and delivered within the expected SLA."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Integration",
      "Preconditions": "SAP system is operational; integration endpoint is configured; test 'Unpaids' data is available.",
      "Execution Mode": "Manual",
      "Functionality": "'Unpaids' Data Synchronization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test 'Unpaids' record (e.g., Invoice ID: 54321, Amount: 1000 EUR)",
      "Expected Result": "'Unpaids' data is synchronized in near real time between SAP and the consuming application via Web Services.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-004"
    },
    {
      "Title": "Validate VALORIZZATORE Borderò Data Integration (Weekly/Bi-Weekly) via Web Services",
      "ID": "TC-618",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Schedule a weekly or bi-weekly job to retrieve Borderò Data from VALORIZZATORE via Web Services.",
          "Expected Result": "Job is scheduled and executes at the configured interval."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the Borderò Data is received and matches the expected format and content.",
          "Expected Result": "Borderò Data is complete, accurate, and in the correct format."
        },
        {
          "Step": 3,
          "Step Description": "Check that the data is available according to the scheduled frequency (weekly/bi-weekly).",
          "Expected Result": "Data is available as per the defined schedule."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "VALORIZZATORE Integration",
      "Preconditions": "VALORIZZATORE Web Service is available; scheduling system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Borderò Data Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Borderò Data request parameters (e.g., Date Range: last 2 weeks)",
      "Expected Result": "Borderò Data is integrated from VALORIZZATORE according to the scheduled frequency via Web Services.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-005"
    },
    {
      "Title": "Verify Error Handling for Unavailable Integration Service (e.g., CERVED Web Service Down)",
      "ID": "TC-619",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate the unavailability of the CERVED Web Service (e.g., by disabling the endpoint or using a mock service that returns errors).",
          "Expected Result": "Integration system attempts to connect and receives an error response."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a data retrieval request from the integration system to the unavailable CERVED Web Service.",
          "Expected Result": "Integration system handles the error gracefully (e.g., logs the error, retries if configured, notifies the user/system admin as per requirements)."
        },
        {
          "Step": 3,
          "Step Description": "Check system logs and notifications for appropriate error messages and handling actions.",
          "Expected Result": "Error is logged, and notification is sent as per the error handling policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "CERVED Integration",
      "Preconditions": "Integration system is operational; CERVED Web Service endpoint is made unavailable for the test.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling for Integration Failures",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (service unavailability simulated)",
      "Expected Result": "System handles integration service unavailability gracefully, logs the error, and notifies as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-INT-006"
    },
    {
      "Title": "Verify Accessibility of ZENIT Project Reference Documentation Link",
      "ID": "TC-620",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser (e.g., Chrome, Firefox, Edge).",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the provided ZENIT project documentation URL: https://sisalprod.service-now.com/now/nav/ui/classic/params/target/pm_project.do%3Fsys_id%3Dee7e798a3b6b1e10221283d964e45a95%26sysparm_view%3Dtext_search",
          "Expected Result": "The browser attempts to load the specified URL."
        },
        {
          "Step": 3,
          "Step Description": "Observe if the ZENIT - Phase 1 project documentation page loads without errors.",
          "Expected Result": "The ZENIT - Phase 1 project documentation page is displayed successfully, and no error messages are shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Reference Documentation Portal",
      "Preconditions": "User has network access and valid credentials (if authentication is required).",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documentation Accessibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT project documentation URL",
      "Expected Result": "The ZENIT - Phase 1 project documentation page is accessible via the provided URL without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the accessibility of the documentation link, not the content validity.",
      "_polarion": "ZENIT-REQ-REFERENCE-DOCS"
    },
    {
      "Title": "Verify Content Availability for ZENIT Project Documentation",
      "ID": "TC-621",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT project documentation page as described in TC-001.",
          "Expected Result": "ZENIT project documentation page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Review the page to confirm the presence of documentation related to ZENIT - Phase 1.",
          "Expected Result": "Documentation for ZENIT - Phase 1 is listed and accessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Reference Documentation Portal",
      "Preconditions": "User is able to access the ZENIT project documentation page.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documentation Content Availability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT project documentation page",
      "Expected Result": "Documentation related to ZENIT - Phase 1 is present and accessible on the reference page.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify the accuracy or completeness of the documentation content.",
      "_polarion": "ZENIT-REQ-REFERENCE-DOCS"
    },
    {
      "Title": "Verify Error Handling for Invalid or Inaccessible Documentation Link",
      "ID": "TC-622",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser.",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to an intentionally malformed or unavailable ZENIT documentation URL (e.g., append random characters to the end of the provided URL).",
          "Expected Result": "The browser attempts to load the malformed or unavailable URL."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the invalid or inaccessible URL.",
          "Expected Result": "An appropriate error message is displayed (e.g., 404 Not Found, Access Denied), and no sensitive information is leaked."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Reference Documentation Portal",
      "Preconditions": "User has network access.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documentation Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Malformed or unavailable ZENIT documentation URL",
      "Expected Result": "The system displays an appropriate error message for invalid or inaccessible documentation links without exposing sensitive information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only error handling for invalid URLs, not authentication or authorization errors.",
      "_polarion": "ZENIT-REQ-REFERENCE-DOCS"
    },
    {
      "Title": "Verify accessibility and correctness of all reference file links in the Appendix",
      "ID": "TC-623",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Appendix section of the document.",
          "Expected Result": "Appendix section is displayed with a list of reference files and their links."
        },
        {
          "Step": 2,
          "Step Description": "Click on each reference file link one by one.",
          "Expected Result": "Each link opens the corresponding file in a new browser tab or prompts for download."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the opened/downloaded file matches the description and filename provided in the Appendix.",
          "Expected Result": "The file content and name correspond to the description in the Appendix."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Documentation/Appendix",
      "Preconditions": "User has access to the document and required SharePoint permissions to open the links.",
      "Execution Mode": "Manual",
      "Functionality": "Reference file accessibility and correctness",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A (uses provided document and links)",
      "Expected Result": "All reference file links in the Appendix are accessible, open the correct files, and match their descriptions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-APP-001"
    },
    {
      "Title": "Validate that the list of data to be predicted file is accessible and contains expected data structure",
      "ID": "TC-624",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Click on the link for 'ZENIT - Elenco Dati_V_4.1.xlsx' in the Appendix.",
          "Expected Result": "The Excel file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the file and review the sheet(s) for the list of data to be predicted.",
          "Expected Result": "The file contains a structured list of data items to be predicted as per the functional analysis."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Prediction Reference",
      "Preconditions": "User has access to the document and SharePoint. Excel is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "Reference data file accessibility and content verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Elenco Dati_V_4.1.xlsx",
      "Expected Result": "The file is accessible and contains the expected list of data to be predicted.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only file accessibility and basic content structure, not data accuracy.",
      "_polarion": "REQ-APP-002"
    },
    {
      "Title": "Verify accessibility and content of dashboard mockup file",
      "ID": "TC-625",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Click on the link for 'ZENIT - Dashboard Mockup - v01.0.xlsx' in the Appendix.",
          "Expected Result": "The Excel file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the file and verify that it contains dashboard mockups as described.",
          "Expected Result": "The file contains visual mockups or wireframes of the dashboard as per the functional analysis."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Mockup Reference",
      "Preconditions": "User has access to the document and SharePoint. Excel is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard mockup reference file accessibility and content verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Dashboard Mockup - v01.0.xlsx",
      "Expected Result": "The dashboard mockup file is accessible and contains the expected mockups.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify design accuracy, only file accessibility and presence of mockups.",
      "_polarion": "REQ-APP-003"
    },
    {
      "Title": "Verify accessibility and content of user profiles and features mapping file",
      "ID": "TC-626",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Click on the link for 'ZENIT - Features and Profiles v1.0.xlsx' in the Appendix.",
          "Expected Result": "The Excel file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the file and verify that it contains user profiles and enabled features mapping.",
          "Expected Result": "The file contains a mapping of user profiles to their enabled features as described."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "User Profiles and Features Mapping Reference",
      "Preconditions": "User has access to the document and SharePoint. Excel is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "User profiles and features mapping file accessibility and content verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Features and Profiles v1.0.xlsx",
      "Expected Result": "The user profiles and features mapping file is accessible and contains the expected mappings.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify mapping accuracy, only file accessibility and presence of mappings.",
      "_polarion": "REQ-APP-004"
    },
    {
      "Title": "Verify accessibility and content of Excel files mapping reference",
      "ID": "TC-627",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Click on the link for 'ZENIT - Excel files mapping v1.1.xlsx' in the Appendix.",
          "Expected Result": "The Excel file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the file and verify that it contains mapping information for Excel files to be imported.",
          "Expected Result": "The file contains mapping details for Excel files as described in the Appendix."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Excel Files Mapping Reference",
      "Preconditions": "User has access to the document and SharePoint. Excel is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "Excel files mapping reference file accessibility and content verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Excel files mapping v1.1.xlsx",
      "Expected Result": "The Excel files mapping reference is accessible and contains the expected mapping information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify mapping accuracy, only file accessibility and presence of mapping data.",
      "_polarion": "REQ-APP-005"
    },
    {
      "Title": "Verify accessibility and content of data collection mapping file from source systems",
      "ID": "TC-628",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Click on the link for 'ZENIT - Data Colletion - Phase 1 - PRJ0015372- Mapping v1.0.xlsx' in the Appendix.",
          "Expected Result": "The Excel file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the file and verify that it contains mapping of data to be acquired from source systems.",
          "Expected Result": "The file contains mapping details for data collection from source systems as described."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Mapping Reference",
      "Preconditions": "User has access to the document and SharePoint. Excel is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "Data collection mapping file accessibility and content verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Data Colletion - Phase 1 - PRJ0015372- Mapping v1.0.xlsx",
      "Expected Result": "The data collection mapping file is accessible and contains the expected mapping information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify mapping accuracy, only file accessibility and presence of mapping data.",
      "_polarion": "REQ-APP-006"
    },
    {
      "Title": "Verify error handling when accessing reference files without proper SharePoint permissions",
      "ID": "TC-629",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in with a user account that does not have SharePoint access rights.",
          "Expected Result": "User is authenticated but lacks permissions for the SharePoint location."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access each reference file link in the Appendix.",
          "Expected Result": "Access is denied, and an appropriate error message is displayed (e.g., 'You do not have permission to access this file')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Reference File Access Control",
      "Preconditions": "User account without SharePoint permissions is available.",
      "Execution Mode": "Manual",
      "Functionality": "Reference file access control and error handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User account without SharePoint permissions",
      "Expected Result": "Access to reference files is denied for unauthorized users, with clear error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access control, not file content.",
      "_polarion": "REQ-APP-007"
    }
  ],
  "total_count": 629
}