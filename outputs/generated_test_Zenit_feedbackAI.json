{
  "test_cases": [
    {
      "Title": "FirstLine_proj_001_DisplayOfFirstLineRequirement_DESKTOP_TEST_Desktop",
      "ID": "TC-001",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on a desktop environment.",
          "Expected Result": "The application starts successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the main screen or the relevant section where the 'first line' should be displayed.",
          "Expected Result": "The main screen or relevant section loads correctly."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'first line' is present and visible at the top of the designated area.",
          "Expected Result": "The 'first line' is clearly visible at the top of the designated area."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Desktop Application",
      "Preconditions": "1. The desktop application is installed on the computer.\n2. The user has access rights to launch the application.\n3. The system is connected to the required network (if applicable).",
      "Execution Mode": "Manual",
      "Functionality": "Display of First Line",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'first line' is displayed at the top of the designated area upon application launch.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the first line on desktop interface.",
      "_polarion": "== first line =="
    },
    {
      "Title": "FirstLine_proj_001_AbsenceOfFirstLineError_DESKTOP_TEST_Desktop",
      "ID": "TC-002",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on a desktop environment.",
          "Expected Result": "The application starts successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the main screen or the relevant section where the 'first line' should be displayed.",
          "Expected Result": "The main screen or relevant section loads correctly."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of the 'first line' at the top of the designated area.",
          "Expected Result": "If the 'first line' is missing, an appropriate error message or placeholder is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Desktop Application",
      "Preconditions": "1. The desktop application is installed on the computer.\n2. The user has access rights to launch the application.\n3. The system is connected to the required network (if applicable).",
      "Execution Mode": "Manual",
      "Functionality": "Display of First Line",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "If the 'first line' is not available, the application displays an appropriate error message or placeholder.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing 'first line' on desktop interface.",
      "_polarion": "== first line =="
    },
    {
      "Title": "FirstLine_proj_001_DisplayOfFirstLineRequirement_MOBILE_TEST_Android",
      "ID": "TC-003",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an Android mobile device.",
          "Expected Result": "The application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the main screen or relevant section where the 'first line' should be displayed.",
          "Expected Result": "The main screen or relevant section loads correctly."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'first line' is present and visible at the top of the designated area.",
          "Expected Result": "The 'first line' is clearly visible at the top of the designated area."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android 12, Mobile Application",
      "Preconditions": "1. The mobile application is installed on the Android device.\n2. The user is logged in (if required).\n3. The device is connected to the internet (if applicable).",
      "Execution Mode": "Manual",
      "Functionality": "Display of First Line",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'first line' is displayed at the top of the designated area upon application launch on Android device.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the first line on Android mobile interface.",
      "_polarion": "== first line =="
    },
    {
      "Title": "FirstLine_proj_001_DisplayOfFirstLineRequirement_MOBILE_TEST_iOS",
      "ID": "TC-004",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an iOS mobile device.",
          "Expected Result": "The application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the main screen or relevant section where the 'first line' should be displayed.",
          "Expected Result": "The main screen or relevant section loads correctly."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'first line' is present and visible at the top of the designated area.",
          "Expected Result": "The 'first line' is clearly visible at the top of the designated area."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "iOS 16, Mobile Application",
      "Preconditions": "1. The mobile application is installed on the iOS device.\n2. The user is logged in (if required).\n3. The device is connected to the internet (if applicable).",
      "Execution Mode": "Manual",
      "Functionality": "Display of First Line",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'first line' is displayed at the top of the designated area upon application launch on iOS device.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the first line on iOS mobile interface.",
      "_polarion": "== first line =="
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_DataMigration_TEST_Desktop",
      "ID": "TC-005",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the legacy data source is available and accessible.",
          "Expected Result": "Legacy data source is reachable and data is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial load and data migration process from the legacy system to ZENIT.",
          "Expected Result": "Data migration process starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process for completion.",
          "Expected Result": "Migration process completes successfully."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all expected data records are present in the ZENIT system post-migration.",
          "Expected Result": "All data records are accurately migrated and available in ZENIT."
        },
        {
          "Step": 5,
          "Step Description": "Check for data integrity by comparing sample records between source and target systems.",
          "Expected Result": "Sample records match exactly between source and target."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. Legacy data source is populated and accessible. 2. ZENIT system is installed and configured. 3. User has admin privileges to perform migration.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Load and Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample legacy data set for migration.",
      "Expected Result": "All legacy data is migrated to ZENIT without loss or corruption, and data integrity is maintained.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "SessionTimeout-ZENIT_RF002_DisconnectedInactivity_TEST_Desktop",
      "ID": "TC-006",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during this period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application behavior after the timeout period elapses.",
          "Expected Result": "User is automatically logged out and redirected to the login page with an inactivity message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT application is running. 2. User credentials are available. 3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User session is terminated after inactivity and user is prompted to log in again.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "LoginTracking-ZENIT_RF003_LoginSOX_TEST_Desktop",
      "ID": "TC-007",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with a valid user account.",
          "Expected Result": "User is authenticated and login event is triggered."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit/log tracking system or database.",
          "Expected Result": "Audit/log system is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Search for the login event corresponding to the user and timestamp.",
          "Expected Result": "Login event is recorded with correct user ID, timestamp, and relevant metadata."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT application is running. 2. Audit/log tracking system is enabled. 3. User credentials are available.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking (SOX)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "Each login event is properly tracked and recorded for SOX compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "LogTracking-ZENIT_RF004_OperationAudit_TEST_Desktop",
      "ID": "TC-008",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a set of operations in the ZENIT application (e.g., data update, deletion).",
          "Expected Result": "Operations are executed successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the log tracking/audit system.",
          "Expected Result": "Log tracking system is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each operation is logged with correct details (user, operation type, timestamp, affected data).",
          "Expected Result": "All operations are accurately logged with complete details."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT application is running. 2. Log tracking/audit system is enabled. 3. User credentials are available.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample data for operations.",
      "Expected Result": "All user operations are logged for audit and traceability purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "Concurrency-ZENIT_RF005_ManageConcurrency_TEST_Desktop",
      "ID": "TC-009",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with two different user accounts on separate devices or browsers.",
          "Expected Result": "Both users are logged in successfully."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to edit the same data record simultaneously from both sessions.",
          "Expected Result": "System detects concurrent modification attempts."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application response for both users.",
          "Expected Result": "System prevents data corruption by allowing only one user to save changes, or prompts for conflict resolution."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT application is running. 2. Two valid user accounts are available. 3. Target data record exists.",
      "Execution Mode": "Manual",
      "Functionality": "Manage Concurrency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Two valid user credentials; target data record.",
      "Expected Result": "System manages concurrent data access and prevents data loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "Settings-ZENIT_RF006_UserPreferences_TEST_Desktop",
      "ID": "TC-010",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the settings/preferences section.",
          "Expected Result": "Settings page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Modify a user preference (e.g., language, notification settings) and save changes.",
          "Expected Result": "Preference is updated and saved successfully."
        },
        {
          "Step": 4,
          "Step Description": "Log out and log back in to verify persistence of the updated setting.",
          "Expected Result": "Updated preference is retained after re-login."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT application is running. 2. User credentials are available.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User preferences can be updated and persist across sessions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "Verify-proj_001_introduction_document_translation_functionality/Desktop_TEST_Desktop",
      "ID": "TC-011",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain the user requirements document as input.",
          "Expected Result": "User requirements document is available for processing."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the translation process to convert user requirements into functional specifications.",
          "Expected Result": "Translation process starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated functional specifications document.",
          "Expected Result": "Functional specifications document is generated."
        },
        {
          "Step": 4,
          "Step Description": "Compare the content of the functional specifications with the original user requirements to ensure all requirements are covered and accurately translated.",
          "Expected Result": "All user requirements are present and correctly reflected in the functional specifications."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop",
      "Preconditions": "1. User requirements document is finalized and available.\n2. Translation tool or process is accessible.\n3. Tester has access to both documents.",
      "Execution Mode": "Manual",
      "Functionality": "Document Translation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Sample user requirements document; access to translation tool/process.",
      "Expected Result": "Functional specifications document accurately reflects all user requirements as per the input document.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers the translation process from user requirements to functional specifications.",
      "_polarion": "INTRODUCTION"
    },
    {
      "Title": "Verify-proj_001_introduction_document_translation_error_handling/Desktop_TEST_Desktop",
      "ID": "TC-012",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to initiate the translation process with an incomplete or missing user requirements document.",
          "Expected Result": "System detects the missing or incomplete document and displays an appropriate error message."
        },
        {
          "Step": 2,
          "Step Description": "Observe the system's response to the error condition.",
          "Expected Result": "Translation process does not proceed, and user is informed of the issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop",
      "Preconditions": "1. Translation tool or process is accessible.\n2. No valid user requirements document is provided or the document is incomplete.",
      "Execution Mode": "Manual",
      "Functionality": "Document Translation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "No or incomplete user requirements document.",
      "Expected Result": "System prevents translation and provides a clear error message when input is missing or incomplete.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing or incomplete input documents.",
      "_polarion": "INTRODUCTION"
    },
    {
      "Title": "Verify-proj_001_introduction_document_translation_completeness/Desktop_TEST_Desktop",
      "ID": "TC-013",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Provide a user requirements document containing edge cases (e.g., ambiguous, conflicting, or incomplete requirements).",
          "Expected Result": "User requirements document with edge cases is available for processing."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the translation process to generate functional specifications.",
          "Expected Result": "Translation process completes without system errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated functional specifications for handling of edge cases.",
          "Expected Result": "Functional specifications document addresses ambiguities, conflicts, or incomplete requirements appropriately (e.g., with notes, clarifications, or flags for further review)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop",
      "Preconditions": "1. User requirements document with edge cases is available.\n2. Translation tool or process is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Document Translation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User requirements document with ambiguous, conflicting, or incomplete requirements.",
      "Expected Result": "Functional specifications document highlights or addresses all edge cases from the user requirements document.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers completeness and handling of edge cases in the translation process.",
      "_polarion": "INTRODUCTION"
    },
    {
      "Title": "Glossary-proj_001_abbreviation_display/desktop_TEST_Desktop",
      "ID": "TC-014",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Description and Abbreviation' section of the application.",
          "Expected Result": "The section loads without errors."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all listed terms (e.g., ADI, ADM, AM, AWP, etc.) are displayed in a tabular format with their corresponding descriptions.",
          "Expected Result": "Each term is present with its correct description as per the requirements."
        },
        {
          "Step": 3,
          "Step Description": "Check that the table is scrollable if the content exceeds the visible area.",
          "Expected Result": "The table allows scrolling and no content is hidden or truncated."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application.\n2. User is logged in with sufficient permissions to view the glossary section.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "All terms and their descriptions are displayed accurately and completely in the glossary section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "DESCRIPTION AND ABBREVIATION"
    },
    {
      "Title": "Glossary-proj_001_abbreviation_search/desktop_TEST_Desktop",
      "ID": "TC-015",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Description and Abbreviation' section of the application.",
          "Expected Result": "The section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the search or filter input field above the glossary table.",
          "Expected Result": "A search/filter input is available."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid term abbreviation (e.g., 'AWP') into the search field.",
          "Expected Result": "The table filters to show only the row(s) matching 'AWP'."
        },
        {
          "Step": 4,
          "Step Description": "Clear the search field.",
          "Expected Result": "The table returns to displaying all terms and descriptions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application.\n2. User is logged in with sufficient permissions.\n3. Glossary section is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Search term: 'AWP'",
      "Expected Result": "The glossary table can be filtered by term abbreviation and resets correctly when the filter is cleared.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "DESCRIPTION AND ABBREVIATION"
    },
    {
      "Title": "Glossary-proj_001_abbreviation_invalid_search/desktop_TEST_Desktop",
      "ID": "TC-016",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Description and Abbreviation' section of the application.",
          "Expected Result": "The section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid or non-existent abbreviation (e.g., 'XYZ') into the search field.",
          "Expected Result": "The table displays a message indicating no results found or shows an empty state."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application.\n2. User is logged in with sufficient permissions.\n3. Glossary section is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Search term: 'XYZ'",
      "Expected Result": "The glossary table handles invalid or non-existent search terms gracefully, displaying an appropriate message or empty state.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "DESCRIPTION AND ABBREVIATION"
    },
    {
      "Title": "Glossary-proj_001_abbreviation_term_details/desktop_TEST_Desktop",
      "ID": "TC-017",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Description and Abbreviation' section of the application.",
          "Expected Result": "The section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Click on a term abbreviation (e.g., 'VLT') in the glossary table, if clickable.",
          "Expected Result": "A detailed view or popup appears showing the full description and any additional information for 'VLT'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application.\n2. User is logged in with sufficient permissions.\n3. Glossary section is accessible.\n4. Terms in the table are implemented as clickable links or buttons.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary Term Details",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Term: 'VLT'",
      "Expected Result": "Clicking a term displays its full description and any additional details, if such functionality is implemented.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only clickable term details, if implemented.",
      "_polarion": "DESCRIPTION AND ABBREVIATION"
    },
    {
      "Title": "GeneralDescription_proj_001_general_description_APPLICATION_TEST_Desktop",
      "ID": "TC-018",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application on a desktop device.",
          "Expected Result": "The application loads successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section labeled 'General Description'.",
          "Expected Result": "The 'General Description' section is displayed clearly and is accessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Tester has access to a desktop computer with a supported browser.\n2. The application is deployed and accessible.\n3. User has valid credentials if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "General Description Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'General Description' section is accessible and displays the expected content without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the accessibility and visibility of the 'General Description' section.",
      "_polarion": "GENERAL DESCRIPTION"
    },
    {
      "Title": "GeneralDescription_proj_001_general_description_APPLICATION_TEST_Mobile",
      "ID": "TC-019",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on a mobile device (Android or iOS).",
          "Expected Result": "The application launches successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'General Description' section from the main menu or relevant navigation path.",
          "Expected Result": "The 'General Description' section is displayed and readable on the mobile device."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android 12, iOS 16, Mobile Application",
      "Preconditions": "1. Tester has a compatible mobile device (Android or iOS).\n2. The application is installed and accessible.\n3. User is logged in if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "General Description Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'General Description' section is accessible and displays the expected content correctly on mobile devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers accessibility and display on mobile platforms.",
      "_polarion": "GENERAL DESCRIPTION"
    },
    {
      "Title": "GeneralDescription_proj_001_general_description_content_validation_APPLICATION_TEST_Desktop",
      "ID": "TC-020",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application on a desktop device and navigate to the 'General Description' section.",
          "Expected Result": "The 'General Description' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the content of the 'General Description' matches the expected documentation or requirements.",
          "Expected Result": "The content is accurate, complete, and free of typographical errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Tester has access to the application and the expected content documentation.\n2. The application is running and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Content Validation",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Expected 'General Description' content as per documentation.",
      "Expected Result": "The 'General Description' section displays content that is accurate and matches the documentation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Validates only the content accuracy of the 'General Description' section.",
      "_polarion": "GENERAL DESCRIPTION"
    },
    {
      "Title": "GeneralDescription_proj_001_general_description_error_handling_APPLICATION_TEST_Desktop",
      "ID": "TC-021",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a network disconnection before accessing the 'General Description' section.",
          "Expected Result": "The application displays an appropriate error message or fallback content."
        },
        {
          "Step": 2,
          "Step Description": "Restore the network connection and refresh the section.",
          "Expected Result": "The 'General Description' section loads successfully after the network is restored."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Tester can control network connectivity on the test device.\n2. The application is accessible and running.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The application handles network errors gracefully and recovers when connectivity is restored.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for network issues in the 'General Description' section.",
      "_polarion": "GENERAL DESCRIPTION"
    },
    {
      "Title": "CreditStatusVisibility-proj1_req1_CustomerCreditStatus_Backoffice_TEST_Desktop",
      "ID": "TC-022",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office application as a Finance team user.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Customer Credit Status' section.",
          "Expected Result": "The section loads, displaying a list of all retail customers (points of sale)."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific point of sale from the list.",
          "Expected Result": "Detailed credit status for the selected point of sale is displayed, including credit limit, current exposure, and available credit."
        },
        {
          "Step": 4,
          "Step Description": "Drill down into business areas for the selected point of sale.",
          "Expected Result": "The application displays credit status broken down by business area (e.g., product lines, channels)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.\n3. At least one point of sale with credit data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Status Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; at least one point of sale with credit data.",
      "Expected Result": "The user can view comprehensive credit status for any point of sale, with drill-down into all business areas.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "RiskSummary-proj1_req2_CompanyRiskSummary_Backoffice_TEST_Desktop",
      "ID": "TC-023",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office as a Finance team user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Company Risk Summary' dashboard or section.",
          "Expected Result": "A summary view of the company's overall risk level is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the risk indicators and summary metrics.",
          "Expected Result": "Risk indicators (e.g., total exposure, risk by channel, risk by product) are visible and up-to-date."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.\n3. Risk data is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Risk Summary",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; risk data for company.",
      "Expected Result": "The user can view an accurate and up-to-date summary of the company's risk level.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "CreditLineDrilldown-proj1_req3_CreditLineBreakdown_Backoffice_TEST_Desktop",
      "ID": "TC-024",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office as a Finance team user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Line Management' section.",
          "Expected Result": "A list of all points of sale and their credit lines is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a point of sale and view its credit line details.",
          "Expected Result": "Credit lines are displayed, broken down by product (e.g., Totocalcio, Horse Racing, etc.)."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the breakdown matches the expected categories for the selected point of sale (SIMP or GEO products).",
          "Expected Result": "Credit line breakdown is accurate and reflects the correct products for the selected point of sale."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.\n3. At least one point of sale with multiple product credit lines exists.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Breakdown",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; point of sale with SIMP and GEO product credit lines.",
      "Expected Result": "The user can view a detailed, accurate breakdown of credit lines by product for each point of sale.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "ChannelClassification-proj1_req4_ChannelCategoryAssignment_Backoffice_TEST_Desktop",
      "ID": "TC-025",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office as a Finance team user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Points of Sale' management section.",
          "Expected Result": "A list of all points of sale is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a point of sale and view its details, including 'Canale 1' category.",
          "Expected Result": "'Canale 1' category is displayed for the selected point of sale."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'Canale 1' value matches the expected mapping based on the 'Cluster PV' (e.g., PGI, PGS, Negozio, etc.).",
          "Expected Result": "The 'Canale 1' value is correctly assigned as BRANDED or UNBRANDED according to the mapping rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.\n3. Points of sale with various 'Cluster PV' values exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Channel Classification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; points of sale with different 'Cluster PV' values.",
      "Expected Result": "Each point of sale is correctly classified as BRANDED or UNBRANDED based on the 'Cluster PV' value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "CreditLineProductList-proj1_req5_CreditLineProducts_Backoffice_TEST_Desktop",
      "ID": "TC-026",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office as a Finance team user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Line Products' section.",
          "Expected Result": "A list of all available credit line products is displayed, separated by SIMP and GEO."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the SIMP products include Totocalcio, Horse Racing, Fixed Odds Sports, Virtual Race, and Global Game.",
          "Expected Result": "All SIMP products are listed as available credit lines."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the GEO products include Numerical Games (GNTN), Corner (PGI and PGS), and Game Accounts (Servizi - CONTI GIOCO).",
          "Expected Result": "All GEO products are listed as available credit lines."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Products",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials.",
      "Expected Result": "The system displays all available credit line products for SIMP and GEO as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "WeeklyCreditLineManagement-proj1_req6_WeeklyCreditLineUpdate_Backoffice_TEST_Desktop",
      "ID": "TC-027",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office as a Finance team user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Line Management' section.",
          "Expected Result": "A list of all points of sale and their credit lines is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a point of sale and view its credit line management history.",
          "Expected Result": "A history of credit line changes is displayed, showing updates on a weekly basis."
        },
        {
          "Step": 4,
          "Step Description": "Verify that credit line updates are only allowed or reflected on a weekly basis.",
          "Expected Result": "Credit line management actions are restricted to weekly intervals, and the system enforces this rule."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.\n3. At least one point of sale with credit line management history exists.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Management Frequency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; point of sale with credit line management history.",
      "Expected Result": "Credit line management for each product is performed and tracked on a weekly basis only.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "InvalidPOSAccess-proj1_req7_InvalidPOS_ErrorHandling_Backoffice_TEST_Desktop",
      "ID": "TC-028",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office as a Finance team user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access credit status for a non-existent or invalid point of sale ID.",
          "Expected Result": "The system displays an error message indicating the point of sale does not exist or is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; invalid point of sale ID.",
      "Expected Result": "The system prevents access to non-existent or invalid points of sale and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "MultibrandIntegration-proj1_req8_MultibrandIntegration_Backoffice_TEST_Desktop",
      "ID": "TC-029",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office as a Finance team user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Multibrand Integration' section or dashboard.",
          "Expected Result": "A list of integrated brands (e.g., Sisal, SNAI) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a brand (e.g., SNAI) and view associated points of sale and their credit status.",
          "Expected Result": "Credit status for points of sale under the selected brand is displayed, with the same level of detail as for Sisal points of sale."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.\n3. At least one integrated brand (e.g., SNAI) with points of sale exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Multibrand Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; integrated brand and associated points of sale.",
      "Expected Result": "The system provides full credit status visibility and management for all integrated brands and their points of sale.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "MDMIntegration-proj_001_MDM_MasterDataSync_ZENIT_TEST_Desktop",
      "ID": "TC-030",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM system contains updated PoS master data for all countries.",
          "Expected Result": "MDM system has the latest PoS master data available."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the synchronization process between MDM and ZENIT via ESB.",
          "Expected Result": "Synchronization process initiates without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT receives and updates PoS master data from MDM via ESB.",
          "Expected Result": "ZENIT reflects the latest PoS master data as provided by MDM."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Backend",
      "Preconditions": "1. MDM system is operational and contains valid PoS master data.\n2. ESB is configured and operational.\n3. ZENIT is connected to ESB and ready to receive data.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - MDM Master Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS master data in MDM for multiple countries.",
      "Expected Result": "ZENIT successfully receives and updates PoS master data from MDM via ESB without data loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the data synchronization aspect, not error handling or incremental updates.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "ORIONIntegration-proj_001_TerminalsProductsDataSync_ZENIT_TEST_Desktop",
      "ID": "TC-031",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ORION system contains updated PoS terminals and products data.",
          "Expected Result": "ORION system has the latest terminals and products data available."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data synchronization process between ORION and ZENIT.",
          "Expected Result": "Synchronization process starts successfully."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT receives and updates PoS terminals and products data from ORION.",
          "Expected Result": "ZENIT displays the latest terminals and products data as provided by ORION."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Backend",
      "Preconditions": "1. ORION system is operational and contains valid terminals and products data.\n2. ZENIT is configured to receive data from ORION.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - ORION Terminals/Products",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample terminals and products data in ORION.",
      "Expected Result": "ZENIT successfully receives and updates PoS terminals and products data from ORION.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover error scenarios or partial data updates.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "CERVEDIntegration-proj_001_RiskAnalysisRatingSync_ZENIT_TEST_Desktop",
      "ID": "TC-032",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure CERVED system contains up-to-date PoS commercial information and ratings.",
          "Expected Result": "CERVED system has the latest PoS ratings available."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the periodic risk analysis data retrieval from CERVED to ZENIT.",
          "Expected Result": "Data retrieval process initiates without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT receives and displays the PoS commercial ratings from CERVED.",
          "Expected Result": "ZENIT shows the correct PoS commercial ratings as provided by CERVED."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Backend",
      "Preconditions": "1. CERVED system is operational and contains valid PoS commercial ratings.\n2. ZENIT is configured to retrieve data from CERVED.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - CERVED Risk Analysis",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS commercial ratings in CERVED.",
      "Expected Result": "ZENIT successfully retrieves and displays PoS commercial ratings from CERVED for risk analysis.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on successful data retrieval, not error or delayed data scenarios.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "ARXIVARIntegration-proj_001_DocumentRetrieval_ZENIT_TEST_Desktop",
      "ID": "TC-033",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ARXIVAR-NEXT contains archived documents and contracts for PoS.",
          "Expected Result": "ARXIVAR-NEXT has relevant documents and contracts available."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a document retrieval request from ZENIT to ARXIVAR-NEXT for a specific PoS.",
          "Expected Result": "Document retrieval request is sent successfully."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT displays the retrieved documents and contracts for the selected PoS.",
          "Expected Result": "ZENIT shows the correct documents and contracts as retrieved from ARXIVAR-NEXT."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Backend",
      "Preconditions": "1. ARXIVAR-NEXT is operational and contains archived documents/contracts.\n2. ZENIT is configured to connect to ARXIVAR-NEXT.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - Document Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample archived documents/contracts in ARXIVAR-NEXT for test PoS.",
      "Expected Result": "ZENIT successfully retrieves and displays archived documents and contracts from ARXIVAR-NEXT.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover document upload or error scenarios.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "ArchiCONIntegration-proj_001_BorderoLink_ZENIT_TEST_Desktop",
      "ID": "TC-034",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ArchiCON platform is operational and accessible via link.",
          "Expected Result": "ArchiCON platform is available and reachable."
        },
        {
          "Step": 2,
          "Step Description": "From ZENIT, click the link to view PoS 'borderò' details in ArchiCON.",
          "Expected Result": "User is redirected to ArchiCON platform."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the correct PoS 'borderò' details are displayed in ArchiCON.",
          "Expected Result": "ArchiCON displays the correct 'borderò' details for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Backend",
      "Preconditions": "1. ArchiCON platform is operational and accessible.\n2. ZENIT provides a valid link to ArchiCON for PoS 'borderò' details.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - External Link",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Test PoS with 'borderò' details in ArchiCON.",
      "Expected Result": "User is redirected from ZENIT to ArchiCON and sees the correct PoS 'borderò' details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only link redirection and data display, not authentication or error handling.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "GeneralRestrictions_proj_001_NoKnownRestrictions_APPLICATION_TEST_Desktop",
      "ID": "TC-035",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review the application documentation and user interface for any mention of general restrictions.",
          "Expected Result": "No general restrictions are documented or displayed to the user."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access all primary features and functionalities of the application without any special permissions or roles.",
          "Expected Result": "All features and functionalities are accessible without encountering any restriction messages."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform typical user actions (e.g., login, navigation, data entry) as a standard user.",
          "Expected Result": "No restriction-related errors or warnings are encountered during normal usage."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. The application is installed and accessible on a desktop computer.\n2. The tester has access to a standard user account.\n3. No special configurations or permissions are applied.",
      "Execution Mode": "Manual",
      "Functionality": "General Restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Standard user credentials for login (e.g., username: testuser, password: Test@1234).",
      "Expected Result": "The application does not present any general restrictions to the user, and all features are accessible as expected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers the absence of general restrictions as per current documentation.",
      "_polarion": "General Restrictions"
    },
    {
      "Title": "InitialLoad-proj_RF001_InitialLoadAndDataMigration_TEST_Desktop",
      "ID": "TC-036",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is in a clean state with no pre-existing migrated data.",
          "Expected Result": "System is ready for initial load and migration."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial load and data migration process from the legacy system.",
          "Expected Result": "Migration process starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process until completion.",
          "Expected Result": "Migration completes successfully."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all expected data is present and correctly migrated in the new system.",
          "Expected Result": "All data is accurately migrated and accessible in the new system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Legacy system is accessible and data is available for migration.\n2. Migration tool is configured and operational.\n3. User has administrative privileges to perform migration.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Load and Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample legacy data set for migration.",
      "Expected Result": "All legacy data is migrated without loss or corruption and is accessible in the new system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "SessionTimeout-proj_RF002_DisconnectedForInactivity_TEST_Desktop",
      "ID": "TC-037",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a valid user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during this period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system behavior after the timeout period elapses.",
          "Expected Result": "User is automatically logged out and redirected to the login screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account exists and is active.\n2. Inactivity timeout is configured in the system settings.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User is disconnected after inactivity and must log in again to access the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginTrackingSOX_TEST_Desktop",
      "ID": "TC-038",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application using valid credentials.",
          "Expected Result": "User is authenticated and logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access the login tracking logs or audit trail.",
          "Expected Result": "A new entry is created for the login event with correct user and timestamp."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account exists and is active.\n2. Audit logging is enabled in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking (SOX)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "Login event is recorded in the audit logs with correct details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "DataAccessTracking-proj_RF003_VisualizationDataAccessTracking_TEST_Desktop",
      "ID": "TC-039",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a valid user.",
          "Expected Result": "User is authenticated and logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access a sensitive data visualization page (e.g., dashboard or report).",
          "Expected Result": "Data is displayed to the user."
        },
        {
          "Step": 3,
          "Step Description": "Access the data access tracking logs or audit trail.",
          "Expected Result": "A new entry is created for the data access event with correct user, data accessed, and timestamp."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account exists and is active.\n2. Audit logging is enabled in the system.\n3. Sensitive data is available for access.",
      "Execution Mode": "Manual",
      "Functionality": "Visualization Data Access Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample sensitive data.",
      "Expected Result": "Data access event is recorded in the audit logs with correct details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "OperationsTracking-proj_RF004_OperationsTracking_TEST_Desktop",
      "ID": "TC-040",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with permissions to perform operations.",
          "Expected Result": "User is authenticated and logged in."
        },
        {
          "Step": 2,
          "Step Description": "Perform a tracked operation (e.g., create, update, or delete a record).",
          "Expected Result": "Operation is completed successfully."
        },
        {
          "Step": 3,
          "Step Description": "Access the operations tracking logs or audit trail.",
          "Expected Result": "A new entry is created for the operation event with correct user, operation type, and timestamp."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. Audit logging is enabled in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample record for operation.",
      "Expected Result": "Operation event is recorded in the audit logs with correct details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "ConcurrencyManagement-proj_RF005_ManageConcurrency_TEST_Desktop",
      "ID": "TC-041",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as User A.",
          "Expected Result": "User A is authenticated and logged in."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the application as User B on a different device or browser.",
          "Expected Result": "User B is authenticated and logged in."
        },
        {
          "Step": 3,
          "Step Description": "Both users attempt to edit the same record simultaneously.",
          "Expected Result": "System detects concurrent modification and prevents data corruption (e.g., by locking or warning)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Two user accounts exist and are active.\n2. The record to be edited exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Manage Concurrency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Two valid user credentials; sample record for editing.",
      "Expected Result": "System prevents concurrent data modification and ensures data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "SettingsManagement-proj_RF006_Settings_TEST_Desktop",
      "ID": "TC-042",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with settings management permissions.",
          "Expected Result": "User is authenticated and logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the settings management section.",
          "Expected Result": "Settings management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Modify a configurable setting and save changes.",
          "Expected Result": "Setting is updated and saved successfully."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the updated setting is applied throughout the application.",
          "Expected Result": "Application reflects the updated setting."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account with settings management permissions exists.\n2. At least one configurable setting is available.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample setting to modify.",
      "Expected Result": "Settings can be modified and changes are applied system-wide.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "AutomatedDataCollection-proj1_req1_DataCollection/desktop_TEST_Desktop",
      "ID": "TC-043",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an authorized user.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed with options for POS registries, gaming platforms, and document archives."
        },
        {
          "Step": 3,
          "Step Description": "Initiate automated data collection from POS registries.",
          "Expected Result": "System starts collecting data from POS registries and displays progress."
        },
        {
          "Step": 4,
          "Step Description": "Initiate automated data collection from gaming platforms.",
          "Expected Result": "System starts collecting data from gaming platforms and displays progress."
        },
        {
          "Step": 5,
          "Step Description": "Initiate automated data collection from document archives.",
          "Expected Result": "System starts collecting data from document archives and displays progress."
        },
        {
          "Step": 6,
          "Step Description": "Verify that data from all sources is aggregated and available for further processing.",
          "Expected Result": "All collected data is visible in the system and ready for analysis."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with data collection permissions exists.\n2. Data sources (POS registries, gaming platforms, document archives) are accessible and configured.\n3. ZENIT system is running and network connectivity is available.",
      "Execution Mode": "Manual",
      "Functionality": "Automated Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; accessible data sources with sample data.",
      "Expected Result": "ZENIT system successfully collects and aggregates data from all configured sources without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "CentralizedDashboard-proj1_req2_CreditInfoDisplay/desktop_TEST_Desktop",
      "ID": "TC-044",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Access the centralized dashboard from the main menu.",
          "Expected Result": "Centralized dashboard is displayed with relevant credit information sections."
        },
        {
          "Step": 3,
          "Step Description": "Verify the presence of financial data, credit ratings, and other relevant credit information.",
          "Expected Result": "All expected credit information (financial data, credit ratings, etc.) is visible and up-to-date."
        },
        {
          "Step": 4,
          "Step Description": "Check that data displayed matches the latest collected data from all sources.",
          "Expected Result": "Displayed data is consistent with the most recent data collection results."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with dashboard access exists.\n2. Data collection has been performed and data is available.\n3. ZENIT system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Centralized Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; pre-collected credit data.",
      "Expected Result": "Centralized dashboard displays accurate, up-to-date, and complete credit information from all sources.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "MultiBrandCustomerManagement-proj1_req3_MultiBrandCustomer/desktop_TEST_Desktop",
      "ID": "TC-045",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an admin user.",
          "Expected Result": "Admin user is authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the customer management section.",
          "Expected Result": "Customer management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a trusted customer and assign multiple brands according to FlutterSEA B2B retail master classifications.",
          "Expected Result": "Customer is associated with multiple brands as per classification rules."
        },
        {
          "Step": 4,
          "Step Description": "Save the changes and verify the multi-brand association is reflected in the customer profile.",
          "Expected Result": "Customer profile displays all assigned brands correctly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. Admin user account exists.\n2. Trusted customer records are present in the system.\n3. FlutterSEA B2B retail master classifications are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Multi-Brand Customer Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin credentials; trusted customer data; brand classification data.",
      "Expected Result": "System allows trusted customers to be managed in multi-brand mode according to the specified classifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "ErrorHandlingDataCollection-proj1_req4_ErrorHandling/desktop_TEST_Desktop",
      "ID": "TC-046",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Simulate a failure in one of the data sources (e.g., disconnect POS registry).",
          "Expected Result": "System detects the failure and displays an appropriate error message."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to re-initiate data collection from the failed source.",
          "Expected Result": "System retries the operation and logs the error for audit purposes."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with data collection permissions exists.\n2. At least one data source can be made unavailable for testing.\n3. ZENIT system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; data sources with simulated failure capability.",
      "Expected Result": "System gracefully handles data source failures, displays clear error messages, and logs incidents for audit.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "AuditTraceability-proj1_req5_AuditTraceability/desktop_TEST_Desktop",
      "ID": "TC-047",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an admin user.",
          "Expected Result": "Admin user is authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Perform a data collection operation.",
          "Expected Result": "Data collection operation is completed successfully."
        },
        {
          "Step": 3,
          "Step Description": "Access the audit log or traceability module.",
          "Expected Result": "Audit log interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the data collection operation is recorded with timestamp, user, and action details.",
          "Expected Result": "Audit log contains a detailed entry for the performed operation, including all relevant metadata."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. Admin user account exists.\n2. Audit logging is enabled in the system.\n3. ZENIT system is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Audit and Traceability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin credentials; system with audit logging enabled.",
      "Expected Result": "All user actions, especially data collection, are properly logged with full traceability for audit purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Import_Excel_Data_DESKTOP_TEST_Desktop",
      "ID": "TC-048",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid Excel file containing required data fields as per ZENIT data model.",
          "Expected Result": "Excel file is ready and contains all necessary fields."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for file upload."
        },
        {
          "Step": 3,
          "Step Description": "Select and upload the prepared Excel file for import.",
          "Expected Result": "System accepts the Excel file and displays a preview or summary of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the data import process.",
          "Expected Result": "System processes the file and imports the data without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all records from the Excel file are present in the ZENIT system after import.",
          "Expected Result": "All data from the Excel file is accurately reflected in the ZENIT system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. Valid Excel file is available for import.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Load",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Excel file with valid data as per ZENIT schema.",
      "Expected Result": "ZENIT system is fully populated with data from the Excel file, maintaining data integrity and quality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers Excel file import only.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Import_CSV_Data_DESKTOP_TEST_Desktop",
      "ID": "TC-049",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid CSV file containing required data fields as per ZENIT data model.",
          "Expected Result": "CSV file is ready and contains all necessary fields."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for file upload."
        },
        {
          "Step": 3,
          "Step Description": "Select and upload the prepared CSV file for import.",
          "Expected Result": "System accepts the CSV file and displays a preview or summary of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the data import process.",
          "Expected Result": "System processes the file and imports the data without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all records from the CSV file are present in the ZENIT system after import.",
          "Expected Result": "All data from the CSV file is accurately reflected in the ZENIT system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. Valid CSV file is available for import.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Load",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample CSV file with valid data as per ZENIT schema.",
      "Expected Result": "ZENIT system is fully populated with data from the CSV file, maintaining data integrity and quality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers CSV file import only.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Import_Database_Data_DESKTOP_TEST_Desktop",
      "ID": "TC-050",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure access to an existing database containing valid data as per ZENIT data model.",
          "Expected Result": "Existing database is accessible and contains valid data."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data migration interface on a desktop environment before system boot.",
          "Expected Result": "Data migration interface is accessible and ready for configuration."
        },
        {
          "Step": 3,
          "Step Description": "Configure the connection to the existing database (provide credentials, connection string, etc.).",
          "Expected Result": "System successfully connects to the existing database."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the data migration process from the existing database to ZENIT.",
          "Expected Result": "System processes and migrates the data without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all records from the source database are present in the ZENIT system after migration.",
          "Expected Result": "All data from the source database is accurately reflected in the ZENIT system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data migration interface.\n3. Existing database with valid data is available and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Existing database with valid data as per ZENIT schema.",
      "Expected Result": "ZENIT system is fully populated with data from the existing database, maintaining data integrity and quality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers database migration only.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Data_Integrity_Check_DESKTOP_TEST_Desktop",
      "ID": "TC-051",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Complete an initial data import/migration using any supported source (Excel, CSV, or database).",
          "Expected Result": "Data import/migration completes successfully."
        },
        {
          "Step": 2,
          "Step Description": "Query the ZENIT system for a sample of imported records and compare with source data.",
          "Expected Result": "Imported records in ZENIT match the source data exactly."
        },
        {
          "Step": 3,
          "Step Description": "Check for duplicate, missing, or corrupted records in the ZENIT system.",
          "Expected Result": "No duplicate, missing, or corrupted records are found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. Initial data import/migration has been completed.\n2. Access to both source data and ZENIT system for comparison.",
      "Execution Mode": "Manual",
      "Functionality": "Data Integrity Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Imported data from Excel, CSV, or database; corresponding source data.",
      "Expected Result": "All imported data in ZENIT matches the source data, with no integrity issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers post-import data integrity validation.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Invalid_File_Format_Handling_DESKTOP_TEST_Desktop",
      "ID": "TC-052",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an invalid file (e.g., a text file or an Excel/CSV file with missing required fields).",
          "Expected Result": "Invalid file is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for file upload."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the invalid file for import.",
          "Expected Result": "System rejects the file and displays an appropriate error message indicating the issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. Invalid file is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid file (e.g., .txt, malformed Excel/CSV).",
      "Expected Result": "System prevents import of invalid files and provides clear error feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers invalid file format handling only.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Data_Quality_Validation_DESKTOP_TEST_Desktop",
      "ID": "TC-053",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid data file (Excel or CSV) containing some records with invalid or missing mandatory fields.",
          "Expected Result": "Data file with quality issues is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for file upload."
        },
        {
          "Step": 3,
          "Step Description": "Upload the data file and initiate the import process.",
          "Expected Result": "System processes the file and identifies records with data quality issues."
        },
        {
          "Step": 4,
          "Step Description": "Review the system's feedback or error report regarding the problematic records.",
          "Expected Result": "System provides a detailed report specifying which records failed and the reasons for failure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. Data file with quality issues is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Data Quality Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel/CSV file with some records missing mandatory fields or containing invalid data.",
      "Expected Result": "System detects and reports data quality issues, preventing invalid records from being imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data quality validation during import.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "AutoLogout-proj_RF002_InactivityLogoutFunctionality_TEST_Desktop",
      "ID": "TC-054",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Do not interact with the application (no mouse, keyboard, or touch input) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected by the system during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application after the inactivity timeout period has elapsed.",
          "Expected Result": "The system automatically logs out the user and redirects to the login screen, displaying a message indicating logout due to inactivity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on a desktop device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User is automatically logged out after the inactivity timeout and redirected to the login screen with an appropriate message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard inactivity logout on desktop.",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-proj_RF002_InactivityLogoutFunctionality_TEST_MobileAndroid",
      "ID": "TC-055",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials on an Android mobile device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Do not interact with the application (no touch, swipe, or input) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected by the system during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application after the inactivity timeout period has elapsed.",
          "Expected Result": "The system automatically logs out the user and redirects to the login screen, displaying a message indicating logout due to inactivity."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Android 12, Mobile Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on an Android device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User is automatically logged out after the inactivity timeout and redirected to the login screen with an appropriate message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard inactivity logout on Android mobile.",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-proj_RF002_InactivityLogoutFunctionality_TEST_MobileIOS",
      "ID": "TC-056",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials on an iOS mobile device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Do not interact with the application (no touch, swipe, or input) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected by the system during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application after the inactivity timeout period has elapsed.",
          "Expected Result": "The system automatically logs out the user and redirects to the login screen, displaying a message indicating logout due to inactivity."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "iOS 16, Mobile Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on an iOS device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User is automatically logged out after the inactivity timeout and redirected to the login screen with an appropriate message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard inactivity logout on iOS mobile.",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-proj_RF002_InactivityLogoutFunctionality_TEST_Desktop_Boundary",
      "ID": "TC-057",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for just under the configured timeout period (e.g., 14 minutes and 50 seconds if timeout is 15 minutes).",
          "Expected Result": "No user activity is detected by the system during this period."
        },
        {
          "Step": 3,
          "Step Description": "Perform any user action (e.g., mouse move, click, or key press) just before the timeout expires.",
          "Expected Result": "The inactivity timer resets and the user remains logged in."
        },
        {
          "Step": 4,
          "Step Description": "Remain inactive again for the full timeout period.",
          "Expected Result": "The system automatically logs out the user after the new inactivity period and redirects to the login screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on a desktop device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User is not logged out if activity occurs before timeout; user is logged out after full inactivity period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers boundary scenario for inactivity logout.",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-proj_RF002_InactivityLogoutFunctionality_TEST_Desktop_Negative",
      "ID": "TC-058",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for a period shorter than the configured timeout (e.g., 10 minutes if timeout is 15 minutes).",
          "Expected Result": "No user activity is detected by the system during this period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application after the short inactivity period.",
          "Expected Result": "The user remains logged in and is not logged out by the system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on a desktop device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User is not logged out if inactivity period is less than the configured timeout.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for inactivity logout.",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginActivityRecording_backend_TEST_Desktop",
      "ID": "TC-059",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the main system using valid user credentials.",
          "Expected Result": "Login is successful and user is granted access to the system."
        },
        {
          "Step": 2,
          "Step Description": "Access the backend or audit log interface as a Control Room user.",
          "Expected Result": "Audit log interface is accessible and displays recent login activities."
        },
        {
          "Step": 3,
          "Step Description": "Locate the login activity corresponding to the previously performed login.",
          "Expected Result": "A log entry exists for the login, showing user, login time, and role."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, Main System Backend",
      "Preconditions": "1. The main system is operational.\n2. Test user account with known credentials exists.\n3. Control Room user account with access to audit logs is available.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials (e.g., user1/password1), Control Room user credentials.",
      "Expected Result": "Login activity is recorded in the audit log with user, login time, and role, viewable by Control Room.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard login tracking and log visibility for authorized users.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginTrackingDataCompleteness_backend_TEST_Desktop",
      "ID": "TC-060",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the main system as a user with a specific role (e.g., Admin, Standard User).",
          "Expected Result": "Login is successful and user is granted access."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log as a Control Room user.",
          "Expected Result": "Audit log interface is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Review the log entry for the login performed in Step 1.",
          "Expected Result": "Log entry contains all required fields: username, login time, user role, and any other critical information as per SOX policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, Main System Backend",
      "Preconditions": "1. The main system is operational.\n2. User accounts with different roles exist.\n3. Control Room user account is available.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials for multiple roles, Control Room credentials.",
      "Expected Result": "Each login entry in the audit log contains all SOX-mandated fields (user, login time, role, etc.).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers completeness of tracked login data fields.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginTrackingUnauthorizedAccess_backend_TEST_Desktop",
      "ID": "TC-061",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the audit log interface as a standard user (not a Control Room member).",
          "Expected Result": "Access to the audit log interface is denied."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, Main System Backend",
      "Preconditions": "1. The main system is operational.\n2. Standard user account exists.\n3. Audit log interface is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Standard user credentials.",
      "Expected Result": "Unauthorized users cannot access or view login tracking data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for unauthorized access to login tracking data.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginTrackingDataExtraction_backend_TEST_Desktop",
      "ID": "TC-062",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a Control Room user.",
          "Expected Result": "Login is successful and user is granted access to the audit log interface."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the login tracking/audit log section.",
          "Expected Result": "Login tracking data is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the data extraction/export function (e.g., export to CSV or Excel).",
          "Expected Result": "System prompts for export options or directly downloads the file."
        },
        {
          "Step": 4,
          "Step Description": "Open the exported file and verify its contents.",
          "Expected Result": "Exported file contains all relevant login tracking data (user, login time, role, etc.)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, Main System Backend",
      "Preconditions": "1. The main system is operational.\n2. Control Room user account exists.\n3. Audit log contains at least one login entry.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room user credentials.",
      "Expected Result": "Control Room user can extract login tracking data with all required fields present in the exported file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data extraction/export functionality for login tracking.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginTrackingTimestampAccuracy_backend_TEST_Desktop",
      "ID": "TC-063",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the main system as a test user and note the current system time.",
          "Expected Result": "Login is successful."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log as a Control Room user.",
          "Expected Result": "Audit log interface is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Locate the log entry for the test user's login and verify the timestamp.",
          "Expected Result": "Timestamp in the log entry matches the actual login time within an acceptable margin (e.g., ±1 minute)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, Main System Backend",
      "Preconditions": "1. The main system is operational.\n2. Test user and Control Room user accounts exist.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, Control Room user credentials.",
      "Expected Result": "Login tracking records accurate timestamps for each login event.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers accuracy of login time tracking.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LogTracking-proj_RF004_Log_Traceability_LoginEvent_DESKTOP_TEST_Desktop",
      "ID": "TC-064",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with a valid user account.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Access the application logs as an administrator or via the backend log management tool.",
          "Expected Result": "A log entry is present for the login event, including timestamp, user ID, source IP, and action performed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Application is deployed and accessible.\n2. Test user account is created and active.\n3. Log management system is configured and accessible to the tester or admin.\n4. Tester has admin or log access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials (e.g., user1@example.com / Password123)",
      "Expected Result": "Login event is logged with all required SOX-compliant details (timestamp, user ID, source IP, action).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers login event logging only.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "LogTracking-proj_RF004_Log_Traceability_FailedLogin_DESKTOP_TEST_Desktop",
      "ID": "TC-065",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to log in to the application with an invalid password.",
          "Expected Result": "Login attempt fails and an error message is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Access the application logs as an administrator or via the backend log management tool.",
          "Expected Result": "A log entry is present for the failed login attempt, including timestamp, attempted user ID, source IP, and failure reason."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Application is deployed and accessible.\n2. Test user account exists.\n3. Log management system is configured and accessible to the tester or admin.\n4. Tester has admin or log access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials (e.g., user1@example.com / WrongPassword)",
      "Expected Result": "Failed login attempt is logged with all required SOX-compliant details (timestamp, attempted user ID, source IP, failure reason).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers failed login event logging only.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "LogTracking-proj_RF004_Log_Traceability_DataChange_DESKTOP_TEST_Desktop",
      "ID": "TC-066",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with data modification privileges.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Modify a user profile field (e.g., update email address).",
          "Expected Result": "Profile is updated and confirmation is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the application logs as an administrator or via the backend log management tool.",
          "Expected Result": "A log entry is present for the data modification event, including timestamp, user ID, action performed, old value, new value, and source IP."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Application is deployed and accessible.\n2. Test user account with data modification privileges exists.\n3. Log management system is configured and accessible to the tester or admin.\n4. Tester has admin or log access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials with edit rights; sample profile data to modify.",
      "Expected Result": "Data modification event is logged with all required SOX-compliant details (timestamp, user ID, action, old value, new value, source IP).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data modification event logging only.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "LogTracking-proj_RF004_Log_Traceability_LogIntegrity_DESKTOP_TEST_Desktop",
      "ID": "TC-067",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a user action that generates a log entry (e.g., login or data change).",
          "Expected Result": "Action is completed and log entry is generated."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to modify or delete the generated log entry using admin or backend tools.",
          "Expected Result": "System prevents modification or deletion of the log entry, or all changes are themselves logged with full traceability."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Application is deployed and accessible.\n2. Log management system is configured and accessible.\n3. Tester has admin or log access rights.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Test user credentials; admin access to log management system.",
      "Expected Result": "Log entries are immutable or all changes are fully traceable, ensuring SOX compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers log integrity and immutability.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "LogTracking-proj_RF004_Log_Traceability_AccessControl_DESKTOP_TEST_Desktop",
      "ID": "TC-068",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access application logs as a standard (non-admin) user.",
          "Expected Result": "Access to logs is denied and an appropriate error message is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access application logs as an admin user.",
          "Expected Result": "Access to logs is granted and logs are viewable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Application is deployed and accessible.\n2. Both standard and admin user accounts exist.\n3. Log management system is configured and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Standard user credentials; admin user credentials.",
      "Expected Result": "Only authorized users (admins) can access logs, ensuring SOX-compliant access control.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control for log viewing.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "ConcurrentUpdate_proj_RF005_DataConsistency_UpdateRecord_TEST_Desktop",
      "ID": "TC-069",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the record management page.",
          "Expected Result": "User A successfully accesses the record management page."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same record management page as User A.",
          "Expected Result": "User B successfully accesses the same record management page."
        },
        {
          "Step": 3,
          "Step Description": "User A opens Record X for editing.",
          "Expected Result": "Record X is displayed in edit mode for User A."
        },
        {
          "Step": 4,
          "Step Description": "User B opens Record X for editing at the same time.",
          "Expected Result": "Record X is displayed in edit mode for User B."
        },
        {
          "Step": 5,
          "Step Description": "User A updates a field in Record X and saves the changes.",
          "Expected Result": "User A receives a confirmation that the changes have been saved."
        },
        {
          "Step": 6,
          "Step Description": "User B, without refreshing, updates a different field in Record X and saves the changes.",
          "Expected Result": "The system detects the concurrent modification and either merges changes, prompts User B about the conflict, or prevents the overwrite, ensuring data consistency."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access to the system.\n2. Record X exists in the database.\n3. Both users are logged in and have access to the record management page.",
      "Execution Mode": "Manual",
      "Functionality": "Data Consistency / Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; Record X with known initial values.",
      "Expected Result": "The system maintains data consistency and prevents data loss or corruption when multiple users attempt to update the same record concurrently.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent update scenario for a single record.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "ConcurrentReadWrite_proj_RF005_DataConsistency_ReadDuringWrite_TEST_Desktop",
      "ID": "TC-070",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the record management page.",
          "Expected Result": "User A successfully accesses the record management page."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same record management page as User A.",
          "Expected Result": "User B successfully accesses the same record management page."
        },
        {
          "Step": 3,
          "Step Description": "User A opens Record Y for editing and starts making changes but does not save yet.",
          "Expected Result": "Record Y is displayed in edit mode for User A."
        },
        {
          "Step": 4,
          "Step Description": "User B views Record Y in read-only mode while User A is editing.",
          "Expected Result": "User B sees the current (pre-edit) values of Record Y."
        },
        {
          "Step": 5,
          "Step Description": "User A saves the changes to Record Y.",
          "Expected Result": "User A receives a confirmation that the changes have been saved."
        },
        {
          "Step": 6,
          "Step Description": "User B refreshes the view of Record Y.",
          "Expected Result": "User B sees the updated values of Record Y after User A's changes."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access to the system.\n2. Record Y exists in the database.\n3. Both users are logged in and have access to the record management page.",
      "Execution Mode": "Manual",
      "Functionality": "Data Consistency / Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; Record Y with known initial values.",
      "Expected Result": "The system ensures that users viewing a record see consistent data and are updated with the latest changes after a save operation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers read consistency during concurrent write operations.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "ConcurrentDelete_proj_RF005_DataConsistency_DeleteWhileEdit_TEST_Desktop",
      "ID": "TC-071",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the record management page.",
          "Expected Result": "User A successfully accesses the record management page."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same record management page as User A.",
          "Expected Result": "User B successfully accesses the same record management page."
        },
        {
          "Step": 3,
          "Step Description": "User A opens Record Z for editing.",
          "Expected Result": "Record Z is displayed in edit mode for User A."
        },
        {
          "Step": 4,
          "Step Description": "User B deletes Record Z while User A is editing it.",
          "Expected Result": "User B receives confirmation that Record Z has been deleted."
        },
        {
          "Step": 5,
          "Step Description": "User A attempts to save changes to Record Z after it has been deleted by User B.",
          "Expected Result": "The system prevents the save operation and notifies User A that Record Z no longer exists."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access to the system.\n2. Record Z exists in the database.\n3. Both users are logged in and have access to the record management page.",
      "Execution Mode": "Manual",
      "Functionality": "Data Consistency / Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; Record Z with known initial values.",
      "Expected Result": "The system prevents updates to records that have been deleted by another user, ensuring data consistency and proper user notification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent delete and edit scenario.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "ConcurrentBulkUpdate_proj_RF005_DataConsistency_BulkUpdate_TEST_Desktop",
      "ID": "TC-072",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the bulk update page.",
          "Expected Result": "User A successfully accesses the bulk update page."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same bulk update page.",
          "Expected Result": "User B successfully accesses the bulk update page."
        },
        {
          "Step": 3,
          "Step Description": "User A selects multiple records (e.g., Records 1-10) and initiates a bulk update operation.",
          "Expected Result": "User A's bulk update operation is initiated."
        },
        {
          "Step": 4,
          "Step Description": "User B selects an overlapping set of records (e.g., Records 5-15) and initiates a bulk update operation simultaneously.",
          "Expected Result": "User B's bulk update operation is initiated."
        },
        {
          "Step": 5,
          "Step Description": "Both bulk update operations complete.",
          "Expected Result": "The system ensures that all records are updated consistently, with no data loss or corruption, and any conflicts are resolved according to business rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access to the system.\n2. Records 1-15 exist in the database.\n3. Both users are logged in and have access to the bulk update page.",
      "Execution Mode": "Manual",
      "Functionality": "Data Consistency / Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; Records 1-15 with known initial values.",
      "Expected Result": "The system maintains data consistency and resolves conflicts when multiple users perform overlapping bulk updates concurrently.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent bulk update scenario with overlapping records.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "ConcurrentSession_proj_RF005_SessionIsolation_MultipleSessions_TEST_Desktop",
      "ID": "TC-073",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system from Computer 1.",
          "Expected Result": "User A successfully logs in from Computer 1."
        },
        {
          "Step": 2,
          "Step Description": "User A logs into the system from Computer 2 using the same credentials.",
          "Expected Result": "User A successfully logs in from Computer 2."
        },
        {
          "Step": 3,
          "Step Description": "User A performs an update on Record Q from Computer 1.",
          "Expected Result": "Record Q is updated successfully from Computer 1."
        },
        {
          "Step": 4,
          "Step Description": "User A performs a different update on Record Q from Computer 2 without refreshing the page.",
          "Expected Result": "The system detects the concurrent session and either merges changes, prompts about the conflict, or prevents the overwrite, ensuring data consistency."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User A has valid credentials and access to the system.\n2. Record Q exists in the database.\n3. User A has access to two computers or browser sessions.",
      "Execution Mode": "Manual",
      "Functionality": "Session Isolation / Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A credentials; Record Q with known initial values.",
      "Expected Result": "The system maintains data consistency and manages concurrent updates from multiple sessions of the same user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent updates from multiple sessions for the same user.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "Settings-proj_RF006_LanguagePreferenceSelection_application_TEST_Android",
      "ID": "TC-074",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on an Android device.",
          "Expected Result": "Application launches successfully and displays the home screen."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Settings menu from the main interface.",
          "Expected Result": "Settings menu is displayed with customization options."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Language Preferences' option.",
          "Expected Result": "A list of available languages (e.g., English, Italian) is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Choose 'Italian' from the list of languages.",
          "Expected Result": "The application interface language changes to Italian immediately or after confirmation."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android, Application",
      "Preconditions": "1. User is logged into the application.\n2. Application is installed and up-to-date.\n3. Device language is set to English (to verify the change).",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Language Preferences",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with standard permissions; device supporting multiple languages.",
      "Expected Result": "The application interface updates to the selected language (Italian) and all UI elements are translated accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers language selection and UI update for one language change scenario.",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Settings-proj_RF006_FontSizeAdjustment_application_TEST_Android",
      "ID": "TC-075",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an Android device.",
          "Expected Result": "Application opens and displays the home screen."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Settings menu.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Display Preferences' option.",
          "Expected Result": "Display preferences options are shown, including font size adjustment."
        },
        {
          "Step": 4,
          "Step Description": "Adjust the font size slider to the largest available setting.",
          "Expected Result": "Font size in the application interface increases to the maximum setting."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android, Application",
      "Preconditions": "1. User is logged into the application.\n2. Application is installed and up-to-date.",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Display Preferences (Font Size)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with standard permissions.",
      "Expected Result": "All text elements in the application interface are displayed in the largest font size without truncation or layout issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers font size adjustment to the largest setting.",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Settings-proj_RF006_ThemeSwitching_application_TEST_Android",
      "ID": "TC-076",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an Android device.",
          "Expected Result": "Application opens and displays the home screen."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Settings menu.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Display Preferences' option.",
          "Expected Result": "Display preferences options are shown, including theme selection."
        },
        {
          "Step": 4,
          "Step Description": "Switch the theme from 'Light' to 'Dark'.",
          "Expected Result": "The application interface updates to the dark theme immediately or after confirmation."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android, Application",
      "Preconditions": "1. User is logged into the application.\n2. Application is installed and up-to-date.\n3. Default theme is set to 'Light'.",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Display Preferences (Theme)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with standard permissions.",
      "Expected Result": "The application interface is displayed in dark theme, with all UI elements clearly visible and readable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers theme switching from light to dark mode.",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Settings-proj_RF006_InvalidLanguageSelection_application_TEST_Android",
      "ID": "TC-077",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an Android device.",
          "Expected Result": "Application opens and displays the home screen."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Settings menu.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Language Preferences' option.",
          "Expected Result": "A list of available languages is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to select a language not supported by the application (e.g., 'German' if not available).",
          "Expected Result": "The application displays an error message or disables the unsupported language option."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Android, Application",
      "Preconditions": "1. User is logged into the application.\n2. Application is installed and up-to-date.\n3. List of supported languages is known.",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Language Preferences",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User account with standard permissions; knowledge of unsupported languages.",
      "Expected Result": "The application prevents selection of unsupported languages and provides appropriate feedback to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for unsupported language selection.",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Settings-proj_RF006_FontSizeBoundary_application_TEST_Android",
      "ID": "TC-078",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an Android device.",
          "Expected Result": "Application opens and displays the home screen."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Settings menu.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Display Preferences' option.",
          "Expected Result": "Display preferences options are shown, including font size adjustment."
        },
        {
          "Step": 4,
          "Step Description": "Set the font size to the minimum available setting.",
          "Expected Result": "Font size in the application interface decreases to the minimum setting."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Android, Application",
      "Preconditions": "1. User is logged into the application.\n2. Application is installed and up-to-date.",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Display Preferences (Font Size)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with standard permissions.",
      "Expected Result": "All text elements in the application interface are displayed in the smallest font size and remain readable without layout issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers boundary condition for minimum font size.",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Arxivar_007_DocumentList_AutomaticRetrieval_DESKTOP_TEST_Desktop",
      "ID": "TC-079",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user with access to document acquisition functionality.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents Acquisition' section.",
          "Expected Result": "The 'Documents Acquisition' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the available list.",
          "Expected Result": "The selected PoS is highlighted and ready for document retrieval."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the document listing process (e.g., by clicking 'Retrieve Documents').",
          "Expected Result": "The system connects to the Arxivar service and begins retrieving documents."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to display the list of documents for the selected PoS.",
          "Expected Result": "A list of documents is displayed, filtered according to predefined criteria (type and status)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to document acquisition.\n2. The Arxivar service is available and reachable from the test environment.\n3. At least one PoS with associated documents exists in the system.\n4. Predefined criteria for document type and status are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, document type/status criteria.",
      "Expected Result": "The system automatically lists all documents available for the selected PoS, filtered by predefined type and status criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "Arxivar_007_DocumentList_FilterByType_DESKTOP_TEST_Desktop",
      "ID": "TC-080",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user with access to document acquisition functionality.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents Acquisition' section.",
          "Expected Result": "The 'Documents Acquisition' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the available list.",
          "Expected Result": "The selected PoS is highlighted and ready for document retrieval."
        },
        {
          "Step": 4,
          "Step Description": "Set the document type filter to a specific value (e.g., 'Invoice').",
          "Expected Result": "The document type filter is applied."
        },
        {
          "Step": 5,
          "Step Description": "Initiate the document listing process.",
          "Expected Result": "The system connects to the Arxivar service and retrieves documents."
        },
        {
          "Step": 6,
          "Step Description": "Observe the displayed document list.",
          "Expected Result": "Only documents of the selected type are displayed for the chosen PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to document acquisition.\n2. The Arxivar service is available and reachable from the test environment.\n3. At least one PoS with documents of multiple types exists.\n4. Predefined document type filter options are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, document type filter value (e.g., 'Invoice').",
      "Expected Result": "The system lists only documents of the specified type for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "Arxivar_007_DocumentList_FilterByStatus_DESKTOP_TEST_Desktop",
      "ID": "TC-081",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user with access to document acquisition functionality.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents Acquisition' section.",
          "Expected Result": "The 'Documents Acquisition' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the available list.",
          "Expected Result": "The selected PoS is highlighted and ready for document retrieval."
        },
        {
          "Step": 4,
          "Step Description": "Set the document status filter to a specific value (e.g., 'Approved').",
          "Expected Result": "The document status filter is applied."
        },
        {
          "Step": 5,
          "Step Description": "Initiate the document listing process.",
          "Expected Result": "The system connects to the Arxivar service and retrieves documents."
        },
        {
          "Step": 6,
          "Step Description": "Observe the displayed document list.",
          "Expected Result": "Only documents with the selected status are displayed for the chosen PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to document acquisition.\n2. The Arxivar service is available and reachable from the test environment.\n3. At least one PoS with documents of multiple statuses exists.\n4. Predefined document status filter options are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, document status filter value (e.g., 'Approved').",
      "Expected Result": "The system lists only documents with the specified status for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "Arxivar_007_DocumentList_ArxivarUnavailable_DESKTOP_TEST_Desktop",
      "ID": "TC-082",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user with access to document acquisition functionality.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents Acquisition' section.",
          "Expected Result": "The 'Documents Acquisition' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the available list.",
          "Expected Result": "The selected PoS is highlighted and ready for document retrieval."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the document listing process while the Arxivar service is intentionally made unavailable (e.g., by disconnecting the service or simulating a network failure).",
          "Expected Result": "The system attempts to connect to the Arxivar service."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's response to the failed connection attempt.",
          "Expected Result": "The system displays an appropriate error message indicating that the Arxivar service is unavailable and does not display any documents."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to document acquisition.\n2. The Arxivar service is intentionally made unavailable for this test.\n3. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier.",
      "Expected Result": "The system gracefully handles the unavailability of the Arxivar service by displaying an appropriate error message and not listing any documents.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "Arxivar_007_DocumentList_NoDocumentsFound_DESKTOP_TEST_Desktop",
      "ID": "TC-083",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user with access to document acquisition functionality.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents Acquisition' section.",
          "Expected Result": "The 'Documents Acquisition' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS that has no documents matching the predefined criteria.",
          "Expected Result": "The selected PoS is highlighted and ready for document retrieval."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the document listing process.",
          "Expected Result": "The system connects to the Arxivar service and retrieves documents."
        },
        {
          "Step": 5,
          "Step Description": "Observe the displayed document list.",
          "Expected Result": "The system displays a message indicating that no documents are available for the selected PoS and criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to document acquisition.\n2. The Arxivar service is available and reachable from the test environment.\n3. At least one PoS exists with no documents matching the predefined criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with no matching documents.",
      "Expected Result": "The system informs the user that no documents are available for the selected PoS and criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "ViewDocuments-proj_RF008_Dashboard_ViewAllDocuments_TEST_Desktop",
      "ID": "TC-084",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS from the list of available POS on the dashboard.",
          "Expected Result": "The POS is selected and its details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section associated with the selected POS.",
          "Expected Result": "A dedicated section for documents is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of documents displayed in the 'Documents' section.",
          "Expected Result": "All documents associated with the selected POS, regardless of their origin (Cerved or ARXivar), are listed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one POS is available and associated with documents from both Cerved and ARXivar.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Listing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, POS with documents from both Cerved and ARXivar.",
      "Expected Result": "All documents associated with the selected POS, from both Cerved and ARXivar, are displayed in the dedicated section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "NoDocuments-proj_RF008_Dashboard_NoDocumentsScenario_TEST_Desktop",
      "ID": "TC-085",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS from the list that has no associated documents from either Cerved or ARXivar.",
          "Expected Result": "The POS is selected and its details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "A dedicated section for documents is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the message or content displayed in the 'Documents' section.",
          "Expected Result": "A clear message is shown indicating that no documents are available for the selected POS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one POS exists with no associated documents from Cerved or ARXivar.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Listing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, POS with no associated documents.",
      "Expected Result": "A clear message is displayed indicating that no documents are available for the selected POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "DocumentOrigin-proj_RF008_Dashboard_DocumentOriginDisplay_TEST_Desktop",
      "ID": "TC-086",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS from the list that has documents from both Cerved and ARXivar.",
          "Expected Result": "The POS is selected and its details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "A dedicated section for documents is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Check the list of documents for an indication of their origin (Cerved or ARXivar).",
          "Expected Result": "Each document in the list clearly indicates its origin (Cerved or ARXivar)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one POS exists with documents from both Cerved and ARXivar.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Listing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, POS with documents from both Cerved and ARXivar.",
      "Expected Result": "Each document in the list displays its origin (Cerved or ARXivar) clearly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "AccessDenied-proj_RF008_Dashboard_UnauthorizedAccessDocuments_TEST_Desktop",
      "ID": "TC-087",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the dashboard application with a user account that does not have permission to view POS documents.",
          "Expected Result": "Access to the dashboard or the 'Documents' section is denied."
        },
        {
          "Step": 2,
          "Step Description": "Observe the error or warning message displayed to the user.",
          "Expected Result": "A clear and informative error message is displayed indicating insufficient permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account exists with restricted permissions (no access to POS documents).\n2. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Listing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with restricted access.",
      "Expected Result": "User is prevented from accessing the 'Documents' section and receives an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "DocumentRefresh-proj_RF008_Dashboard_RefreshDocumentList_TEST_Desktop",
      "ID": "TC-088",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS from the list that has associated documents.",
          "Expected Result": "The POS is selected and its details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section for the selected POS.",
          "Expected Result": "A dedicated section for documents is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Trigger a refresh action (e.g., click a 'Refresh' button) in the 'Documents' section.",
          "Expected Result": "The list of documents is updated to reflect the latest documents from both Cerved and ARXivar."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one POS exists with documents from Cerved and/or ARXivar.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Listing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, POS with documents from Cerved and/or ARXivar.",
      "Expected Result": "The document list is refreshed and displays the most up-to-date documents from both sources.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "ViewBordero-proj_RF009_Dashboard_OpenArchiCONLink_TEST_Desktop",
      "ID": "TC-089",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system with valid credentials and access the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of available PoS."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry that has an associated Borderò document.",
          "Expected Result": "PoS entry is visible and indicates the presence of a Borderò document."
        },
        {
          "Step": 3,
          "Step Description": "Click on the ArchiCON link or icon associated with the selected PoS from the dashboard.",
          "Expected Result": "A new browser tab or window opens, displaying the Borderò document in ArchiCON for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS with an associated Borderò document exists in the system.\n3. User is logged in and on the dashboard page.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò Document",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with associated Borderò document.",
      "Expected Result": "The Borderò document for the selected PoS is displayed in ArchiCON when accessed from the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009 - View Borderò - ArchiCON"
    },
    {
      "Title": "ViewBordero-proj_RF009_Dashboard_OpenArchiCONLink_NoDocument_TEST_Desktop",
      "ID": "TC-090",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system with valid credentials and access the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of available PoS."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry that does NOT have an associated Borderò document.",
          "Expected Result": "PoS entry is visible and indicates the absence of a Borderò document or the ArchiCON link is disabled/not present."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to click on the ArchiCON link or icon for the PoS without a Borderò document (if present).",
          "Expected Result": "No action occurs, or an appropriate message is displayed indicating that no Borderò document is available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS without an associated Borderò document exists in the system.\n3. User is logged in and on the dashboard page.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò Document",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS without associated Borderò document.",
      "Expected Result": "System prevents access to ArchiCON or displays a message indicating no Borderò document is available for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009 - View Borderò - ArchiCON"
    },
    {
      "Title": "ViewBordero-proj_RF009_Dashboard_OpenArchiCONLink_InvalidSession_TEST_Desktop",
      "ID": "TC-091",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system and access the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of available PoS."
        },
        {
          "Step": 2,
          "Step Description": "Let the session expire or manually log out without closing the dashboard page.",
          "Expected Result": "Session is invalidated; user is technically logged out."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to click on the ArchiCON link for a PoS with an associated Borderò document.",
          "Expected Result": "System prompts the user to log in again or displays a session timeout message before allowing access to ArchiCON."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS with an associated Borderò document exists in the system.\n3. User session is expired or user is logged out while dashboard is still open.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò Document",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with associated Borderò document.",
      "Expected Result": "System does not allow access to ArchiCON and prompts for re-authentication if the session is invalid.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009 - View Borderò - ArchiCON"
    },
    {
      "Title": "ViewBordero-proj_RF009_Dashboard_OpenArchiCONLink_MultiplePoS_TEST_Desktop",
      "ID": "TC-092",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system and access the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of available PoS."
        },
        {
          "Step": 2,
          "Step Description": "Identify multiple PoS entries, each with an associated Borderò document.",
          "Expected Result": "Multiple PoS entries with ArchiCON links are visible."
        },
        {
          "Step": 3,
          "Step Description": "Click on the ArchiCON link for each PoS, one after another.",
          "Expected Result": "Each click opens the corresponding Borderò document in ArchiCON, each in a new tab or window."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. Multiple PoS with associated Borderò documents exist in the system.\n3. User is logged in and on the dashboard page.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò Document",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": true,
      "Dataset": "Valid user credentials; Multiple PoS with associated Borderò documents.",
      "Expected Result": "Each Borderò document is correctly displayed in ArchiCON for the respective PoS when accessed from the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009 - View Borderò - ArchiCON"
    },
    {
      "Title": "ViewNotes-proj_RF010_Dashboard_ViewNotes_TEST_Desktop",
      "ID": "TC-093",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of available PoS."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific PoS from the dashboard list.",
          "Expected Result": "Details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate and click on the 'Notes' section/tab for the selected PoS.",
          "Expected Result": "Existing notes for the selected PoS are displayed, if any."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Notes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one PoS with and without existing notes.",
      "Expected Result": "User can view all existing notes for the selected PoS from the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the viewing of notes, not note creation or editing.",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "AddNote-proj_RF010_Dashboard_AddNote_TEST_Desktop",
      "ID": "TC-094",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of available PoS."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific PoS from the dashboard list.",
          "Expected Result": "Details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section/tab for the selected PoS.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the option to add a new note.",
          "Expected Result": "A form or input field for entering a new note is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Enter note details (e.g., '2024-06-10, John Doe, Credit increased by €500').",
          "Expected Result": "Note details are entered into the input field."
        },
        {
          "Step": 6,
          "Step Description": "Save or submit the new note.",
          "Expected Result": "The new note is saved and displayed in the notes list for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Notes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one PoS, sample note data (date, name, note content).",
      "Expected Result": "User can successfully add a new note to the selected PoS, and the note is visible in the notes list.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the addition of notes, not editing or deleting.",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "AddNoteInvalidData-proj_RF010_Dashboard_AddNoteInvalidData_TEST_Desktop",
      "ID": "TC-095",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of available PoS."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific PoS from the dashboard list.",
          "Expected Result": "Details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section/tab for the selected PoS.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the option to add a new note.",
          "Expected Result": "A form or input field for entering a new note is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Leave the note details field empty or enter only whitespace.",
          "Expected Result": "Note input field remains empty or contains only whitespace."
        },
        {
          "Step": 6,
          "Step Description": "Attempt to save or submit the empty note.",
          "Expected Result": "System displays an error message indicating that note content is required and does not save the note."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Notes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one PoS.",
      "Expected Result": "System prevents saving empty notes and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers validation for empty note input.",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "ViewNotesMobile-proj_RF010_Dashboard_ViewNotes_TEST_Android",
      "ID": "TC-096",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the mobile app and log in with valid credentials.",
          "Expected Result": "Dashboard is displayed with a list of available PoS."
        },
        {
          "Step": 2,
          "Step Description": "Tap on a specific PoS from the dashboard list.",
          "Expected Result": "Details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section/tab for the selected PoS.",
          "Expected Result": "Existing notes for the selected PoS are displayed, if any."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Android/App",
      "Preconditions": "1. User has valid credentials and access to the mobile app.\n2. At least one PoS is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Notes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, at least one PoS with and without existing notes.",
      "Expected Result": "User can view all existing notes for the selected PoS from the dashboard on Android devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the viewing of notes on Android mobile devices.",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "ImportRedList-proj_RF011_ImportValidRedListFile_DESKTOP_TEST_Desktop",
      "ID": "TC-097",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backoffice system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section within the application.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Import RedList' button or link.",
          "Expected Result": "File upload dialog is presented to the user."
        },
        {
          "Step": 4,
          "Step Description": "Select a valid 'RedList_Mm_yyyy.xlsx' file containing all required columns (IdRice, Zona Rice, Flag RedList, General Reason, SIMP Management, SIMP Reason) and upload it.",
          "Expected Result": "File is uploaded and processed without errors."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import action if prompted.",
          "Expected Result": "System confirms successful import and displays a summary of imported records."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid credentials with permission to import RedList data.\n2. ZENIT backoffice system is accessible.\n3. A valid RedList Excel file ('RedList_Mm_yyyy.xlsx') is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid RedList Excel file with all required columns and sample data.",
      "Expected Result": "RedList data from the Excel file is correctly imported into the system, and a success message is displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList-proj_RF011_ImportRedListFileWithMissingColumns_DESKTOP_TEST_Desktop",
      "ID": "TC-098",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backoffice system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section within the application.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Import RedList' button or link.",
          "Expected Result": "File upload dialog is presented to the user."
        },
        {
          "Step": 4,
          "Step Description": "Select an Excel file missing one or more required columns (e.g., missing 'SIMP Reason') and upload it.",
          "Expected Result": "System validates the file and detects missing columns."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's response to the invalid file structure.",
          "Expected Result": "System displays an error message indicating which columns are missing and prevents import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid credentials with permission to import RedList data.\n2. ZENIT backoffice system is accessible.\n3. An invalid RedList Excel file (missing required columns) is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList Excel file missing one or more required columns.",
      "Expected Result": "System rejects the file and provides a clear error message about missing columns.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList-proj_RF011_ImportRedListFileWithInvalidFlagValue_DESKTOP_TEST_Desktop",
      "ID": "TC-099",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backoffice system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section within the application.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Import RedList' button or link.",
          "Expected Result": "File upload dialog is presented to the user."
        },
        {
          "Step": 4,
          "Step Description": "Select an Excel file where the 'Flag RedList' column contains invalid values (e.g., 'Maybe', 'Yes', 'Nope') and upload it.",
          "Expected Result": "System validates the file and detects invalid values in the 'Flag RedList' column."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's response to the invalid data.",
          "Expected Result": "System displays an error message specifying the invalid values and prevents import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid credentials with permission to import RedList data.\n2. ZENIT backoffice system is accessible.\n3. A RedList Excel file with invalid 'Flag RedList' values is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList Excel file with invalid 'Flag RedList' values (not 'Si' or 'No').",
      "Expected Result": "System rejects the file and provides a clear error message about invalid 'Flag RedList' values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList-proj_RF011_ImportRedListFileWithDuplicateIdRice_DESKTOP_TEST_Desktop",
      "ID": "TC-100",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backoffice system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section within the application.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Import RedList' button or link.",
          "Expected Result": "File upload dialog is presented to the user."
        },
        {
          "Step": 4,
          "Step Description": "Select an Excel file where the 'IdRice' column contains duplicate values and upload it.",
          "Expected Result": "System validates the file and detects duplicate 'IdRice' entries."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's response to the duplicate entries.",
          "Expected Result": "System displays an error message indicating duplicate 'IdRice' values and prevents import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid credentials with permission to import RedList data.\n2. ZENIT backoffice system is accessible.\n3. A RedList Excel file with duplicate 'IdRice' values is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList Excel file with duplicate 'IdRice' values.",
      "Expected Result": "System rejects the file and provides a clear error message about duplicate 'IdRice' values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList-proj_RF011_ImportRedListFileWithEmptyMandatoryFields_DESKTOP_TEST_Desktop",
      "ID": "TC-101",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backoffice system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section within the application.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Import RedList' button or link.",
          "Expected Result": "File upload dialog is presented to the user."
        },
        {
          "Step": 4,
          "Step Description": "Select an Excel file where one or more mandatory fields (e.g., 'IdRice', 'Flag RedList') are empty for some records and upload it.",
          "Expected Result": "System validates the file and detects empty mandatory fields."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's response to the incomplete data.",
          "Expected Result": "System displays an error message specifying the missing mandatory fields and prevents import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid credentials with permission to import RedList data.\n2. ZENIT backoffice system is accessible.\n3. A RedList Excel file with empty mandatory fields is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RedList Excel file with empty mandatory fields in some records.",
      "Expected Result": "System rejects the file and provides a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList-proj_RF011_ImportRedListFileWithInvalidFileFormat_DESKTOP_TEST_Desktop",
      "ID": "TC-102",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backoffice system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section within the application.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Import RedList' button or link.",
          "Expected Result": "File upload dialog is presented to the user."
        },
        {
          "Step": 4,
          "Step Description": "Select a file with an invalid format (e.g., .csv, .txt, .pdf) and attempt to upload it.",
          "Expected Result": "System validates the file type and detects invalid format."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's response to the invalid file format.",
          "Expected Result": "System displays an error message indicating only .xlsx files are accepted and prevents import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid credentials with permission to import RedList data.\n2. ZENIT backoffice system is accessible.\n3. A file with an invalid format (not .xlsx) is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File with invalid format (e.g., .csv, .txt, .pdf).",
      "Expected Result": "System rejects the file and provides a clear error message about accepted file formats.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList-proj_RF011_ImportRedListFileWithLargeDataset_DESKTOP_TEST_Desktop",
      "ID": "TC-103",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT backoffice system with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the RedList import section within the application.",
          "Expected Result": "RedList import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Import RedList' button or link.",
          "Expected Result": "File upload dialog is presented to the user."
        },
        {
          "Step": 4,
          "Step Description": "Select a valid 'RedList_Mm_yyyy.xlsx' file containing a large number of records (e.g., 10,000+) and upload it.",
          "Expected Result": "File is uploaded and processed without errors."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import action if prompted.",
          "Expected Result": "System confirms successful import and displays a summary of imported records."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid credentials with permission to import RedList data.\n2. ZENIT backoffice system is accessible.\n3. A valid RedList Excel file with a large dataset is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid RedList Excel file with 10,000+ records.",
      "Expected Result": "System successfully imports all records and provides a summary without performance degradation or errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers performance and scalability aspects of the import functionality.",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "LoginLogout-proj_001_Login_ValidCredentials_TEST_Desktop",
      "ID": "TC-104",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Back-Office login page using a supported browser.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid username and password.",
          "Expected Result": "Credentials are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard/home page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User account with valid credentials exists in the system.\n2. Back-Office application is accessible.\n3. Browser is installed and configured.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password (e.g., user1/password123)",
      "Expected Result": "User is authenticated and redirected to the dashboard/home page.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "LoginLogout-proj_001_Login_InvalidCredentials_TEST_Desktop",
      "ID": "TC-105",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Back-Office login page using a supported browser.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid username and/or password.",
          "Expected Result": "Credentials are not accepted."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User remains on the login page and an error message is displayed indicating invalid credentials."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. Back-Office application is accessible.\n2. Browser is installed and configured.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and/or password (e.g., user1/wrongpass)",
      "Expected Result": "User is not authenticated and receives an error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "LoginLogout-proj_001_Logout_SessionTermination_TEST_Desktop",
      "ID": "TC-106",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Back-Office application with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Logout' button or link.",
          "Expected Result": "User is logged out and redirected to the login page."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access a protected page via browser back button or direct URL.",
          "Expected Result": "User is redirected to the login page and cannot access protected content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User is logged in to the Back-Office application.\n2. Browser is installed and configured.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user session",
      "Expected Result": "User session is terminated and protected pages are inaccessible after logout.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "InitialLoad-proj_001_DataMigration_ValidFile_TEST_Backend",
      "ID": "TC-107",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid data migration file as per the 'ZENIT - Elenco Dati' specification.",
          "Expected Result": "Migration file is ready for upload."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data migration process via the backend interface or API.",
          "Expected Result": "System accepts the migration file."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process until completion.",
          "Expected Result": "Migration completes without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all records from the file are present in the target database.",
          "Expected Result": "All data is correctly migrated and available in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux, Backend Application",
      "Preconditions": "1. Backend system is operational.\n2. Access to backend migration interface or API is available.\n3. Valid migration file is prepared as per specification.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Load and Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid migration file as per 'ZENIT - Elenco Dati'",
      "Expected Result": "All valid data is migrated successfully without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "InitialLoad-proj_001_DataMigration_InvalidFile_TEST_Backend",
      "ID": "TC-108",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an invalid data migration file (e.g., missing required columns, incorrect format).",
          "Expected Result": "Invalid migration file is ready for upload."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data migration process via the backend interface or API.",
          "Expected Result": "System processes the file and detects errors."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system response to the invalid file.",
          "Expected Result": "System rejects the file and displays/logs appropriate error messages."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Backend Application",
      "Preconditions": "1. Backend system is operational.\n2. Access to backend migration interface or API is available.\n3. Invalid migration file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Load and Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid migration file (e.g., missing columns, wrong format)",
      "Expected Result": "System rejects invalid migration files and provides clear error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "DataCollection-proj_001_CollectData_InternalSystem_TEST_Backend",
      "ID": "TC-109",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger data collection from an internal system via the backend interface or API.",
          "Expected Result": "Data collection process is initiated."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data collection process.",
          "Expected Result": "Data is collected from the internal system without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the collected data is stored in the appropriate database tables.",
          "Expected Result": "Collected data is present and accurate in the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Backend Application",
      "Preconditions": "1. Backend system is operational.\n2. Internal system is available and accessible.\n3. Data collection interface or API is configured.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data from internal system",
      "Expected Result": "Data is successfully collected from internal systems and stored correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "DataCollection-proj_001_CollectData_ExternalSystem_TEST_Backend",
      "ID": "TC-110",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger data collection from an external system via the backend interface or API.",
          "Expected Result": "Data collection process is initiated."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data collection process.",
          "Expected Result": "Data is collected from the external system without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the collected data is stored in the appropriate database tables.",
          "Expected Result": "Collected data is present and accurate in the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Backend Application",
      "Preconditions": "1. Backend system is operational.\n2. External system is available and accessible.\n3. Data collection interface or API is configured.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data from external system",
      "Expected Result": "Data is successfully collected from external systems and stored correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "LogAudit-proj_001_TransactionLogging_SuccessfulOperation_TEST_Backend",
      "ID": "TC-111",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a transaction in the system (e.g., data update, user login).",
          "Expected Result": "Transaction is completed successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log via the backend interface or database.",
          "Expected Result": "Audit log is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the transaction is recorded in the audit log with correct details (timestamp, user, action, status).",
          "Expected Result": "Transaction details are accurately recorded in the audit log."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux, Backend Application",
      "Preconditions": "1. Backend system is operational.\n2. Audit logging is enabled.\n3. User has permission to perform transactions and access logs.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample transaction (e.g., user login, data update)",
      "Expected Result": "All relevant transactions are logged with correct details for audit purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "LogAudit-proj_001_TransactionLogging_FailedOperation_TEST_Backend",
      "ID": "TC-112",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to perform a transaction that is expected to fail (e.g., invalid data update).",
          "Expected Result": "Transaction fails as expected."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log via the backend interface or database.",
          "Expected Result": "Audit log is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the failed transaction is recorded in the audit log with correct details (timestamp, user, action, status, error message).",
          "Expected Result": "Failed transaction details are accurately recorded in the audit log."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Backend Application",
      "Preconditions": "1. Backend system is operational.\n2. Audit logging is enabled.\n3. User has permission to perform transactions and access logs.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample failed transaction (e.g., invalid data update)",
      "Expected Result": "All failed transactions are logged with correct details for audit purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "DashboardCreditMgmt-proj_001_ViewCreditLines_TEST_Desktop",
      "ID": "TC-113",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Back-Office application with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section of the dashboard.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all credit lines are displayed with correct details (amount, status, owner, etc.).",
          "Expected Result": "Credit lines are displayed accurately with all relevant details."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User account with valid credentials exists.\n2. Credit lines are present in the system.\n3. Back-Office application is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Credit Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample credit lines data",
      "Expected Result": "All credit lines are displayed accurately in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "MassiveImporter-proj_001_BulkImport_ValidExcel_TEST_Desktop",
      "ID": "TC-114",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Back-Office application with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid Excel file containing PoS information as per the 'ZENIT - Elenco Dati' specification.",
          "Expected Result": "File is accepted for processing."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the bulk import process.",
          "Expected Result": "Import process completes successfully."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all PoS records from the Excel file are imported and displayed in the system.",
          "Expected Result": "All PoS records are imported and available in the system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User account with valid credentials exists.\n2. Back-Office application is accessible.\n3. Valid Excel file is prepared as per specification.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with PoS data",
      "Expected Result": "All valid PoS records are imported successfully from the Excel file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "MassiveImporter-proj_001_BulkImport_InvalidExcel_TEST_Desktop",
      "ID": "TC-115",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Back-Office application with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an invalid Excel file (e.g., missing required columns, incorrect format).",
          "Expected Result": "File is processed and errors are detected."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the bulk import process.",
          "Expected Result": "System rejects the file and displays/logs appropriate error messages."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User account with valid credentials exists.\n2. Back-Office application is accessible.\n3. Invalid Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid Excel file (e.g., missing columns, wrong format)",
      "Expected Result": "System rejects invalid Excel files and provides clear error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "BackendProcedure-proj_001_DataStorage_Automation_TEST_Backend",
      "ID": "TC-116",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a backend procedure for data storage via API or backend interface.",
          "Expected Result": "Backend procedure is initiated."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the execution of the backend procedure.",
          "Expected Result": "Procedure executes without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the data is stored correctly in the database as per the procedure logic.",
          "Expected Result": "Data is stored accurately and is retrievable from the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Backend Application",
      "Preconditions": "1. Backend system is operational.\n2. API or backend interface is accessible.\n3. Test data is available for storage.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data for storage",
      "Expected Result": "Data is stored correctly in the database by the backend procedure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "USE CASES"
    },
    {
      "Title": "InitialLoadDataMigration_proj001_requirement_dataMigration_TEST_Desktop",
      "ID": "TC-117",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the target system is installed and configured as per deployment documentation.",
          "Expected Result": "Target system is ready for data migration."
        },
        {
          "Step": 2,
          "Step Description": "Obtain the latest backup or export of the source data to be migrated.",
          "Expected Result": "Source data backup/export is available and verified."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the initial data load process using the provided migration tool or script.",
          "Expected Result": "Data migration process starts without errors."
        },
        {
          "Step": 4,
          "Step Description": "Monitor the migration process for any errors or warnings.",
          "Expected Result": "Migration process completes successfully without critical errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all expected data entities (e.g., users, transactions, configurations) are present in the target system.",
          "Expected Result": "All data entities are present and accounted for in the target system."
        },
        {
          "Step": 6,
          "Step Description": "Validate data integrity by comparing a sample of migrated records between source and target systems.",
          "Expected Result": "Sampled records match exactly between source and target."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Target Application System",
      "Preconditions": "1. Target system is installed and configured.\n2. Source data backup/export is available.\n3. Migration tool or script is accessible.\n4. Tester has access credentials for both source and target systems.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample source data backup/export file, migration tool, access credentials.",
      "Expected Result": "All relevant data is migrated accurately and completely from the source to the target system, with no loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard data migration scenario, not edge or error cases.",
      "_polarion": "Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoadDataMigration_proj001_requirement_dataMigration_InvalidData_TEST_Desktop",
      "ID": "TC-118",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a source data backup/export file containing intentionally corrupted or invalid records (e.g., missing required fields, invalid formats).",
          "Expected Result": "Corrupted/invalid data file is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data migration process using the corrupted/invalid data file.",
          "Expected Result": "Migration process starts and processes the file."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process for error handling and logging.",
          "Expected Result": "Migration process detects invalid records and logs appropriate errors or warnings."
        },
        {
          "Step": 4,
          "Step Description": "Verify that invalid records are not migrated to the target system.",
          "Expected Result": "Invalid records are excluded from the target system."
        },
        {
          "Step": 5,
          "Step Description": "Check that valid records (if any) are migrated successfully.",
          "Expected Result": "Valid records are present in the target system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Target Application System",
      "Preconditions": "1. Target system is installed and configured.\n2. Corrupted/invalid source data file is prepared.\n3. Migration tool or script is accessible.\n4. Tester has access credentials for both source and target systems.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Corrupted/invalid source data file, migration tool, access credentials.",
      "Expected Result": "The migration process should skip or reject invalid records, log errors, and migrate only valid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for invalid data during migration.",
      "_polarion": "Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoadDataMigration_proj001_requirement_dataMigration_LargeVolume_TEST_Desktop",
      "ID": "TC-119",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a large volume of source data (e.g., maximum supported by the system).",
          "Expected Result": "Large data set is ready for migration."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data migration process with the large data set.",
          "Expected Result": "Migration process starts and handles the large data set."
        },
        {
          "Step": 3,
          "Step Description": "Monitor system performance and resource utilization during migration.",
          "Expected Result": "System remains stable and responsive during migration."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all records are migrated without loss or corruption.",
          "Expected Result": "All records are present and accurate in the target system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Target Application System",
      "Preconditions": "1. Target system is installed and configured.\n2. Large volume source data is prepared.\n3. Migration tool or script is accessible.\n4. Tester has access credentials for both source and target systems.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large volume source data file, migration tool, access credentials.",
      "Expected Result": "System successfully migrates large data volumes without performance degradation or data loss.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers performance and scalability of data migration.",
      "_polarion": "Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoadDataMigration_proj001_requirement_dataMigration_InterruptedProcess_TEST_Desktop",
      "ID": "TC-120",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate the data migration process with a standard data set.",
          "Expected Result": "Migration process starts normally."
        },
        {
          "Step": 2,
          "Step Description": "Intentionally interrupt the migration process (e.g., by shutting down the system or terminating the migration tool).",
          "Expected Result": "Migration process is interrupted."
        },
        {
          "Step": 3,
          "Step Description": "Restart the migration process.",
          "Expected Result": "Migration tool resumes or restarts migration."
        },
        {
          "Step": 4,
          "Step Description": "Verify if the migration tool can recover and complete the migration without duplicating or losing data.",
          "Expected Result": "Migration completes successfully, with no duplicate or missing records."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Target Application System",
      "Preconditions": "1. Target system is installed and configured.\n2. Standard source data is prepared.\n3. Migration tool or script is accessible.\n4. Tester has access credentials for both source and target systems.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Standard source data file, migration tool, access credentials.",
      "Expected Result": "Migration process can recover from interruptions without data loss or duplication.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers recovery from migration interruptions.",
      "_polarion": "Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_PoSPersonalDataImport_functional/Desktop_TEST_Desktop",
      "ID": "TC-121",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT system's Data Collection session as an administrator user.",
          "Expected Result": "The Data Collection session is displayed with import options enabled."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import PoS Personal Data.",
          "Expected Result": "The system prompts for a data source selection."
        },
        {
          "Step": 3,
          "Step Description": "Choose an Excel file containing valid PoS Personal Data and initiate the import process.",
          "Expected Result": "The system validates the file format and content."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "The system imports the PoS Personal Data and displays a success message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid PoS Personal Data Excel file is prepared according to the required schema.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid PoS Personal Data Excel file (e.g., PoS_Import_Valid.xlsx)",
      "Expected Result": "PoS Personal Data is successfully imported and available in the system for operational use.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_CervedDataImport_functional/Desktop_TEST_Desktop",
      "ID": "TC-122",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure PoS Personal Data has been successfully imported.",
          "Expected Result": "PoS Personal Data is present in the system."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's Data Collection session as an administrator user.",
          "Expected Result": "The Data Collection session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to import Cerved Data.",
          "Expected Result": "The system prompts for a data source selection."
        },
        {
          "Step": 4,
          "Step Description": "Choose a CSV file containing valid Cerved Data and initiate the import process.",
          "Expected Result": "The system validates the file format and content."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "The system imports the Cerved Data and displays a success message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid Cerved Data CSV file is prepared.\n4. PoS Personal Data has already been imported.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Cerved Data CSV file (e.g., Cerved_Import_Valid.csv)",
      "Expected Result": "Cerved Data is successfully imported and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_TypesOfContractImport_MassiveImporter_functional/Desktop_TEST_Desktop",
      "ID": "TC-123",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT system's Massive Importer session as an administrator user.",
          "Expected Result": "The Massive Importer session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import Types of Contract data.",
          "Expected Result": "The system prompts for a data source selection."
        },
        {
          "Step": 3,
          "Step Description": "Choose an Excel file containing valid Types of Contract data and initiate the import process.",
          "Expected Result": "The system validates the file format and content."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "The system imports the Types of Contract data and displays a success message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid Types of Contract Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Types of Contract Excel file (e.g., TypesOfContract_Valid.xlsx)",
      "Expected Result": "Types of Contract data is successfully imported and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_RedListImport_MassiveImporter_functional/Desktop_TEST_Desktop",
      "ID": "TC-124",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT system's Massive Importer session as an administrator user.",
          "Expected Result": "The Massive Importer session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import RedList data.",
          "Expected Result": "The system prompts for a data source selection."
        },
        {
          "Step": 3,
          "Step Description": "Choose a CSV file containing valid RedList data and initiate the import process.",
          "Expected Result": "The system validates the file format and content."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "The system imports the RedList data and displays a success message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid RedList CSV file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid RedList CSV file (e.g., RedList_Valid.csv)",
      "Expected Result": "RedList data is successfully imported and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_BorderoHistoricalDataImport_functional/Desktop_TEST_Desktop",
      "ID": "TC-125",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT system's Data Collection session as an administrator user.",
          "Expected Result": "The Data Collection session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import Borderò historical data.",
          "Expected Result": "The system prompts for a data source selection."
        },
        {
          "Step": 3,
          "Step Description": "Choose a database connection or file containing Borderò data for the last 12 months and initiate the import process.",
          "Expected Result": "The system validates the data source and content."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "The system imports the Borderò historical data and displays a success message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid Borderò historical data source (database or file) is prepared for the last 12 months.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Borderò historical data (e.g., Bordero_2023-2024.db or Bordero_2023-2024.csv)",
      "Expected Result": "Borderò historical data for the last 12 months is successfully imported and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_UnpaidsHistoricalDataImport_functional/Desktop_TEST_Desktop",
      "ID": "TC-126",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT system's Data Collection session as an administrator user.",
          "Expected Result": "The Data Collection session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the option to import Unpaids historical data.",
          "Expected Result": "The system prompts for a data source selection."
        },
        {
          "Step": 3,
          "Step Description": "Choose a database connection or file containing Unpaids data for the last 12 months and initiate the import process.",
          "Expected Result": "The system validates the data source and content."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "The system imports the Unpaids historical data and displays a success message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid Unpaids historical data source (database or file) is prepared for the last 12 months.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Unpaids historical data (e.g., Unpaids_2023-2024.db or Unpaids_2023-2024.csv)",
      "Expected Result": "Unpaids historical data for the last 12 months is successfully imported and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_InvalidFileFormatHandling_functional/Desktop_TEST_Desktop",
      "ID": "TC-127",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT system's Data Collection or Massive Importer session as an administrator user.",
          "Expected Result": "The import session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to import a file with an unsupported format (e.g., .txt) for any data type (e.g., PoS Personal Data).",
          "Expected Result": "The system rejects the file and displays an error message indicating unsupported file format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Invalid file (e.g., PoS_InvalidFormat.txt) is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid file format (e.g., PoS_InvalidFormat.txt)",
      "Expected Result": "The system prevents import of unsupported file formats and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_MissingMandatoryFieldsHandling_functional/Desktop_TEST_Desktop",
      "ID": "TC-128",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT system's Data Collection or Massive Importer session as an administrator user.",
          "Expected Result": "The import session is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to import a valid file (e.g., Excel or CSV) with missing mandatory fields for any data type (e.g., PoS Personal Data).",
          "Expected Result": "The system validates the file and detects missing mandatory fields."
        },
        {
          "Step": 3,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "The system rejects the import and displays an error message indicating missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. File with missing mandatory fields is prepared (e.g., PoS_MissingFields.xlsx).",
      "Execution Mode": "Manual",
      "Functionality": "Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File with missing mandatory fields (e.g., PoS_MissingFields.xlsx)",
      "Expected Result": "The system prevents import of files with missing mandatory fields and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_ImportOrderEnforcement_functional/Desktop_TEST_Desktop",
      "ID": "TC-129",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to import Cerved Data before importing PoS Personal Data.",
          "Expected Result": "The system prevents the import and displays a message indicating that PoS Personal Data must be imported first."
        },
        {
          "Step": 2,
          "Step Description": "Import PoS Personal Data successfully.",
          "Expected Result": "PoS Personal Data is present in the system."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to import Cerved Data again.",
          "Expected Result": "The system allows the import process to proceed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid Cerved Data file is prepared.\n4. PoS Personal Data has not yet been imported for Step 1.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import Order Enforcement",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Cerved Data file (e.g., Cerved_Import_Valid.csv), Valid PoS Personal Data file (e.g., PoS_Import_Valid.xlsx)",
      "Expected Result": "The system enforces the correct import order, requiring PoS Personal Data to be imported before other data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "ExcelUpload-proj_001_TemporarySolution_DataCollection_TEST_Desktop",
      "ID": "TC-130",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Data Collection application as a user with data upload permissions.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Upload section of the application.",
          "Expected Result": "Data Upload interface is displayed, showing options for file upload."
        },
        {
          "Step": 3,
          "Step Description": "Select an Excel file containing the required data of interest and initiate the upload process.",
          "Expected Result": "System accepts the file and begins processing the upload."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the upload process to complete and observe the confirmation message.",
          "Expected Result": "System displays a confirmation message indicating successful upload and integration of the data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Data Collection Web Application",
      "Preconditions": "1. User account with data upload permissions exists.\n2. User is logged in to the system.\n3. Excel file with valid data structure is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Data Upload (Temporary Solution)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Excel file with valid data fields as per ZENIT technical documentation.",
      "Expected Result": "The system successfully accepts and integrates the uploaded Excel file, ensuring data continuity in the absence of direct integration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the temporary Excel upload solution, not direct integration.",
      "_polarion": "Data Collection"
    },
    {
      "Title": "AcquisitionDate-proj_001_MandatoryDateField_DataCollection_TEST_Desktop",
      "ID": "TC-131",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Data Collection application as a user with data upload permissions.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Upload section of the application.",
          "Expected Result": "Data Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select an Excel file that contains data records without the acquisition date field populated.",
          "Expected Result": "System validates the file and detects missing acquisition date fields."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload the file.",
          "Expected Result": "System rejects the upload and displays an error message indicating that the acquisition date is mandatory for each data record."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Data Collection Web Application",
      "Preconditions": "1. User account with data upload permissions exists.\n2. User is logged in to the system.\n3. Excel file with missing acquisition date fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Validation (Acquisition Date)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Excel file missing acquisition date fields.",
      "Expected Result": "The system enforces the acquisition date as a mandatory field and prevents upload of data without it.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for missing acquisition date.",
      "_polarion": "Data Collection"
    },
    {
      "Title": "AcquisitionDate-proj_001_ValidDateAssociation_DataCollection_TEST_Desktop",
      "ID": "TC-132",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Data Collection application as a user with data upload permissions.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Upload section of the application.",
          "Expected Result": "Data Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select an Excel file where each data record includes a valid acquisition date field.",
          "Expected Result": "System validates the file and detects all required fields are present."
        },
        {
          "Step": 4,
          "Step Description": "Upload the file and wait for the process to complete.",
          "Expected Result": "System accepts the file, integrates the data, and associates the correct acquisition date with each record."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the data management or reporting section and verify that each record displays the correct acquisition date.",
          "Expected Result": "Each data record in the system is shown with the correct acquisition date as per the uploaded file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Data Collection Web Application",
      "Preconditions": "1. User account with data upload permissions exists.\n2. User is logged in to the system.\n3. Excel file with valid acquisition date fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Traceability (Acquisition Date)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Excel file with valid acquisition date fields for each record.",
      "Expected Result": "Each data record is stored and displayed with the correct acquisition date, ensuring traceability and freshness verification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers positive scenario for acquisition date association.",
      "_polarion": "Data Collection"
    },
    {
      "Title": "ExcelUpload-proj_001_InvalidFileFormat_DataCollection_TEST_Desktop",
      "ID": "TC-133",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Data Collection application as a user with data upload permissions.",
          "Expected Result": "User is successfully authenticated and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Upload section of the application.",
          "Expected Result": "Data Upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a file in an unsupported format (e.g., .csv, .txt) instead of Excel and attempt to upload.",
          "Expected Result": "System detects the invalid file format and prevents the upload."
        },
        {
          "Step": 4,
          "Step Description": "Observe the error message displayed by the system.",
          "Expected Result": "System displays a clear error message indicating that only Excel files are supported for upload."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Data Collection Web Application",
      "Preconditions": "1. User account with data upload permissions exists.\n2. User is logged in to the system.\n3. File in unsupported format is available.",
      "Execution Mode": "Manual",
      "Functionality": "File Format Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample .csv or .txt file.",
      "Expected Result": "System rejects unsupported file formats and informs the user accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for file format validation.",
      "_polarion": "Data Collection"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_InitialImportDataCompleteness_DESKTOP_TEST_Desktop",
      "ID": "TC-134",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM contains at least one PoS record with all mandatory fields populated.",
          "Expected Result": "MDM has valid PoS data ready for export."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the initial import process from MDM to ZENIT via ESB.",
          "Expected Result": "ZENIT initiates data acquisition from MDM."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "Dashboard displays the imported PoS record."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all required fields (IdRice, Zona Code, Zona, Rice, PoS Status, PoS Type, Cluster Rete, Channel RG, Denomination, Company name, Vat Number, Tax Code PoS, Address, City, Hamlet, Province Code, CAP, Region, Phone Number, Phone Number 2, Email, Country, Holder Surname, Holder FirstName, Holder Cell, Holder Cell 2, Business Line, KA Surname and Firstname, AM Surname and Firstname, Prepaid Flag, Activation Date) are present and correctly populated as per MDM data.",
          "Expected Result": "All required fields are present and match the MDM source data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Desktop Web",
      "Preconditions": "1. MDM system is operational and contains at least one PoS record with all required fields populated.\n2. ZENIT system is operational and connected to ESB.\n3. Initial import process is enabled and ready to be triggered.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS record in MDM with all fields populated.",
      "Expected Result": "ZENIT successfully imports all required PoS master data fields from MDM and displays them correctly in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_RealTimeUpdateOnPoSModification_DESKTOP_TEST_Desktop",
      "ID": "TC-135",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a PoS record exists in both MDM and ZENIT systems.",
          "Expected Result": "PoS record is present in both systems."
        },
        {
          "Step": 2,
          "Step Description": "Update a field (e.g., Denomination) for the PoS in MDM.",
          "Expected Result": "PoS record in MDM is updated."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the near real-time integration to synchronize data to ZENIT.",
          "Expected Result": "Synchronization process is triggered."
        },
        {
          "Step": 4,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the updated PoS.",
          "Expected Result": "Dashboard displays the updated PoS record."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the updated field in ZENIT matches the new value in MDM.",
          "Expected Result": "ZENIT reflects the updated value from MDM."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Desktop Web",
      "Preconditions": "1. MDM and ZENIT systems are operational and synchronized.\n2. At least one PoS record exists in both systems.\n3. Near real-time integration is active.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Existing PoS record in MDM and ZENIT; updated field value for test.",
      "Expected Result": "ZENIT updates the PoS record in near real-time to reflect changes made in MDM.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_PrivacyCheck_PhoneNumbers_DESKTOP_TEST_Desktop",
      "ID": "TC-136",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM contains a PoS record with both PoS phone numbers and personal numbers (e.g., Holder Cell, Holder Cell 2).",
          "Expected Result": "MDM PoS record includes both types of phone numbers."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data synchronization from MDM to ZENIT.",
          "Expected Result": "ZENIT receives updated PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "Dashboard displays the PoS record."
        },
        {
          "Step": 4,
          "Step Description": "Verify that only PoS phone numbers (Telefono, Telefono 2) are present and personal numbers (Holder Cell, Holder Cell 2) are not displayed or stored in ZENIT.",
          "Expected Result": "Only PoS phone numbers are integrated; personal numbers are excluded, ensuring privacy."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Desktop Web",
      "Preconditions": "1. MDM system contains a PoS record with both PoS and personal phone numbers.\n2. ZENIT system is operational and connected to ESB.\n3. Data synchronization process is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with both PoS and personal phone numbers.",
      "Expected Result": "ZENIT integrates only PoS phone numbers, excluding personal numbers, in compliance with privacy requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_BusinessLineArrayDataImport_DESKTOP_TEST_Desktop",
      "ID": "TC-137",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM contains a PoS record with multiple Business Line (Ldb) entries, including LdB Betting with all subfields populated.",
          "Expected Result": "MDM PoS record includes multiple Business Line entries."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data import from MDM to ZENIT.",
          "Expected Result": "ZENIT receives PoS data with Business Line array."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "Dashboard displays the PoS record."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all Business Line entries and their subfields (LdB Name, Ldb Status, Date of last transfer, SIMP Code, Sports Concession Code, Horse-Racing Concession Code, Sports Grant Code, Horse-Racing Grant Code) are present and correctly populated as per MDM data.",
          "Expected Result": "All Business Line array data and subfields are correctly imported and displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Desktop Web",
      "Preconditions": "1. MDM system contains a PoS record with multiple Business Line entries, including LdB Betting with all subfields.\n2. ZENIT system is operational and connected to ESB.\n3. Data import process is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with multiple Business Line entries and all subfields populated.",
      "Expected Result": "ZENIT imports and displays all Business Line array data and subfields as per MDM source.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_FieldLevelErrorHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-138",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM contains a PoS record with a missing mandatory field (e.g., Vat Number is empty).",
          "Expected Result": "MDM PoS record has a missing mandatory field."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data synchronization from MDM to ZENIT.",
          "Expected Result": "ZENIT attempts to import the PoS record."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "Dashboard displays the PoS record or an error message."
        },
        {
          "Step": 4,
          "Step Description": "Verify that ZENIT handles the missing field gracefully (e.g., displays a warning, skips the record, or marks the field as missing) and does not cause system errors or data corruption.",
          "Expected Result": "ZENIT handles missing mandatory fields according to system design, without system failure or data corruption."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Desktop Web",
      "Preconditions": "1. MDM system contains a PoS record with at least one missing mandatory field.\n2. ZENIT system is operational and connected to ESB.\n3. Data synchronization process is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with a missing mandatory field (e.g., Vat Number).",
      "Expected Result": "ZENIT handles missing mandatory fields gracefully, ensuring system stability and data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_ActivationDateCalculation_DESKTOP_TEST_Desktop",
      "ID": "TC-139",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM contains a PoS record with Channel 1 field set and a known change date.",
          "Expected Result": "MDM PoS record includes Channel 1 and its change date."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data import from MDM to ZENIT.",
          "Expected Result": "ZENIT receives PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "Dashboard displays the PoS record."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the Activation Date (Data attivazione Canale 1) field in ZENIT is correctly calculated and populated with the date of the Channel 1 change.",
          "Expected Result": "Activation Date field is correctly calculated and matches the Channel 1 change date from MDM."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Desktop Web",
      "Preconditions": "1. MDM system contains a PoS record with Channel 1 and its change date.\n2. ZENIT system is operational and connected to ESB.\n3. Data import process is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with Channel 1 and change date.",
      "Expected Result": "ZENIT calculates and displays the Activation Date field correctly based on Channel 1 change date.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_DashboardDataVisibility_DESKTOP_TEST_Desktop",
      "ID": "TC-140",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ZENIT has imported at least one PoS record from MDM.",
          "Expected Result": "ZENIT contains at least one PoS record."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard - Single PoS view.",
          "Expected Result": "Dashboard displays the list of PoS records."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS and navigate to the PoS Master Data tab.",
          "Expected Result": "PoS Master Data tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all imported fields for the selected PoS are visible and correctly populated.",
          "Expected Result": "All imported PoS fields are visible and match the imported data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Desktop Web",
      "Preconditions": "1. ZENIT system has completed at least one successful PoS data import from MDM.\n2. User has access to the ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Imported PoS record in ZENIT.",
      "Expected Result": "All imported PoS data fields are visible and correctly populated in the Dashboard views.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataRetrieval_proj011_SelectSinglePoS_Retrieval_TEST_Desktop",
      "ID": "TC-141",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section.",
          "Expected Result": "PoS management section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a Single PoS from the list.",
          "Expected Result": "Single PoS details screen is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the data fields for Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data.",
          "Expected Result": "The system retrieves and displays the most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account with access to PoS management.\n2. At least one PoS available in the system.\n3. Source system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; At least one PoS with data in the source system.",
      "Expected Result": "Upon selecting a Single PoS, the system retrieves and displays the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data from the source system in real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "PoSDataRetrieval_proj011_RefreshButton_Retrieval_TEST_Desktop",
      "ID": "TC-142",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section and select a Single PoS.",
          "Expected Result": "Single PoS details screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Refresh' button on the Single PoS screen.",
          "Expected Result": "The system initiates a real-time call to the source system to retrieve the latest data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the data fields for Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data.",
          "Expected Result": "The most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data are displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account with access to PoS management.\n2. At least one PoS available in the system.\n3. Source system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; At least one PoS with data in the source system.",
      "Expected Result": "When the 'Refresh' button is pressed, the system retrieves and displays the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data from the source system in real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "PoSDataRetrieval_proj011_DailyArchival_Retrieval_TEST_Backend",
      "ID": "TC-143",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is scheduled to perform daily data storage for archival purposes.",
          "Expected Result": "Archival process is scheduled and system is in idle state until scheduled time."
        },
        {
          "Step": 2,
          "Step Description": "At the scheduled archival time, monitor the system's data retrieval process.",
          "Expected Result": "System initiates a call to the source system to retrieve PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data are retrieved and stored.",
          "Expected Result": "Only the specified data fields are retrieved and stored for archival."
        },
        {
          "Step": 4,
          "Step Description": "Check the archival storage for the presence and correctness of the retrieved data.",
          "Expected Result": "The most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data are present and accurate in the archival storage."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Linux/Backend",
      "Preconditions": "1. System is configured for daily archival.\n2. Source system is online and accessible.\n3. Archival storage is available and has sufficient space.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "System configuration for daily archival; At least one PoS with data in the source system.",
      "Expected Result": "During daily archival, the system retrieves and stores only the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data from the source system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "PoSDataRetrieval_proj011_SourceSystemUnavailable_ErrorHandling_TEST_Desktop",
      "ID": "TC-144",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section and select a Single PoS.",
          "Expected Result": "Single PoS details screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Simulate source system unavailability (e.g., disconnect network or stop source system service).",
          "Expected Result": "Source system is unreachable."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to retrieve PoS data by selecting a Single PoS or pressing the 'Refresh' button.",
          "Expected Result": "System displays an appropriate error message indicating data retrieval failure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account with access to PoS management.\n2. At least one PoS available in the system.\n3. Source system is temporarily unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; At least one PoS; Source system offline.",
      "Expected Result": "If the source system is unavailable, the system displays an error message and does not display outdated or partial data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "PoSDataRetrieval_proj011_OnlySpecifiedFieldsRetrieved_TEST_Desktop",
      "ID": "TC-145",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section and select a Single PoS.",
          "Expected Result": "Single PoS details screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Trigger data retrieval (by selecting PoS or pressing 'Refresh').",
          "Expected Result": "System initiates data retrieval from the source system."
        },
        {
          "Step": 4,
          "Step Description": "Monitor the data payload received from the source system (using developer tools or logs).",
          "Expected Result": "Only Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data are present in the payload; no other data is retrieved."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account with access to PoS management.\n2. At least one PoS available in the system.\n3. Access to developer tools or system logs to inspect payloads.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; At least one PoS with data in the source system.",
      "Expected Result": "The system retrieves only the specified fields (Credit Lines Data, NOIAG Credits, NOIAG Hopper Data) from the source system, with no extraneous data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "GEOCL-zenit_020_data_acquisition_dashboard_display_TEST_Desktop",
      "ID": "TC-146",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "The 'Credit Management' tab for a single PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the available list.",
          "Expected Result": "Credit line/product data for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present and populated: Zona Code, RICE Number, Credit Lines/Products, Fido Base Week, Estensione Week, Fido Totale Week, Consumato Week, % consumato Week, Residuo Week.",
          "Expected Result": "All required fields are present and populated with valid data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with appropriate permissions exists. 2. At least one PoS with credit line data is available in the system. 3. GEO system is operational and integrated with ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known credit line data.",
      "Expected Result": "All required credit line/product fields are displayed and populated for the selected PoS in near real-time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "GEOCL-zenit_020_data_acquisition_field_validation_TEST_Desktop",
      "ID": "TC-147",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab and select a PoS.",
          "Expected Result": "Credit line/product data for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Zona Code' field contains an alphanumeric value.",
          "Expected Result": "'Zona Code' is alphanumeric (e.g., 'A1B2C3')."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'RICE Number' field contains a valid number as per business rules.",
          "Expected Result": "'RICE Number' is present and valid (e.g., '123456')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with appropriate permissions exists. 2. At least one PoS with credit line data is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known Zona Code and RICE Number.",
      "Expected Result": "'Zona Code' is alphanumeric and 'RICE Number' is valid for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "GEOCL-zenit_020_data_acquisition_calculation_validation_TEST_Desktop",
      "ID": "TC-148",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "Dashboard is displayed with credit line data for a selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Note the values for 'Fido Totale Week' and 'Consumato Week' for a PoS.",
          "Expected Result": "Values for 'Fido Totale Week' and 'Consumato Week' are visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that '% consumato Week' is calculated as (Consumato Week / Fido Totale Week) * 100.",
          "Expected Result": "'% consumato Week' matches the calculated value."
        },
        {
          "Step": 4,
          "Step Description": "Verify that 'Residuo Week' is calculated as (Fido Totale Week - Consumato Week).",
          "Expected Result": "'Residuo Week' matches the calculated value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with appropriate permissions exists. 2. At least one PoS with known credit line data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Calculation Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known Fido Totale Week and Consumato Week values.",
      "Expected Result": "'% consumato Week' and 'Residuo Week' are correctly calculated and displayed for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "GEOCL-zenit_020_data_acquisition_real_time_update_TEST_Desktop",
      "ID": "TC-149",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "Dashboard is displayed with credit line data for a selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger an update to the credit line data for the PoS in the GEO system (e.g., increase Consumato Week).",
          "Expected Result": "Credit line data is updated in the GEO system."
        },
        {
          "Step": 3,
          "Step Description": "Refresh or monitor the ZENIT dashboard for the selected PoS within the expected near real-time window.",
          "Expected Result": "Updated credit line data is reflected in the ZENIT dashboard within the near real-time window."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with appropriate permissions exists. 2. At least one PoS with credit line data is available. 3. Access to update data in the GEO system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Synchronization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with updatable credit line data in GEO system.",
      "Expected Result": "ZENIT dashboard reflects updated credit line data from GEO system in near real-time for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "GEOCL-zenit_020_data_acquisition_error_handling_TEST_Desktop",
      "ID": "TC-150",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a failure in the GEO system (e.g., disconnect GEO system or provide invalid data).",
          "Expected Result": "GEO system is unavailable or returns invalid data."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "Dashboard attempts to retrieve credit line data for a PoS."
        },
        {
          "Step": 3,
          "Step Description": "Observe the behavior of the dashboard when data cannot be retrieved or is invalid.",
          "Expected Result": "An appropriate error message is displayed, and the system does not display outdated or incorrect data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with appropriate permissions exists. 2. GEO system can be made unavailable or can return invalid data.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; ability to simulate GEO system failure or invalid data.",
      "Expected Result": "System displays an appropriate error message and does not show outdated or invalid credit line data when GEO system is unavailable or returns invalid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS030_CreditLineDataRetrieval_DashboardDisplay_TEST_Desktop",
      "ID": "TC-151",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are displayed for each Credit Line/Product: Zona Code, RICE Number, Alias, Credit Lines/Products, Basic credit line, Credit line extension, Total credit line, Consumed credit line, Percentage of credit consumed, Residual credit line.",
          "Expected Result": "All required fields are present and populated with data for each Credit Line/Product."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT system is operational and connected to SIMP or DWH replica.\n2. Test user account with appropriate permissions is available.\n3. At least one PoS with active credit lines/products exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known credit line/product data in SIMP or DWH.",
      "Expected Result": "All required credit line/product fields are displayed for each PoS in the dashboard, matching the data from SIMP or DWH.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS030_CreditLineCalculation_Validation_TEST_Desktop",
      "ID": "TC-152",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard and access the 'Dashboard - Single PoS - Credit Management' tab for a PoS with known credit line data.",
          "Expected Result": "Dashboard displays credit line data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Note the values for 'Fido Base Day', 'Estensione Day', and 'Fido Totale Day'.",
          "Expected Result": "Values for 'Fido Base Day', 'Estensione Day', and 'Fido Totale Day' are visible."
        },
        {
          "Step": 3,
          "Step Description": "Manually calculate 'Fido Totale Day' as 'Fido Base Day' + 'Estensione Day'.",
          "Expected Result": "Manual calculation result is available."
        },
        {
          "Step": 4,
          "Step Description": "Compare the manually calculated 'Fido Totale Day' with the value displayed in the dashboard.",
          "Expected Result": "Displayed 'Fido Totale Day' matches the manual calculation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT system is operational and connected to SIMP or DWH replica.\n2. Test user account with appropriate permissions is available.\n3. PoS with known 'Fido Base Day' and 'Estensione Day' values exists.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'Fido Base Day' = 1000, 'Estensione Day' = 500, expected 'Fido Totale Day' = 1500.",
      "Expected Result": "'Fido Totale Day' displayed matches the sum of 'Fido Base Day' and 'Estensione Day'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS030_PercentageCreditConsumed_CalculationValidation_TEST_Desktop",
      "ID": "TC-153",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Dashboard - Single PoS - Credit Management' tab for a PoS with known 'Consumato Day' and 'Fido Totale Day' values.",
          "Expected Result": "Dashboard displays 'Consumato Day' and 'Fido Totale Day' values."
        },
        {
          "Step": 2,
          "Step Description": "Manually calculate the percentage consumed: ('Consumato Day' / 'Fido Totale Day') * 100.",
          "Expected Result": "Manual calculation result is available."
        },
        {
          "Step": 3,
          "Step Description": "Compare the manually calculated percentage with the '% consumato Day' displayed in the dashboard.",
          "Expected Result": "Displayed '% consumato Day' matches the manual calculation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT system is operational and connected to SIMP or DWH replica.\n2. Test user account with appropriate permissions is available.\n3. PoS with known 'Consumato Day' and 'Fido Totale Day' values exists.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'Consumato Day' = 300, 'Fido Totale Day' = 1500, expected '% consumato Day' = 20%.",
      "Expected Result": "'% consumato Day' displayed matches the calculated value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS030_ResidualCreditLine_CalculationValidation_TEST_Desktop",
      "ID": "TC-154",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Dashboard - Single PoS - Credit Management' tab for a PoS with known 'Fido Totale Day' and 'Consumato Day' values.",
          "Expected Result": "Dashboard displays 'Fido Totale Day' and 'Consumato Day' values."
        },
        {
          "Step": 2,
          "Step Description": "Manually calculate the residual credit: 'Fido Totale Day' - 'Consumato Day'.",
          "Expected Result": "Manual calculation result is available."
        },
        {
          "Step": 3,
          "Step Description": "Compare the manually calculated residual with the 'Residuo Day' displayed in the dashboard.",
          "Expected Result": "Displayed 'Residuo Day' matches the manual calculation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT system is operational and connected to SIMP or DWH replica.\n2. Test user account with appropriate permissions is available.\n3. PoS with known 'Fido Totale Day' and 'Consumato Day' values exists.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'Fido Totale Day' = 1500, 'Consumato Day' = 300, expected 'Residuo Day' = 1200.",
      "Expected Result": "'Residuo Day' displayed matches the calculated value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS030_CreditLineData_RealTimeUpdateValidation_TEST_Desktop",
      "ID": "TC-155",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the 'Dashboard - Single PoS - Credit Management' tab for a PoS.",
          "Expected Result": "Dashboard displays current credit line data."
        },
        {
          "Step": 2,
          "Step Description": "Update credit line data for the PoS in the SIMP system (e.g., increase 'Fido Base Day').",
          "Expected Result": "Credit line data is updated in SIMP."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the near real-time update interval as defined by system requirements.",
          "Expected Result": "Sufficient time has passed for data synchronization."
        },
        {
          "Step": 4,
          "Step Description": "Refresh the dashboard and verify that the updated credit line data is reflected.",
          "Expected Result": "Dashboard displays the updated credit line data matching the changes made in SIMP."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT system is operational and connected to SIMP or DWH replica.\n2. Test user account with appropriate permissions is available.\n3. Access to SIMP system to modify credit line data.\n4. PoS with modifiable credit line data exists.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Synchronization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with initial credit line data; updated values to be set in SIMP during test.",
      "Expected Result": "Dashboard reflects updated credit line data from SIMP within the near real-time update interval.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS030_CreditLineData_MissingOrCorruptDataHandling_TEST_Desktop",
      "ID": "TC-156",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where one or more required credit line fields (e.g., 'Fido Base Day') are missing or contain corrupt data in SIMP or DWH for a PoS.",
          "Expected Result": "SIMP or DWH contains incomplete or corrupt data for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the 'Dashboard - Single PoS - Credit Management' tab for the affected PoS.",
          "Expected Result": "Dashboard attempts to display credit line data for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Observe how the dashboard handles the missing or corrupt data fields.",
          "Expected Result": "Dashboard displays an appropriate error message, placeholder, or indication for missing/corrupt data without crashing or displaying misleading information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT system is operational and connected to SIMP or DWH replica.\n2. Test user account with appropriate permissions is available.\n3. Ability to manipulate or simulate missing/corrupt data in SIMP or DWH for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with intentionally missing or corrupt credit line data in SIMP or DWH.",
      "Expected Result": "Dashboard handles missing or corrupt data gracefully, displaying appropriate messages or placeholders.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "MSTCreditLines_XPS-ZENIT-040_DataAcquisition_CreditLineFieldsValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-157",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present for each Credit Line/Product: Zona Code, RICE Number, Credit Lines/Products, Basic credit line, Credit line extension, Total credit line, Consumed credit line, Percentage of credit consumed, Residual credit line.",
          "Expected Result": "All required fields are present and displayed for each Credit Line/Product."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH as per configuration.\n2. At least one PoS with active Credit Lines/Products exists in the system.\n3. User credentials with access to the dashboard are available.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known Credit Line/Product data.",
      "Expected Result": "All required Credit Line/Product fields are present and visible for each PoS in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers field presence, not data correctness.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "MSTCreditLines_XPS-ZENIT-040_DataAcquisition_CreditLineCalculationValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-158",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS with known credit line values.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Note the values for 'Fido Base Day', 'Estensione Day', 'Fido Totale Day', 'Consumato Day', '% consumato Day', and 'Residuo Day'.",
          "Expected Result": "All values are displayed for the selected Credit Line/Product."
        },
        {
          "Step": 4,
          "Step Description": "Manually calculate 'Fido Totale Day' as 'Fido Base Day' + 'Estensione Day'.",
          "Expected Result": "Calculated value matches the displayed 'Fido Totale Day'."
        },
        {
          "Step": 5,
          "Step Description": "Manually calculate '% consumato Day' as ('Consumato Day' / 'Fido Totale Day') * 100.",
          "Expected Result": "Calculated value matches the displayed '% consumato Day'."
        },
        {
          "Step": 6,
          "Step Description": "Manually calculate 'Residuo Day' as 'Fido Totale Day' - 'Consumato Day'.",
          "Expected Result": "Calculated value matches the displayed 'Residuo Day'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH as per configuration.\n2. At least one PoS with known, non-zero values for all relevant credit line fields exists.\n3. User credentials with access to the dashboard are available.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known credit line values (e.g., Fido Base Day = 1000, Estensione Day = 500, Consumato Day = 300).",
      "Expected Result": "Displayed calculated fields ('Fido Totale Day', '% consumato Day', 'Residuo Day') match manual calculations based on source values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers calculation correctness for 'Day' fields. Similar logic applies for 'Week' fields.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "MSTCreditLines_XPS-ZENIT-040_DataAcquisition_RealTimeUpdateValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-159",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Trigger an update to the Credit Line/Product data in the MST (or SIMP/DWH) system for the selected PoS (e.g., increase 'Consumato Day').",
          "Expected Result": "Data is updated in the source system."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the near real-time update interval (as defined by system configuration).",
          "Expected Result": "Sufficient time has passed for the update to propagate."
        },
        {
          "Step": 5,
          "Step Description": "Refresh the dashboard view for the selected PoS.",
          "Expected Result": "Updated Credit Line/Product data is displayed, reflecting the changes made in the source system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH as per configuration.\n2. User credentials with access to the dashboard are available.\n3. Ability to update Credit Line/Product data in the source system (MST/SIMP/DWH).",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; PoS with updatable Credit Line/Product data.",
      "Expected Result": "Dashboard displays updated Credit Line/Product data within the expected near real-time interval after changes in the source system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers update propagation, not update source logic.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "MSTCreditLines_XPS-ZENIT-040_DataAcquisition_FieldValidationWithMissingData_DESKTOP_TEST_Desktop",
      "ID": "TC-160",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with missing or incomplete Credit Line/Product data (e.g., missing 'Estensione Day').",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the dashboard displays fields with missing data (e.g., empty, zero, error message).",
          "Expected Result": "Fields with missing data are handled gracefully (e.g., shown as empty, with a placeholder, or with a clear error message), and no system errors occur."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH as per configuration.\n2. At least one PoS with missing or incomplete Credit Line/Product data exists.\n3. User credentials with access to the dashboard are available.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with missing or incomplete Credit Line/Product data.",
      "Expected Result": "Dashboard handles missing or incomplete Credit Line/Product data gracefully, without errors or misleading information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing data.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "MSTCreditLines_XPS-ZENIT-040_DataAcquisition_InvalidDataHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-161",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with invalid Credit Line/Product data (e.g., negative values, non-numeric where numeric expected).",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the dashboard displays fields with invalid data.",
          "Expected Result": "Fields with invalid data are handled gracefully (e.g., shown as error, flagged, or with a clear message), and no system errors occur."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH as per configuration.\n2. At least one PoS with invalid Credit Line/Product data exists.\n3. User credentials with access to the dashboard are available.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with invalid Credit Line/Product data (e.g., negative or non-numeric values).",
      "Expected Result": "Dashboard handles invalid Credit Line/Product data gracefully, without errors or misleading information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for invalid data.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "MSTCreditLines_XPS-ZENIT-040_DataAcquisition_SourceSwitchingValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-162",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure ZENIT to retrieve Credit Line/Product data from MST, SIMP, and DWH replica sequentially (as per technical availability).",
          "Expected Result": "ZENIT is configured to use the selected data source."
        },
        {
          "Step": 2,
          "Step Description": "For each configuration, log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed for each data source."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Credit Line/Product data is correctly retrieved and displayed from each source.",
          "Expected Result": "Credit Line/Product data is accurately displayed regardless of the data source (MST, SIMP, DWH replica)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and can be configured to use different data sources (MST, SIMP, DWH replica).\n2. User credentials with access to the dashboard are available.\n3. PoS with Credit Line/Product data present in all sources.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; PoS with Credit Line/Product data available in MST, SIMP, and DWH.",
      "Expected Result": "Dashboard displays correct Credit Line/Product data for each data source configuration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data source switching, not source synchronization.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT_050_DailyDataAcquisition_AutomatedDataImport_backend_TEST_Desktop",
      "ID": "TC-163",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure COMMA6 system has up-to-date AWP data for all PoS as of the previous evening.",
          "Expected Result": "COMMA6 contains the latest AWP data for all PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily integration process between COMMA6 and ZENIT.",
          "Expected Result": "The integration process initiates as scheduled."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT receives and stores the following data for each PoS: IdRice, ZonaRice, Nr AWP Management IAG, Nr AWP Management NO IAG, Nr AWP Third-party IAG, Nr AWP Third-party NO IAG, Nr AWP Average, Type of Collection AWP under Management, Coin In Average AWP - YTD.",
          "Expected Result": "All specified data fields are present and populated for each PoS in ZENIT."
        },
        {
          "Step": 4,
          "Step Description": "Check that the data snapshot in ZENIT corresponds to the previous evening's data from COMMA6.",
          "Expected Result": "ZENIT data matches COMMA6 data as of the previous evening for all PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Desktop/Backend",
      "Preconditions": "1. COMMA6 system is operational and contains valid, up-to-date AWP data for all PoS as of the previous evening.\n2. ZENIT system is operational and configured to connect to COMMA6.\n3. Scheduled integration process is enabled and set to run daily.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data in COMMA6 with all required fields populated.",
      "Expected Result": "ZENIT system automatically imports and stores all required AWP data fields for each PoS from COMMA6 on a daily basis, reflecting the previous evening's snapshot.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT_050_DashboardDataDisplay_SinglePoS_backend_TEST_Desktop",
      "ID": "TC-164",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Single PoS' view for a specific PoS.",
          "Expected Result": "Dashboard - Single PoS view is displayed for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following data fields are displayed: IdRice, ZonaRice, Nr AWP Management IAG, Nr AWP Management NO IAG, Nr AWP Third-party IAG, Nr AWP Third-party NO IAG, Nr AWP Average, Type of Collection AWP under Management, Coin In Average AWP - YTD.",
          "Expected Result": "All specified data fields are visible and populated for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Cross-check the displayed data with the latest imported data from COMMA6 (as of the previous evening).",
          "Expected Result": "Displayed data matches the imported data for the selected PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop/Backend",
      "Preconditions": "1. ZENIT system has completed a successful daily data import from COMMA6.\n2. At least one PoS exists with complete data in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Imported PoS data from COMMA6 for at least one PoS.",
      "Expected Result": "ZENIT Dashboard - Single PoS view displays all required AWP data fields accurately for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT_050_DashboardDataDisplay_ADIDataTab_backend_TEST_Desktop",
      "ID": "TC-165",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Single PoS -- ADI Data Tab' for a specific PoS.",
          "Expected Result": "Dashboard - Single PoS -- ADI Data Tab is displayed for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all required AWP data fields are displayed: IdRice, ZonaRice, Nr AWP Management IAG, Nr AWP Management NO IAG, Nr AWP Third-party IAG, Nr AWP Third-party NO IAG, Nr AWP Average, Type of Collection AWP under Management, Coin In Average AWP - YTD.",
          "Expected Result": "All specified data fields are visible and populated in the ADI Data Tab for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Cross-check the displayed data with the latest imported data from COMMA6 (as of the previous evening).",
          "Expected Result": "Displayed data matches the imported data for the selected PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop/Backend",
      "Preconditions": "1. ZENIT system has completed a successful daily data import from COMMA6.\n2. At least one PoS exists with complete data in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Imported PoS data from COMMA6 for at least one PoS.",
      "Expected Result": "ZENIT Dashboard - Single PoS -- ADI Data Tab displays all required AWP data fields accurately for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT_050_DailyDataAcquisition_MissingFieldHandling_backend_TEST_Desktop",
      "ID": "TC-166",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In COMMA6, create or modify a PoS record with one or more required AWP data fields missing (e.g., omit 'Nr AWP Management IAG').",
          "Expected Result": "COMMA6 contains a PoS record with incomplete data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily integration process between COMMA6 and ZENIT.",
          "Expected Result": "The integration process initiates as scheduled."
        },
        {
          "Step": 3,
          "Step Description": "Verify how ZENIT handles the missing data field(s) for the affected PoS.",
          "Expected Result": "ZENIT logs an error or warning for the missing field(s) and either skips the record or imports available data with clear indication of missing values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop/Backend",
      "Preconditions": "1. COMMA6 system is operational and allows editing of PoS data.\n2. ZENIT system is operational and configured for daily integration.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in COMMA6 with one or more required fields missing.",
      "Expected Result": "ZENIT system handles missing data fields gracefully, logs appropriate errors or warnings, and maintains data integrity for other fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing fields during data acquisition.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT_050_DailyDataAcquisition_InvalidDataHandling_backend_TEST_Desktop",
      "ID": "TC-167",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In COMMA6, create or modify a PoS record with invalid data in one or more fields (e.g., non-numeric value in 'Nr AWP Management IAG').",
          "Expected Result": "COMMA6 contains a PoS record with invalid data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily integration process between COMMA6 and ZENIT.",
          "Expected Result": "The integration process initiates as scheduled."
        },
        {
          "Step": 3,
          "Step Description": "Verify how ZENIT handles the invalid data for the affected PoS.",
          "Expected Result": "ZENIT logs an error or warning for the invalid data and either skips the record or imports available valid data with clear indication of invalid values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop/Backend",
      "Preconditions": "1. COMMA6 system is operational and allows editing of PoS data.\n2. ZENIT system is operational and configured for daily integration.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in COMMA6 with invalid data in one or more fields.",
      "Expected Result": "ZENIT system handles invalid data gracefully, logs appropriate errors or warnings, and maintains data integrity for other fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for invalid data during data acquisition.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT_050_DailyDataAcquisition_ScheduleEnforcement_backend_TEST_Desktop",
      "ID": "TC-168",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Verify the scheduled time for the daily integration process between COMMA6 and ZENIT.",
          "Expected Result": "Scheduled time for daily integration is documented and configured."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled time and monitor the integration process execution.",
          "Expected Result": "Integration process starts automatically at the scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Check ZENIT logs or dashboard to confirm that data import occurred at the correct time.",
          "Expected Result": "Logs or dashboard confirm that data import was executed at the scheduled time."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop/Backend",
      "Preconditions": "1. Scheduled integration time is configured in ZENIT.\n2. Both COMMA6 and ZENIT systems are operational.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (relies on system configuration and logs).",
      "Expected Result": "ZENIT system enforces the daily integration schedule and imports data at the configured time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers schedule enforcement for daily data acquisition.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT_050_DailyDataAcquisition_DataStorageVerification_backend_TEST_Desktop",
      "ID": "TC-169",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "After a successful daily data import, access the ZENIT data storage (database or equivalent).",
          "Expected Result": "Access to ZENIT data storage is established."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all imported AWP data for each PoS is stored with a timestamp or reference date corresponding to the previous evening.",
          "Expected Result": "Each data record is stored with the correct reference date."
        },
        {
          "Step": 3,
          "Step Description": "Check that historical daily data is retained for each PoS (i.e., previous days' data is not overwritten).",
          "Expected Result": "Historical daily data is available and not overwritten by new imports."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop/Backend",
      "Preconditions": "1. At least one successful daily data import has occurred.\n2. Access to ZENIT data storage is available.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Imported AWP data for multiple days for at least one PoS.",
      "Expected Result": "ZENIT system stores daily imported AWP data with correct reference dates and retains historical data for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data storage and historical retention.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_DailyIntegration_AutomatedUpdate_TEST_Desktop",
      "ID": "TC-170",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the integration between ZENIT and NEXT VLT is configured and operational.",
          "Expected Result": "Integration is active and ready for data exchange."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data acquisition process to run (at the expected time, e.g., after midnight).",
          "Expected Result": "The automated process initiates without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT receives a new data snapshot from NEXT VLT for all PoS for the previous day.",
          "Expected Result": "ZENIT contains updated data for all PoS, timestamped with the previous day's date."
        },
        {
          "Step": 4,
          "Step Description": "Check that the data for each PoS includes IdRice, ZonaRice, Nr VLT, and Nr VLT Average (YTD).",
          "Expected Result": "All required fields are present and populated for each PoS."
        },
        {
          "Step": 5,
          "Step Description": "Access the ZENIT Dashboard - Single PoS and the ADI Data Tab for several PoS.",
          "Expected Result": "The dashboard displays the latest daily data for each PoS, matching the snapshot received."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. Integration between ZENIT and NEXT VLT is configured and enabled.\n2. Test PoS data is available in NEXT VLT.\n3. Scheduled daily job is set up in ZENIT for data acquisition.\n4. Tester has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data in NEXT VLT with known values for IdRice, ZonaRice, Nr VLT, Nr VLT Average (YTD).",
      "Expected Result": "ZENIT system automatically acquires and displays the previous day's VLT data for all PoS, with all required fields present and correct in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_DataFieldValidation_DashboardDisplay_TEST_Desktop",
      "ID": "TC-171",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for a specific PoS after the daily data acquisition.",
          "Expected Result": "Dashboard loads and displays data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the ADI Data Tab for the same PoS.",
          "Expected Result": "ADI Data Tab is accessible and displays detailed data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fields IdRice, ZonaRice, Nr VLT, and Nr VLT Average (YTD) are displayed and match the expected values from the previous day's snapshot.",
          "Expected Result": "All required fields are present and values are accurate as per the latest data acquisition."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. Daily data acquisition process has completed successfully.\n2. Tester has access to ZENIT Dashboard and ADI Data Tab.\n3. Known expected values for the selected PoS are available for comparison.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known PoS with expected values for IdRice, ZonaRice, Nr VLT, Nr VLT Average (YTD).",
      "Expected Result": "Dashboard and ADI Data Tab display all required fields with correct values for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_MissingDataHandling_ErrorScenario_TEST_Desktop",
      "ID": "TC-172",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where NEXT VLT does not provide data for one or more PoS during the daily acquisition.",
          "Expected Result": "ZENIT attempts to acquire data and detects missing PoS data."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for a PoS with missing data.",
          "Expected Result": "Dashboard indicates missing or unavailable data for the affected PoS (e.g., with an error message or placeholder)."
        },
        {
          "Step": 3,
          "Step Description": "Check system logs or error notifications for records of the missing data event.",
          "Expected Result": "System logs or notifications clearly record the missing data incident for traceability."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. Integration between ZENIT and NEXT VLT is active.\n2. At least one PoS is configured in NEXT VLT to not provide data for the daily snapshot.\n3. Tester has access to ZENIT Dashboard and system logs.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with intentionally missing data in NEXT VLT for the test date.",
      "Expected Result": "ZENIT system gracefully handles missing PoS data, informs the user via the dashboard, and logs the incident for review.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for missing data.",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_FieldBoundaryValidation_NrVLTAverage_TEST_Desktop",
      "ID": "TC-173",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In NEXT VLT, set up PoS data with boundary values for Nr VLT Average (e.g., 0, maximum allowed, negative, and non-integer values).",
          "Expected Result": "NEXT VLT contains PoS records with boundary and invalid values for Nr VLT Average."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the daily data acquisition process in ZENIT.",
          "Expected Result": "ZENIT receives and processes the data from NEXT VLT."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS and ADI Data Tab for the affected PoS.",
          "Expected Result": "Dashboard displays the Nr VLT Average values as received or flags invalid data appropriately."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. Integration between ZENIT and NEXT VLT is active.\n2. PoS data with boundary and invalid values for Nr VLT Average is prepared in NEXT VLT.\n3. Tester has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Field Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records in NEXT VLT with Nr VLT Average values: 0, maximum allowed, negative, non-integer.",
      "Expected Result": "ZENIT correctly displays valid boundary values and handles invalid values for Nr VLT Average according to system requirements (e.g., error message, data rejection, or correction).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Boundary and invalid value handling for Nr VLT Average field.",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_AutomationOfDailyUpdate_Scheduling_TEST_Desktop",
      "ID": "TC-174",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Verify the configuration of the daily scheduling job for data acquisition in ZENIT.",
          "Expected Result": "Scheduling job is configured to run once every 24 hours."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled time and observe the execution of the job.",
          "Expected Result": "Job executes automatically at the scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Check system logs to confirm the job ran and completed successfully.",
          "Expected Result": "Logs show successful execution and completion of the daily data acquisition job."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational.\n2. Daily scheduling job is configured.\n3. Tester has access to system logs.",
      "Execution Mode": "Manual",
      "Functionality": "Scheduling & Automation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (relies on system configuration and logs).",
      "Expected Result": "ZENIT's daily data acquisition job is scheduled and runs automatically every 24 hours, as confirmed by logs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers scheduling and automation aspect of daily update.",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-070_DailyAutomatedIntegration_Backend_TEST_Desktop",
      "ID": "TC-175",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the GESTORETE system has up-to-date data for all PoS as of the previous evening.",
          "Expected Result": "GESTORETE contains the latest data for all PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily integration process between ZENIT and GESTORETE.",
          "Expected Result": "The integration process initiates automatically at the scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data transfer from GESTORETE to ZENIT for all PoS records.",
          "Expected Result": "Data for all PoS is transferred from GESTORETE to ZENIT without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are received for each PoS: ZonaRice, Nr AWP other dealer, NOIAG Credits, NOIAG Hopper, Keys AWP Drawer, Keys AWP Counter, Keys AWP Change Coins.",
          "Expected Result": "All required fields are present and populated for each PoS in ZENIT."
        },
        {
          "Step": 5,
          "Step Description": "Check that the data snapshot in ZENIT reflects the previous evening's state from GESTORETE.",
          "Expected Result": "ZENIT displays a daily snapshot matching the previous evening's data from GESTORETE."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. GESTORETE system is operational and contains up-to-date PoS data as of the previous evening.\n2. ZENIT system is operational and configured for integration with GESTORETE.\n3. Scheduled daily integration job is configured and enabled.",
      "Execution Mode": "Automated",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "automation",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data in GESTORETE with all required fields populated for at least 3 PoS.",
      "Expected Result": "ZENIT system automatically acquires and stores a daily snapshot of all required PoS data fields from GESTORETE, reflecting the previous evening's state.",
      "Country": "italy",
      "Type": "test",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-070_DashboardSinglePoSDataDisplay_Backend_TEST_Desktop",
      "ID": "TC-176",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ZENIT has successfully acquired the latest daily data from GESTORETE for all PoS.",
          "Expected Result": "ZENIT contains the most recent daily snapshot for each PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Single PoS' view for a specific PoS.",
          "Expected Result": "The 'Single PoS' dashboard loads for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are displayed: ZonaRice, Nr AWP other dealer, NOIAG Credits, NOIAG Hopper, Keys AWP Drawer, Keys AWP Counter, Keys AWP Change Coins.",
          "Expected Result": "All required fields are visible and populated with the correct values for the selected PoS."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. ZENIT system has completed the daily data acquisition from GESTORETE.\n2. Tester has access to the ZENIT Dashboard with permissions to view PoS data.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with known data values in ZENIT.",
      "Expected Result": "The ZENIT Dashboard - Single PoS view displays all required fields with accurate, up-to-date values for the selected PoS.",
      "Country": "italy",
      "Type": "test",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-070_DashboardADIDataTabDisplay_Backend_TEST_Desktop",
      "ID": "TC-177",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ZENIT has the latest daily snapshot data for all PoS from GESTORETE.",
          "Expected Result": "ZENIT contains the most recent daily snapshot for each PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard and navigate to the 'Single PoS' view for a specific PoS.",
          "Expected Result": "The 'Single PoS' dashboard loads for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'ADI Data' tab within the Single PoS dashboard.",
          "Expected Result": "The 'ADI Data' tab is displayed for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all required fields (ZonaRice, Nr AWP other dealer, NOIAG Credits, NOIAG Hopper, Keys AWP Drawer, Keys AWP Counter, Keys AWP Change Coins) are present and correctly populated.",
          "Expected Result": "All required fields are visible and display the correct values as per the latest daily snapshot."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. ZENIT system has completed the daily data acquisition from GESTORETE.\n2. Tester has access to the ZENIT Dashboard and the ADI Data tab for PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with known data values in ZENIT, including ADI Data tab fields.",
      "Expected Result": "The ZENIT Dashboard - Single PoS -- ADI Data Tab displays all required fields with accurate, up-to-date values for the selected PoS.",
      "Country": "italy",
      "Type": "test",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-070_MissingFieldErrorHandling_Backend_TEST_Desktop",
      "ID": "TC-178",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure GESTORETE to omit one or more required fields (e.g., NOIAG Credits) for a specific PoS in the daily data snapshot.",
          "Expected Result": "GESTORETE contains incomplete data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily integration process between ZENIT and GESTORETE.",
          "Expected Result": "The integration process initiates and attempts to transfer data."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the integration logs and ZENIT system for error handling related to missing fields.",
          "Expected Result": "ZENIT detects the missing field(s) and logs an appropriate error or warning message."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the incomplete PoS record is handled according to system requirements (e.g., flagged, not imported, or imported with null/default values).",
          "Expected Result": "ZENIT handles the incomplete record as specified, and the error is traceable in system logs."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. GESTORETE system is operational and can be configured to omit required fields for test purposes.\n2. ZENIT system is operational and configured for integration with GESTORETE.\n3. Scheduled daily integration job is configured and enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in GESTORETE missing at least one required field (e.g., NOIAG Credits).",
      "Expected Result": "ZENIT detects and logs missing required fields during daily data acquisition and handles incomplete records according to system requirements.",
      "Country": "italy",
      "Type": "test",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-070_InvalidFieldValueHandling_Backend_TEST_Desktop",
      "ID": "TC-179",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure GESTORETE to provide an invalid value for a field (e.g., Keys AWP Drawer = 'INVALID_VALUE') for a specific PoS.",
          "Expected Result": "GESTORETE contains a PoS record with an invalid field value."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily integration process between ZENIT and GESTORETE.",
          "Expected Result": "The integration process initiates and attempts to transfer data."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the integration logs and ZENIT system for error handling related to invalid field values.",
          "Expected Result": "ZENIT detects the invalid value and logs an appropriate error or warning message."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the PoS record with the invalid value is handled according to system requirements (e.g., flagged, not imported, or imported with null/default values).",
          "Expected Result": "ZENIT handles the invalid record as specified, and the error is traceable in system logs."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. GESTORETE system is operational and can be configured to provide invalid field values for test purposes.\n2. ZENIT system is operational and configured for integration with GESTORETE.\n3. Scheduled daily integration job is configured and enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in GESTORETE with at least one field set to an invalid value (e.g., Keys AWP Drawer = 'INVALID_VALUE').",
      "Expected Result": "ZENIT detects and logs invalid field values during daily data acquisition and handles such records according to system requirements.",
      "Country": "italy",
      "Type": "test",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-070_DailyAcquisitionFrequencyValidation_Backend_TEST_Desktop",
      "ID": "TC-180",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the GESTORETE system updates PoS data at least once per day.",
          "Expected Result": "GESTORETE contains new data for PoS each day."
        },
        {
          "Step": 2,
          "Step Description": "Allow the ZENIT system to run the daily integration process for three consecutive days.",
          "Expected Result": "ZENIT performs daily data acquisition for three days."
        },
        {
          "Step": 3,
          "Step Description": "For each day, verify that ZENIT stores a new daily snapshot for each PoS, reflecting the previous evening's data.",
          "Expected Result": "ZENIT contains three distinct daily snapshots for each PoS, each corresponding to the correct date."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. GESTORETE system is operational and updates PoS data daily.\n2. ZENIT system is operational and configured for daily integration.\n3. Scheduled daily integration job is configured and enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS data in GESTORETE updated daily for at least three consecutive days.",
      "Expected Result": "ZENIT system acquires and stores a new daily snapshot for each PoS every day, with each snapshot reflecting the previous evening's data.",
      "Country": "italy",
      "Type": "test",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_Retrieve_CGS_and_ActivityStatus_TEST_Desktop",
      "ID": "TC-181",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the Zenit system is connected to the Cerved system and the daily scheduled import flow is enabled.",
          "Expected Result": "Zenit system is ready to retrieve data from Cerved."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the daily data acquisition flow (manually or wait for scheduled execution).",
          "Expected Result": "Data acquisition process starts."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each active PoS, the system retrieves the CGS (Cerved Group Score) and Activity Status from Cerved.",
          "Expected Result": "CGS and Activity Status are retrieved for each active PoS."
        },
        {
          "Step": 4,
          "Step Description": "Check that the retrieved data is stored in the Zenit system database.",
          "Expected Result": "Data is correctly stored and associated with the respective PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and connected to Cerved.\n2. There are active PoS in the system (issued invoices in last 12 months).\n3. Cerved system is available and contains up-to-date PoS data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "List of active PoS with known CGS and Activity Status in Cerved.",
      "Expected Result": "Zenit system successfully retrieves and stores CGS and Activity Status for each active PoS from Cerved.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_Log_And_Track_Cerved_Updates_TEST_Desktop",
      "ID": "TC-182",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the daily data acquisition flow for Cerved data.",
          "Expected Result": "Data acquisition process starts."
        },
        {
          "Step": 2,
          "Step Description": "Introduce a change in Cerved data for a specific PoS (e.g., update CGS or Activity Status).",
          "Expected Result": "Change is present in Cerved system."
        },
        {
          "Step": 3,
          "Step Description": "Run the data acquisition flow again.",
          "Expected Result": "Zenit system detects the change."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the update is logged and tracked in the Zenit system (e.g., audit log, change history).",
          "Expected Result": "Update is logged with timestamp, PoS identifier, old and new values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and connected to Cerved.\n2. Logging and tracking mechanisms are enabled.\n3. At least one PoS exists in both systems.",
      "Execution Mode": "Manual",
      "Functionality": "Data Logging & Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with modifiable CGS and Activity Status in Cerved.",
      "Expected Result": "All updates to Cerved data are logged and tracked in Zenit with relevant details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_Automatic_Daily_Scheduling_TEST_Desktop",
      "ID": "TC-183",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure the Zenit system to schedule the Cerved data acquisition flow to run daily.",
          "Expected Result": "Scheduling is set for daily execution."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled time or simulate the scheduled trigger.",
          "Expected Result": "Scheduled trigger occurs."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the data acquisition flow runs automatically without manual intervention.",
          "Expected Result": "Data acquisition flow executes as scheduled."
        },
        {
          "Step": 4,
          "Step Description": "Check that data is retrieved and processed as per requirements.",
          "Expected Result": "Data is acquired and processed for all active PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and connected to Cerved.\n2. Scheduling module is enabled and configured.",
      "Execution Mode": "Manual",
      "Functionality": "Scheduling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Active PoS data in Cerved.",
      "Expected Result": "Zenit system automatically runs the Cerved data acquisition flow daily as scheduled.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_New_PoS_InspectionPhase_Monitoring_TEST_Desktop",
      "ID": "TC-184",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate the inspection phase for a new PoS in Zenit.",
          "Expected Result": "Inspection phase is started for the new PoS."
        },
        {
          "Step": 2,
          "Step Description": "Request a Cerved report for the new PoS from Zenit.",
          "Expected Result": "Cerved report request is sent."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the new PoS is now monitored in Cerved and data is available in Zenit.",
          "Expected Result": "New PoS appears in Cerved monitoring and data is retrievable in Zenit."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and connected to Cerved.\n2. New PoS is created and ready for inspection phase.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Monitoring",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "New PoS details for inspection phase.",
      "Expected Result": "New PoS is monitored in Cerved from the inspection phase and data is available in Zenit.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_CGS_RiskCluster_Mapping_TEST_Desktop",
      "ID": "TC-185",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Retrieve CGS values for a set of PoS from Cerved via Zenit.",
          "Expected Result": "CGS values are retrieved for each PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that each CGS value is mapped to the correct Risk Cluster as per the provided matrix.",
          "Expected Result": "Each PoS is assigned the correct Risk Cluster based on its CGS value."
        },
        {
          "Step": 3,
          "Step Description": "Check that the Risk Cluster information is displayed in the Zenit Dashboard for each PoS.",
          "Expected Result": "Risk Cluster is visible and accurate in the Dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and connected to Cerved.\n2. CGS to Risk Cluster mapping matrix is configured in Zenit.",
      "Execution Mode": "Manual",
      "Functionality": "Risk Assessment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with CGS values covering all risk clusters (n.a.-100).",
      "Expected Result": "CGS values are correctly mapped to Risk Clusters and displayed in the Dashboard for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_Dashboard_Display_CervedData_TEST_Desktop",
      "ID": "TC-186",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Zenit Dashboard for a specific PoS.",
          "Expected Result": "Dashboard for the selected PoS is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Risk Data Tab for the PoS.",
          "Expected Result": "Risk Data Tab is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the CGS, Activity Status, and Risk Cluster are displayed correctly for the PoS.",
          "Expected Result": "All Cerved data is visible and accurate for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and has imported Cerved data for the PoS.\n2. User has access to the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Display",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known Cerved data (CGS, Activity Status, Risk Cluster).",
      "Expected Result": "Cerved data (CGS, Activity Status, Risk Cluster) is correctly displayed in the Dashboard for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_ErrorHandling_CervedUnavailable_TEST_Desktop",
      "ID": "TC-187",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Cerved system unavailability during the scheduled data acquisition flow.",
          "Expected Result": "Zenit system attempts to connect to Cerved and fails."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the Zenit system logs the failure and notifies the appropriate stakeholders (e.g., via alert or error message).",
          "Expected Result": "Failure is logged and notification is sent."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system retries the acquisition as per retry policy (if applicable).",
          "Expected Result": "System retries according to the configured policy."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational.\n2. Cerved system is temporarily unavailable.\n3. Retry and notification mechanisms are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (simulate Cerved downtime).",
      "Expected Result": "Zenit system logs and notifies failures to connect to Cerved and retries as configured.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_WeeklyDataExtraction_Valorizzatore_TEST_Desktop",
      "ID": "TC-188",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that the accounting period has ended and data in Valorizzatore is validated.",
          "Expected Result": "Valorizzatore data is marked as validated and ready for extraction."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition process for the completed accounting period.",
          "Expected Result": "Zenit system initiates data extraction from Valorizzatore."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are extracted for each Borderò: idRice, ZonaRice, Borderò number, Accounting period (from - to), Total amount of Borderò.",
          "Expected Result": "All required fields are extracted and stored in Zenit system database."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows, Zenit Backend",
      "Preconditions": "1. Accounting period has ended.\n2. Data in Valorizzatore is validated.\n3. Zenit system is operational and connected to Valorizzatore.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample validated Borderò data in Valorizzatore for a completed accounting period.",
      "Expected Result": "Zenit system successfully acquires and stores all required Borderò data fields for the specified accounting period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_BiWeeklyDataExtraction_Valorizzatore_TEST_Desktop",
      "ID": "TC-189",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that a bi-weekly accounting period has ended and data in Valorizzatore is validated.",
          "Expected Result": "Valorizzatore data is marked as validated for the bi-weekly period."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition process for the bi-weekly period.",
          "Expected Result": "Zenit system initiates data extraction for the bi-weekly period."
        },
        {
          "Step": 3,
          "Step Description": "Verify extraction of idRice, ZonaRice, Borderò number, Accounting period (from - to), and Total amount of Borderò for each record.",
          "Expected Result": "All required fields are extracted and stored for the bi-weekly period."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, Zenit Backend",
      "Preconditions": "1. Bi-weekly accounting period has ended.\n2. Data in Valorizzatore is validated.\n3. Zenit system is operational and connected to Valorizzatore.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample validated Borderò data in Valorizzatore for a bi-weekly period.",
      "Expected Result": "Zenit system successfully acquires and stores all required Borderò data fields for the bi-weekly accounting period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_MissingFieldHandling_Valorizzatore_TEST_Desktop",
      "ID": "TC-190",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a validated Borderò record in Valorizzatore with one or more required fields missing (e.g., missing idRice).",
          "Expected Result": "Borderò record with missing field is present in Valorizzatore."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition process.",
          "Expected Result": "Zenit system attempts to extract data from Valorizzatore."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the system handles the missing field (e.g., logs error, skips record, or flags for review).",
          "Expected Result": "System logs the error or flags the incomplete record according to requirements, and does not corrupt the data acquisition process."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows, Zenit Backend",
      "Preconditions": "1. At least one Borderò record in Valorizzatore is validated but missing a required field.\n2. Zenit system is operational and connected to Valorizzatore.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Validated Borderò record with missing required field(s).",
      "Expected Result": "Zenit system handles missing fields gracefully, logs the issue, and maintains data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_DashboardDataDisplay_SinglePoS_TEST_Desktop",
      "ID": "TC-191",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that Borderò data has been acquired and stored by Zenit for a specific PoS.",
          "Expected Result": "Borderò data is present in Zenit for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS view in the Zenit application.",
          "Expected Result": "Dashboard - Single PoS view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Borderò' Data Tab within the Single PoS dashboard.",
          "Expected Result": "'Borderò' Data Tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the extracted fields (idRice, ZonaRice, Borderò number, Accounting period, Total amount) are correctly displayed for the selected PoS.",
          "Expected Result": "All required Borderò data fields are visible and accurate for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows, Zenit Web Dashboard",
      "Preconditions": "1. Borderò data for at least one PoS has been acquired and stored in Zenit.\n2. User has access to the Zenit Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Borderò data for a specific PoS in Zenit system.",
      "Expected Result": "All required Borderò data fields are displayed accurately in the Dashboard - Single PoS 'Borderò' Data Tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_AverageCalculation_12MonthsAndYTD_TEST_Desktop",
      "ID": "TC-192",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that Borderò data for at least 12 months and the current year is present in Zenit for a specific PoS.",
          "Expected Result": "Sufficient historical Borderò data is available in Zenit."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS 'Borderò' Data Tab.",
          "Expected Result": "'Borderò' Data Tab is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the average Borderò over the last 12 months and the average for the current year YTD are calculated and displayed.",
          "Expected Result": "Both averages are calculated correctly and displayed in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, Zenit Web Dashboard",
      "Preconditions": "1. Borderò data for at least 12 months and current year is present for a PoS in Zenit.\n2. User has access to the Zenit Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Historical Borderò data for at least 12 months for a PoS.",
      "Expected Result": "Average Borderò values for the last 12 months and current year YTD are correctly calculated and displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_InvalidDataFormatHandling_Valorizzatore_TEST_Desktop",
      "ID": "TC-193",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a validated Borderò record in Valorizzatore with an invalid data format (e.g., non-numeric Borderò number or malformed accounting period dates).",
          "Expected Result": "Borderò record with invalid data format is present in Valorizzatore."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition process.",
          "Expected Result": "Zenit system attempts to extract data from Valorizzatore."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the system handles the invalid data format (e.g., logs error, skips record, or flags for review).",
          "Expected Result": "System logs the error or flags the invalid record according to requirements, and does not corrupt the data acquisition process."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, Zenit Backend",
      "Preconditions": "1. At least one Borderò record in Valorizzatore is validated but contains an invalid data format.\n2. Zenit system is operational and connected to Valorizzatore.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Validated Borderò record with invalid data format.",
      "Expected Result": "Zenit system handles invalid data formats gracefully, logs the issue, and maintains data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_AutomaticUnpaidDetectionAndAcquisition_TEST_Backend",
      "ID": "TC-194",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate the creation of a new unpaid payment in SAP for a specific PoS (e.g., IdRice = 12345).",
          "Expected Result": "A new unpaid payment is registered in SAP for PoS 12345."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the automatic acquisition mechanism to trigger in the Zenit system.",
          "Expected Result": "Zenit system detects the new unpaid payment event."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Zenit system retrieves the following data from SAP: IdRice, Unpaid Date, Unpaid Identifier.",
          "Expected Result": "Zenit system obtains and logs IdRice, Unpaid Date, and Unpaid Identifier for the new unpaid payment."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Backend (SAP + Zenit)",
      "Preconditions": "1. SAP system is operational and integrated with Zenit.\n2. Zenit system is running and configured to receive SAP events.\n3. Test PoS (e.g., IdRice = 12345) exists in both SAP and Zenit.",
      "Execution Mode": "Manual",
      "Functionality": "Unpaids Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS (IdRice = 12345), test unpaid payment data (Unpaid Date, Unpaid Identifier).",
      "Expected Result": "Zenit system automatically acquires and logs new unpaid payment data (IdRice, Unpaid Date, Unpaid Identifier) from SAP for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_AggregatedUnpaidDataCalculation_TEST_Desktop",
      "ID": "TC-195",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure multiple unpaid payments exist in SAP for a specific PoS, with various Unpaid Dates covering the current year, last 6 months, and last 12 months.",
          "Expected Result": "SAP contains unpaid payment records for the PoS with appropriate dates."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the acquisition mechanism or wait for it to run automatically.",
          "Expected Result": "Zenit system acquires all unpaid payment data for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the Zenit Dashboard for the specific PoS.",
          "Expected Result": "Dashboard for the PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Unpaids' Tab and observe the aggregated data.",
          "Expected Result": "Dashboard displays the total number of unpaid cases for the current year, last 6 months, and last 12 months."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Web (Zenit Dashboard)",
      "Preconditions": "1. SAP and Zenit systems are operational and integrated.\n2. Test PoS exists in both systems.\n3. Unpaid payments with various dates are present in SAP for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS (IdRice), unpaid payments with Unpaid Dates spanning current year, last 6 months, and last 12 months.",
      "Expected Result": "Dashboard correctly displays the aggregated number of unpaid cases for the current year, last 6 months, and last 12 months for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_UnpaidDataDisplayOnRiskDataTab_TEST_Desktop",
      "ID": "TC-196",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure unpaid payment data for a PoS has been acquired by Zenit from SAP.",
          "Expected Result": "Zenit system contains up-to-date unpaid payment data for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Access the Zenit Dashboard for the specific PoS.",
          "Expected Result": "Dashboard for the PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Risk Data' Tab.",
          "Expected Result": "'Risk Data' Tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'Risk Data' Tab displays the correct aggregated unpaid data (current year, last 6 months, last 12 months).",
          "Expected Result": "'Risk Data' Tab shows accurate aggregated unpaid data for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Web (Zenit Dashboard)",
      "Preconditions": "1. SAP and Zenit systems are operational and integrated.\n2. Test PoS exists in both systems.\n3. Unpaid payment data has been acquired by Zenit for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS (IdRice), acquired unpaid payment data.",
      "Expected Result": "'Risk Data' Tab displays the correct aggregated unpaid data for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_ErrorHandlingForMissingUnpaidData_TEST_Backend",
      "ID": "TC-197",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where SAP fails to send unpaid payment data for a new unpaid event (e.g., network failure or missing data fields).",
          "Expected Result": "Zenit system does not receive complete unpaid payment data from SAP."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the Zenit system's error handling and logging mechanisms.",
          "Expected Result": "Zenit system logs an error or warning indicating missing or incomplete unpaid payment data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that no incorrect or partial data is displayed on the Dashboard for the affected PoS.",
          "Expected Result": "Dashboard does not display incomplete or erroneous unpaid data for the PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Backend (SAP + Zenit)",
      "Preconditions": "1. SAP and Zenit systems are operational and integrated.\n2. Mechanism exists to simulate SAP data transmission failure or missing fields.\n3. Test PoS exists in both systems.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS (IdRice), simulated SAP data transmission failure or missing fields.",
      "Expected Result": "Zenit system logs the error and prevents incomplete unpaid data from being displayed on the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_RollingPeriodAggregationBoundary_TEST_Desktop",
      "ID": "TC-198",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert unpaid payments in SAP for a PoS with Unpaid Dates exactly on the boundary of the current year, 6 months, and 12 months from today.",
          "Expected Result": "SAP contains unpaid payment records with boundary dates for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the acquisition mechanism or wait for it to run automatically.",
          "Expected Result": "Zenit system acquires all unpaid payment data for the PoS, including boundary cases."
        },
        {
          "Step": 3,
          "Step Description": "Access the Zenit Dashboard for the specific PoS.",
          "Expected Result": "Dashboard for the PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Unpaids' Tab and verify the aggregated data includes boundary cases correctly.",
          "Expected Result": "Dashboard aggregation correctly includes or excludes unpaid cases based on the exact boundary dates for current year, last 6 months, and last 12 months."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Web (Zenit Dashboard)",
      "Preconditions": "1. SAP and Zenit systems are operational and integrated.\n2. Test PoS exists in both systems.\n3. Unpaid payments with boundary Unpaid Dates are present in SAP for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Aggregation Logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS (IdRice), unpaid payments with Unpaid Dates on boundary of current year, 6 months, and 12 months.",
      "Expected Result": "Dashboard aggregation logic correctly handles boundary dates for rolling periods.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcq_proj101_AutomaticGuaranteeUpdate_SAP_TEST_Desktop",
      "ID": "TC-199",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a change in the guarantee status for a specific POS in SAP (e.g., update the balance or type).",
          "Expected Result": "A change event is registered in SAP for the selected POS."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system to automatically acquire updated guarantee data from SAP.",
          "Expected Result": "The system initiates the data acquisition process without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected POS.",
          "Expected Result": "Dashboard loads and displays the POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab within the Single PoS Dashboard.",
          "Expected Result": "The 'Guarantees' tab displays updated guarantee information."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the following fields are updated and accurate: IdRice, Type of Guarantee, Total Balance Amount, Guarantee Start Date (if Bank guarantee), Guarantee Expiration Date (if Bank guarantee).",
          "Expected Result": "All guarantee fields reflect the latest data from SAP corresponding to the triggered change."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. POS exists in SAP with at least one guarantee record. 2. User has access to the Dashboard application. 3. SAP and Dashboard systems are integrated and operational. 4. Guarantee status change is possible for the POS in SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS with guarantee records; SAP credentials; Dashboard access credentials.",
      "Expected Result": "Guarantee data for the POS is automatically updated and accurately displayed in the Dashboard after a change in SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcq_proj101_BankGuaranteeFieldsValidation_SAP_TEST_Desktop",
      "ID": "TC-200",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In SAP, assign a new Bank guarantee to a POS, specifying start and expiration dates.",
          "Expected Result": "Bank guarantee with valid dates is created for the POS in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system to acquire the updated guarantee data from SAP.",
          "Expected Result": "System processes the new Bank guarantee data."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected POS.",
          "Expected Result": "Dashboard loads POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab.",
          "Expected Result": "Guarantees tab displays the Bank guarantee entry."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the Guarantee Start Date and Expiration Date fields are present and correctly populated for the Bank guarantee type.",
          "Expected Result": "Start and Expiration Dates are displayed and match the SAP data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. POS exists in SAP. 2. User has access to Dashboard. 3. SAP and Dashboard integration is functional.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with new Bank guarantee record including start and expiration dates.",
      "Expected Result": "Bank guarantee fields (Start Date, Expiration Date) are correctly displayed in the Dashboard for the POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcq_proj101_NonBankGuaranteeFieldsValidation_SAP_TEST_Desktop",
      "ID": "TC-201",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In SAP, assign a new Plan Provision or Deposit guarantee to a POS (not a Bank guarantee).",
          "Expected Result": "Non-Bank guarantee is created for the POS in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system to acquire the updated guarantee data from SAP.",
          "Expected Result": "System processes the new guarantee data."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected POS.",
          "Expected Result": "Dashboard loads POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab.",
          "Expected Result": "Guarantees tab displays the new guarantee entry."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the Guarantee Start Date and Expiration Date fields are not displayed for non-Bank guarantee types.",
          "Expected Result": "Start and Expiration Dates are absent for Plan Provisions and Deposits."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. POS exists in SAP. 2. User has access to Dashboard. 3. SAP and Dashboard integration is functional.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with Plan Provision or Deposit guarantee record.",
      "Expected Result": "Start and Expiration Dates are not shown for non-Bank guarantee types in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcq_proj101_GuaranteeDataAccuracy_SAP_TEST_Desktop",
      "ID": "TC-202",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In SAP, update the Total Balance Amount for a guarantee type (e.g., increase or decrease the amount) for a POS.",
          "Expected Result": "Total Balance Amount is updated in SAP for the selected guarantee type."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system to acquire the updated guarantee data from SAP.",
          "Expected Result": "System processes the updated balance data."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected POS.",
          "Expected Result": "Dashboard loads POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab.",
          "Expected Result": "Guarantees tab displays the updated guarantee entry."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the Total Balance Amount displayed matches the updated value in SAP.",
          "Expected Result": "Total Balance Amount in the Dashboard matches the SAP value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. POS exists in SAP. 2. User has access to Dashboard. 3. SAP and Dashboard integration is functional.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with guarantee record; updated balance value in SAP.",
      "Expected Result": "Total Balance Amount in the Dashboard is accurate and reflects SAP data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcq_proj101_NoGuaranteeChange_NoUpdate_SAP_TEST_Desktop",
      "ID": "TC-203",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no changes are made to guarantee data for a POS in SAP.",
          "Expected Result": "Guarantee data remains unchanged in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system's scheduled data acquisition interval to pass.",
          "Expected Result": "System performs its regular check for updates."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the POS.",
          "Expected Result": "Dashboard loads POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab.",
          "Expected Result": "Guarantees tab displays guarantee data."
        },
        {
          "Step": 5,
          "Step Description": "Verify that no updates or changes are reflected in the guarantee data on the Dashboard.",
          "Expected Result": "Guarantee data remains unchanged in the Dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. POS exists in SAP. 2. User has access to Dashboard. 3. SAP and Dashboard integration is functional. 4. No changes made to guarantee data in SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with stable guarantee data in SAP.",
      "Expected Result": "No updates are made to the Dashboard guarantee data when there are no changes in SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_AutomaticDataAcquisition_SAP_TEST_Backend",
      "ID": "TC-204",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the 'Status Collection' for a specific POS in SAP (e.g., update an open item status).",
          "Expected Result": "The system detects the change in 'Status Collection' for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered by the change.",
          "Expected Result": "The data acquisition process is initiated automatically."
        },
        {
          "Step": 3,
          "Step Description": "Check that the updated 'Status Collection' information, including IdRice and the most serious block flag, is sent from SAP to the system.",
          "Expected Result": "The correct IdRice and the most serious 'Blocco al Sollecito' flag are transmitted."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "SAP Backend",
      "Preconditions": "1. The system is connected to SAP and configured for automatic data acquisition.\n2. At least one POS exists in the system with an open item.\n3. The tester has access to modify 'Status Collection' in SAP for the POS.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with open item in SAP; valid IdRice; block status hierarchy defined.",
      "Expected Result": "The system automatically acquires and updates 'Status Collection' data for the POS upon any status change, sending only the most serious block.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_BlockSeverityHierarchy_SAP_TEST_Backend",
      "ID": "TC-205",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set multiple block statuses (e.g., legal, warning, re-entry plan) for a single POS in SAP, ensuring more than one block applies.",
          "Expected Result": "Multiple block statuses are present for the POS in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a change in the status of an open item for the POS.",
          "Expected Result": "The system detects the change and prepares to send updated data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only the most serious block (according to the hierarchy: legal > warning > re-entry plan) is sent for the POS, ignoring company distinctions.",
          "Expected Result": "Only the most severe block status is included in the data sent for the POS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "SAP Backend",
      "Preconditions": "1. The system is integrated with SAP and block severity hierarchy is configured.\n2. The POS has multiple block statuses assigned in SAP.\n3. Tester can trigger open item status changes.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with multiple block statuses in SAP; block severity hierarchy defined.",
      "Expected Result": "The system sends only the most serious block status for the POS, as per the defined hierarchy, upon status change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_DashboardDisplay_SinglePOS_SAP_TEST_Desktop",
      "ID": "TC-206",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a POS has a recent change in 'Status Collection' status in SAP.",
          "Expected Result": "The POS has updated 'Status Collection' data available."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS view from the application frontend.",
          "Expected Result": "Dashboard - Single PoS view is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate and review the 'Status Collection' information for the POS on the dashboard.",
          "Expected Result": "The dashboard displays the latest 'Status Collection' data, including IdRice and the most serious block flag."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web Dashboard",
      "Preconditions": "1. The system has received updated 'Status Collection' data for the POS from SAP.\n2. The tester has access to the Dashboard - Single PoS view.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with updated 'Status Collection' data; valid dashboard access credentials.",
      "Expected Result": "The Dashboard - Single PoS view displays the most recent 'Status Collection' data for the POS, reflecting the latest update from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_NoBlockStatus_SAP_TEST_Backend",
      "ID": "TC-207",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a POS in SAP has no block status set (i.e., no 'Blocco al Sollecito' flag).",
          "Expected Result": "The POS has no block status in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a change in the status of an open item for the POS.",
          "Expected Result": "The system detects the change and prepares to send updated data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the data sent for the POS does not include any block status flag.",
          "Expected Result": "No block status flag is included in the data sent for the POS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "SAP Backend",
      "Preconditions": "1. The system is integrated with SAP.\n2. The POS has no block status in SAP.\n3. Tester can trigger open item status changes.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with no block status in SAP.",
      "Expected Result": "The system does not send any block status flag for the POS when none is set in SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_DataUpdateOnOpenItemChange_SAP_TEST_Backend",
      "ID": "TC-208",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a POS with an open item in SAP.",
          "Expected Result": "A POS with an open item is available in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Change the status of the open item (e.g., from unpaid to paid or vice versa).",
          "Expected Result": "The open item status is updated in SAP."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system updates the 'Status Collection' data for the POS immediately after the open item status change.",
          "Expected Result": "The system sends updated 'Status Collection' data for the POS as soon as the open item status changes."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "SAP Backend",
      "Preconditions": "1. The system is connected to SAP.\n2. At least one POS with an open item exists.\n3. Tester can modify open item statuses in SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with open item in SAP; ability to change open item status.",
      "Expected Result": "The system updates and sends 'Status Collection' data for the POS immediately after any open item status change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataAcquisition_AutomaticUpdate_SAP_TEST_Backend",
      "ID": "TC-209",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the status of 'Open Credits' for a specific PoS in SAP.",
          "Expected Result": "The system detects the change in 'Open Credits' status."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered.",
          "Expected Result": "The data acquisition process starts automatically without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Check the data sent from SAP to the system for the affected PoS.",
          "Expected Result": "The following information is sent: IdRice (PoS Identifier), total balance amount, and balances of open items for all three companies."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Backend (SAP Integration)",
      "Preconditions": "1. The system is connected to SAP and operational.\n2. At least one PoS exists in the system.\n3. The PoS has open credits in SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits in SAP; SAP credentials; test PoS IdRice.",
      "Expected Result": "Upon any change in 'Open Credits' status for a PoS, the system automatically acquires and transmits the required data fields from SAP.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataTransmission_ThreeCompanies_SAP_TEST_Backend",
      "ID": "TC-210",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a change in open credits for a PoS that has open items in all three companies within SAP.",
          "Expected Result": "The system detects the change in open credits status."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data transmission from SAP to the system.",
          "Expected Result": "The balances of open items for all three companies are transmitted together, without distinction between companies."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Backend (SAP Integration)",
      "Preconditions": "1. The system is connected to SAP.\n2. The PoS has open credits in all three companies in SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits in three companies; SAP credentials.",
      "Expected Result": "The system transmits the balances of open items for all three companies in a single, undistinguished data set upon status change.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_IAGCreditsHandling_SAP_TEST_Backend",
      "ID": "TC-211",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate an IAG event for a PoS, resulting in IAG credits that remain open for a few hours after the event.",
          "Expected Result": "The system detects the presence of open IAG credits post-event."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system continues to acquire and transmit updated open credits data for the PoS during the period when IAG credits are open.",
          "Expected Result": "The system transmits updated open credits data, including IAG credits, until they are closed."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Backend (SAP Integration)",
      "Preconditions": "1. The system is connected to SAP.\n2. A PoS with IAG credits is available.\n3. IAG event has occurred, and credits remain open.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with IAG credits; SAP credentials.",
      "Expected Result": "The system reliably acquires and transmits open credits data, including IAG credits, for the duration they remain open after the IAG event.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DashboardDisplay_SinglePoS_SAP_TEST_Desktop",
      "ID": "TC-212",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Dashboard for a specific PoS after a change in open credits status has occurred and data has been acquired from SAP.",
          "Expected Result": "The Dashboard loads successfully for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the updated open credits data (IdRice, total balance amount, balances for all three companies) is displayed correctly in the Dashboard for the PoS.",
          "Expected Result": "The Dashboard displays the latest open credits data for the PoS, matching the data acquired from SAP."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Desktop (Dashboard)",
      "Preconditions": "1. The system has acquired updated open credits data for the PoS from SAP.\n2. User has access to the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with updated open credits; user credentials for Dashboard.",
      "Expected Result": "The Dashboard for a single PoS displays the most recent open credits data as acquired from SAP.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataAcquisition_NoChange_SAP_TEST_Backend",
      "ID": "TC-213",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no changes are made to the open credits status of any PoS in SAP.",
          "Expected Result": "No change in open credits status is detected by the system."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the system for any automatic data acquisition or transmission activity.",
          "Expected Result": "The system does not trigger the data acquisition mechanism or transmit any open credits data."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Low",
      "Test Stage": "test",
      "Reference System": "Backend (SAP Integration)",
      "Preconditions": "1. The system is connected to SAP.\n2. No changes to open credits status for any PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with stable open credits; SAP credentials.",
      "Expected Result": "The system does not perform unnecessary data acquisition or transmission when there is no change in open credits status.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataAcquisition_InvalidData_SAP_TEST_Backend",
      "ID": "TC-214",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in open credits status for a PoS in SAP, but with missing or invalid data fields (e.g., missing IdRice or negative balance).",
          "Expected Result": "The system detects the invalid or incomplete data during acquisition."
        },
        {
          "Step": 2,
          "Step Description": "Verify the system's response to the invalid data (e.g., error logging, rejection, or notification).",
          "Expected Result": "The system logs the error, rejects the invalid data, and does not update the Dashboard with incorrect information."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Backend (SAP Integration)",
      "Preconditions": "1. The system is connected to SAP.\n2. Ability to simulate or inject invalid data in SAP for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with invalid open credits data; SAP credentials.",
      "Expected Result": "The system handles invalid or incomplete open credits data gracefully, ensuring data integrity and proper error handling.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChangerDataAcquisition_proj104_AutomaticDataAcquisitionOnStatusChange_SAP_TEST_Desktop",
      "ID": "TC-215",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a status change in the Hopper or Coin Changer for a specific PoS in the SAP system.",
          "Expected Result": "The system detects the status change event for the specified PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered by the status change.",
          "Expected Result": "The data acquisition process is initiated without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Check that the following data is sent from SAP: IdRice (PoS Identifier), IAG Hopper Balance Amount - Severance, IAG Hopper Balance Amount - Recovery, Coin exchange balance amount.",
          "Expected Result": "All required data fields are transmitted accurately and completely."
        },
        {
          "Step": 4,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The updated Hopper and Coin Changer data is visible and reflects the recent change."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP",
      "Preconditions": "1. The SAP system is operational and integrated with the PoS network.\n2. At least one PoS is registered and linked to a Hopper and Coin Changer.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester has access to both SAP backend and Dashboard - Single PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known IdRice, initial Hopper and Coin Changer balances.",
      "Expected Result": "Upon any status change in Hopper or Coin Changer, the system automatically acquires and updates the relevant data in SAP and displays it on the Dashboard - Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChangerDataAcquisition_proj104_DataIntegrityOnAcquisition_SAP_TEST_Desktop",
      "ID": "TC-216",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a status change in the Hopper or Coin Changer for a PoS with known balances.",
          "Expected Result": "The system detects the status change and initiates data acquisition."
        },
        {
          "Step": 2,
          "Step Description": "Capture the data sent: IdRice, IAG Hopper Balance Amount - Severance, IAG Hopper Balance Amount - Recovery, Coin exchange balance amount.",
          "Expected Result": "The data sent matches the actual values in the SAP system at the time of the event."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The displayed data matches the values sent from SAP and reflects the latest status."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP",
      "Preconditions": "1. SAP system and Dashboard are operational.\n2. PoS with known and recorded Hopper and Coin Changer balances.\n3. Data acquisition mechanism is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Data Integrity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with pre-recorded balance values for all required fields.",
      "Expected Result": "The data acquired and displayed is accurate and consistent with the SAP source values at the time of the status change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChangerDataAcquisition_proj104_NoDataAcquisitionWithoutStatusChange_SAP_TEST_Desktop",
      "ID": "TC-217",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Monitor the system for a PoS with no changes in Hopper or Coin Changer status over a defined period.",
          "Expected Result": "No data acquisition process is triggered during this period."
        },
        {
          "Step": 2,
          "Step Description": "Check the Dashboard - Single PoS for the PoS in question.",
          "Expected Result": "No updates or changes are reflected in the Hopper and Coin Changer data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP",
      "Preconditions": "1. SAP system and Dashboard are operational.\n2. PoS with stable Hopper and Coin Changer status.\n3. Data acquisition mechanism is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Event Triggering",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no planned status changes during the test window.",
      "Expected Result": "The system does not perform unnecessary data acquisition or updates when there is no status change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChangerDataAcquisition_proj104_ErrorHandlingOnDataAcquisitionFailure_SAP_TEST_Desktop",
      "ID": "TC-218",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a status change in the Hopper or Coin Changer for a PoS.",
          "Expected Result": "The system attempts to acquire updated data from SAP."
        },
        {
          "Step": 2,
          "Step Description": "Introduce a failure in the data acquisition process (e.g., SAP connection loss, invalid data format).",
          "Expected Result": "The system detects the failure during data acquisition."
        },
        {
          "Step": 3,
          "Step Description": "Check system logs and Dashboard - Single PoS for error reporting or fallback behavior.",
          "Expected Result": "An appropriate error message or indicator is logged and/or displayed, and the system does not update with incomplete or invalid data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP",
      "Preconditions": "1. SAP system and Dashboard are operational.\n2. Data acquisition mechanism is enabled.\n3. Tester has access to system logs and error reporting tools.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with valid status change event; method to simulate acquisition failure.",
      "Expected Result": "The system gracefully handles data acquisition failures, logs the error, and prevents display of incomplete or incorrect data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChangerDataAcquisition_proj104_DashboardDisplayOfAcquiredData_SAP_TEST_Desktop",
      "ID": "TC-219",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a status change in the Hopper or Coin Changer for a PoS.",
          "Expected Result": "The system acquires updated data from SAP."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS after the acquisition completes.",
          "Expected Result": "The Dashboard displays the latest values for IdRice, IAG Hopper Balance Amount - Severance, IAG Hopper Balance Amount - Recovery, and Coin exchange balance amount."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the displayed data matches the values sent from SAP.",
          "Expected Result": "All displayed fields are accurate and up-to-date."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP",
      "Preconditions": "1. SAP system and Dashboard are operational.\n2. Data acquisition mechanism is enabled.\n3. Tester has access to the Dashboard - Single PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known status and balance values.",
      "Expected Result": "The Dashboard - Single PoS accurately displays the most recent Hopper and Coin Changer data after acquisition from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPSZENIT110_DWH_DailyDataAcquisition_Aggregation_SportTicketsPaidElsewhere_backend_TEST_Desktop",
      "ID": "TC-220",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure DWH has winnings data for sport tickets paid at other sales points for the current day, including all required fields.",
          "Expected Result": "DWH contains valid data for sport tickets paid at other sales points."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's daily data acquisition process at end-of-day.",
          "Expected Result": "Zenit initiates data acquisition from DWH."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Zenit aggregates data based on seller PoS identifier, sell date, payment PoS identifier, and payment date.",
          "Expected Result": "Data is aggregated correctly according to the specified keys."
        },
        {
          "Step": 4,
          "Step Description": "Check that the extracted fields include Seller Agency Code, Seller PoS identifier, Competence Day, Cash Day, Winning Payment Day, Agency Code Payment, PoS Identifier of the payment, Amount bet, and Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        },
        {
          "Step": 5,
          "Step Description": "Validate that Seller Agency Code and Agency Code Payment are 6-character strings left-padded with zeros, and for 'Corner' PoS, prefixed with 4-digit zone number and hyphen.",
          "Expected Result": "Codes are formatted as specified (e.g., 000045 or 0001-000045)."
        },
        {
          "Step": 6,
          "Step Description": "Verify that Seller PoS identifier and PoS Identifier of the payment are left-padded with zeros to match the required format (e.g., MI0001).",
          "Expected Result": "PoS identifiers are correctly formatted."
        },
        {
          "Step": 7,
          "Step Description": "Check that Competence Day, Cash Day, and Winning Payment Day are in 'yyyy-mm-dd' format.",
          "Expected Result": "Dates are correctly formatted."
        },
        {
          "Step": 8,
          "Step Description": "Compare the aggregated data with the DWH source to ensure consistency and accuracy.",
          "Expected Result": "Aggregated data matches DWH source data in content and totals."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Backend (Zenit) / DWH / Desktop",
      "Preconditions": "1. DWH contains valid winnings monitoring data for sport tickets paid at other sales points for the test day.\n2. Zenit system is operational and configured to acquire data from DWH.\n3. Data extraction rules and formats are aligned with DWH specifications.",
      "Execution Mode": "Manual",
      "Functionality": "Winnings Monitoring Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample DWH data for sport tickets paid at other sales points, including edge cases (e.g., 'Corner' PoS, various date formats, zero-padded codes).",
      "Expected Result": "Zenit system acquires, aggregates, and formats winnings monitoring data for sport tickets paid at other sales points as per requirements, ensuring consistency, accuracy, and correct formatting.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPSZENIT110_DWH_DailyDataAcquisition_Aggregation_UnpaidWinningSportsTickets_backend_TEST_Desktop",
      "ID": "TC-221",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure DWH has winnings data for unpaid winning sports tickets for the current day, including all required fields.",
          "Expected Result": "DWH contains valid data for unpaid winning sports tickets."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's daily data acquisition process at end-of-day.",
          "Expected Result": "Zenit initiates data acquisition from DWH."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Zenit aggregates data based on seller PoS identifier and sell date.",
          "Expected Result": "Data is aggregated correctly according to the specified keys."
        },
        {
          "Step": 4,
          "Step Description": "Check that the extracted fields include Seller Agency Code, Seller PoS identifier, Competence Day, Cash Day, Amount bet, and Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        },
        {
          "Step": 5,
          "Step Description": "Validate that Seller Agency Code is a 6-character string left-padded with zeros, and for 'Corner' PoS, prefixed with 4-digit zone number and hyphen.",
          "Expected Result": "Codes are formatted as specified (e.g., 000045 or 0001-000045)."
        },
        {
          "Step": 6,
          "Step Description": "Verify that Seller PoS identifier is left-padded with zeros to match the required format (e.g., MI0001).",
          "Expected Result": "PoS identifiers are correctly formatted."
        },
        {
          "Step": 7,
          "Step Description": "Check that Competence Day and Cash Day are in 'yyyy-mm-dd' format.",
          "Expected Result": "Dates are correctly formatted."
        },
        {
          "Step": 8,
          "Step Description": "Compare the aggregated data with the DWH source to ensure consistency and accuracy.",
          "Expected Result": "Aggregated data matches DWH source data in content and totals."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Backend (Zenit) / DWH / Desktop",
      "Preconditions": "1. DWH contains valid winnings monitoring data for unpaid winning sports tickets for the test day.\n2. Zenit system is operational and configured to acquire data from DWH.\n3. Data extraction rules and formats are aligned with DWH specifications.",
      "Execution Mode": "Manual",
      "Functionality": "Winnings Monitoring Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample DWH data for unpaid winning sports tickets, including edge cases (e.g., 'Corner' PoS, various date formats, zero-padded codes).",
      "Expected Result": "Zenit system acquires, aggregates, and formats winnings monitoring data for unpaid winning sports tickets as per requirements, ensuring consistency, accuracy, and correct formatting.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPSZENIT110_DWH_DailyDataAcquisition_Aggregation_UnpaidWinningVirtualRaceTickets_backend_TEST_Desktop",
      "ID": "TC-222",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure DWH has winnings data for unpaid winning virtual race tickets for the current day, including all required fields.",
          "Expected Result": "DWH contains valid data for unpaid winning virtual race tickets."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's daily data acquisition process at end-of-day.",
          "Expected Result": "Zenit initiates data acquisition from DWH."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Zenit aggregates data based on seller PoS identifier and sell date.",
          "Expected Result": "Data is aggregated correctly according to the specified keys."
        },
        {
          "Step": 4,
          "Step Description": "Check that the extracted fields include Seller Agency Code, Seller PoS identifier, Competence Day, Cash Day, Amount bet, and Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        },
        {
          "Step": 5,
          "Step Description": "Validate that Seller Agency Code is a 6-character string left-padded with zeros, and for 'Corner' PoS, prefixed with 4-digit zone number and hyphen.",
          "Expected Result": "Codes are formatted as specified (e.g., 000045 or 0001-000045)."
        },
        {
          "Step": 6,
          "Step Description": "Verify that Seller PoS identifier is left-padded with zeros to match the required format (e.g., MI0001).",
          "Expected Result": "PoS identifiers are correctly formatted."
        },
        {
          "Step": 7,
          "Step Description": "Check that Competence Day and Cash Day are in 'yyyy-mm-dd' format.",
          "Expected Result": "Dates are correctly formatted."
        },
        {
          "Step": 8,
          "Step Description": "Compare the aggregated data with the DWH source to ensure consistency and accuracy.",
          "Expected Result": "Aggregated data matches DWH source data in content and totals."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Backend (Zenit) / DWH / Desktop",
      "Preconditions": "1. DWH contains valid winnings monitoring data for unpaid winning virtual race tickets for the test day.\n2. Zenit system is operational and configured to acquire data from DWH.\n3. Data extraction rules and formats are aligned with DWH specifications.",
      "Execution Mode": "Manual",
      "Functionality": "Winnings Monitoring Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample DWH data for unpaid winning virtual race tickets, including edge cases (e.g., 'Corner' PoS, various date formats, zero-padded codes).",
      "Expected Result": "Zenit system acquires, aggregates, and formats winnings monitoring data for unpaid winning virtual race tickets as per requirements, ensuring consistency, accuracy, and correct formatting.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPSZENIT110_DWH_DailyDataAcquisition_DashboardDisplay_SinglePoS_backend_TEST_Desktop",
      "ID": "TC-223",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure Zenit system has acquired and aggregated winnings monitoring data for the current day.",
          "Expected Result": "Zenit contains up-to-date aggregated winnings monitoring data."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS - 'Winning Data' Tab for a specific PoS.",
          "Expected Result": "Dashboard displays the 'Winning Data' tab for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the displayed data matches the aggregated data acquired from DWH for that PoS.",
          "Expected Result": "Displayed data is consistent with the backend aggregated data."
        },
        {
          "Step": 4,
          "Step Description": "Check that all required fields (Seller Agency Code, Seller PoS identifier, Competence Day, Cash Day, Winning Payment Day, Agency Code Payment, PoS Identifier of the payment, Amount bet, Amount Won) are present and correctly formatted.",
          "Expected Result": "All required fields are displayed and formatted as per specifications."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Backend (Zenit) / Dashboard / Desktop",
      "Preconditions": "1. Zenit system has completed daily data acquisition and aggregation for the test day.\n2. Dashboard is accessible and linked to Zenit backend.",
      "Execution Mode": "Manual",
      "Functionality": "Winnings Monitoring Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Aggregated winnings monitoring data for a specific PoS, including all field types and edge cases.",
      "Expected Result": "Dashboard displays accurate, consistent, and correctly formatted winnings monitoring data for the selected PoS in the 'Winning Data' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPSZENIT110_DWH_DailyDataAcquisition_FieldValidation_FormatAndEdgeCases_backend_TEST_Desktop",
      "ID": "TC-224",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare DWH data with edge cases: Seller Agency Code with and without 'Corner' prefix, PoS identifiers with varying lengths, date fields with invalid formats, and zero/negative amounts.",
          "Expected Result": "DWH contains data covering all edge cases."
        },
        {
          "Step": 2,
          "Step Description": "Trigger Zenit system's daily data acquisition process.",
          "Expected Result": "Zenit initiates data acquisition from DWH."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Seller Agency Code is always a 6-character string left-padded with zeros, or for 'Corner' PoS, prefixed with 4-digit zone number and hyphen.",
          "Expected Result": "Codes are formatted as specified (e.g., 000045 or 0001-000045)."
        },
        {
          "Step": 4,
          "Step Description": "Check that Seller PoS identifier and PoS Identifier of the payment are left-padded with zeros to match the required format (e.g., MI0001).",
          "Expected Result": "PoS identifiers are correctly formatted."
        },
        {
          "Step": 5,
          "Step Description": "Validate that all date fields are in 'yyyy-mm-dd' format and invalid dates are rejected or flagged.",
          "Expected Result": "Only valid date formats are accepted; invalid formats are handled appropriately."
        },
        {
          "Step": 6,
          "Step Description": "Ensure that Amount bet and Amount Won are positive numbers and handle zero/negative values as per business rules.",
          "Expected Result": "Amounts are validated and any anomalies are flagged or handled as specified."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Backend (Zenit) / DWH / Desktop",
      "Preconditions": "1. DWH contains winnings monitoring data with edge cases for all relevant fields.\n2. Zenit system is operational and configured to acquire data from DWH.",
      "Execution Mode": "Manual",
      "Functionality": "Winnings Monitoring Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "DWH data with edge cases: 'Corner' PoS, invalid/valid date formats, zero/negative amounts, varying code lengths.",
      "Expected Result": "Zenit system validates and formats all fields according to requirements, handling edge cases and anomalies as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_XPS-ZENIT-120_Requirement_DataExtraction/Dashboard_TEST_Desktop",
      "ID": "TC-225",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the list to view its details.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Switch to the 'PoS Master Data' tab within the PoS details page.",
          "Expected Result": "The 'PoS Master Data' tab is displayed, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the following data is displayed for each Terminal Type: IdRice (PoS identifier), Type ID, Type Name, and Number of Terminals.",
          "Expected Result": "For each Terminal Type at the selected PoS, IdRice, Type ID, Type Name, and Number of Terminals are displayed and populated with correct values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT Dashboard is accessible and operational.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS with terminal data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; At least one PoS with terminal data in ORION.",
      "Expected Result": "The 'PoS Master Data' tab displays, for each Terminal Type at the selected PoS, the IdRice, Type ID, Type Name, and Number of Terminals, all correctly populated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_XPS-ZENIT-120_Requirement_MissingTerminalTypes/Dashboard_TEST_Desktop",
      "ID": "TC-226",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS that has no terminal types associated in ORION.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Switch to the 'PoS Master Data' tab within the PoS details page.",
          "Expected Result": "The 'PoS Master Data' tab is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Verify the display when no terminal types are present for the selected PoS.",
          "Expected Result": "A message such as 'No terminal data available' is displayed, or the terminal data section is empty, with no errors or incorrect data shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT Dashboard is accessible and operational.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS exists in ORION with no terminal types associated.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no terminal types in ORION.",
      "Expected Result": "When a PoS has no terminal types, the 'PoS Master Data' tab displays an appropriate message or remains empty, without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_XPS-ZENIT-120_Requirement_DataConsistency/Dashboard_TEST_Desktop",
      "ID": "TC-227",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the list to view its details.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Switch to the 'PoS Master Data' tab within the PoS details page.",
          "Expected Result": "The 'PoS Master Data' tab is displayed, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Cross-check the terminal data (IdRice, Type ID, Type Name, Number of Terminals) displayed in ZENIT with the data stored in ORION for the same PoS.",
          "Expected Result": "All terminal data displayed in ZENIT matches exactly with the data in ORION for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT Dashboard is accessible and operational.\n2. User has valid credentials with access to PoS data.\n3. Access to ORION system to retrieve reference data for comparison.\n4. At least one PoS with terminal data exists in both ZENIT and ORION.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with terminal data in both ZENIT and ORION; Access to ORION reference data.",
      "Expected Result": "Terminal data displayed in ZENIT for each PoS and Terminal Type is consistent and matches the data in ORION.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_XPS-ZENIT-120_Requirement_InvalidPoSSelection/Dashboard_TEST_Desktop",
      "ID": "TC-228",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to select a PoS that does not exist or has been deleted from ORION.",
          "Expected Result": "The system displays an error message such as 'PoS not found' or prevents selection, and no terminal data is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT Dashboard is accessible and operational.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS has been deleted or does not exist in ORION.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS identifier for a deleted or non-existent PoS.",
      "Expected Result": "When a non-existent PoS is selected, the system displays an appropriate error message and does not show terminal data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_XPS-ZENIT-120_Requirement_MultipleTerminalTypes/Dashboard_TEST_Desktop",
      "ID": "TC-229",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS that has multiple terminal types associated in ORION.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Switch to the 'PoS Master Data' tab within the PoS details page.",
          "Expected Result": "The 'PoS Master Data' tab is displayed, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all terminal types are listed, each with their respective Type ID, Type Name, and Number of Terminals.",
          "Expected Result": "All terminal types associated with the PoS are displayed, each with correct Type ID, Type Name, and Number of Terminals."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. ZENIT Dashboard is accessible and operational.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS exists in ORION with multiple terminal types associated.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with multiple terminal types in ORION.",
      "Expected Result": "The 'PoS Master Data' tab displays all terminal types for the selected PoS, each with correct Type ID, Type Name, and Number of Terminals.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "ReportAcquisition-XPS130_Dashboard_DocumentsList_Display_DESKTOP_TEST_Desktop",
      "ID": "TC-230",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed, showing the module reserved for Source system data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of available documents acquired from Cerved.",
          "Expected Result": "A list of available documents from Cerved is displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS exists with documents available from Cerved.\n3. The Zenit application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Report Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with available Cerved documents.",
      "Expected Result": "The system displays the list of available Cerved documents for the selected PoS in the 'Documents' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers display of document list, not document content or error scenarios.",
      "_polarion": "XPS-ZENIT-130 - Cerved - Report Acquisition"
    },
    {
      "Title": "ReportAcquisition-XPS130_Dashboard_DocumentView_Open_DESKTOP_TEST_Desktop",
      "ID": "TC-231",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed, showing the list of available documents from Cerved."
        },
        {
          "Step": 4,
          "Step Description": "Click on a specific document in the list to view it.",
          "Expected Result": "The selected document is opened and its content is displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS exists with documents available from Cerved.\n3. The Zenit application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Report Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with available Cerved documents.",
      "Expected Result": "The system allows the user to open and view the content of a selected Cerved document for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers document viewing, not error or permission scenarios.",
      "_polarion": "XPS-ZENIT-130 - Cerved - Report Acquisition"
    },
    {
      "Title": "ReportAcquisition-XPS130_Dashboard_NoDocuments_Display_DESKTOP_TEST_Desktop",
      "ID": "TC-232",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the documents list when no documents are available from Cerved for the selected PoS.",
          "Expected Result": "A clear message is displayed indicating that no documents are available for this PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS exists with no documents available from Cerved.\n3. The Zenit application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Report Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no available Cerved documents.",
      "Expected Result": "The system displays an appropriate message when no Cerved documents are available for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers empty state handling for document list.",
      "_polarion": "XPS-ZENIT-130 - Cerved - Report Acquisition"
    },
    {
      "Title": "ReportAcquisition-XPS130_Dashboard_DocumentView_Error_DESKTOP_TEST_Desktop",
      "ID": "TC-233",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is displayed, showing the list of available documents from Cerved."
        },
        {
          "Step": 4,
          "Step Description": "Click on a specific document in the list that is known to be unavailable or corrupted.",
          "Expected Result": "An error message is displayed indicating that the document cannot be opened or is unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS exists with at least one unavailable or corrupted Cerved document.\n3. The Zenit application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Report Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with at least one unavailable/corrupted Cerved document.",
      "Expected Result": "The system displays an appropriate error message when a document cannot be opened or is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for document opening failures.",
      "_polarion": "XPS-ZENIT-130 - Cerved - Report Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_ViewList_DESKTOP_TEST_Desktop",
      "ID": "TC-234",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS screen from the Dashboard.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, and the module reserved for Source system 'Documents' is visible."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of available documents retrieved from Arxivar.",
          "Expected Result": "A list of available documents for the selected PoS is displayed, each with clickable entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS with documents available in Arxivar exists.\n3. The Arxivar integration is configured and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with documents in Arxivar.",
      "Expected Result": "The system displays the list of available documents for the selected PoS in the 'Documents' tab, as retrieved from Arxivar.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_ViewSingleDocument_DESKTOP_TEST_Desktop",
      "ID": "TC-235",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS screen from the Dashboard.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, and the module reserved for Source system 'Documents' is visible."
        },
        {
          "Step": 4,
          "Step Description": "From the list of available documents, click on a single document entry.",
          "Expected Result": "The selected document is opened and displayed for viewing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS with documents available in Arxivar exists.\n3. The Arxivar integration is configured and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with documents in Arxivar.",
      "Expected Result": "The user is able to view the content of the selected document retrieved from Arxivar.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_NoDocuments_DESKTOP_TEST_Desktop",
      "ID": "TC-236",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS screen from the Dashboard.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, and the module reserved for Source system 'Documents' is visible."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of available documents.",
          "Expected Result": "A message is displayed indicating that no documents are available for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS with no documents available in Arxivar exists.\n3. The Arxivar integration is configured and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no documents in Arxivar.",
      "Expected Result": "The system displays an appropriate message indicating that no documents are available for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_ArxivarUnavailable_DESKTOP_TEST_Desktop",
      "ID": "TC-237",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS screen from the Dashboard.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, and the module reserved for Source system 'Documents' is visible."
        },
        {
          "Step": 4,
          "Step Description": "Simulate Arxivar service being unavailable (e.g., disconnect Arxivar or simulate network failure).",
          "Expected Result": "The system displays an error message indicating that the documents cannot be retrieved due to a service issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS exists.\n3. The Arxivar integration is temporarily unavailable or disconnected.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS; Arxivar service unavailable.",
      "Expected Result": "The system displays a clear error message when it cannot retrieve documents from Arxivar.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_InvalidDocumentFormat_DESKTOP_TEST_Desktop",
      "ID": "TC-238",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS screen from the Dashboard.",
          "Expected Result": "Single PoS screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, and the module reserved for Source system 'Documents' is visible."
        },
        {
          "Step": 4,
          "Step Description": "From the list of available documents, click on a document with an unsupported or corrupted format.",
          "Expected Result": "The system displays an error message indicating that the document cannot be displayed due to an invalid format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to the Zenit Dashboard.\n2. At least one PoS with a document in Arxivar that has an unsupported or corrupted format.\n3. The Arxivar integration is configured and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with at least one invalid-format document in Arxivar.",
      "Expected Result": "The system displays a clear error message when a document cannot be displayed due to an invalid or unsupported format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "ValidLogin-proj_001_Login_ValidCredentials_TEST_Android",
      "ID": "TC-239",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on the Android device.",
          "Expected Result": "The application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid username in the username field.",
          "Expected Result": "The username is accepted and displayed in the field."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid password in the password field.",
          "Expected Result": "The password is accepted and displayed as masked characters."
        },
        {
          "Step": 4,
          "Step Description": "Tap the 'Login' button.",
          "Expected Result": "The application processes the credentials."
        },
        {
          "Step": 5,
          "Step Description": "Observe the application response.",
          "Expected Result": "User is successfully logged in and redirected to the home/dashboard screen."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Android, App",
      "Preconditions": "1. The application is installed on the Android device.\n2. The device is connected to the internet.\n3. The user has a valid, active account.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password (e.g., user@example.com / Password123)",
      "Expected Result": "User is logged in and redirected to the home/dashboard screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "InvalidLogin-proj_001_Login_InvalidCredentials_TEST_Android",
      "ID": "TC-240",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on the Android device.",
          "Expected Result": "The application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid username in the username field.",
          "Expected Result": "The username is accepted and displayed in the field."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid password in the password field.",
          "Expected Result": "The password is accepted and displayed as masked characters."
        },
        {
          "Step": 4,
          "Step Description": "Tap the 'Login' button.",
          "Expected Result": "The application processes the credentials."
        },
        {
          "Step": 5,
          "Step Description": "Observe the application response.",
          "Expected Result": "An error message is displayed indicating invalid credentials. User remains on the login screen."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Android, App",
      "Preconditions": "1. The application is installed on the Android device.\n2. The device is connected to the internet.\n3. The user does not have an account or uses incorrect credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and password (e.g., wronguser@example.com / WrongPass)",
      "Expected Result": "Error message is displayed and user is not logged in.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "Logout-proj_001_Logout_ValidSession_TEST_Android",
      "ID": "TC-241",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the user is logged in and on the home/dashboard screen.",
          "Expected Result": "User is authenticated and home/dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Tap the 'Logout' button or select 'Logout' from the menu.",
          "Expected Result": "The application processes the logout request."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application response.",
          "Expected Result": "User is logged out and redirected to the login screen."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android, App",
      "Preconditions": "1. The application is installed on the Android device.\n2. The device is connected to the internet.\n3. The user is logged in with a valid session.",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user session",
      "Expected Result": "User is logged out and redirected to the login screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "SessionTimeoutLogout-proj_001_Logout_SessionTimeout_TEST_Android",
      "ID": "TC-242",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is authenticated and home/dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for the session timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during this period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the application response after the timeout period.",
          "Expected Result": "User is automatically logged out and redirected to the login screen."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android, App",
      "Preconditions": "1. The application is installed on the Android device.\n2. The device is connected to the internet.\n3. The user is logged in with a valid session.\n4. Session timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user session, session timeout value (e.g., 15 minutes)",
      "Expected Result": "User is automatically logged out after session timeout and redirected to the login screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "PasswordMasking-proj_001_Login_PasswordMasking_TEST_Android",
      "ID": "TC-243",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on the Android device.",
          "Expected Result": "The application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Enter any password in the password field.",
          "Expected Result": "Password characters are displayed as masked (e.g., dots or asterisks)."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Android, App",
      "Preconditions": "1. The application is installed on the Android device.\n2. The device is connected to the internet.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "ux_ui",
      "No Regression Test": false,
      "Automation": true,
      "Dataset": "Any password (e.g., TestPass123)",
      "Expected Result": "Password is masked in the password field.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "UserProfileMgmt-ZENIT_200_FullAccessUser_AllFeaturesAccess_DESKTOP_TEST_Desktop",
      "ID": "TC-244",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with Full Access User role assigned for Italy.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to each main feature: data consultation, data extraction, massive import, and threshold management.",
          "Expected Result": "All features are visible and accessible to the user."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform an action in each feature (e.g., extract data, import data, manage thresholds).",
          "Expected Result": "Actions are successfully performed without any access restriction errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with Full Access User role for Italy. 2. User is assigned to a group with appropriate permissions. 3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Full Access User credentials for Italy.",
      "Expected Result": "Full Access User can access and perform all ZENIT features as per their role without restriction.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers Full Access User role for one country.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileMgmt-ZENIT_200_OperatorUser_PartialFeaturesAccess_DESKTOP_TEST_Desktop",
      "ID": "TC-245",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with Operator User role assigned for Albania.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access data consultation, data extraction, and threshold management features.",
          "Expected Result": "Data consultation and extraction are accessible. Partial threshold management is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access massive import feature.",
          "Expected Result": "Massive import feature is not visible or access is denied."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with Operator User role for Albania. 2. User is assigned to a group with appropriate permissions. 3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Operator User credentials for Albania.",
      "Expected Result": "Operator User can access only permitted features and is restricted from massive import.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers Operator User role for one country.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileMgmt-ZENIT_200_ObserverUser_ConsultationExtractionOnly_DESKTOP_TEST_Desktop",
      "ID": "TC-246",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with Observer User role assigned for Italy.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access data consultation and extraction features.",
          "Expected Result": "Data consultation and extraction features are accessible."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access massive import and threshold management features.",
          "Expected Result": "Massive import and threshold management features are not visible or access is denied."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with Observer User role for Italy. 2. User is assigned to a group with appropriate permissions. 3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Observer User credentials for Italy.",
      "Expected Result": "Observer User can only consult and extract data, with no access to import or threshold management features.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers Observer User role for one country.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileMgmt-ZENIT_200_ITSupportUser_SplunkReadOnly_DESKTOP_TEST_Desktop",
      "ID": "TC-247",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with IT Support role assigned for Italy.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access log information via Splunk.",
          "Expected Result": "Log information is accessible in read-only mode."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access any other ZENIT features (consultation, extraction, import, threshold management).",
          "Expected Result": "Access to all other features is denied or features are not visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with IT Support role for Italy. 2. User is assigned to a group with appropriate permissions. 3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "IT Support User credentials for Italy.",
      "Expected Result": "IT Support User can only access log information via Splunk in read-only mode and is restricted from all other features.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers IT Support User role for one country.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileMgmt-ZENIT_200_MultiCountryRole_DifferentPrivileges_DESKTOP_TEST_Desktop",
      "ID": "TC-248",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with Full Access User role for Italy and Observer User role for Albania.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Switch context to Italy within the application.",
          "Expected Result": "User has access to all features as Full Access User."
        },
        {
          "Step": 3,
          "Step Description": "Switch context to Albania within the application.",
          "Expected Result": "User has access only to consultation and extraction features as Observer User."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with Full Access User role for Italy and Observer User role for Albania. 2. User is assigned to groups with appropriate permissions. 3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with multi-country roles (Italy: Full Access, Albania: Observer).",
      "Expected Result": "User privileges change according to the selected country context, reflecting the assigned roles.",
      "Country": "Italy, Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers multi-country privilege assignment and context switching.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileMgmt-ZENIT_200_GroupRoleAssignment_NavigationAccess_DESKTOP_TEST_Desktop",
      "ID": "TC-249",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user assigned to the 'Credit Manager' group with Operator User role for Italy.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to navigate to features permitted for Operator User (consultation, extraction, partial threshold management).",
          "Expected Result": "Permitted features are accessible."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access features not permitted for Operator User (massive import, full threshold management).",
          "Expected Result": "Access to these features is denied or features are not visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists and is assigned to 'Credit Manager' group with Operator User role for Italy. 2. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Operator User credentials assigned to 'Credit Manager' group for Italy.",
      "Expected Result": "Group role assignment correctly restricts or grants access to features as per the Operator User role.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers group-based role assignment and navigation.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileMgmt-ZENIT_200_InvalidRole_NoAccess_DESKTOP_TEST_Desktop",
      "ID": "TC-250",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with no assigned role for any country.",
          "Expected Result": "User is authenticated but receives an error or is denied access to all features."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with no assigned roles. 2. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with no assigned roles.",
      "Expected Result": "User with no assigned roles cannot access any features and receives an appropriate error or access denied message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for missing role assignment.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "LoginSuccess-XPSZENIT201_Login_SuccessfulAuthentication_DESKTOP_TEST",
      "ID": "TC-251",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page on a desktop browser.",
          "Expected Result": "ZENIT login screen is displayed with an 'Access' button."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid company username and password, then submit.",
          "Expected Result": "Prompt for second factor authentication is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Approve the authentication request via the Authenticator App push notification OR enter a valid OTP from the Authenticator App.",
          "Expected Result": "Authentication is processed by the system."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to verify the second factor.",
          "Expected Result": "User is redirected to the ZENIT home page, with clear indication of the current environment (e.g., TEST). Access log is recorded."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Web (Chrome/Edge/Firefox)",
      "Preconditions": "1. User is pre-configured in ZENIT with an enabled profile.\n2. User has MFA and Authenticator App configured on their mobile device.\n3. System is configured to support MFA.\n4. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Authentication",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid company username and password; Authenticator App with push/OTP enabled.",
      "Expected Result": "User is successfully logged in, redirected to the home page with environment clearly shown, and access is logged for auditing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "LoginFailInvalidCreds-XPSZENIT201_Login_InvalidCredentials_DESKTOP_TEST",
      "ID": "TC-252",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page on a desktop browser.",
          "Expected Result": "ZENIT login screen is displayed with an 'Access' button."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid company username or password, then submit.",
          "Expected Result": "System displays an error message: 'Invalid credentials'. User remains on the login page and can retry."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Web (Chrome/Edge/Firefox)",
      "Preconditions": "1. User is pre-configured in ZENIT with an enabled profile.\n2. System is configured to support MFA.\n3. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Authentication",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username or password (e.g., wrong password for a valid user).",
      "Expected Result": "User is not authenticated, receives an 'Invalid credentials' message, and can attempt login again.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "LoginFailInvalidSecondFactor-XPSZENIT201_Login_InvalidSecondFactor_DESKTOP_TEST",
      "ID": "TC-253",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page on a desktop browser.",
          "Expected Result": "ZENIT login screen is displayed with an 'Access' button."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid company username and password, then submit.",
          "Expected Result": "Prompt for second factor authentication is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Enter an invalid OTP code or reject the push notification in the Authenticator App.",
          "Expected Result": "System displays an error message indicating invalid second factor. User remains on the second factor prompt and can retry."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Web (Chrome/Edge/Firefox)",
      "Preconditions": "1. User is pre-configured in ZENIT with an enabled profile.\n2. User has MFA and Authenticator App configured on their mobile device.\n3. System is configured to support MFA.\n4. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Authentication",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password; invalid OTP or rejected push notification.",
      "Expected Result": "User is not authenticated, receives an error message for invalid second factor, and can attempt second factor authentication again.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "LogoutSuccess-XPSZENIT201_Logout_SuccessfulSessionClosure_DESKTOP_TEST",
      "ID": "TC-254",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back-office as a valid user (reuse steps from TC-001).",
          "Expected Result": "User is authenticated and on the ZENIT home page."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Logout' or 'Exit' button in the application interface.",
          "Expected Result": "System closes the user session and redirects to the login page. Logout event is logged for auditing."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access any protected resource or page via browser navigation or direct URL.",
          "Expected Result": "System redirects to the login page, confirming the session is closed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Web (Chrome/Edge/Firefox)",
      "Preconditions": "1. User is logged in to ZENIT back-office with a valid session.\n2. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Logout/Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user session.",
      "Expected Result": "User is securely logged out, session is terminated, and logout is logged for auditing. Access to protected resources is denied after logout.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "EnvDisplay-XPSZENIT201_Login_EnvironmentDisplay_DESKTOP_TEST",
      "ID": "TC-255",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page on a desktop browser.",
          "Expected Result": "ZENIT login screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Complete the login process with valid credentials and second factor authentication.",
          "Expected Result": "User is redirected to the ZENIT home page."
        },
        {
          "Step": 3,
          "Step Description": "Observe the interface for environment information (e.g., banner, label, or message indicating DEV, TEST, PRE-PROD, or PROD).",
          "Expected Result": "The current environment is clearly and unambiguously displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Web (Chrome/Edge/Firefox)",
      "Preconditions": "1. User is pre-configured in ZENIT with an enabled profile.\n2. User has MFA and Authenticator App configured on their mobile device.\n3. System is configured to support MFA.\n4. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Environment Awareness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; environment set to TEST (or as appropriate).",
      "Expected Result": "After login, the user can clearly identify the current environment (DEV, TEST, PRE-PROD, PROD) in the UI.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "AuditLog-XPSZENIT201_LoginLogout_AuditLogging_DESKTOP_TEST",
      "ID": "TC-256",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back-office as a valid user (reuse steps from TC-001).",
          "Expected Result": "User is authenticated and on the ZENIT home page."
        },
        {
          "Step": 2,
          "Step Description": "Log out of the application using the 'Logout' or 'Exit' button.",
          "Expected Result": "User session is closed and redirected to the login page."
        },
        {
          "Step": 3,
          "Step Description": "Access the audit log (or request audit log from system administrator).",
          "Expected Result": "Audit log contains entries for both the login and logout events, including timestamp, user ID, and environment."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10/11, Web (Chrome/Edge/Firefox)",
      "Preconditions": "1. User is pre-configured in ZENIT with an enabled profile.\n2. User has MFA and Authenticator App configured on their mobile device.\n3. System is configured to support MFA.\n4. User has access to a desktop computer and a supported browser.\n5. Access to audit log or support from system administrator.",
      "Execution Mode": "Manual",
      "Functionality": "Audit/Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; access to audit log.",
      "Expected Result": "Audit log accurately records login and logout events with all required details for traceability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "AutoLogout-XPS202_Inactivity_Logout_Desktop_TEST_Desktop",
      "ID": "TC-257",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Do not perform any interaction (mouse, keyboard, clicks, scrolling) for 5 minutes.",
          "Expected Result": "No user activity is detected by the system for 5 minutes."
        },
        {
          "Step": 3,
          "Step Description": "Observe if a notification or pop-up warning about session expiration appears after 5 minutes of inactivity.",
          "Expected Result": "A notification or pop-up appears warning the user that the session will expire soon due to inactivity, possibly with a countdown timer."
        },
        {
          "Step": 4,
          "Step Description": "Do not interact with the system after the notification appears. Wait for the countdown to finish.",
          "Expected Result": "The system automatically logs out the user after the countdown expires."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's behavior after logout.",
          "Expected Result": "User is redirected to the login screen and cannot access any features without logging in again."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system.\n3. No other active sessions for the same user on the same device.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user1/password1)",
      "Expected Result": "The user is automatically logged out after 5 minutes of inactivity, receives a warning notification, and is redirected to the login screen. The disconnect event is logged in the system logs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-XPS202_Notification_ContinueSession_Desktop_TEST_Desktop",
      "ID": "TC-258",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Do not perform any interaction for 5 minutes.",
          "Expected Result": "No user activity is detected by the system for 5 minutes."
        },
        {
          "Step": 3,
          "Step Description": "Observe if a notification or pop-up warning about session expiration appears.",
          "Expected Result": "A notification or pop-up appears warning the user that the session will expire soon due to inactivity, with a 'Continue' button."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Continue' button within the countdown period.",
          "Expected Result": "The session remains active, the notification disappears, and the user is not logged out."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system.\n3. No other active sessions for the same user on the same device.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user1/password1)",
      "Expected Result": "The user receives a session expiration notification after 5 minutes of inactivity and, upon clicking 'Continue', the session remains active without logout.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-XPS202_ActiveInteraction_NoLogout_Desktop_TEST_Desktop",
      "ID": "TC-259",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Periodically interact with the system (e.g., move mouse, click, type) at intervals less than 5 minutes for a total duration of 10 minutes.",
          "Expected Result": "User activity is detected by the system during the session."
        },
        {
          "Step": 3,
          "Step Description": "Observe if any inactivity notification or automatic logout occurs during this period.",
          "Expected Result": "No inactivity notification or automatic logout occurs; the session remains active."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system.\n3. No other active sessions for the same user on the same device.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user1/password1)",
      "Expected Result": "As long as the user interacts with the system within the inactivity threshold, no logout or inactivity notification occurs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-XPS202_SessionLog_DisconnectEvent_Desktop_TEST_Desktop",
      "ID": "TC-260",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Do not perform any interaction for 5 minutes to trigger automatic logout.",
          "Expected Result": "No user activity is detected by the system for 5 minutes."
        },
        {
          "Step": 3,
          "Step Description": "After being logged out, access the system logs as an administrator or with appropriate permissions.",
          "Expected Result": "System logs are accessible for review."
        },
        {
          "Step": 4,
          "Step Description": "Search for the disconnect event corresponding to the user's session logout due to inactivity.",
          "Expected Result": "A disconnect event is recorded in the system logs with details such as timestamp, user ID, and reason (inactivity)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system.\n3. Tester has access to system logs with appropriate permissions.\n4. No other active sessions for the same user on the same device.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials (e.g., user1/password1); Access to system logs.",
      "Expected Result": "The disconnect event due to inactivity is correctly logged in the system logs with all relevant details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "LoginTracking-XPSZENIT203_LoginTracking_RecordingOfUserAccess_DESKTOP_TEST_Desktop",
      "ID": "TC-261",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on a desktop device.",
          "Expected Result": "Application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password credentials.",
          "Expected Result": "Credentials are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button to authenticate.",
          "Expected Result": "User is successfully authenticated and granted access to the application."
        },
        {
          "Step": 4,
          "Step Description": "Query the secure database for the latest login record for the authenticated user.",
          "Expected Result": "A new login record is present in the database for the user."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the login record contains the following fields: Username, Surname and First Name, Email address, Title, Department, Date of Last Login, Status of the Username, Role.",
          "Expected Result": "All required fields are present and correctly populated in the login record."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Application Web",
      "Preconditions": "1. User account exists with all required profile information populated (Username, Surname, First Name, Email, Title, Department, Status, Role).\n2. Tester has access to the secure database for verification.\n3. Application is installed and accessible on the desktop device.\n4. Database is operational and reachable from the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., username: johndoe, password: Test@1234), expected user profile data in the database.",
      "Expected Result": "Upon successful login, a new record is created in the secure database containing all required user information fields as specified by SOX compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers positive scenario for login tracking and field completeness.",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "LoginTracking-XPSZENIT203_LoginTracking_RecordingWithMissingProfileFields_DESKTOP_TEST_Desktop",
      "ID": "TC-262",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on a desktop device.",
          "Expected Result": "Application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password for a user whose profile is missing one or more required fields (e.g., Title or Department).",
          "Expected Result": "Credentials are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button to authenticate.",
          "Expected Result": "User is successfully authenticated and granted access to the application."
        },
        {
          "Step": 4,
          "Step Description": "Query the secure database for the latest login record for the authenticated user.",
          "Expected Result": "A new login record is present in the database for the user."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the login record contains all required fields, and check how missing profile information is handled (e.g., null, empty, or default values).",
          "Expected Result": "All required fields are present in the login record. Missing profile fields are handled according to system specification (e.g., left blank, set to 'N/A', or flagged for completion)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Application Web",
      "Preconditions": "1. User account exists with one or more required profile fields intentionally left blank or unset.\n2. Tester has access to the secure database for verification.\n3. Application is installed and accessible on the desktop device.\n4. Database is operational and reachable from the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with incomplete profile (e.g., username: janedoe, password: Test@5678, missing Title).",
      "Expected Result": "Login record is created with all required fields present; missing profile data is handled gracefully and according to specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers handling of incomplete user profile data during login tracking.",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "LoginTracking-XPSZENIT203_LoginTracking_AccessControlToLoginRecords_DESKTOP_TEST_Desktop",
      "ID": "TC-263",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application as a regular user (non-authorized personnel).",
          "Expected Result": "User is authenticated and granted access to standard application features."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the login tracking records or database directly or via application interface.",
          "Expected Result": "Access to login tracking records is denied. User receives an appropriate error or access denied message."
        },
        {
          "Step": 3,
          "Step Description": "Logout and login as an authorized personnel (e.g., compliance officer or admin).",
          "Expected Result": "Authorized user is authenticated and granted access to application features."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to access the login tracking records or database via the authorized interface.",
          "Expected Result": "Access to login tracking records is granted. Authorized user can view the records as per their permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Application Web",
      "Preconditions": "1. At least two user accounts exist: one regular user and one authorized personnel (e.g., compliance officer).\n2. Application is installed and accessible on the desktop device.\n3. Database contains login tracking records.\n4. Access control mechanisms are configured as per SOX requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Regular user credentials (e.g., username: user1, password: Pass@123), authorized personnel credentials (e.g., username: admin1, password: Admin@123).",
      "Expected Result": "Only authorized personnel can access login tracking records; regular users are denied access as per SOX compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control and security of login tracking records.",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "LoginTracking-XPSZENIT203_LoginTracking_RecordingOfFailedLoginAttempts_DESKTOP_TEST_Desktop",
      "ID": "TC-264",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on a desktop device.",
          "Expected Result": "Application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid username with an incorrect password.",
          "Expected Result": "Login attempt is rejected with an error message."
        },
        {
          "Step": 3,
          "Step Description": "Repeat the failed login attempt multiple times (e.g., 3 times).",
          "Expected Result": "Each failed attempt is rejected with an error message."
        },
        {
          "Step": 4,
          "Step Description": "Query the secure database for login tracking records related to the attempted username.",
          "Expected Result": "Failed login attempts are recorded in the database with appropriate status (e.g., 'Failed', 'Invalid Credentials')."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the failed login record contains the required fields (where applicable) and the status reflects the failed attempt.",
          "Expected Result": "Login tracking record for failed attempts includes Username, Date/Time, and Status indicating failure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Application Web",
      "Preconditions": "1. User account exists for the attempted username.\n2. Tester has access to the secure database for verification.\n3. Application is installed and accessible on the desktop device.\n4. Database is operational and reachable from the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username (e.g., username: johndoe), invalid password (e.g., WrongPass@123).",
      "Expected Result": "Failed login attempts are recorded in the database with status indicating failure and relevant user information where available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for login tracking and failure status recording.",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "AccessLoginTracking_XPS-ZENIT-204_ViewLoginTracking_Splunk_TEST_Desktop",
      "ID": "TC-265",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application using valid Control Room (IT Support) credentials.",
          "Expected Result": "User is successfully authenticated and granted access to the Splunk dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard or section dedicated to ZENIT system login tracking information.",
          "Expected Result": "The dashboard or section for ZENIT login tracking is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the login tracking records are visible, including details such as username, timestamp, and login status.",
          "Expected Result": "Login tracking records from the ZENIT system are displayed with all relevant details."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Splunk Web Application",
      "Preconditions": "1. User account with Control Room (IT Support) role exists and is active.\n2. Splunk application is installed and accessible.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. User has network access to Splunk.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room user credentials; Sample login tracking data from ZENIT system.",
      "Expected Result": "Authorized users can view ZENIT login tracking information in Splunk, including all relevant details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "AccessDenied_XPS-ZENIT-204_UnauthorizedUserDeniedAccess_Splunk_TEST_Desktop",
      "ID": "TC-266",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application using credentials of a user without Control Room (IT Support) privileges.",
          "Expected Result": "User is authenticated but does not have access to the ZENIT login tracking dashboard or section."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the ZENIT login tracking information section directly via URL or navigation.",
          "Expected Result": "Access is denied, and an appropriate error or access denied message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Splunk Web Application",
      "Preconditions": "1. User account without Control Room (IT Support) privileges exists and is active.\n2. Splunk application is installed and accessible.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. User has network access to Splunk.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Control Room user credentials.",
      "Expected Result": "Unauthorized users cannot access ZENIT login tracking information in Splunk.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "DataIntegrity_XPS-ZENIT-204_VerifyLoginTrackingDataCompleteness_Splunk_TEST_Desktop",
      "ID": "TC-267",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application as a Control Room (IT Support) user.",
          "Expected Result": "User is authenticated and has access to the ZENIT login tracking dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Compare the login tracking records displayed in Splunk with the source records from the ZENIT system for a specific time period.",
          "Expected Result": "All login tracking records from the ZENIT system are present and match the records displayed in Splunk."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Splunk Web Application",
      "Preconditions": "1. Control Room (IT Support) user account is active.\n2. Splunk application is installed and accessible.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. Access to both Splunk and ZENIT system source data for comparison.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Control Room user credentials; Sample login tracking data from both ZENIT and Splunk for the same period.",
      "Expected Result": "Login tracking data in Splunk is complete and matches the ZENIT system source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "DataFreshness_XPS-ZENIT-204_VerifyLoginTrackingDataTimeliness_Splunk_TEST_Desktop",
      "ID": "TC-268",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a new login event in the ZENIT system.",
          "Expected Result": "A new login event is recorded in the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the Splunk application as a Control Room (IT Support) user.",
          "Expected Result": "User is authenticated and has access to the ZENIT login tracking dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Check the Splunk dashboard for the appearance of the new login event.",
          "Expected Result": "The new login event appears in Splunk within the expected synchronization timeframe."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Splunk Web Application",
      "Preconditions": "1. Control Room (IT Support) user account is active.\n2. Splunk application is installed and accessible.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. Ability to trigger a login event in ZENIT system.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Control Room user credentials; Test user credentials for ZENIT login event.",
      "Expected Result": "New login events in ZENIT are reflected in Splunk within the expected timeframe.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "UIElements_XPS-ZENIT-204_VerifyLoginTrackingUIElements_Splunk_TEST_Desktop",
      "ID": "TC-269",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application as a Control Room (IT Support) user.",
          "Expected Result": "User is authenticated and has access to the ZENIT login tracking dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Inspect the UI elements of the login tracking dashboard (e.g., filters, search, export options).",
          "Expected Result": "All expected UI elements for filtering, searching, and exporting login tracking data are present and functional."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Splunk Web Application",
      "Preconditions": "1. Control Room (IT Support) user account is active.\n2. Splunk application is installed and accessible.\n3. ZENIT system is configured to send login tracking data to Splunk.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "ux_ui",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Control Room user credentials.",
      "Expected Result": "UI elements for login tracking visualization are present and function as intended.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "ConcurrentUpdate_XPS-ZENIT-210_ManageConcurrency_DataConsistency_TEST_Desktop",
      "ID": "TC-270",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the shared data record.",
          "Expected Result": "User A successfully accesses the data record."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same shared data record.",
          "Expected Result": "User B successfully accesses the same data record."
        },
        {
          "Step": 3,
          "Step Description": "User A updates a field in the data record but does not save yet.",
          "Expected Result": "User A sees the updated value in the edit form."
        },
        {
          "Step": 4,
          "Step Description": "User B updates the same field in the data record and saves the changes.",
          "Expected Result": "User B's changes are saved successfully."
        },
        {
          "Step": 5,
          "Step Description": "User A attempts to save their changes to the same field.",
          "Expected Result": "System detects the concurrency conflict and notifies User A, preventing data overwrite or prompting for conflict resolution."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. At least two valid user accounts exist (User A and User B).\n3. Shared data record is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; shared data record ID.",
      "Expected Result": "System prevents data loss or inconsistency by detecting and managing concurrent updates, ensuring data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent update scenario for a single data field.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "SimultaneousRead_XPS-ZENIT-210_ManageConcurrency_ReadConsistency_TEST_Desktop",
      "ID": "TC-271",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the shared data record.",
          "Expected Result": "User A successfully accesses the data record."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same shared data record.",
          "Expected Result": "User B successfully accesses the same data record."
        },
        {
          "Step": 3,
          "Step Description": "User A updates a field in the data record and saves the changes.",
          "Expected Result": "User A's changes are saved successfully."
        },
        {
          "Step": 4,
          "Step Description": "User B refreshes the data record view.",
          "Expected Result": "User B sees the updated value reflecting User A's changes, ensuring read consistency."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. At least two valid user accounts exist (User A and User B).\n3. Shared data record is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; shared data record ID.",
      "Expected Result": "System ensures that all users see the most recent committed data, maintaining consistency across sessions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers read consistency after concurrent update.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "SimultaneousCreate_XPS-ZENIT-210_ManageConcurrency_CreateConflict_TEST_Desktop",
      "ID": "TC-272",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and initiates creation of a new record with a unique identifier (e.g., 'Record123').",
          "Expected Result": "User A is presented with the record creation form."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and initiates creation of a new record with the same unique identifier ('Record123').",
          "Expected Result": "User B is presented with the record creation form."
        },
        {
          "Step": 3,
          "Step Description": "User A completes the form and saves the new record.",
          "Expected Result": "User A's record is created successfully."
        },
        {
          "Step": 4,
          "Step Description": "User B completes the form and attempts to save the new record with the same identifier.",
          "Expected Result": "System detects the duplicate identifier and prevents User B from creating the record, displaying an appropriate error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. At least two valid user accounts exist (User A and User B).\n3. No existing record with identifier 'Record123'.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; unique identifier 'Record123'.",
      "Expected Result": "System prevents creation of duplicate records, ensuring data integrity under concurrent creation attempts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent creation with unique constraint enforcement.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "SimultaneousDelete_XPS-ZENIT-210_ManageConcurrency_DeleteConflict_TEST_Desktop",
      "ID": "TC-273",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the shared data record.",
          "Expected Result": "User A successfully accesses the data record."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same shared data record.",
          "Expected Result": "User B successfully accesses the same data record."
        },
        {
          "Step": 3,
          "Step Description": "User A deletes the data record.",
          "Expected Result": "User A receives confirmation that the record has been deleted."
        },
        {
          "Step": 4,
          "Step Description": "User B attempts to update or delete the same record after User A's deletion.",
          "Expected Result": "System notifies User B that the record no longer exists and prevents the operation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. At least two valid user accounts exist (User A and User B).\n3. Shared data record is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; shared data record ID.",
      "Expected Result": "System prevents operations on deleted records, ensuring data consistency and integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent delete and update scenarios.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "ConcurrentSession_XPS-ZENIT-210_ManageConcurrency_SessionIsolation_TEST_Desktop",
      "ID": "TC-274",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and performs an operation (e.g., updates a record).",
          "Expected Result": "User A's operation is completed successfully."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and performs a different operation (e.g., creates a new record).",
          "Expected Result": "User B's operation is completed successfully."
        },
        {
          "Step": 3,
          "Step Description": "Verify that User A's session and data are not affected by User B's actions, and vice versa.",
          "Expected Result": "Each user's operations are isolated, and no unintended interference occurs between sessions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. At least two valid user accounts exist (User A and User B).",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; sample data for operations.",
      "Expected Result": "System maintains session isolation, ensuring that concurrent users do not interfere with each other's operations.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers session isolation under concurrent usage.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "Settings-XPS211_Access_Settings_Menu_DESKTOP_TEST_Desktop",
      "ID": "TC-275",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the BO ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Locate and click on the 'Settings' menu icon or link in the application interface.",
          "Expected Result": "Settings menu is displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is logged into the BO ZENIT application.\n3. Application is running on a supported browser (e.g., Chrome, Edge).",
      "Execution Mode": "Manual",
      "Functionality": "Settings Menu Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., username: testuser, password: Test@1234)",
      "Expected Result": "User can access the settings menu without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access to the settings menu, not the individual settings.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_Language_Selection_Italian_DESKTOP_TEST_Desktop",
      "ID": "TC-276",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the language selection option is present and only 'Italian' is available for selection.",
          "Expected Result": "Language selection dropdown or toggle is present with only 'Italian' enabled."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Italian' as the language (if not already selected).",
          "Expected Result": "All application texts are displayed in Italian. Date and amount formats are updated to Italian standards (e.g., dd/mm/yyyy, 0.000,00 €)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into the BO ZENIT application.\n2. Settings menu is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Language Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (default language is Italian in Phase 1)",
      "Expected Result": "Italian is the only selectable language. All texts, dates, and amounts are displayed in Italian format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers language selection for Phase 1 (Italian only).",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_Theme_Style_Change_DESKTOP_TEST_Desktop",
      "ID": "TC-277",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the theme style option (light/dark).",
          "Expected Result": "Theme style toggle or selection is visible."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Dark' theme style.",
          "Expected Result": "Application UI switches to dark theme immediately."
        },
        {
          "Step": 4,
          "Step Description": "Select 'Light' theme style.",
          "Expected Result": "Application UI switches back to light theme immediately."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into the BO ZENIT application.\n2. Settings menu is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Theme Style Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "User can switch between light and dark themes, and the UI updates accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers both theme options and immediate UI update.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_Font_Size_Change_DESKTOP_TEST_Desktop",
      "ID": "TC-278",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the font size option (normal/large).",
          "Expected Result": "Font size selection is visible."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Large' font size.",
          "Expected Result": "Application UI updates to display all texts in large font size."
        },
        {
          "Step": 4,
          "Step Description": "Select 'Normal' font size.",
          "Expected Result": "Application UI updates to display all texts in normal font size."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into the BO ZENIT application.\n2. Settings menu is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Font Size Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "User can switch between normal and large font sizes, and the UI updates accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers both font size options and immediate UI update.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_Settings_Persistence_After_Reload_DESKTOP_TEST_Desktop",
      "ID": "TC-279",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the settings menu and change theme style to 'Dark' and font size to 'Large'.",
          "Expected Result": "Application UI updates to dark theme and large font size."
        },
        {
          "Step": 2,
          "Step Description": "Reload the application page or log out and log back in.",
          "Expected Result": "Application reloads or user is logged in again."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the theme style and font size settings persist after reload or re-login.",
          "Expected Result": "Theme style remains 'Dark' and font size remains 'Large' as previously set."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into the BO ZENIT application.\n2. Settings menu is accessible.\n3. User has permission to change settings.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Persistence",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "User settings for theme and font size persist after reload or re-login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers persistence of theme and font size settings only.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_Invalid_Language_Selection_DESKTOP_TEST_Desktop",
      "ID": "TC-280",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to select a language other than Italian (e.g., English) if available.",
          "Expected Result": "No other language options are selectable; only Italian is enabled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into the BO ZENIT application.\n2. Settings menu is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Language Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "User cannot select any language other than Italian in Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Negative test for language selection.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "LogAudit_proj001_log_creation_functionality/Desktop_TEST_Desktop",
      "ID": "TC-281",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a user action that should trigger a log entry (e.g., user login).",
          "Expected Result": "The system processes the user action successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the log/audit system or file.",
          "Expected Result": "The log/audit system is accessible without errors."
        },
        {
          "Step": 3,
          "Step Description": "Search for the log entry corresponding to the performed action.",
          "Expected Result": "A log entry exists for the performed action, containing correct details (timestamp, user ID, action type, status)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Tester has valid credentials with access to the application and log/audit system.\n2. Logging/auditing feature is enabled in the system configuration.\n3. System date and time are correctly set.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; sample user action (e.g., login event).",
      "Expected Result": "A log entry is created for the user action, containing accurate and complete information as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers log creation for standard user actions.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogAudit_proj001_log_integrity_functionality/Desktop_TEST_Desktop",
      "ID": "TC-282",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a user action that should trigger a log entry (e.g., password change).",
          "Expected Result": "The system processes the user action successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the log/audit system or file.",
          "Expected Result": "The log/audit system is accessible without errors."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to modify or delete the log entry created in the previous step (if permissions allow).",
          "Expected Result": "The system prevents unauthorized modification or deletion of log entries, or logs any such attempts."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Tester has valid credentials with access to the application and log/audit system.\n2. Logging/auditing feature is enabled in the system configuration.\n3. System date and time are correctly set.\n4. User has no special permissions to alter logs.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; sample user action (e.g., password change event).",
      "Expected Result": "Log entries cannot be modified or deleted by unauthorized users; any attempt is logged or blocked.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers log integrity and protection against unauthorized changes.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogAudit_proj001_log_content_validation_functionality/Desktop_TEST_Desktop",
      "ID": "TC-283",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a user action that should trigger a log entry (e.g., data export).",
          "Expected Result": "The system processes the user action successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the log/audit system or file.",
          "Expected Result": "The log/audit system is accessible without errors."
        },
        {
          "Step": 3,
          "Step Description": "Locate the log entry for the performed action and review its content.",
          "Expected Result": "The log entry contains all required fields: timestamp, user ID, action type, status, and any relevant metadata."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Tester has valid credentials with access to the application and log/audit system.\n2. Logging/auditing feature is enabled in the system configuration.\n3. System date and time are correctly set.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; sample user action (e.g., data export event).",
      "Expected Result": "Log entry contains all required fields and accurate information as per the logging specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Validates completeness and accuracy of log entry content.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogAudit_proj001_log_error_handling_functionality/Desktop_TEST_Desktop",
      "ID": "TC-284",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a system error or failure (e.g., invalid login attempt).",
          "Expected Result": "The system processes the error scenario and displays an appropriate error message."
        },
        {
          "Step": 2,
          "Step Description": "Access the log/audit system or file.",
          "Expected Result": "The log/audit system is accessible without errors."
        },
        {
          "Step": 3,
          "Step Description": "Search for the log entry corresponding to the error event.",
          "Expected Result": "A log entry exists for the error event, containing correct details (timestamp, user ID, error type, error message)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Tester has valid credentials with access to the application and log/audit system.\n2. Logging/auditing feature is enabled in the system configuration.\n3. System date and time are correctly set.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; error scenario (e.g., invalid login attempt).",
      "Expected Result": "A log entry is created for the error event, containing accurate and complete information as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers logging of error events and system failures.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogAudit_proj001_log_access_control_functionality/Desktop_TEST_Desktop",
      "ID": "TC-285",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the log/audit system with a user account lacking log access permissions.",
          "Expected Result": "Access to the log/audit system is denied, and an appropriate error message is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the log/audit system with a user account that has log access permissions.",
          "Expected Result": "Access to the log/audit system is granted, and the user can view log entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Tester has two user accounts: one with log access permissions and one without.\n2. Logging/auditing feature is enabled in the system configuration.\n3. System date and time are correctly set.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Two user accounts (one with, one without log access permissions).",
      "Expected Result": "Only authorized users can access the log/audit system; unauthorized access is prevented and logged.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control for log/audit system.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogTemplate_XPS-ZENIT-220_LogFormat_DBModification_backend_TEST_Desktop",
      "ID": "TC-286",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a modification operation on the database (e.g., update a user record) via the application.",
          "Expected Result": "A log entry is generated for the modification operation."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the generated log entry from the log storage system.",
          "Expected Result": "The log entry follows the required template format: #*<applicationName>*# #AUDIT# #*<actionCategory>*# User '<username>' having role '<userRole>' has performed the following action: <actionDescription>."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Application is deployed and running in the test environment.\n2. Test user with appropriate permissions is available.\n3. Logging system is configured and accessible for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking / Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample database record to modify.",
      "Expected Result": "A log entry is generated for the DB modification operation, and the log entry strictly follows the specified template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only DB modification log format validation.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogRetention_XPS-ZENIT-220_LogRetentionPeriod_backend_TEST_Desktop",
      "ID": "TC-287",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a modification operation on the database to generate an audit log entry.",
          "Expected Result": "Audit log entry is created and stored."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the standard log retention period to elapse (simulate or configure as needed).",
          "Expected Result": "Standard logs are purged according to retention policy."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the audit log entry generated in Step 1 is still retained after the standard log retention period.",
          "Expected Result": "Audit log entry is still present and accessible in the log storage system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Application is deployed and running in the test environment.\n2. Logging system supports configurable retention periods.\n3. Test user with permissions to generate audit logs is available.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking / Log Retention",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, retention period configuration.",
      "Expected Result": "Audit logs are retained for a longer period than standard logs, as per requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only log retention period for audit logs.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogSafety_XPS-ZENIT-220_LogAccessControl_backend_TEST_Desktop",
      "ID": "TC-288",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access audit logs using an unauthorized user account.",
          "Expected Result": "Access to audit logs is denied."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access audit logs using an authorized user account (if applicable at this phase).",
          "Expected Result": "Access to audit logs is denied, as visibility is not available at this phase."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Application is deployed and running in the test environment.\n2. At least one unauthorized and one authorized user account are available.\n3. Logging system is configured with access controls.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking / Security",
      "Test Type": "vapt",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Unauthorized and authorized user credentials.",
      "Expected Result": "Audit logs are protected from unauthorized access and are not accessible to any user at this phase.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access control for audit logs at current project phase.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogIntegrity_XPS-ZENIT-220_LogImmutability_backend_TEST_Desktop",
      "ID": "TC-289",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Generate an audit log entry by performing a modification operation (e.g., DB update).",
          "Expected Result": "Audit log entry is created and stored."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to modify the content of the generated audit log entry via any available interface or direct storage access.",
          "Expected Result": "Modification attempt is rejected or fails; log entry remains unchanged."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to delete the generated audit log entry via any available interface or direct storage access.",
          "Expected Result": "Deletion attempt is rejected or fails; log entry remains present."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Application is deployed and running in the test environment.\n2. Logging system is configured to enforce immutability.\n3. Test user with permissions to generate audit logs is available.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking / Integrity",
      "Test Type": "vapt",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, access to log storage for negative testing.",
      "Expected Result": "Audit logs are immutable and cannot be modified or deleted once registered.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only immutability of audit logs.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogTemplate_XPS-ZENIT-220_LogFormat_FileModification_backend_TEST_Desktop",
      "ID": "TC-290",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a file modification operation (e.g., upload or edit a file) via the application.",
          "Expected Result": "A log entry is generated for the file modification operation."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the generated log entry from the log storage system.",
          "Expected Result": "The log entry follows the required template format: #*<applicationName>*# #AUDIT# #*<actionCategory>*# User '<username>' having role '<userRole>' has performed the following action: <actionDescription>."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Application is deployed and running in the test environment.\n2. Test user with appropriate permissions is available.\n3. Logging system is configured and accessible for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking / Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample file to modify.",
      "Expected Result": "A log entry is generated for the file modification operation, and the log entry strictly follows the specified template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only file modification log format validation.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogTemplate_XPS-ZENIT-220_LogFormat_ValidationAction_backend_TEST_Desktop",
      "ID": "TC-291",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a validation action (e.g., approve a transaction) via the application.",
          "Expected Result": "A log entry is generated for the validation action."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the generated log entry from the log storage system.",
          "Expected Result": "The log entry follows the required template format: #*<applicationName>*# #AUDIT# #*<actionCategory>*# User '<username>' having role '<userRole>' has performed the following action: <actionDescription>."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Application is deployed and running in the test environment.\n2. Test user with appropriate permissions is available.\n3. Logging system is configured and accessible for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking / Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, sample validation action.",
      "Expected Result": "A log entry is generated for the validation action, and the log entry strictly follows the specified template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only validation action log format validation.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogTemplate_XPS-ZENIT-220_LogFormat_InvalidTemplate_backend_TEST_Desktop",
      "ID": "TC-292",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a modification operation (DB, file, or validation) via the application.",
          "Expected Result": "A log entry is generated for the operation."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the generated log entry from the log storage system.",
          "Expected Result": "The log entry is checked for compliance with the required template format."
        },
        {
          "Step": 3,
          "Step Description": "Intentionally configure the application to generate a log entry with a missing or malformed template field (e.g., missing <userRole>).",
          "Expected Result": "The system rejects or flags the log entry as invalid, or an error is logged indicating non-compliance."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Application is deployed and running in the test environment.\n2. Logging system is configured to validate log template compliance.\n3. Test user with permissions to generate logs is available.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking / Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, configuration to simulate invalid log template.",
      "Expected Result": "Log entries not matching the required template are rejected, flagged, or logged as errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only log template validation for malformed entries.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "ExcelExport-proj_001_CreditManagement_ExportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-293",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with valid credentials and appropriate access profile.",
          "Expected Result": "User is successfully logged in and the Dashboard - Credit Management interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section of the Dashboard.",
          "Expected Result": "Credit Management section is displayed with relevant data visible."
        },
        {
          "Step": 3,
          "Step Description": "Locate and click on the 'Export to Excel' button or link within the Credit Management section.",
          "Expected Result": "System initiates the export process and prompts the user to download an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Download and open the exported Excel file.",
          "Expected Result": "Excel file opens successfully and contains the expected data as per the current interface view, formatted according to the documented export specification."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and required access profile.\n2. Dashboard application is accessible and running.\n3. Credit Management data is available for export.",
      "Execution Mode": "Manual",
      "Functionality": "Excel Export",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample Credit Management data.",
      "Expected Result": "The exported Excel file accurately reflects the data shown in the Credit Management dashboard, formatted as per the specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard export scenario; does not cover export errors or permission restrictions.",
      "_polarion": "Dashboard - Credit Management"
    },
    {
      "Title": "ExcelExport-proj_001_CreditManagement_ExportFunctionality_InvalidAccess/Desktop_TEST_Desktop",
      "ID": "TC-294",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with valid credentials but with a restricted access profile (no export permission).",
          "Expected Result": "User is successfully logged in and the Dashboard - Credit Management interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section of the Dashboard.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to locate the 'Export to Excel' button or link.",
          "Expected Result": "'Export to Excel' option is not visible or is disabled for the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials with restricted access profile (no export permission).\n2. Dashboard application is accessible and running.",
      "Execution Mode": "Manual",
      "Functionality": "Excel Export",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials with restricted access profile.",
      "Expected Result": "Users without export permissions cannot access or use the Excel export functionality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for permission restrictions.",
      "_polarion": "Dashboard - Credit Management"
    },
    {
      "Title": "ExcelExport-proj_001_CreditManagement_ExportFunctionality_LayoutChange/Desktop_TEST_Desktop",
      "ID": "TC-295",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with valid credentials and appropriate access profile.",
          "Expected Result": "User is successfully logged in and the Dashboard - Credit Management interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section of the Dashboard.",
          "Expected Result": "Credit Management section is displayed with relevant data visible."
        },
        {
          "Step": 3,
          "Step Description": "Change the layout or data aggregation settings (e.g., group by different criteria, apply filters).",
          "Expected Result": "Dashboard updates to reflect the new layout or aggregation."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Export to Excel' button or link.",
          "Expected Result": "System initiates the export process and prompts the user to download an Excel file."
        },
        {
          "Step": 5,
          "Step Description": "Download and open the exported Excel file.",
          "Expected Result": "Excel file reflects the current layout and data aggregation as displayed in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and required access profile.\n2. Dashboard application is accessible and running.\n3. Credit Management data is available for export.",
      "Execution Mode": "Manual",
      "Functionality": "Excel Export",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample Credit Management data with layout/aggregation options.",
      "Expected Result": "The exported Excel file matches the current dashboard view, including any applied layout or aggregation changes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers export after layout/aggregation changes.",
      "_polarion": "Dashboard - Credit Management"
    },
    {
      "Title": "ExcelExport-proj_001_CreditManagement_ExportFunctionality_EmptyData/Desktop_TEST_Desktop",
      "ID": "TC-296",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with valid credentials and appropriate access profile.",
          "Expected Result": "User is successfully logged in and the Dashboard - Credit Management interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section of the Dashboard where no data is available (e.g., after applying filters that yield no results).",
          "Expected Result": "Credit Management section displays a message indicating no data is available."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Export to Excel' button or link.",
          "Expected Result": "System initiates the export process and prompts the user to download an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Download and open the exported Excel file.",
          "Expected Result": "Excel file is generated and clearly indicates that no data was available for export (e.g., contains headers only or a 'No data available' message)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and required access profile.\n2. Dashboard application is accessible and running.\n3. Credit Management data is not available (e.g., due to filters).",
      "Execution Mode": "Manual",
      "Functionality": "Excel Export",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Credit Management section with no data.",
      "Expected Result": "The exported Excel file is generated even when no data is available, and the file clearly indicates the absence of data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers export with empty data scenario.",
      "_polarion": "Dashboard - Credit Management"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_ValidFilters_DESKTOP_TEST_Desktop",
      "ID": "TC-297",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed with all search filters visible."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values in one or more search filters (e.g., select 'Zona', enter 'IdRice' as 12345, select 'Channel 1' as 'BRANDED').",
          "Expected Result": "Filters accept the input values without error."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System performs the search and displays a table/list of PoS matching the criteria, with each row representing a single PoS and columns for all required fields (IdRice, Company Name, etc.)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is assigned any valid ZENIT profile.\n3. ZENIT application is accessible and operational.\n4. User is logged in and has navigated to the 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Example filter values: Zona='North', IdRice=12345, Channel 1='BRANDED'.",
      "Expected Result": "A list of PoS matching the entered search criteria is displayed in a table with all required columns.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_NoResults_DESKTOP_TEST_Desktop",
      "ID": "TC-298",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter search criteria that do not match any PoS (e.g., IdRice=9999999, Company Name='NonExistent').",
          "Expected Result": "Filters accept the input values."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System displays a notification indicating that no results were found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User is logged in to ZENIT.\n2. User has navigated to the 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search criteria: IdRice=9999999, Company Name='NonExistent'.",
      "Expected Result": "A notification is displayed indicating that no PoS were found matching the search criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_InvalidInput_DESKTOP_TEST_Desktop",
      "ID": "TC-299",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter invalid data in one or more input fields (e.g., enter letters in 'IdRice', enter 10 digits in 'Vat Number').",
          "Expected Result": "System detects the invalid input and displays an error message indicating the specific field(s) with errors."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to click the 'SEARCH' button while errors are present.",
          "Expected Result": "System prevents the search and prompts the user to correct the errors before proceeding."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User is logged in to ZENIT.\n2. User has navigated to the 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Search Input Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid input examples: IdRice='ABC', Vat Number='1234567890' (should be 11 digits), Tax Code='123' (should be 16 chars).",
      "Expected Result": "System displays appropriate error messages for invalid input and does not perform the search until errors are corrected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_ResetFilters_DESKTOP_TEST_Desktop",
      "ID": "TC-300",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter values in one or more search filters.",
          "Expected Result": "Filters accept the input values."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'RESET' button.",
          "Expected Result": "All search filters are cleared and reset to their default state."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User is logged in to ZENIT.\n2. User has navigated to the 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Search Filter Reset",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Example filter values: Zona='South', IdRice=54321.",
      "Expected Result": "All search filters are cleared and ready for a new search.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_SelectSinglePoS_DESKTOP_TEST_Desktop",
      "ID": "TC-301",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function and perform a search that returns at least one result.",
          "Expected Result": "A list of PoS is displayed in a table."
        },
        {
          "Step": 3,
          "Step Description": "Click the edit icon next to a PoS in the results table.",
          "Expected Result": "The system retrieves and displays the details of the selected PoS on the 'Single PoS' screen, with the header showing all key information and the default tab 'Credit Management' visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User is logged in to ZENIT.\n2. At least one PoS exists in the system matching the search criteria.\n3. User has navigated to the 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Details View",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search criteria returning at least one PoS.",
      "Expected Result": "Details of the selected PoS are displayed with all header information and the default tab loaded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_ManualRefreshSinglePoS_DESKTOP_TEST_Desktop",
      "ID": "TC-302",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function and perform a search that returns at least one result.",
          "Expected Result": "A list of PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS by clicking the edit icon to open the 'Single PoS' screen.",
          "Expected Result": "Details of the selected PoS are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'REFRESH' button on the 'Single PoS' screen.",
          "Expected Result": "The system updates and refreshes the PoS data, displaying the latest information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User is logged in to ZENIT.\n2. At least one PoS exists in the system.\n3. User has navigated to the 'Single PoS' screen for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Refresh",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search criteria returning at least one PoS.",
      "Expected Result": "PoS data is refreshed and the latest information is displayed on the 'Single PoS' screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_AutoCompleteCity_DESKTOP_TEST_Desktop",
      "ID": "TC-303",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Begin typing a city name in the 'City (Località)' field.",
          "Expected Result": "An auto-complete dropdown appears with matching city names."
        },
        {
          "Step": 4,
          "Step Description": "Select a city from the auto-complete suggestions.",
          "Expected Result": "The selected city is populated in the 'City' field."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User is logged in to ZENIT.\n2. User has navigated to the 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Search Auto-Completion",
      "Test Type": "ux_ui",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials; Example city: 'Milano'.",
      "Expected Result": "Auto-complete suggestions are shown and can be selected for the 'City' field.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_SectionNavigation_DESKTOP_TEST_Desktop",
      "ID": "TC-304",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function and perform a search that returns at least one result.",
          "Expected Result": "A list of PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS to open the 'Single PoS' screen.",
          "Expected Result": "Details of the selected PoS are displayed with the header visible."
        },
        {
          "Step": 4,
          "Step Description": "Click on each available section/tab (e.g., 'Credit Management', 'PoS Master Data', 'Contracts', etc.) one by one.",
          "Expected Result": "Each section/tab loads asynchronously, displaying the relevant data without reloading the entire page. The header remains fixed and visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User is logged in to ZENIT.\n2. At least one PoS exists in the system.\n3. User has navigated to the 'Single PoS' screen for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Section Navigation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; Search criteria returning at least one PoS.",
      "Expected Result": "Each section/tab loads asynchronously with the header always visible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "ExportListPoS_XPS-ZENIT-311_ExportToExcel_ListOfPoS_TEST_Desktop",
      "ID": "TC-305",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a search that returns a list of PoS (Points of Sale).",
          "Expected Result": "A table with multiple PoS entries is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Export to Excel' button for the list of PoS.",
          "Expected Result": "A download of an Excel file is initiated."
        },
        {
          "Step": 4,
          "Step Description": "Save the downloaded file locally.",
          "Expected Result": "File is saved on the local machine."
        },
        {
          "Step": 5,
          "Step Description": "Verify the file name format is 'PoSFound_<yyyymmddhhmm>.xlsx', where <yyyymmddhhmm> matches the extraction timestamp.",
          "Expected Result": "File name matches the required format and timestamp."
        },
        {
          "Step": 6,
          "Step Description": "Open the Excel file and verify that all data presented in the table after the search is included in the file.",
          "Expected Result": "Excel file contains all data as displayed in the search result table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. At least one PoS exists in the system.\n3. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search criteria returning multiple PoS.",
      "Expected Result": "Excel file named 'PoSFound_<yyyymmddhhmm>.xlsx' is downloaded, containing all data from the search result table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "ExportSinglePoS_XPS-ZENIT-311_ExportToExcel_SinglePoS_TEST_Desktop",
      "ID": "TC-306",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Search for a specific Single PoS using its unique identifier.",
          "Expected Result": "Details of the Single PoS are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Export to Excel' button for the Single PoS.",
          "Expected Result": "A download of an Excel file is initiated."
        },
        {
          "Step": 4,
          "Step Description": "Save the downloaded file locally.",
          "Expected Result": "File is saved on the local machine."
        },
        {
          "Step": 5,
          "Step Description": "Verify the file name format is 'SinglePoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx', where <idrice> and <zonarice> match the PoS details and <yyyymmddhhmm> matches the extraction timestamp.",
          "Expected Result": "File name matches the required format with correct idrice, zonarice, and timestamp."
        },
        {
          "Step": 6,
          "Step Description": "Open the Excel file and verify that it includes all header data and all information related to all sections for the Single PoS.",
          "Expected Result": "Excel file contains all header and section data for the Single PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. At least one Single PoS exists with known idrice and zonarice.\n3. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Single PoS with known idrice and zonarice.",
      "Expected Result": "Excel file named 'SinglePoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx' is downloaded, containing all header and section data for the Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "ExportRelatedPoS_XPS-ZENIT-311_ExportToExcel_RelatedPoS_TEST_Desktop",
      "ID": "TC-307",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Search for a Single PoS and navigate to its Related PoS section.",
          "Expected Result": "A table with Related PoS entries is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Export to Excel' button for the Related PoS list.",
          "Expected Result": "A download of an Excel file is initiated."
        },
        {
          "Step": 4,
          "Step Description": "Save the downloaded file locally.",
          "Expected Result": "File is saved on the local machine."
        },
        {
          "Step": 5,
          "Step Description": "Verify the file name format is 'RelatedPoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx', where <idrice> and <zonarice> match the Single PoS details and <yyyymmddhhmm> matches the extraction timestamp.",
          "Expected Result": "File name matches the required format with correct idrice, zonarice, and timestamp."
        },
        {
          "Step": 6,
          "Step Description": "Open the Excel file and verify that it includes all Related PoS data as presented in the table.",
          "Expected Result": "Excel file contains all data for Related PoS as displayed in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. At least one Single PoS with Related PoS exists.\n3. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Single PoS with Related PoS and known idrice, zonarice.",
      "Expected Result": "Excel file named 'RelatedPoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx' is downloaded, containing all data for Related PoS as displayed in the table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "ExportToExcel_XPS-ZENIT-311_ExportToExcel_InvalidSearchResult_TEST_Desktop",
      "ID": "TC-308",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a search that returns no PoS results.",
          "Expected Result": "A message indicating 'No results found' or an empty table is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to click the 'Export to Excel' button.",
          "Expected Result": "Export to Excel button is disabled or an appropriate message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. No PoS matches the search criteria.\n3. User is on a desktop computer.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search criteria returning zero PoS.",
      "Expected Result": "Export to Excel is not available or provides a clear message when no search results are present.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "ExportToExcel_XPS-ZENIT-311_ExportToExcel_FileNameTimestampBoundary_TEST_Desktop",
      "ID": "TC-309",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a search for PoS just before and after a minute changes (e.g., at 12:59 and 13:00).",
          "Expected Result": "PoS search results are displayed for both times."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Export to Excel' button for each search result.",
          "Expected Result": "A download of an Excel file is initiated for each search."
        },
        {
          "Step": 4,
          "Step Description": "Save both downloaded files locally.",
          "Expected Result": "Files are saved on the local machine."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the <yyyymmddhhmm> portion of each file name correctly reflects the extraction time, especially across the minute boundary.",
          "Expected Result": "File names accurately reflect the correct timestamp for each extraction."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. System clock is synchronized.\n3. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; System clock reference.",
      "Expected Result": "Excel file names reflect the correct extraction timestamp, including boundary conditions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "CreditManagement-XPS330_SectionDefaultActive_Dashboard_TEST_Desktop",
      "ID": "TC-310",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the list of PoS and select an individual PoS to view its details.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the sections displayed by default on the PoS details page.",
          "Expected Result": "The 'Credit Management' section is active and visible by default, providing an overview of credit lines/products."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to PoS details.\n2. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Management Section Activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with credit lines configured.",
      "Expected Result": "The 'Credit Management' section is automatically active and visible when viewing an individual PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_NoCreditLines_ZeroValues_Dashboard_TEST_Desktop",
      "ID": "TC-311",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the list of PoS and select a PoS that has no credit lines associated.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the 'Credit Management' section for all credit line/product entries.",
          "Expected Result": "All displayed values (Base, Extension, Total, Consumed, % Consumed, Residue) are zero for each credit line/product."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to PoS details.\n2. At least one PoS exists with no credit lines configured.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Management Zero Values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with no credit lines.",
      "Expected Result": "All credit line/product values are displayed as zero when no credit lines are present.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_DailyCreditLines_Display_Dashboard_TEST_Desktop",
      "ID": "TC-312",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the list of PoS and select a PoS with daily credit lines configured.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "In the 'Credit Management' section, locate the 'FIDO SIMP GG' (Daily) table.",
          "Expected Result": "The table for daily credit lines is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following product lines are present as rows: TOTOCALCIO, IPPICA, SPORT QF, VIRTUAL, and GLOBALE.",
          "Expected Result": "All specified product lines are present as rows in the table."
        },
        {
          "Step": 5,
          "Step Description": "For each row, verify that the columns displayed are: Base Amount, Extension Amount, Total, Consumed, % Consumed, Residue.",
          "Expected Result": "Each row contains the correct columns with appropriate values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to PoS details.\n2. At least one PoS exists with daily credit lines configured.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Credit Lines Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with daily credit lines (TOTOCALCIO, IPPICA, SPORT QF, VIRTUAL, GLOBALE).",
      "Expected Result": "All daily credit lines and their required columns are displayed correctly in the 'Credit Management' section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_WeeklyCreditLines_Display_Dashboard_TEST_Desktop",
      "ID": "TC-313",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the list of PoS and select a PoS with weekly credit lines configured.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "In the 'Credit Management' section, locate the 'FIDO SIMP WK' (Weekly) table.",
          "Expected Result": "The table for weekly credit lines is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following product lines are present as rows: TOTOCALCIO, IPPICA, SPORT QF, VIRTUAL, and GLOBALE.",
          "Expected Result": "All specified product lines are present as rows in the table."
        },
        {
          "Step": 5,
          "Step Description": "For each row, verify that the columns displayed are: Base Amount, Extension Amount, Total, Consumed, % Consumed, Residue.",
          "Expected Result": "Each row contains the correct columns with appropriate values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to PoS details.\n2. At least one PoS exists with weekly credit lines configured.",
      "Execution Mode": "Manual",
      "Functionality": "Weekly Credit Lines Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with weekly credit lines (TOTOCALCIO, IPPICA, SPORT QF, VIRTUAL, GLOBALE).",
      "Expected Result": "All weekly credit lines and their required columns are displayed correctly in the 'Credit Management' section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_GeoWeeklyCreditLines_Display_Dashboard_TEST_Desktop",
      "ID": "TC-314",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the list of PoS and select a PoS with GEO weekly credit lines configured.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "In the 'Credit Management' section, locate the 'FIDO GEO' (Weekly) table.",
          "Expected Result": "The table for GEO weekly credit lines is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following product lines are present as rows: GNTN, CORNER, ONLINE, and TOTALE (summary).",
          "Expected Result": "All specified product lines are present as rows in the table."
        },
        {
          "Step": 5,
          "Step Description": "For each row, verify that the columns displayed are: Base Amount, Extension Amount, Total, Consumed, % Consumed, Residue.",
          "Expected Result": "Each row contains the correct columns with appropriate values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to PoS details.\n2. At least one PoS exists with GEO weekly credit lines configured.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Weekly Credit Lines Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with GEO weekly credit lines (GNTN, CORNER, ONLINE, TOTALE).",
      "Expected Result": "All GEO weekly credit lines and their required columns are displayed correctly in the 'Credit Management' section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_CreditLineFieldsCalculation_Dashboard_TEST_Desktop",
      "ID": "TC-315",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the list of PoS and select a PoS with at least one credit line configured.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "In the 'Credit Management' section, identify a credit line with known Base Amount and Extension Amount values.",
          "Expected Result": "A credit line with known values is identified."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'Total' value equals the sum of 'Base Amount' and 'Extension Amount'.",
          "Expected Result": "'Total' = 'Base Amount' + 'Extension Amount'."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the '% Consumed' value equals ('Consumed' / 'Total') * 100, formatted as a percentage.",
          "Expected Result": "'% Consumed' is correctly calculated and displayed as a percentage."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the 'Residue' value equals 'Total' minus 'Consumed'.",
          "Expected Result": "'Residue' = 'Total' - 'Consumed'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to PoS details.\n2. At least one PoS exists with at least one credit line with known values for Base, Extension, and Consumed.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Field Calculations",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with credit line having known Base, Extension, and Consumed values.",
      "Expected Result": "All calculated fields (Total, % Consumed, Residue) are accurate for each credit line/product.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_TotalsSection_DisplayAndCalculation_Dashboard_TEST_Desktop",
      "ID": "TC-316",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the list of PoS and select a PoS with multiple credit lines (daily and weekly) configured.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Scroll to the bottom of the 'Credit Management' section to locate the Totals Section.",
          "Expected Result": "The Totals Section is visible at the bottom of the page."
        },
        {
          "Step": 4,
          "Step Description": "Verify that 'Total Daily Credits' is displayed and equals the sum of all daily credit line metrics.",
          "Expected Result": "'Total Daily Credits' is present and correctly calculated."
        },
        {
          "Step": 5,
          "Step Description": "Verify that 'Total Weekly Credits (Rolling + Static)' is displayed and equals the sum of all weekly credit line metrics (including both rolling and static values).",
          "Expected Result": "'Total Weekly Credits (Rolling + Static)' is present and correctly calculated."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to PoS details.\n2. At least one PoS exists with both daily and weekly credit lines configured.",
      "Execution Mode": "Manual",
      "Functionality": "Totals Section Display and Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with daily and weekly credit lines.",
      "Expected Result": "The Totals Section is displayed at the bottom of the page, and all totals are accurately calculated and displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_InvalidDataHandling_Dashboard_TEST_Desktop",
      "ID": "TC-317",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the list of PoS and select a PoS with a credit line containing invalid or missing data (e.g., negative values, nulls).",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the 'Credit Management' section for the affected credit line/product.",
          "Expected Result": "The system displays a clear error message or handles the invalid data gracefully (e.g., displays zero or N/A), without crashing or displaying misleading information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to PoS details.\n2. At least one PoS exists with a credit line containing invalid or missing data.",
      "Execution Mode": "Manual",
      "Functionality": "Invalid Data Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with credit line containing invalid or missing data.",
      "Expected Result": "Invalid or missing data in credit lines is handled gracefully, with appropriate messaging and no system errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "PoSMasterData-XPS335_PoSDataVisualization_ViewAllFields_DESKTOP_TEST_Desktop",
      "ID": "TC-318",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has full access to PoS Master Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following PoS data fields are visible: PV Type, Business Type, Network Cluster, Tax Code PoS, Address, Fraction, Province Code, Postal Code, Region, Country, Phone, Phone 2, email.",
          "Expected Result": "All listed PoS data fields are displayed with correct and non-empty values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with full access to PoS Master Data.\n2. At least one PoS entry exists in the system with all fields populated.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with full access; PoS entry with all PoS data fields populated.",
      "Expected Result": "All PoS data fields are displayed correctly for the selected PoS entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoSMasterData-XPS335_HolderDataVisualization_ViewAllFields_DESKTOP_TEST_Desktop",
      "ID": "TC-319",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to Holder Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following Holder data fields are visible: Last Name of Holder, First Name of Holder, Tax Code of Holder, Mobile of Holder, Mobile of Holder 2.",
          "Expected Result": "All listed Holder data fields are displayed with correct and non-empty values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to Holder Data.\n2. At least one PoS entry exists with Holder data populated.",
      "Execution Mode": "Manual",
      "Functionality": "Holder Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Holder Data access; PoS entry with Holder data fields populated.",
      "Expected Result": "All Holder data fields are displayed correctly for the selected PoS entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoSMasterData-XPS335_LdBDataVisualization_ViewMultipleLdBEntries_DESKTOP_TEST_Desktop",
      "ID": "TC-320",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to LdB Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry with multiple Lines of Business (LdB).",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each LdB, the following fields are visible: LdB Name, LdB Status, Date of the last transfer.",
          "Expected Result": "All LdB entries are displayed with their respective fields populated and correct."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to LdB Data.\n2. At least one PoS entry with multiple LdB records populated.",
      "Execution Mode": "Manual",
      "Functionality": "LdB Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with LdB Data access; PoS entry with multiple LdB records.",
      "Expected Result": "All LdB data fields are displayed correctly for each LdB entry associated with the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoSMasterData-XPS335_BettingDataVisualization_ViewAllFields_DESKTOP_TEST_Desktop",
      "ID": "TC-321",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to Betting Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry with Betting Data populated.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following Betting data fields are visible: SIMP Code, SIMP Alias, Sports Concession Code, Horse-Racing Concession Code, Sports Grant Code, Horse-Racing Grant Code.",
          "Expected Result": "All listed Betting data fields are displayed with correct and non-empty values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to Betting Data.\n2. At least one PoS entry with Betting Data fields populated.",
      "Execution Mode": "Manual",
      "Functionality": "Betting Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Betting Data access; PoS entry with Betting Data fields populated.",
      "Expected Result": "All Betting data fields are displayed correctly for the selected PoS entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoSMasterData-XPS335_TerminalDataVisualization_ViewAllTerminalTypes_DESKTOP_TEST_Desktop",
      "ID": "TC-322",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to Terminal Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry with multiple terminal types.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each terminal type, the Terminal Type and Number of Terminals by Type are displayed.",
          "Expected Result": "All terminal types and their respective counts are displayed correctly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to Terminal Data.\n2. At least one PoS entry with multiple terminal types and counts populated.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Terminal Data access; PoS entry with multiple terminal types.",
      "Expected Result": "All terminal types and their counts are displayed correctly for the selected PoS entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoSMasterData-XPS335_OtherDataVisualization_ViewAllOtherFields_DESKTOP_TEST_Desktop",
      "ID": "TC-323",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to Other Data fields.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry with Other Data fields populated.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are visible: Prepaid flag, Mysisal flag, Activation date of the channel 1, Date of the last transfer (Voltura), AM (last name and first name).",
          "Expected Result": "All listed Other Data fields are displayed with correct and non-empty values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to Other Data fields.\n2. At least one PoS entry with Other Data fields populated.",
      "Execution Mode": "Manual",
      "Functionality": "Other Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Other Data access; PoS entry with Other Data fields populated.",
      "Expected Result": "All Other Data fields are displayed correctly for the selected PoS entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoSMasterData-XPS335_UserProfileBasedDataVisibility_RestrictedProfile_DESKTOP_TEST_Desktop",
      "ID": "TC-324",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has restricted access (e.g., cannot view Holder Data).",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only the data fields permitted by the user profile are visible, and restricted fields (e.g., Holder Data) are not displayed.",
          "Expected Result": "Only authorized data fields are visible; restricted fields are hidden or inaccessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with restricted access (e.g., no Holder Data permission).\n2. At least one PoS entry exists.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Data Restriction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with restricted access; PoS entry with all data fields populated.",
      "Expected Result": "Data visibility is correctly enforced based on user profile permissions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoSMasterData-XPS335_PoSDataVisualization_MissingDataFields_DESKTOP_TEST_Desktop",
      "ID": "TC-325",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to PoS Master Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry with some PoS data fields intentionally left empty or missing.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the system displays missing or empty PoS data fields (e.g., blank, placeholder, or error message).",
          "Expected Result": "Missing or empty fields are displayed according to UI/UX guidelines (e.g., as blank or with a standard placeholder)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to PoS Master Data.\n2. At least one PoS entry with some PoS data fields left empty or missing.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Visualization",
      "Test Type": "ux_ui",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "User credentials with access; PoS entry with missing data fields.",
      "Expected Result": "Missing or empty PoS data fields are handled gracefully and consistently in the UI.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "ContractsList_XPS-ZENIT-340_Dashboard_DisplayContractsList_DESKTOP_TEST_Desktop",
      "ID": "TC-326",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the list of contracts displayed in the section.",
          "Expected Result": "A list of contracts associated with the PoS is displayed, each showing Contract Type, Contract Name, and Upload Date."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS.\n2. At least one contract associated with the PoS in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Contracts List Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with contracts, contract data (type, name, upload date).",
      "Expected Result": "The 'Contracts' section displays a list of contracts for the PoS, each with Contract Type, Contract Name, and Upload Date.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "ContractsList_XPS-ZENIT-340_Dashboard_EmptyContractsList_DESKTOP_TEST_Desktop",
      "ID": "TC-327",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS with no contracts associated.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the content of the contracts list.",
          "Expected Result": "A message indicating that no contracts are available is displayed, and no contract entries are shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the Dashboard and a PoS with no contracts associated.\n2. No contracts present for the selected PoS in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Contracts List Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with no contracts.",
      "Expected Result": "If no contracts are associated with the PoS, the section displays an appropriate message and no contract entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "ContractsList_XPS-ZENIT-340_Dashboard_ContractFieldsValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-328",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "For each contract listed, verify that the Contract Type, Contract Name, and Upload Date are displayed and correspond to the data in the backend/system.",
          "Expected Result": "Each contract entry displays the correct Contract Type, Contract Name, and Upload Date as per backend data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS.\n2. At least one contract with known data associated with the PoS in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Contracts List Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with contracts, backend contract data for validation.",
      "Expected Result": "All contract entries display accurate Contract Type, Contract Name, and Upload Date matching backend records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "ContractsList_XPS-ZENIT-340_Dashboard_ViewContractDocument_DESKTOP_TEST_Desktop",
      "ID": "TC-329",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the view/open icon or link for a contract document.",
          "Expected Result": "The system redirects or opens the contract document using the currently in-use document management system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application, Integrated Document Management System",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS.\n2. At least one contract with an associated document accessible via the current document management system.",
      "Execution Mode": "Manual",
      "Functionality": "Contract Document Viewing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, PoS with contracts, accessible contract documents.",
      "Expected Result": "Clicking to view a contract document opens it in the currently used document management system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover document content validation, only access.",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "ContractsList_XPS-ZENIT-340_Dashboard_ContractTypeFilter_DESKTOP_TEST_Desktop",
      "ID": "TC-330",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "If available, use the filter or sort function to display contracts by Contract Type (e.g., Betting, VLT, AWP, PGS, PGI).",
          "Expected Result": "The contracts list updates to show only contracts of the selected type."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS.\n2. Multiple contracts of different types associated with the PoS.\n3. Filtering functionality is available in the UI.",
      "Execution Mode": "Manual",
      "Functionality": "Contracts List Filtering",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "User credentials, PoS with contracts of various types.",
      "Expected Result": "Contracts list can be filtered by Contract Type, displaying only relevant contracts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Assumes filter functionality is implemented.",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_DisplayGuaranteesData_DESKTOP_TEST_Desktop",
      "ID": "TC-331",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Guarantees' section for the selected PoS.",
          "Expected Result": "The 'Guarantees' section is displayed, showing guarantee-related data fields."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present: Start Date, Expiration Date, Bank Guarantee, Deposits, Reserves, Total Guarantees.",
          "Expected Result": "All specified fields are visible in the 'Guarantees' section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS assigned.\n2. PoS has guarantee data configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with PoS access; PoS with guarantee data (sample: Start Date: 01/01/2023, Expiration Date: 31/12/2023, Bank Guarantee: 10,000.00 €, Deposits: 2,000.00 €, Reserves: 1,000.00 €).",
      "Expected Result": "All guarantee data fields are displayed for the selected PoS in the correct section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_ValidateDateFormats_DESKTOP_TEST_Desktop",
      "ID": "TC-332",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application and navigate to the 'Guarantees' section for a PoS.",
          "Expected Result": "The 'Guarantees' section is displayed with guarantee data."
        },
        {
          "Step": 2,
          "Step Description": "Check the format of the 'Start Date' and 'Expiration Date' fields.",
          "Expected Result": "Dates are displayed in the format dd/mm/yyyy or another standard date format (e.g., 15/03/2023)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with Dashboard access.\n2. PoS with guarantee data including valid dates.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Start Date: 15/03/2023, Expiration Date: 15/03/2024.",
      "Expected Result": "Date fields are displayed in the correct, standard format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_ValidateMonetaryFormats_DESKTOP_TEST_Desktop",
      "ID": "TC-333",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Dashboard and navigate to the 'Guarantees' section for a PoS with monetary values.",
          "Expected Result": "Guarantees section is displayed with monetary fields."
        },
        {
          "Step": 2,
          "Step Description": "Verify the format of 'Bank Guarantee', 'Deposits', 'Reserves', and 'Total Guarantees' fields.",
          "Expected Result": "All monetary values are displayed in the correct format (e.g., 10,000.00 €)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with Dashboard access.\n2. PoS with monetary guarantee data.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Bank Guarantee: 10,000.00 €, Deposits: 2,000.00 €, Reserves: 1,000.00 €, Total Guarantees: 13,000.00 €.",
      "Expected Result": "All monetary fields are displayed in the correct format with currency symbol and decimal separator.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_ValidateTotalGuaranteesCalculation_DESKTOP_TEST_Desktop",
      "ID": "TC-334",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the 'Guarantees' section for a PoS with known guarantee values.",
          "Expected Result": "Guarantees section is displayed with all relevant fields."
        },
        {
          "Step": 2,
          "Step Description": "Note the values of 'Bank Guarantee', 'Deposits', and 'Reserves'.",
          "Expected Result": "Values are visible and readable."
        },
        {
          "Step": 3,
          "Step Description": "Manually calculate the expected 'Total Guarantees' value (Bank Guarantee + Deposits + Reserves).",
          "Expected Result": "Manual calculation is completed."
        },
        {
          "Step": 4,
          "Step Description": "Compare the displayed 'Total Guarantees' value with the manually calculated value.",
          "Expected Result": "Displayed 'Total Guarantees' matches the sum of the other three fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with Dashboard access.\n2. PoS with guarantee data (e.g., Bank Guarantee: 10,000.00 €, Deposits: 2,000.00 €, Reserves: 1,000.00 €).",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Bank Guarantee: 10,000.00 €, Deposits: 2,000.00 €, Reserves: 1,000.00 € (Total should be 13,000.00 €).",
      "Expected Result": "'Total Guarantees' is correctly calculated and displayed as the sum of Bank Guarantee, Deposits, and Reserves.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_HandleMissingGuaranteeData_DESKTOP_TEST_Desktop",
      "ID": "TC-335",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the 'Guarantees' section for a PoS with missing or incomplete guarantee data (e.g., no Deposits or Reserves).",
          "Expected Result": "Guarantees section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe how the system displays fields with missing data.",
          "Expected Result": "Fields with missing data are displayed as empty, zero, or with a suitable placeholder (e.g., 'N/A')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with Dashboard access.\n2. PoS with incomplete guarantee data (e.g., only Bank Guarantee present).",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Bank Guarantee: 10,000.00 €, Deposits: (missing), Reserves: (missing).",
      "Expected Result": "System gracefully handles missing guarantee data, displaying empty, zero, or placeholder values as appropriate.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_ValidateNegativeAndZeroValues_DESKTOP_TEST_Desktop",
      "ID": "TC-336",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the 'Guarantees' section for a PoS with zero or negative values in guarantee fields.",
          "Expected Result": "Guarantees section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify how the system displays zero or negative values for Bank Guarantee, Deposits, and Reserves.",
          "Expected Result": "Zero values are displayed as '0.00 €'; negative values are either prevented or displayed with a '-' sign and currency symbol."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with Dashboard access.\n2. PoS with zero or negative guarantee values.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Bank Guarantee: 0.00 €, Deposits: -500.00 €, Reserves: 0.00 €.",
      "Expected Result": "System displays zero and negative values in a clear and unambiguous manner, following monetary formatting rules.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "UnpaidsDashboard_XPS-350_CurrentYear_Display_SinglePoS_TEST_Desktop",
      "ID": "TC-337",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Unpaids' section for the selected PoS.",
          "Expected Result": "The 'Unpaids' section is displayed, showing data related to the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Current Year' value is displayed for Unpaids.",
          "Expected Result": "The 'Current Year' Unpaids count is visible and populated with a numeric value."
        },
        {
          "Step": 4,
          "Step Description": "Check that the value corresponds to the number of defaults recorded from January 1st of the current year to today (cross-check with backend or database if possible).",
          "Expected Result": "The displayed value matches the backend/database count for the current year."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and at least one PoS assigned.\n2. The system contains Unpaids data for the current year.\n3. The Zenit application is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend Unpaids data for current year.",
      "Expected Result": "The 'Current Year' Unpaids value is correctly displayed and matches the backend data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the 'Current Year' display for Unpaids.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "UnpaidsDashboard_XPS-350_Rolling6Months_Display_SinglePoS_TEST_Desktop",
      "ID": "TC-338",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Unpaids' section for the selected PoS.",
          "Expected Result": "The 'Unpaids' section is displayed, showing data related to the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Rolling 6 months' value is displayed for Unpaids.",
          "Expected Result": "The 'Rolling 6 months' Unpaids count is visible and populated with a numeric value."
        },
        {
          "Step": 4,
          "Step Description": "Check that the value corresponds to the number of defaults recorded in the last 6 months from today (cross-check with backend or database if possible).",
          "Expected Result": "The displayed value matches the backend/database count for the last 6 months."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and at least one PoS assigned.\n2. The system contains Unpaids data for the last 6 months.\n3. The Zenit application is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend Unpaids data for last 6 months.",
      "Expected Result": "The 'Rolling 6 months' Unpaids value is correctly displayed and matches the backend data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the 'Rolling 6 months' display for Unpaids.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "UnpaidsDashboard_XPS-350_Rolling12Months_Display_SinglePoS_TEST_Desktop",
      "ID": "TC-339",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Unpaids' section for the selected PoS.",
          "Expected Result": "The 'Unpaids' section is displayed, showing data related to the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Rolling 12 months' value is displayed for Unpaids.",
          "Expected Result": "The 'Rolling 12 months' Unpaids count is visible and populated with a numeric value."
        },
        {
          "Step": 4,
          "Step Description": "Check that the value corresponds to the number of defaults recorded in the last 12 months from today (cross-check with backend or database if possible).",
          "Expected Result": "The displayed value matches the backend/database count for the last 12 months."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and at least one PoS assigned.\n2. The system contains Unpaids data for the last 12 months.\n3. The Zenit application is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend Unpaids data for last 12 months.",
      "Expected Result": "The 'Rolling 12 months' Unpaids value is correctly displayed and matches the backend data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the 'Rolling 12 months' display for Unpaids.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "UnpaidsDashboard_XPS-350_NoData_SinglePoS_TEST_Desktop",
      "ID": "TC-340",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a single PoS that has no Unpaids data for the current year, last 6 months, or last 12 months.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Unpaids' section for the selected PoS.",
          "Expected Result": "The 'Unpaids' section is displayed, showing data related to the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Current Year', 'Rolling 6 months', and 'Rolling 12 months' values are displayed as zero or with an appropriate 'no data' indicator.",
          "Expected Result": "All three values are displayed as zero or with a clear 'no data' message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and a PoS with no Unpaids data for any period.\n2. The Zenit application is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with no Unpaids data.",
      "Expected Result": "The dashboard displays zero or a 'no data' indicator for all Unpaids periods when no data exists.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers the scenario where no Unpaids data exists for any period.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "UnpaidsDashboard_XPS-350_DataConsistency_SinglePoS_TEST_Desktop",
      "ID": "TC-341",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Unpaids' section for the selected PoS.",
          "Expected Result": "The 'Unpaids' section is displayed, showing data related to the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Record the values displayed for 'Current Year', 'Rolling 6 months', and 'Rolling 12 months'.",
          "Expected Result": "Values for all three periods are visible and can be noted."
        },
        {
          "Step": 4,
          "Step Description": "Query the backend or database for the number of Unpaids for the same periods for the selected PoS.",
          "Expected Result": "Backend/database returns the correct counts for each period."
        },
        {
          "Step": 5,
          "Step Description": "Compare the dashboard values with the backend/database values for each period.",
          "Expected Result": "Dashboard values match backend/database values for all periods."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and at least one PoS assigned.\n2. Access to backend or database for data verification.\n3. The Zenit application is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, backend Unpaids data for all periods.",
      "Expected Result": "Dashboard values for all Unpaids periods are consistent with backend/database values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data consistency between frontend and backend for all Unpaids periods.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_DisplayLastBorderoNumber_Desktop_TEST_Desktop",
      "ID": "TC-342",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible."
        },
        {
          "Step": 3,
          "Step Description": "Observe the field labeled 'Last Borderò Number'.",
          "Expected Result": "The field displays a numeric identifier (e.g., '1645') representing the most recent borderò recorded."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the dashboard and Single PoS Borderò section.\n2. At least one borderò record exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with appropriate access; at least one borderò record (e.g., Borderò Number: 1645).",
      "Expected Result": "The 'Last Borderò Number' field displays the correct numeric identifier of the most recent borderò.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the last borderò number.",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_DisplayAccountingPeriodDates_Desktop_TEST_Desktop",
      "ID": "TC-343",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section.",
          "Expected Result": "The Borderò section is visible."
        },
        {
          "Step": 3,
          "Step Description": "Observe the fields labeled 'Start of Accounting Period' and 'End of Accounting Period'.",
          "Expected Result": "The fields display the correct start and end dates for the accounting period of the last borderò."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the dashboard and Single PoS Borderò section.\n2. At least one borderò record with valid accounting period dates exists.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; borderò record with Start Date: 01/01/2024, End Date: 31/01/2024.",
      "Expected Result": "The 'Start of Accounting Period' and 'End of Accounting Period' fields display the correct dates for the last borderò.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of accounting period dates.",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_DisplayLastBorderoAmount_Desktop_TEST_Desktop",
      "ID": "TC-344",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section.",
          "Expected Result": "The Borderò section is visible."
        },
        {
          "Step": 3,
          "Step Description": "Observe the field labeled 'Last Borderò Amount'.",
          "Expected Result": "The field displays the total economic value of the last borderò (e.g., '1,000.00 €')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the dashboard and Single PoS Borderò section.\n2. At least one borderò record with a valid amount exists.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; borderò record with Amount: 1,000.00 €.",
      "Expected Result": "The 'Last Borderò Amount' field displays the correct total value of the last borderò.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the last borderò amount.",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_DisplayAverageAmounts_Desktop_TEST_Desktop",
      "ID": "TC-345",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section.",
          "Expected Result": "The Borderò section is visible."
        },
        {
          "Step": 3,
          "Step Description": "Observe the fields labeled 'Average Amount Current Year' and 'Average Amount Rolling 12 Months'.",
          "Expected Result": "The fields display the correct calculated averages based on the borderò records."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the dashboard and Single PoS Borderò section.\n2. Multiple borderò records exist for the current year and the last 12 months.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; borderò records with various amounts and dates within the current year and last 12 months.",
      "Expected Result": "The 'Average Amount Current Year' and 'Average Amount Rolling 12 Months' fields display the correct calculated averages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and calculation of average amounts.",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_ArchiCONLinkVisibilityAndRedirection_Desktop_TEST_Desktop",
      "ID": "TC-346",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with privileges to view the ArchiCON link.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section.",
          "Expected Result": "The Borderò section is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify the presence of the ArchiCON link/button.",
          "Expected Result": "The ArchiCON link/button is visible to the user."
        },
        {
          "Step": 4,
          "Step Description": "Click the ArchiCON link/button.",
          "Expected Result": "User is redirected to the ArchiCON platform, where the Borderò associated with the specific PoS is displayed according to the user's permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application, ArchiCON Platform",
      "Preconditions": "1. User account with privileges to view the ArchiCON link.\n2. At least one borderò record exists.\n3. ArchiCON platform is accessible and integrated.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - ArchiCON Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with ArchiCON privileges; borderò record; valid ArchiCON integration.",
      "Expected Result": "The ArchiCON link/button is visible only to privileged users and redirects to the correct ArchiCON interface for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers visibility and redirection of the ArchiCON link for privileged users.",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_ArchiCONLinkNotVisibleForUnauthorizedUsers_Desktop_TEST_Desktop",
      "ID": "TC-347",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user without privileges to view the ArchiCON link.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section.",
          "Expected Result": "The Borderò section is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify the presence of the ArchiCON link/button.",
          "Expected Result": "The ArchiCON link/button is not visible to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account without privileges to view the ArchiCON link.\n2. At least one borderò record exists.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - ArchiCON Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials without ArchiCON privileges; borderò record.",
      "Expected Result": "The ArchiCON link/button is not visible to users without the appropriate privileges.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for ArchiCON link visibility.",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_BorderoDataDisplay_NoRecords_Desktop_TEST_Desktop",
      "ID": "TC-348",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section where no borderò records exist for the selected PoS.",
          "Expected Result": "The Borderò section is visible."
        },
        {
          "Step": 3,
          "Step Description": "Observe the fields for Last Borderò Number, Start/End of Accounting Period, Last Borderò Amount, and Averages.",
          "Expected Result": "Fields display a message such as 'No data available' or remain empty, indicating no records are present."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the dashboard and Single PoS Borderò section.\n2. No borderò records exist for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with no borderò records.",
      "Expected Result": "The dashboard clearly indicates when no borderò data is available for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers empty state handling for borderò data display.",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "AWPDataVisualization_XPS-360_001_AWP-Block-Display_DESKTOP_TEST_Desktop",
      "ID": "TC-349",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the XPS-ZENIT-360 dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section of the dashboard.",
          "Expected Result": "The 'ADI Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the AWP data is displayed in three distinct blocks: AWP Management, AWP AC Management, and AWP Third Parties.",
          "Expected Result": "Three blocks are visible, each labeled accordingly."
        },
        {
          "Step": 4,
          "Step Description": "Within each block, verify that AWP numbers are shown divided by type of collection (IAG and NOIAG).",
          "Expected Result": "Each block displays AWP numbers for both IAG and NOIAG collection types."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the total AWP for each block is displayed.",
          "Expected Result": "A total AWP value is shown for each block."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Chrome Browser, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. Test data for AWP Management, AWP AC Management, and AWP Third Parties is present in the system.\n3. Browser is installed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample AWP data with both IAG and NOIAG entries for all three blocks.",
      "Expected Result": "AWP data is correctly displayed in three blocks, each showing IAG, NOIAG, and total values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "AWPKeyAssociation_XPS-360_002_AWP-Keys-Display_DESKTOP_TEST_Desktop",
      "ID": "TC-350",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the XPS-ZENIT-360 dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section of the dashboard.",
          "Expected Result": "The 'ADI Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'AWP Management' block within the AWP data visualization.",
          "Expected Result": "The 'AWP Management' block is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the keys related to Drawer, Counter, and Change Machine are displayed, including the associated entity (e.g., 'ESERCENTE').",
          "Expected Result": "Key associations for Drawer, Counter, and Change Machine are visible and correctly labeled with the responsible entity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Chrome Browser, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. Test data includes key associations for Drawer, Counter, and Change Machine in AWP Management.\n3. Browser is installed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Key Association Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP Management data with key associations for Drawer, Counter, and Change Machine.",
      "Expected Result": "Key associations are displayed for Drawer, Counter, and Change Machine in the AWP Management block.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "AWP_VLT_Summary_XPS-360_003_Total-Summary-Display_DESKTOP_TEST_Desktop",
      "ID": "TC-351",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the XPS-ZENIT-360 dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section of the dashboard.",
          "Expected Result": "The 'ADI Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the overall summary section is present.",
          "Expected Result": "A summary section is visible on the interface."
        },
        {
          "Step": 4,
          "Step Description": "Check that the summary displays the following: Total AWP, Average number of AWP (YTD), Number of VLT, and Average number of VLT (YTD).",
          "Expected Result": "All four summary metrics are displayed with correct labels and values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Chrome Browser, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. Test data includes AWP and VLT numbers and YTD averages.\n3. Browser is installed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "AWP and VLT Summary",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP and VLT data with YTD averages.",
      "Expected Result": "The summary section displays Total AWP, Average AWP (YTD), Number of VLT, and Average VLT (YTD) accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "HopperDataVisualization_XPS-360_004_Hopper-Amounts-Display_DESKTOP_TEST_Desktop",
      "ID": "TC-352",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the XPS-ZENIT-360 dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section of the dashboard.",
          "Expected Result": "The 'ADI Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Loading coins (Hopper)' data visualization section.",
          "Expected Result": "The Hopper data section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following data points are displayed: Hopper NOIAG, Hopper IAG - End of Relationship, Change Machine IAG - End of Relationship, Hopper IAG - Recovery, and Total.",
          "Expected Result": "All required hopper data points are displayed with correct labels and values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Chrome Browser, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. Test data includes hopper amounts for all required categories.\n3. Browser is installed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Hopper Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Hopper data with values for NOIAG, IAG - End of Relationship, Change Machine IAG - End of Relationship, IAG for Recovery, and Total.",
      "Expected Result": "All hopper data points are displayed with correct values and labels.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "AWPDataVisualization_XPS-360_005_AWP-Block-Display-InvalidData_DESKTOP_TEST_Desktop",
      "ID": "TC-353",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the XPS-ZENIT-360 dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section of the dashboard.",
          "Expected Result": "The 'ADI Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify the behavior when AWP data for one or more blocks is missing or invalid (e.g., negative numbers, null values).",
          "Expected Result": "The interface displays a clear error message or placeholder indicating missing/invalid data, and does not crash."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Chrome Browser, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. Test data includes missing or invalid AWP entries for at least one block.\n3. Browser is installed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Visualization Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP data with missing, negative, or null values for at least one block.",
      "Expected Result": "The system gracefully handles missing or invalid AWP data, displaying appropriate messages without crashing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for AWP data visualization.",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_RiskTable_Display_DESKTOP_TEST_Desktop",
      "ID": "TC-354",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to Single PoS details.",
          "Expected Result": "User is successfully logged in and lands on the dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS section and select a specific Point of Sale.",
          "Expected Result": "Single PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Risk Data' section on the Single PoS detail page.",
          "Expected Result": "The 'Risk Data' section is visible on the page."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the Risk Data summary table is displayed with the following columns: RedList, Insolvent Rolling 6 months, General Reason, SIMP Management, SIMP Reason, Scoring, Risk Cluster, Activity Status.",
          "Expected Result": "All specified columns are present in the Risk Data table and are clearly labeled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to the Dashboard.\n2. At least one PoS with risk data available in the system.\n3. Browser compatible with the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "Risk Data Table Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with risk data populated.",
      "Expected Result": "The Risk Data summary table is displayed with all required columns, each clearly labeled.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_RedList_Values_DESKTOP_TEST_Desktop",
      "ID": "TC-355",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Single PoS detail page with known RedList status.",
          "Expected Result": "Single PoS detail page is displayed with Risk Data section visible."
        },
        {
          "Step": 2,
          "Step Description": "Check the value under the 'RedList' column for the selected PoS.",
          "Expected Result": "The value is either 'Yes' or 'No' as per the backend data for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is logged in and has access to the Dashboard.\n2. PoS with known RedList status exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Indicator",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with RedList status 'Yes'; PoS with RedList status 'No'.",
      "Expected Result": "The 'RedList' column correctly displays 'Yes' or 'No' according to the PoS risk data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_Insolvent6M_Boundary_DESKTOP_TEST_Desktop",
      "ID": "TC-356",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Single PoS detail page for a PoS with 0 insolvencies in the last 6 months.",
          "Expected Result": "Risk Data table displays '0' in the 'Insolvent Rolling 6 months' column."
        },
        {
          "Step": 2,
          "Step Description": "Access the Single PoS detail page for a PoS with a high number (e.g., 99) of insolvencies in the last 6 months.",
          "Expected Result": "Risk Data table displays the correct number (e.g., '99') in the 'Insolvent Rolling 6 months' column."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is logged in and has access to the Dashboard.\n2. PoS with 0 insolvencies and PoS with high insolvency count exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Insolvent Rolling 6 months",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 0 insolvencies; PoS with high insolvency count (e.g., 99).",
      "Expected Result": "The 'Insolvent Rolling 6 months' column displays the correct number for each PoS, including boundary values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_Scoring_And_Cluster_Validation_DESKTOP_TEST_Desktop",
      "ID": "TC-357",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Single PoS detail page for a PoS with a known Cerved Scoring and Risk Cluster.",
          "Expected Result": "Risk Data table displays the correct numerical value in the 'Scoring' column and the correct category in the 'Risk Cluster' column."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the Risk Cluster value corresponds to the expected category based on the Cerved Scoring (e.g., 'Medium', 'High').",
          "Expected Result": "Risk Cluster matches the scoring band as per business rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is logged in and has access to the Dashboard.\n2. PoS with known Cerved Scoring and Risk Cluster mapping exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Scoring and Risk Cluster",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Cerved Scoring and corresponding Risk Cluster.",
      "Expected Result": "The 'Scoring' and 'Risk Cluster' columns display correct and consistent values as per the backend data and business logic.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_ActivityStatus_Options_DESKTOP_TEST_Desktop",
      "ID": "TC-358",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Single PoS detail page for PoS with different Activity Status values (e.g., 'ACTIVE', 'SUSPENDED', 'CLOSED').",
          "Expected Result": "Risk Data table displays the correct Activity Status for each PoS as per backend data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is logged in and has access to the Dashboard.\n2. PoS with various Activity Status values exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Activity Status",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Activity Status: 'ACTIVE', 'SUSPENDED', 'CLOSED'.",
      "Expected Result": "The 'Activity Status' column displays the correct status for each PoS as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_SIMP_Management_And_Reason_DESKTOP_TEST_Desktop",
      "ID": "TC-359",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Single PoS detail page for a PoS with known SIMP Management status and SIMP Reason.",
          "Expected Result": "Risk Data table displays the correct SIMP Management status and detailed SIMP Reason for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is logged in and has access to the Dashboard.\n2. PoS with known SIMP Management status and SIMP Reason exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "SIMP Management and Reason",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with specific SIMP Management status and SIMP Reason.",
      "Expected Result": "The 'SIMP Management' and 'SIMP Reason' columns display the correct values as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_GeneralReason_Display_DESKTOP_TEST_Desktop",
      "ID": "TC-360",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Single PoS detail page for a PoS with a known General Reason for risk.",
          "Expected Result": "Risk Data table displays the correct General Reason (e.g., 'Customer at risk') for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is logged in and has access to the Dashboard.\n2. PoS with a General Reason for risk exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "General Reason Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with General Reason (e.g., 'Customer at risk').",
      "Expected Result": "The 'General Reason' column displays the correct brief description for the PoS as per backend data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_RiskTable_EmptyState_DESKTOP_TEST_Desktop",
      "ID": "TC-361",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Single PoS detail page for a PoS with no risk data available.",
          "Expected Result": "Risk Data table displays an appropriate message or empty state indicating no data is available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is logged in and has access to the Dashboard.\n2. PoS with no risk data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Risk Data Table Empty State",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no risk data.",
      "Expected Result": "The Risk Data table displays an appropriate empty state or message when no data is available for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_Display_MonitoringCategories_Dashboard_TEST_Desktop",
      "ID": "TC-362",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user with access to the Dashboard - Single PoS - Winning Data section.",
          "Expected Result": "User is successfully authenticated and navigated to the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Observe the main dashboard interface for the Winning Data section.",
          "Expected Result": "Three distinct sections are displayed: 'Sport Ticket Payments in Other Agencies', 'Ticket Sports Not Paid', and 'Ticket VR Not Paid'."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each section contains a table with headers, aggregated rows, and subtotals.",
          "Expected Result": "Each section displays a table with appropriate headers, aggregated data rows, and visible subtotals."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with appropriate authorization levels exists.\n2. Winning Data dashboard is accessible.\n3. Test data for all three monitoring categories is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; sample data for each monitoring category.",
      "Expected Result": "The dashboard displays all three monitoring categories with correct tables, headers, aggregated rows, and subtotals.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_DetailedVisualization_WinningData_Dashboard_TEST_Desktop",
      "ID": "TC-363",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user and navigate to the Winning Data dashboard.",
          "Expected Result": "User is on the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Expand a row in any of the three monitoring categories to view detailed data for a win.",
          "Expected Result": "Detailed data for the selected win is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present for each win: Seller Agency Code, Competence (event) Day, Cash day, Amount Bet, Amount Won.",
          "Expected Result": "All required fields are displayed for each win."
        },
        {
          "Step": 4,
          "Step Description": "For 'Sport Ticket Payments in Other Agencies', verify that Winning payment Day, Agency Code Payment, and PoS Identifier of the payment are also displayed.",
          "Expected Result": "These additional fields are present only for 'Sport Ticket Payments in Other Agencies'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authorized and logged in.\n2. Winning Data dashboard contains at least one record in each category, including 'Sport Ticket Payments in Other Agencies'.",
      "Execution Mode": "Manual",
      "Functionality": "Detailed Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; sample winning data with all required fields populated.",
      "Expected Result": "All required detailed fields are displayed for each win, with additional fields shown only for 'Sport Ticket Payments in Other Agencies'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_ReferenceDay_AutomaticManualSelection_Dashboard_TEST_Desktop",
      "ID": "TC-364",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user and navigate to the Winning Data dashboard.",
          "Expected Result": "User is on the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Observe the default reference day displayed on the dashboard.",
          "Expected Result": "The reference day is automatically set to the most recent data upload date."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to manually select an alternative reference day from the available dates.",
          "Expected Result": "User is able to select a different reference day from a list of available dates, and the dashboard updates accordingly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authorized and logged in.\n2. Multiple data upload dates exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Day Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; system with multiple data upload dates.",
      "Expected Result": "Reference day is set automatically to the latest upload date, and user can manually select and view data for alternative dates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_ExpandCollapseRows_Dashboard_TEST_Desktop",
      "ID": "TC-365",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user and navigate to the Winning Data dashboard.",
          "Expected Result": "User is on the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Click on the expand icon for a specific aggregated row in any monitoring category.",
          "Expected Result": "The row expands to show detailed data for individual plays."
        },
        {
          "Step": 3,
          "Step Description": "Click on the collapse icon for the same row.",
          "Expected Result": "The row collapses, hiding the detailed data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authorized and logged in.\n2. Winning Data dashboard contains aggregated rows with expandable details.",
      "Execution Mode": "Manual",
      "Functionality": "Interactive Navigation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; dashboard with expandable aggregated rows.",
      "Expected Result": "Rows can be expanded to show and collapsed to hide detailed data for individual plays.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_ExpandCollapseAll_Dashboard_TEST_Desktop",
      "ID": "TC-366",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user and navigate to the Winning Data dashboard.",
          "Expected Result": "User is on the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Expand/Collapse All' button on the dashboard.",
          "Expected Result": "All aggregated rows in all monitoring categories expand to show detailed data."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Expand/Collapse All' button again.",
          "Expected Result": "All rows collapse, hiding the detailed data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authorized and logged in.\n2. Winning Data dashboard contains multiple aggregated rows with expandable details.",
      "Execution Mode": "Manual",
      "Functionality": "Interactive Navigation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; dashboard with multiple expandable aggregated rows.",
      "Expected Result": "'Expand/Collapse All' button toggles the display of all detailed data in all monitoring categories.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_DataAggregation_Subtotals_Dashboard_TEST_Desktop",
      "ID": "TC-367",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user and navigate to the Winning Data dashboard.",
          "Expected Result": "User is on the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Expand the 'Sport Ticket Payments in Other Agencies' section and observe the aggregation of data.",
          "Expected Result": "Aggregated data is organized by payment date, with visible subtotals for each date."
        },
        {
          "Step": 3,
          "Step Description": "Expand the 'Ticket Sports Not Paid' and 'Ticket VR Not Paid' sections and observe the aggregation of data.",
          "Expected Result": "Aggregated data is organized by competence (event) date, with visible subtotals for each date."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authorized and logged in.\n2. Dashboard contains data for all three monitoring categories, with multiple payment and competence dates.",
      "Execution Mode": "Manual",
      "Functionality": "Data Aggregation and Subtotals",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; dashboard data with multiple payment and competence dates.",
      "Expected Result": "Data is correctly aggregated and subtotals are displayed as per the category's aggregation logic.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_FieldFormat_Validation_Dashboard_TEST_Desktop",
      "ID": "TC-368",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user and navigate to the Winning Data dashboard.",
          "Expected Result": "User is on the Winning Data dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Expand detailed data for a win in each monitoring category.",
          "Expected Result": "Detailed data is displayed for each win."
        },
        {
          "Step": 3,
          "Step Description": "Verify the format of the 'Seller Agency Code' field for both standard and 'Corner' PoS types.",
          "Expected Result": "Standard: 6-digit zero-padded string (e.g., 000045). Corner: 4-digit zero-padded zone + '-' + 6-digit zero-padded SIMP code (e.g., 0001-000045)."
        },
        {
          "Step": 4,
          "Step Description": "Verify the format of the 'Agency Code Payment' and 'PoS Identifier of the payment' fields in 'Sport Ticket Payments in Other Agencies'.",
          "Expected Result": "Agency Code Payment: 6-digit zero-padded string (e.g., 000045). PoS Identifier: 6-character string with 2-letter prefix and 4-digit zero-padded number (e.g., MI0001)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authorized and logged in.\n2. Dashboard contains data for both standard and 'Corner' PoS types, and for 'Sport Ticket Payments in Other Agencies'.",
      "Execution Mode": "Manual",
      "Functionality": "Field Format Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; dashboard data with various PoS types and payment agencies.",
      "Expected Result": "All fields are displayed in the correct format as specified for each type and category.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_AuthorizationLevel_AccessControl_Dashboard_TEST_Desktop",
      "ID": "TC-369",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the Winning Data dashboard as a user without the required authorization level.",
          "Expected Result": "Access is denied and an appropriate error message is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Log in as a user with the required authorization level and access the Winning Data dashboard.",
          "Expected Result": "Access is granted and the dashboard is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. At least two user accounts exist: one with and one without the required authorization level.",
      "Execution Mode": "Manual",
      "Functionality": "Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with and without required authorization.",
      "Expected Result": "Only authorized users can access the Winning Data dashboard; unauthorized users are denied access.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "BusinessData-XPS375_GNTNAmountCollectedDataVisualization_TEST_Desktop",
      "ID": "TC-370",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to a PoS with GNTN data.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'GNTN amount collected' data visualization sub-section.",
          "Expected Result": "The 'GNTN amount collected' sub-section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present: Total media amount collected for GNTN (YTD) on a weekly basis, Upload date in the system, Reference week of the data, Reference year of the data.",
          "Expected Result": "All required fields are present and populated with correct data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS with GNTN data imported via Massive Importer.\n3. Data import completed for the current week.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with GNTN data for the current year; valid user credentials.",
      "Expected Result": "The 'GNTN amount collected' sub-section displays all required fields with accurate and up-to-date data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_CornerDataVisualizationTableLayout_TEST_Desktop",
      "ID": "TC-371",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization sub-section.",
          "Expected Result": "The 'Corner' sub-section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the interface is organized in a table layout with distinct data groups (Amount Collected, Revenue Data, Fee Data, etc.), each distributed by year (YTD).",
          "Expected Result": "The table layout is present with clear separation of data groups and YTD distribution."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS of type 'Corner' with imported business data.\n3. Data import completed for the current month.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS of type 'Corner' with complete business data; valid user credentials.",
      "Expected Result": "The 'Corner' data visualization is displayed in a table layout with all required data groups and YTD values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_CornerAmountCollectedDataValidation_TEST_Desktop",
      "ID": "TC-372",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization sub-section and the 'Amount Collected Data' group.",
          "Expected Result": "The 'Amount Collected Data' group is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present and populated: Sports Amount Collected (YTD), CPS Amount Collected (YTD), Horse-Racing Amount Collected (YTD), VR Amount Collected (YTD), Total Betting Amount Collected (YTD), AWP Amount Collected (YTD), GNTN Amount Collected (YTD), Total Amount Collected (YTD).",
          "Expected Result": "All specified fields are present and display correct YTD values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS of type 'Corner' with complete 'Amount Collected' data imported.\n3. Data import completed for the current month.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS of type 'Corner' with all 'Amount Collected' data fields populated; valid user credentials.",
      "Expected Result": "All 'Amount Collected Data' fields are present and display accurate YTD values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_CornerRevenueAndFeeDataValidation_TEST_Desktop",
      "ID": "TC-373",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization sub-section and the 'Revenue Data' and 'Fee Data' groups.",
          "Expected Result": "The 'Revenue Data' and 'Fee Data' groups are visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all fields listed under 'Revenue Data' and 'Fee Data' are present and populated with correct YTD values.",
          "Expected Result": "All specified fields under 'Revenue Data' and 'Fee Data' are present and display correct YTD values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS of type 'Corner' with complete 'Revenue Data' and 'Fee Data' imported.\n3. Data import completed for the current month.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS of type 'Corner' with all 'Revenue Data' and 'Fee Data' fields populated; valid user credentials.",
      "Expected Result": "All 'Revenue Data' and 'Fee Data' fields are present and display accurate YTD values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_CornerCalculatedFieldsValidation_TEST_Desktop",
      "ID": "TC-374",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization sub-section and identify the calculated fields: BC Year Projection, Decile, Exposure Risk.",
          "Expected Result": "The calculated fields are visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the values for BC Year Projection, Decile, and Exposure Risk are calculated as per the formulas provided in the requirements.",
          "Expected Result": "Calculated fields display values consistent with the formulas: BC Year Projection = (Business Contribution (YTD) / <Previous Months>) * 12; Decile = BC Year Projection / 10; Exposure Risk = Current year medium borderò * 1.8."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS of type 'Corner' with all necessary data for calculated fields.\n3. Data import completed for the current month.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS of type 'Corner' with Business Contribution (YTD), Previous Months, and Current year medium borderò values; valid user credentials.",
      "Expected Result": "Calculated fields are present and their values match the expected results based on the provided formulas.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_ShopDataVisualizationFieldsValidation_TEST_Desktop",
      "ID": "TC-375",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to a PoS of type 'Shop'.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Shop' data visualization sub-section.",
          "Expected Result": "The 'Shop' sub-section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present and populated: Total Revenues, Business Contribution, Business Contribution Online, Business Contribution Post Online.",
          "Expected Result": "All specified fields are present and display correct values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS of type 'Shop' with imported business data.\n3. Data import completed for the current month.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS of type 'Shop' with all required fields populated; valid user credentials.",
      "Expected Result": "All 'Shop' data visualization fields are present and display accurate values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_GamingHallDataVisualizationFieldsValidation_TEST_Desktop",
      "ID": "TC-376",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to a PoS of type 'Gaming Hall'.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Gaming Hall' data visualization sub-section.",
          "Expected Result": "The 'Gaming Hall' sub-section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present and populated: VLT Revenues, AWP Revenues, Business Contribution, Business Contribution Post Online.",
          "Expected Result": "All specified fields are present and display correct values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS of type 'Gaming Hall' with imported business data.\n3. Data import completed for the current month.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS of type 'Gaming Hall' with all required fields populated; valid user credentials.",
      "Expected Result": "All 'Gaming Hall' data visualization fields are present and display accurate values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_NoDataAvailableMessageForUnknownPoSType_TEST_Desktop",
      "ID": "TC-377",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to a PoS that does not belong to 'Corner', 'Shop', or 'Gaming Hall' types.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the content of the 'Business Data' section.",
          "Expected Result": "A message 'no data available' is displayed or the section is not visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS of an unsupported type (not 'Corner', 'Shop', or 'Gaming Hall').",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS of unsupported type; valid user credentials.",
      "Expected Result": "For unsupported PoS types, the 'Business Data' section is either hidden or displays a 'no data available' message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_BusinessDataUploadDateAndReferencePeriodValidation_TEST_Desktop",
      "ID": "TC-378",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to any PoS with imported business data.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "For each sub-section ('GNTN amount collected', 'Corner', 'Shop', 'Gaming Hall'), verify the presence of the upload date and reference period (week/month/year) fields.",
          "Expected Result": "Each sub-section displays the upload date and the correct reference period (week/month/year) as per the requirement."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS with imported business data for each sub-section.\n3. Data import completed for the current period.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with imported data for all sub-sections; valid user credentials.",
      "Expected Result": "All sub-sections display the upload date and correct reference period fields as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "DocumentsList_XPS-ZENIT-380_Dashboard_DocumentsSection_ViewList_DESKTOP_TEST_Desktop",
      "ID": "TC-379",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "The 'Documents' section is loaded."
        },
        {
          "Step": 3,
          "Step Description": "Observe the list of documents displayed in the 'Documents' section.",
          "Expected Result": "A structured list of documents is displayed, divided by source (Cerved and Arxivar). Each document shows at least its name and source."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT Dashboard)",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is logged into the ZENIT dashboard.\n3. Cerved and Arxivar systems are reachable and contain at least one document each.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with required privileges; at least one document in both Cerved and Arxivar systems.",
      "Expected Result": "The user sees a structured list of documents divided by source (Cerved and Arxivar), with each document displaying its name and source.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "DocumentView_XPS-ZENIT-380_Dashboard_DocumentsSection_ViewDocument_DESKTOP_TEST_Desktop",
      "ID": "TC-380",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "The 'Documents' section is loaded and documents are listed."
        },
        {
          "Step": 3,
          "Step Description": "Click on a document from the list (from either Cerved or Arxivar).",
          "Expected Result": "The selected document opens in the default viewer (e.g., PDF Viewer) or similar tool."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT Dashboard)",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is logged into the ZENIT dashboard.\n3. At least one document is available in either Cerved or Arxivar.\n4. Default viewer (e.g., PDF Viewer) is installed and configured on the system.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with required privileges; at least one document in either Cerved or Arxivar.",
      "Expected Result": "The selected document is displayed in the default viewer without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "CervedUnavailable_XPS-ZENIT-380_Dashboard_DocumentsSection_CervedError_DESKTOP_TEST_Desktop",
      "ID": "TC-381",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate the Cerved system being unreachable (e.g., disconnect network or mock API failure).",
          "Expected Result": "Cerved system is not reachable from the ZENIT dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "An error message is displayed indicating that the Cerved system is not available. Documents from Arxivar (if available) are still displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT Dashboard)",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is logged into the ZENIT dashboard.\n3. Cerved system is intentionally made unreachable; Arxivar system is reachable and contains at least one document.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with required privileges; Arxivar system with at least one document; Cerved system unavailable.",
      "Expected Result": "An error message is shown for Cerved unavailability, and Arxivar documents are still listed if available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "ArxivarUnavailable_XPS-ZENIT-380_Dashboard_DocumentsSection_ArxivarError_DESKTOP_TEST_Desktop",
      "ID": "TC-382",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate the Arxivar system being unreachable (e.g., disconnect network or mock API failure).",
          "Expected Result": "Arxivar system is not reachable from the ZENIT dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "An error message is displayed indicating that the Arxivar system is not available. Documents from Cerved (if available) are still displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT Dashboard)",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is logged into the ZENIT dashboard.\n3. Arxivar system is intentionally made unreachable; Cerved system is reachable and contains at least one document.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with required privileges; Cerved system with at least one document; Arxivar system unavailable.",
      "Expected Result": "An error message is shown for Arxivar unavailability, and Cerved documents are still listed if available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "NoDocuments_XPS-ZENIT-380_Dashboard_DocumentsSection_EmptyList_DESKTOP_TEST_Desktop",
      "ID": "TC-383",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure both Cerved and Arxivar systems are reachable but contain no documents for the user.",
          "Expected Result": "Both systems are reachable and return empty document lists."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "A message is displayed indicating that no documents are available from either source."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT Dashboard)",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is logged into the ZENIT dashboard.\n3. Both Cerved and Arxivar systems are reachable but have no documents for the user.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with required privileges; both Cerved and Arxivar systems with no documents for the user.",
      "Expected Result": "A clear message is shown indicating that no documents are available from either Cerved or Arxivar.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "NotesList_XPS-ZENIT-385_Dashboard_ViewNotesList_DESKTOP_TEST_Desktop",
      "ID": "TC-384",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS with existing notes.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section in the dashboard.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of notes displayed.",
          "Expected Result": "All notes associated with the POS are displayed in descending order by date (most recent at the top)."
        },
        {
          "Step": 5,
          "Step Description": "Verify that each note displays the insert date, author, and text content.",
          "Expected Result": "Each note shows the correct insert date, author, and text content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with permission to view notes exists.\n2. At least one note is associated with the POS.\n3. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; POS with existing notes (e.g., Note1: 2024-06-01, UserA, 'First note'; Note2: 2024-06-02, UserB, 'Second note').",
      "Expected Result": "The dashboard displays all notes for the POS, ordered from most recent to least recent, with each note showing date, author, and content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesEmpty_XPS-ZENIT-385_Dashboard_NoNotesMessage_DESKTOP_TEST_Desktop",
      "ID": "TC-385",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS with no notes.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section in the dashboard.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the content of the notes section.",
          "Expected Result": "A message 'No notes present for this POS' is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with permission to view notes exists.\n2. POS with no notes exists.\n3. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; POS with no notes.",
      "Expected Result": "If no notes exist for the POS, the message 'No notes present for this POS' is displayed in the notes section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesPermission_XPS-ZENIT-385_Dashboard_NotesPermissionDenied_DESKTOP_TEST_Desktop",
      "ID": "TC-386",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user without permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access the 'Notes' section in the dashboard.",
          "Expected Result": "Notes section is hidden or disabled, and a message such as 'Unauthorized access to the POS note' is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account without permission to view notes exists.\n2. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials without notes permission.",
      "Expected Result": "If the user lacks permission, the notes area is hidden or disabled and an appropriate unauthorized access message is displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesAdd_XPS-ZENIT-385_Dashboard_AddNote_DESKTOP_TEST_Desktop",
      "ID": "TC-387",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with write permission for notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section in the dashboard.",
          "Expected Result": "Notes section is displayed with an editable text field and 'Save' and 'Cancel' buttons."
        },
        {
          "Step": 4,
          "Step Description": "Enter a new note in the text field and click 'Save'.",
          "Expected Result": "The new note is saved, appears at the top of the notes list, and the operation is logged (user, date/time, operation, note content)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with write permission for notes exists.\n2. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials with write permission; sample note text (e.g., 'Test note for POS').",
      "Expected Result": "A new note can be added, appears at the top of the list, and the operation is logged with all required metadata.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesAddCancel_XPS-ZENIT-385_Dashboard_CancelAddNote_DESKTOP_TEST_Desktop",
      "ID": "TC-388",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with write permission for notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section in the dashboard.",
          "Expected Result": "Notes section is displayed with an editable text field and 'Save' and 'Cancel' buttons."
        },
        {
          "Step": 4,
          "Step Description": "Enter a new note in the text field and click 'Cancel'.",
          "Expected Result": "The note is not saved and does not appear in the notes list."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with write permission for notes exists.\n2. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials with write permission; sample note text (e.g., 'Test note for POS').",
      "Expected Result": "If the user cancels the note addition, the note is not saved and does not appear in the notes list.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesSort_XPS-ZENIT-385_Dashboard_NotesDescendingOrder_DESKTOP_TEST_Desktop",
      "ID": "TC-389",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS with multiple notes having different dates.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Notes' section in the dashboard.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the order of the notes displayed.",
          "Expected Result": "Notes are sorted in descending order by date, with the most recent note at the top."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with permission to view notes exists.\n2. POS with multiple notes of different dates exists.\n3. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT user credentials; POS with notes dated 2024-06-01, 2024-06-02, 2024-06-03.",
      "Expected Result": "Notes are displayed in descending order by date (most recent first).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "RelatedPoS-XPS390_AccessAndDisplayRelatedPoS_Dashboard_TEST_Desktop",
      "ID": "TC-390",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has permission to view Related PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with known related PoS in the database.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS, excluding closed PoS by default."
        },
        {
          "Step": 4,
          "Step Description": "Observe the results displayed in the table or list format.",
          "Expected Result": "A table is displayed listing all related PoS found, with columns for PoS details and relationship information (e.g., 'Same VAT Number Holder', 'Same Email')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account with 'Related PoS' viewing privileges.\n2. At least one PoS exists in the system with related PoS based on the defined criteria.\n3. User is logged into the ZENIT dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with proper permissions; PoS data with at least one related PoS (matching VAT, Tax code, etc.).",
      "Expected Result": "The system displays a structured table of related PoS, each row representing a single PoS with correct relationship information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPS390_NoResultsNotification_Dashboard_TEST_Desktop",
      "ID": "TC-391",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has permission to view Related PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with no related PoS in the database.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS."
        },
        {
          "Step": 4,
          "Step Description": "Observe the notification and UI elements.",
          "Expected Result": "A notification is displayed indicating that no results were found. No table is shown. The 'Export to Excel' button is disabled or not visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account with 'Related PoS' viewing privileges.\n2. At least one PoS exists in the system with no related PoS based on the defined criteria.\n3. User is logged into the ZENIT dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with proper permissions; PoS data with no related PoS.",
      "Expected Result": "A notification is shown for no results, no table is displayed, and the 'Export to Excel' button is disabled or hidden.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPS390_IncludeClosedPoS_Dashboard_TEST_Desktop",
      "ID": "TC-392",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has permission to view Related PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with related closed PoS in the database.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS, excluding closed PoS by default."
        },
        {
          "Step": 4,
          "Step Description": "Select the checkbox 'Include closed PoS'.",
          "Expected Result": "The system re-initiates the search, now including closed PoS in the comparison."
        },
        {
          "Step": 5,
          "Step Description": "Observe the results displayed in the table or list format.",
          "Expected Result": "A table is displayed listing all related PoS, including closed PoS, with columns for PoS details and relationship information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account with 'Related PoS' viewing privileges.\n2. At least one PoS exists in the system with related closed PoS.\n3. User is logged into the ZENIT dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with proper permissions; PoS data with related closed PoS.",
      "Expected Result": "The system displays a structured table of related PoS, including closed PoS, each row representing a single PoS with correct relationship information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPS390_ExportToExcel_Dashboard_TEST_Desktop",
      "ID": "TC-393",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has permission to view Related PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with related PoS in the database.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS and displays the results in a table."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "The system generates and downloads an Excel file containing the displayed related PoS data."
        },
        {
          "Step": 5,
          "Step Description": "Open the downloaded Excel file and verify its contents.",
          "Expected Result": "The Excel file contains all the related PoS data as displayed in the table, with correct columns and relationship information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account with 'Related PoS' viewing privileges.\n2. At least one PoS exists in the system with related PoS.\n3. User is logged into the ZENIT dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with proper permissions; PoS data with related PoS.",
      "Expected Result": "The Excel file is generated and contains all related PoS data as displayed in the dashboard table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPS390_SelectPoSFromList_Dashboard_TEST_Desktop",
      "ID": "TC-394",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has permission to view Related PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with multiple related PoS in the database.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS and displays the results in a table."
        },
        {
          "Step": 4,
          "Step Description": "Click the edit icon next to a related PoS in the table.",
          "Expected Result": "The system retrieves and displays the details of the selected PoS on the 'Single PoS' screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account with 'Related PoS' viewing privileges.\n2. At least one PoS exists in the system with multiple related PoS.\n3. User is logged into the ZENIT dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with proper permissions; PoS data with multiple related PoS.",
      "Expected Result": "The details of the selected related PoS are displayed on the 'Single PoS' screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPS390_DatabaseConnectionError_Dashboard_TEST_Desktop",
      "ID": "TC-395",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has permission to view Related PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select any PoS.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system attempts to initiate a search for related PoS."
        },
        {
          "Step": 4,
          "Step Description": "Simulate a database connection error or timeout (e.g., by disconnecting the database or using a test environment with induced failure).",
          "Expected Result": "The system displays an error message to the user: 'Error retrieving data'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has a valid ZENIT account with 'Related PoS' viewing privileges.\n2. Database connection error or timeout is simulated or occurs during the test.\n3. User is logged into the ZENIT dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with proper permissions; test environment configured to simulate database error.",
      "Expected Result": "An error message 'Error retrieving data' is displayed to the user when the database connection fails or times out.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "MassiveImporter_proj1_InformationalMessageOnActiveIntegration_TEST_Desktop",
      "ID": "TC-396",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit as a user with permission to use the Massive Importer.",
          "Expected Result": "User is successfully logged in and has access to the Massive Importer feature."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that integration with the data owner's system is active for at least one data type listed in ZENIT - Elenco Dati.",
          "Expected Result": "Integration is confirmed as active for the selected data type."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to use the Massive Importer to import data for the data type with active integration.",
          "Expected Result": "An informational message is displayed to the user indicating that the Massive Importer should not be used while integration is active."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with Massive Importer permissions.\n2. Integration with data owner's system is active for at least one data type.\n3. Access to the Zenit application.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Integration Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, data type with active integration, sample Excel file for that data type.",
      "Expected Result": "The system displays an informational message preventing or warning the user about using the Massive Importer when integration is active for the selected data type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_ExcelTemplateStructureValidation_TEST_Desktop",
      "ID": "TC-397",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit as a user with permission to use the Massive Importer.",
          "Expected Result": "User is successfully logged in and has access to the Massive Importer feature."
        },
        {
          "Step": 2,
          "Step Description": "Download the official Excel template for a specific data type from Zenit.",
          "Expected Result": "The correct template file is downloaded."
        },
        {
          "Step": 3,
          "Step Description": "Prepare an Excel file by copying data into the template, ensuring all structure and formatting rules are followed (e.g., .xlsx format, one worksheet, correct headers, no merged cells, no formulas, no empty rows, correct data types).",
          "Expected Result": "Excel file is prepared according to the template requirements."
        },
        {
          "Step": 4,
          "Step Description": "Upload the prepared Excel file using the Massive Importer.",
          "Expected Result": "The system accepts the file and proceeds with the import process without errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with Massive Importer permissions.\n2. Access to the official Excel template for the selected data type.\n3. Data to import is available and matches the template structure.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Template Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, official Excel template, valid data for import.",
      "Expected Result": "The system successfully validates and imports the Excel file when all template requirements are met.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_RejectInvalidExcelFormat_TEST_Desktop",
      "ID": "TC-398",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit as a user with permission to use the Massive Importer.",
          "Expected Result": "User is successfully logged in and has access to the Massive Importer feature."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to upload an Excel file in an unsupported format (e.g., .xls, .csv, or .xlsm) instead of .xlsx.",
          "Expected Result": "The system rejects the file and displays an error message indicating that only .xlsx files are accepted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with Massive Importer permissions.\n2. Access to Excel files in unsupported formats (.xls, .csv, .xlsm).",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - File Format Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, Excel files in .xls, .csv, and .xlsm formats.",
      "Expected Result": "The system prevents the upload of files not in .xlsx format and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_RejectTemplateStructureMismatch_TEST_Desktop",
      "ID": "TC-399",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit as a user with permission to use the Massive Importer.",
          "Expected Result": "User is successfully logged in and has access to the Massive Importer feature."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file that intentionally violates the template structure (e.g., missing columns, extra columns, incorrect header names, merged cells, multiple worksheets, or empty rows within the data block).",
          "Expected Result": "Excel file is prepared with structural mismatches."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the invalid Excel file using the Massive Importer.",
          "Expected Result": "The system rejects the file and displays a detailed error message specifying the structural issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with Massive Importer permissions.\n2. Access to the official Excel template and ability to modify it to create invalid structures.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Template Structure Enforcement",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, Excel files with various template violations.",
      "Expected Result": "The system detects and rejects Excel files that do not strictly adhere to the template structure, providing clear feedback to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_RejectExcelWithFormulasOrAdvancedElements_TEST_Desktop",
      "ID": "TC-400",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit as a user with permission to use the Massive Importer.",
          "Expected Result": "User is successfully logged in and has access to the Massive Importer feature."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file based on the template but include formulas, merged cells, or pivot tables in the data block.",
          "Expected Result": "Excel file is prepared with advanced elements/formulas."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the Excel file using the Massive Importer.",
          "Expected Result": "The system rejects the file and displays an error message indicating that only static values and simple structures are allowed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with Massive Importer permissions.\n2. Access to the official Excel template and ability to add formulas or advanced elements.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Data Integrity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, Excel files with formulas, merged cells, or pivot tables.",
      "Expected Result": "The system rejects Excel files containing formulas or advanced elements, ensuring only static values are imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_ImportFileSizeLimitAndDoubleSubmission_TEST_Desktop",
      "ID": "TC-401",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit as a user with permission to use the Massive Importer.",
          "Expected Result": "User is successfully logged in and has access to the Massive Importer feature."
        },
        {
          "Step": 2,
          "Step Description": "Prepare a valid Excel file that exceeds the recommended file size limit (e.g., 16 MB if the limit is 15 MB).",
          "Expected Result": "Excel file is prepared and exceeds the size limit."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the oversized Excel file using the Massive Importer.",
          "Expected Result": "The system rejects the file and displays an error message indicating the file size exceeds the allowed limit."
        },
        {
          "Step": 4,
          "Step Description": "Split the data into two valid Excel files, each under the size limit, ensuring both adhere to the template structure.",
          "Expected Result": "Two valid Excel files are prepared, each within the size limit."
        },
        {
          "Step": 5,
          "Step Description": "Upload both files sequentially using the Massive Importer.",
          "Expected Result": "The system accepts both files and processes the data without errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with Massive Importer permissions.\n2. Knowledge of the file size limit (e.g., 15 MB).\n3. Ability to generate large Excel files and split them as needed.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - File Size Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, large Excel file (>15 MB), two split Excel files (<15 MB each).",
      "Expected Result": "The system enforces the file size limit, rejects oversized files, and allows double submission with valid files.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_ImportManualIntegrationBothModes_TEST_Desktop",
      "ID": "TC-402",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to Zenit as a user with permission to use the Massive Importer.",
          "Expected Result": "User is successfully logged in and has access to the Massive Importer feature."
        },
        {
          "Step": 2,
          "Step Description": "Refer to ZENIT - Elenco Dati to identify data types that are marked as 'Manual', 'Integration', and 'Both'.",
          "Expected Result": "Data types for each import mode are identified."
        },
        {
          "Step": 3,
          "Step Description": "For a 'Manual' data type, prepare and upload a valid Excel file using the Massive Importer.",
          "Expected Result": "The system accepts and processes the file for manual import."
        },
        {
          "Step": 4,
          "Step Description": "For a data type marked as 'Integration', attempt to upload a valid Excel file using the Massive Importer.",
          "Expected Result": "The system either prevents the import or displays an informational message, as integration is active."
        },
        {
          "Step": 5,
          "Step Description": "For a data type marked as 'Both', prepare and upload a valid Excel file using the Massive Importer.",
          "Expected Result": "The system accepts and processes the file for manual import, even if integration is available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with Massive Importer permissions.\n2. Access to ZENIT - Elenco Dati.\n3. Knowledge of which data types are 'Manual', 'Integration', or 'Both'.\n4. Valid Excel files for each data type.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Import Modes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, ZENIT - Elenco Dati, valid Excel files for each mode.",
      "Expected Result": "The system correctly handles import attempts for each mode as specified in ZENIT - Elenco Dati.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-500_Requirement_FileUploadAndTemplateSelection_DESKTOP_TEST_Desktop",
      "ID": "TC-403",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section in the application.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific type of massive importer (e.g., Import RedList Data).",
          "Expected Result": "The importer type is selected and relevant options are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify the presence of two options: (a) Upload compiled file, (b) Download template.",
          "Expected Result": "Both options are visible and selectable."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Download template' and save the file locally.",
          "Expected Result": "Template file is downloaded successfully."
        },
        {
          "Step": 5,
          "Step Description": "Open the template and fill in valid data as per the required fields.",
          "Expected Result": "Template is editable and can be filled with valid data."
        },
        {
          "Step": 6,
          "Step Description": "Return to the application and select 'Upload compiled file'.",
          "Expected Result": "File upload dialog appears."
        },
        {
          "Step": 7,
          "Step Description": "Upload the filled template file.",
          "Expected Result": "File is uploaded and ready for processing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section.\n2. Application is running on a desktop environment.\n3. User has permissions to download and upload files.",
      "Execution Mode": "Manual",
      "Functionality": "File Upload & Template Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Example template file; Valid data for import.",
      "Expected Result": "User can download the template, fill it with valid data, and upload it for processing without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the file selection and template handling flow.",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-500_Requirement_StructuralValidationOfUploadedFile_DESKTOP_TEST_Desktop",
      "ID": "TC-404",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section and select an importer type.",
          "Expected Result": "Importer type is selected."
        },
        {
          "Step": 2,
          "Step Description": "Upload a file with missing mandatory columns (e.g., omit a required field).",
          "Expected Result": "System performs structural validation on the uploaded file."
        },
        {
          "Step": 3,
          "Step Description": "Observe the feedback provided by the system.",
          "Expected Result": "System displays an error message indicating missing mandatory fields and prevents further processing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section.\n2. Application is running on a desktop environment.\n3. User has a file with missing mandatory fields prepared for upload.",
      "Execution Mode": "Manual",
      "Functionality": "File Structural Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File missing mandatory columns (e.g., missing 'PoS ID' column).",
      "Expected Result": "System rejects files that do not comply with the required structure and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on structural validation only.",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-500_Requirement_DataValidationOfUploadedFile_DESKTOP_TEST_Desktop",
      "ID": "TC-405",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section and select an importer type.",
          "Expected Result": "Importer type is selected."
        },
        {
          "Step": 2,
          "Step Description": "Upload a file with structurally correct format but with invalid data (e.g., invalid PoS ID format, out-of-range values).",
          "Expected Result": "System performs data validation on the uploaded file."
        },
        {
          "Step": 3,
          "Step Description": "Observe the feedback provided by the system.",
          "Expected Result": "System displays an error message indicating the specific data validation errors and prevents further processing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section.\n2. Application is running on a desktop environment.\n3. User has a structurally valid file with invalid data prepared for upload.",
      "Execution Mode": "Manual",
      "Functionality": "File Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File with invalid data (e.g., PoS ID with letters, negative credit values).",
      "Expected Result": "System rejects files with invalid data and provides clear, actionable error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data validation, not structural validation.",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-500_Requirement_SuccessfulMassiveUpdateAndSummary_DESKTOP_TEST_Desktop",
      "ID": "TC-406",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section and select an importer type.",
          "Expected Result": "Importer type is selected."
        },
        {
          "Step": 2,
          "Step Description": "Upload a structurally and data-valid file for massive update (e.g., 500 PoS records).",
          "Expected Result": "File is accepted and ready for processing."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the massive update process.",
          "Expected Result": "System processes the file and displays a summary of the updates to be made."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the update operation.",
          "Expected Result": "System executes the update and displays evidence of successful and/or unsuccessful updates."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section.\n2. Application is running on a desktop environment.\n3. User has a valid file with multiple records for update.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Update Execution & Summary",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid file with 500 PoS records for update.",
      "Expected Result": "System processes the file, updates the records, and provides a summary of successful and unsuccessful updates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the successful update flow.",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-500_Requirement_HistorySectionAndOutputFileWithErrors_DESKTOP_TEST_Desktop",
      "ID": "TC-407",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section and perform a massive update with a file containing both valid and invalid records.",
          "Expected Result": "Massive update is processed with some records failing due to errors."
        },
        {
          "Step": 2,
          "Step Description": "After processing, navigate to the history section under the file import form.",
          "Expected Result": "History section displays the name of the file used and a summary of the outcome (successful, KO, or successful with errors)."
        },
        {
          "Step": 3,
          "Step Description": "Download the output file from the history section.",
          "Expected Result": "Output file is downloaded successfully."
        },
        {
          "Step": 4,
          "Step Description": "Open the output file and verify the presence of the ERROR DESC column for records with errors.",
          "Expected Result": "ERROR DESC column contains descriptive error messages for failed records (e.g., 'PoS unavailable on DB')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section.\n2. Application is running on a desktop environment.\n3. User has a file with both valid and invalid records for upload.",
      "Execution Mode": "Manual",
      "Functionality": "History & Error Reporting",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File with mixed valid and invalid records; Example error: PoS unavailable on DB.",
      "Expected Result": "History section accurately reflects the outcome, and the output file lists errors in the ERROR DESC column for failed records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers history and error reporting only.",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadValidRedListFile_ImportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-408",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid RedList Excel file named 'REDLIST_M06_2024.xlsx' containing the 'DATABASE' sheet with valid data.",
          "Expected Result": "File is accepted and upload process begins."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the upload and import process to complete.",
          "Expected Result": "A success message is displayed indicating the RedList has been imported successfully."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Risk Data' tab for a PoS included in the uploaded file.",
          "Expected Result": "Imported RedList data for the selected PoS is displayed correctly in the 'Risk Data' tab."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit. 2. The RedList Excel file ('REDLIST_M06_2024.xlsx') is available and contains the 'DATABASE' sheet with valid data for active PoS. 3. No ongoing import processes.",
      "Execution Mode": "Manual",
      "Functionality": "Import RedList",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid RedList Excel file for June 2024 with 'DATABASE' sheet.",
      "Expected Result": "RedList Excel file is successfully uploaded, imported, and data is visible for each PoS in the 'Risk Data' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadInvalidFileFormat_ImportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-409",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a file with an invalid format (e.g., 'REDLIST_M06_2024.csv').",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit. 2. An invalid file (e.g., CSV format) is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import RedList",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid file (e.g., 'REDLIST_M06_2024.csv').",
      "Expected Result": "System prevents upload of files not in the required Excel format and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadFileMissingDatabaseSheet_ImportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-410",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file named 'REDLIST_M06_2024.xlsx' that does NOT contain the 'DATABASE' sheet.",
          "Expected Result": "System rejects the file and displays an error message indicating the required sheet is missing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit. 2. An Excel file named 'REDLIST_M06_2024.xlsx' without the 'DATABASE' sheet is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import RedList",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing 'DATABASE' sheet.",
      "Expected Result": "System prevents upload of Excel files missing the 'DATABASE' sheet and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadFileWithInvalidNamingConvention_ImportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-411",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file named 'REDLIST_JUNE_2024.xlsx' (incorrect naming convention).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file naming convention."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit. 2. An Excel file with an incorrect naming convention is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import RedList",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file named 'REDLIST_JUNE_2024.xlsx'.",
      "Expected Result": "System prevents upload of files not following the required naming convention and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_ViewImportedDataInDashboard_ImportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-412",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Risk Data' tab for a PoS included in the most recently imported RedList file.",
          "Expected Result": "'Risk Data' tab is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the RedList data for the selected PoS matches the data from the imported Excel file's 'DATABASE' sheet.",
          "Expected Result": "Displayed data in the 'Risk Data' tab matches the imported RedList data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit. 2. A valid RedList Excel file has been successfully imported.",
      "Execution Mode": "Manual",
      "Functionality": "Import RedList",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Previously imported RedList Excel file.",
      "Expected Result": "RedList data for each PoS is accurately displayed in the 'Risk Data' tab after import.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadRedListFileDuringOngoingImport_ImportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-413",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Start uploading a large valid RedList Excel file to simulate a long-running import process.",
          "Expected Result": "Import process is ongoing."
        },
        {
          "Step": 5,
          "Step Description": "While the import is still in progress, attempt to upload another RedList Excel file.",
          "Expected Result": "System prevents the second upload and displays a message indicating that an import is already in progress."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit. 2. Two valid RedList Excel files are available. 3. System allows simulation of a long-running import process.",
      "Execution Mode": "Manual",
      "Functionality": "Import RedList",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Two valid RedList Excel files.",
      "Expected Result": "System prevents concurrent imports and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadRedListFileWithCorruptedData_ImportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-414",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a RedList Excel file with corrupted or unreadable data in the 'DATABASE' sheet.",
          "Expected Result": "System rejects the file and displays an error message indicating data corruption or unreadable content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit. 2. A RedList Excel file with corrupted data is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import RedList",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Corrupted RedList Excel file.",
      "Expected Result": "System prevents upload of corrupted files and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_PGSFileUpload_ImportContractTypesCorner_TEST_Desktop",
      "ID": "TC-415",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types Corner - PGS' option.",
          "Expected Result": "File upload interface for PGS contract import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Download Template' button to obtain the standard PGS Excel template.",
          "Expected Result": "System downloads the correct PGS contract template Excel file."
        },
        {
          "Step": 5,
          "Step Description": "Prepare a valid PGS contract Excel file using the downloaded template and fill it with sample contract data, ensuring all required fields are populated and structure is maintained.",
          "Expected Result": "A valid PGS contract Excel file is ready for upload."
        },
        {
          "Step": 6,
          "Step Description": "Upload the prepared PGS contract Excel file using the provided interface.",
          "Expected Result": "System accepts the file and initiates validation."
        },
        {
          "Step": 7,
          "Step Description": "Wait for the system to complete validation and processing.",
          "Expected Result": "System displays a success message indicating that the PGS contract data has been imported successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has received the original BOA file and extracted PGS contract data.\n3. User has downloaded the correct PGS template from the system.\n4. Test environment is available and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample valid PGS contract data, valid user credentials.",
      "Expected Result": "PGS contract data is imported successfully, and contractual information is updated for each PoS using ZONA RICE as the reference key.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_PGIFileUpload_ImportContractTypesCorner_TEST_Desktop",
      "ID": "TC-416",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types Corner - PGI' option.",
          "Expected Result": "File upload interface for PGI contract import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Download Template' button to obtain the standard PGI Excel template.",
          "Expected Result": "System downloads the correct PGI contract template Excel file."
        },
        {
          "Step": 5,
          "Step Description": "Prepare a valid PGI contract Excel file using the downloaded template and fill it with sample contract data, ensuring all required fields are populated and structure is maintained.",
          "Expected Result": "A valid PGI contract Excel file is ready for upload."
        },
        {
          "Step": 6,
          "Step Description": "Upload the prepared PGI contract Excel file using the provided interface.",
          "Expected Result": "System accepts the file and initiates validation."
        },
        {
          "Step": 7,
          "Step Description": "Wait for the system to complete validation and processing.",
          "Expected Result": "System displays a success message indicating that the PGI contract data has been imported successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has received the original BOA file and extracted PGI contract data.\n3. User has downloaded the correct PGI template from the system.\n4. Test environment is available and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample valid PGI contract data, valid user credentials.",
      "Expected Result": "PGI contract data is imported successfully, and contractual information is updated for each PoS using ZONA RICE as the reference key.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_InvalidTemplateUpload_ImportContractTypesCorner_TEST_Desktop",
      "ID": "TC-417",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'Import Contract Types Corner - PGS' or 'Import Contract Types Corner - PGI' option.",
          "Expected Result": "File upload interface for the selected contract type is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, or incorrect sheet name).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. Test environment is available and operational.\n3. Invalid Excel file is prepared (e.g., wrong structure, missing required fields).",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid Excel file (wrong structure), valid user credentials.",
      "Expected Result": "System rejects the upload and provides a clear error message about the invalid template structure. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_MissingRequiredFields_ImportContractTypesCorner_TEST_Desktop",
      "ID": "TC-418",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'Import Contract Types Corner - PGS' or 'Import Contract Types Corner - PGI' option.",
          "Expected Result": "File upload interface for the selected contract type is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Prepare an Excel file using the correct template but leave one or more required fields empty.",
          "Expected Result": "Excel file with missing required fields is ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Upload the incomplete Excel file using the provided interface.",
          "Expected Result": "System accepts the file and initiates validation."
        },
        {
          "Step": 6,
          "Step Description": "Wait for the system to complete validation and processing.",
          "Expected Result": "System displays an error message indicating which required fields are missing and rejects the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. Test environment is available and operational.\n3. Excel file with missing required fields is prepared using the correct template.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required fields, valid user credentials.",
      "Expected Result": "System rejects the upload and provides a clear error message specifying the missing required fields. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_ViewImportedData_DashboardContractsTab_TEST_Desktop",
      "ID": "TC-419",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section.",
          "Expected Result": "Dashboard for a single PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Contracts' tab within the Single PoS dashboard.",
          "Expected Result": "Contracts tab is displayed, showing contract information for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the contractual information imported via the PGS or PGI file is correctly displayed for the relevant PoS, using ZONA RICE as the reference key.",
          "Expected Result": "Imported contract data is visible and matches the uploaded Excel file for the corresponding PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful import of PGS or PGI contract data has been completed.\n3. Test environment is available and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Previously imported contract data, valid user credentials.",
      "Expected Result": "Imported contract data is correctly displayed in the Contracts tab for each PoS, matching the uploaded Excel file and using ZONA RICE as the reference key.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_UploadNonExcelFile_ImportContractTypesCorner_TEST_Desktop",
      "ID": "TC-420",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'Import Contract Types Corner - PGS' or 'Import Contract Types Corner - PGI' option.",
          "Expected Result": "File upload interface for the selected contract type is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file that is not in Excel format (e.g., .csv, .txt, .pdf).",
          "Expected Result": "System rejects the file and displays an error message indicating that only Excel files are accepted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. Test environment is available and operational.\n3. Non-Excel file (e.g., .csv, .txt, .pdf) is prepared for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Excel file (e.g., .csv, .txt, .pdf), valid user credentials.",
      "Expected Result": "System rejects the upload and provides a clear error message about the invalid file type. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_ValidAWPExcelImport_DESKTOP_TEST_Desktop",
      "ID": "TC-421",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the standard AWP template (e.g., 'AWP_Import_Template.xlsx') with correct data for multiple PoS, including valid ZONA RICE values.",
          "Expected Result": "The file is uploaded and passes initial format validation."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message indicating that the contractual information has been updated for each PoS."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for one of the imported PoS.",
          "Expected Result": "The contractual information for the selected PoS reflects the data imported from the Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The standard AWP Excel import template is available and correctly filled with valid data.\n3. At least one PoS exists in the system with a matching ZONA RICE value.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid AWP Excel import template file with correct data for multiple PoS (e.g., ZONA RICE, contract details).",
      "Expected Result": "AWP contract data is successfully imported and visible in the Contracts tab for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_InvalidTemplateFormat_DESKTOP_TEST_Desktop",
      "ID": "TC-422",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that does not conform to the standard AWP template (e.g., missing required columns or incorrect sheet name).",
          "Expected Result": "The system rejects the file and displays an error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An invalid Excel file (not matching the standard template) is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with incorrect structure (e.g., missing columns, wrong sheet name).",
      "Expected Result": "System prevents import and displays a clear error message about the template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_MissingMandatoryFields_DESKTOP_TEST_Desktop",
      "ID": "TC-423",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file using the standard template but with one or more mandatory fields (e.g., ZONA RICE) left blank for some rows.",
          "Expected Result": "The system rejects the file and displays an error message specifying the missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file using the standard template with missing mandatory fields is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing mandatory fields (e.g., blank ZONA RICE cells).",
      "Expected Result": "System prevents import and displays a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_DuplicateZONARICE_DESKTOP_TEST_Desktop",
      "ID": "TC-424",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file using the standard template with duplicate ZONA RICE values for different rows.",
          "Expected Result": "The system rejects the file and displays an error message indicating duplicate ZONA RICE values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file using the standard template with duplicate ZONA RICE values is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate ZONA RICE values in multiple rows.",
      "Expected Result": "System prevents import and displays a clear error message about duplicate ZONA RICE values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_ViewImportedDataInDashboard_DESKTOP_TEST_Desktop",
      "ID": "TC-425",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS that was updated via a successful AWP import.",
          "Expected Result": "The 'Contracts' tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the contractual information displayed for the PoS.",
          "Expected Result": "The contractual information matches the data imported from the AWP Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful AWP contract import has been performed for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier and expected contract data from the last successful import.",
      "Expected Result": "Imported AWP contract data is correctly displayed in the Contracts tab for the relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_UploadNonExcelFile_DESKTOP_TEST_Desktop",
      "ID": "TC-426",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a non-Excel file (e.g., PDF, TXT, CSV).",
          "Expected Result": "The system rejects the file and displays an error message indicating that only Excel files are supported."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. A non-Excel file is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Excel file (e.g., PDF, TXT, CSV).",
      "Expected Result": "System prevents import and displays a clear error message about unsupported file type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypes_XPS-ZENIT-505_UploadValidBettingVLTContracts_MassiveImporter_TEST_Desktop",
      "ID": "TC-427",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file (template-compliant) containing Betting and VLT contract data, with ZONA RICE as the reference key.",
          "Expected Result": "The file is uploaded and the system starts the validation process."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the validation to complete.",
          "Expected Result": "Validation completes successfully with a confirmation message."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS included in the import.",
          "Expected Result": "The contractual information for the selected PoS is updated according to the imported data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT system credentials.\n2. User has access to the 'Massive Importer' section.\n3. The Excel template for Contract Types - Specializzati is available and correctly filled with Betting and VLT contract data, using ZONA RICE as the reference key.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with Betting and VLT contract data (template-compliant). Example: ZONA RICE = 'ZONE123', Contract Type = 'Betting', ...",
      "Expected Result": "The system successfully imports the contract data, updates the contractual information for each PoS, and displays the updated data in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-ZENIT-505_UploadInvalidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-428",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that does not comply with the required template (e.g., missing columns, extra sheets, or incorrect structure).",
          "Expected Result": "The system rejects the file and displays a clear validation error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT system credentials.\n2. User has access to the 'Massive Importer' section.\n3. An invalid Excel file (not matching the required template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid Excel file (e.g., missing required columns, extra sheets, or incorrect structure).",
      "Expected Result": "The system prevents the import and provides a clear error message about the template non-compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-ZENIT-505_UploadNonBettingVLTContracts_MassiveImporter_TEST_Desktop",
      "ID": "TC-429",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel template containing only contract types other than Betting and VLT.",
          "Expected Result": "The system processes the file and either ignores non-Betting/VLT contracts or displays a warning/error message, as per requirements."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT system credentials.\n2. User has access to the 'Massive Importer' section.\n3. A valid Excel template containing only non-Betting/VLT contract types is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel template with only non-Betting/VLT contract types.",
      "Expected Result": "The system does not import non-Betting/VLT contracts and provides appropriate feedback to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-ZENIT-505_UploadWithMissingZONARICE_MassiveImporter_TEST_Desktop",
      "ID": "TC-430",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel template where one or more rows are missing the ZONA RICE reference key.",
          "Expected Result": "The system rejects the file or the affected rows and displays a clear validation error message indicating the missing ZONA RICE key."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT system credentials.\n2. User has access to the 'Massive Importer' section.\n3. A valid Excel template with missing ZONA RICE values in one or more rows is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel template with missing ZONA RICE in some rows.",
      "Expected Result": "The system prevents the import of rows without ZONA RICE and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-ZENIT-505_ViewImportedContracts_Dashboard_TEST_Desktop",
      "ID": "TC-431",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS included in a previous successful import.",
          "Expected Result": "The 'Contracts' tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the contractual information displayed for the PoS.",
          "Expected Result": "The contractual information matches the data imported via the Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT system credentials.\n2. At least one successful import of Betting/VLT contract types has been performed for a PoS.\n3. User has access to the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier for which contract data was imported.",
      "Expected Result": "The Dashboard displays the updated contractual information for the PoS as per the imported data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportRETINA_XPS-510_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-432",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the RETINA template, including week number and year.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the upload and submit the file for import.",
          "Expected Result": "System processes the file and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' section and select a PoS included in the imported file.",
          "Expected Result": "Imported data for the selected PoS, including week number and year, is correctly displayed on the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel template is available and correctly filled with PoS data, week number, and year.\n3. At least one PoS in the file matches an existing PoS in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid RETINA Excel file with correct structure, week number, year, and PoS data.",
      "Expected Result": "The RETINA Excel file is successfully imported, and the PoS data (including week number and year) is updated and visible in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRETINA_XPS-510_InvalidTemplateStructure_MassiveImporter_TEST_Desktop",
      "ID": "TC-433",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the RETINA template structure (e.g., missing required columns or sheets).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. Invalid Excel file (not matching RETINA template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing or misnamed columns/sheets.",
      "Expected Result": "System prevents import and displays a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRETINA_XPS-510_MissingWeekYear_MassiveImporter_TEST_Desktop",
      "ID": "TC-434",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a RETINA Excel file missing the week number and/or year fields.",
          "Expected Result": "System rejects the file and displays an error message indicating missing required fields (week number/year)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file missing week number and/or year is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file missing week number and/or year.",
      "Expected Result": "System prevents import and displays a clear error message about missing week number/year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRETINA_XPS-510_DuplicatePoS_MassiveImporter_TEST_Desktop",
      "ID": "TC-435",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a RETINA Excel file containing duplicate PoS entries (same IDRICE and ZonaRice).",
          "Expected Result": "System rejects the file and displays an error message indicating duplicate PoS entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file with duplicate PoS entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with duplicate PoS entries (same IDRICE and ZonaRice).",
      "Expected Result": "System prevents import and displays a clear error message about duplicate PoS entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRETINA_XPS-510_InvalidPoSReference_MassiveImporter_TEST_Desktop",
      "ID": "TC-436",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a RETINA Excel file containing PoS entries with non-existent IDRICE and/or ZonaRice values.",
          "Expected Result": "System processes the file and displays an error message for each PoS entry with invalid references."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file with invalid PoS references is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with PoS entries referencing non-existent IDRICE and/or ZonaRice.",
      "Expected Result": "System displays error messages for PoS entries with invalid references and does not update data for those entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRETINA_XPS-510_ImportWithNewOpeningsClosures_MassiveImporter_TEST_Desktop",
      "ID": "TC-437",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a RETINA Excel file that includes new PoS openings and closures for the week.",
          "Expected Result": "System processes the file and updates the PoS data accordingly."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the dashboard and verify that new openings are present and closures are no longer displayed for the relevant week.",
          "Expected Result": "Dashboard reflects the new openings and closures as per the imported data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file with new openings and closures is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with new PoS openings and closures for the week.",
      "Expected Result": "System updates PoS data to reflect new openings and closures, and dashboard displays the correct status for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRETINA_XPS-510_ImportWithCorruptedFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-438",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a corrupted or unreadable Excel file.",
          "Expected Result": "System rejects the file and displays an error message indicating the file is corrupted or unreadable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. Corrupted or unreadable Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Corrupted or unreadable Excel file.",
      "Expected Result": "System prevents import and displays a clear error message about the corrupted file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRETINA_XPS-510_ImportWithLargeDataset_MassiveImporter_TEST_Desktop",
      "ID": "TC-439",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "'Import RETINA' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a RETINA Excel file containing a large number of PoS entries (e.g., maximum allowed by the system).",
          "Expected Result": "System processes the file without performance issues and displays a success message upon completion."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all PoS data is correctly updated and visible in the dashboard.",
          "Expected Result": "All imported PoS data is present and accurate in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file with a large dataset is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "performance",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "RETINA Excel file with maximum allowed PoS entries.",
      "Expected Result": "System successfully imports large datasets without errors or performance degradation, and all data is visible in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportProfitLossShops_XPSZENIT511_ValidExcelImport_Functional/Desktop_TEST_Desktop",
      "ID": "TC-440",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Shops' option.",
          "Expected Result": "Import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file filled with correct data, including month and year of reference, using the system-provided template.",
          "Expected Result": "File is uploaded and system starts validation."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "System confirms successful import and updates data for each PoS using Zona Rice as the reference key."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. System-provided Excel template is available.\n3. Excel file is correctly filled with valid data, including month and year of reference.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel template file with correct data for at least one PoS, including month/year.",
      "Expected Result": "The system successfully imports the data, updates the information for each PoS, and confirms the operation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPSZENIT511_InvalidTemplateStructure_Functional/Desktop_TEST_Desktop",
      "ID": "TC-441",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Shops' option.",
          "Expected Result": "Import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that does not conform to the required template structure (e.g., missing columns, extra sheets, or incorrect headers).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. An Excel file with incorrect structure is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid structure (e.g., missing required columns).",
      "Expected Result": "System displays an error and does not import any data from the invalid file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPSZENIT511_MissingMonthYear_Functional/Desktop_TEST_Desktop",
      "ID": "TC-442",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Shops' option.",
          "Expected Result": "Import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that is missing the month and/or year of reference.",
          "Expected Result": "System rejects the file and displays an error message indicating missing month/year information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. Excel file missing month and/or year information is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing month/year fields.",
      "Expected Result": "System displays an error and does not import any data from the file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPSZENIT511_DashboardDataVerification_Functional/Desktop_TEST_Desktop",
      "ID": "TC-443",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and import a valid Excel file as per the standard template.",
          "Expected Result": "System confirms successful import."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' tab for a PoS included in the import.",
          "Expected Result": "Business Data tab displays updated Collection, Revenues, and Fees for the selected PoS, with correct month and year."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for the same PoS.",
          "Expected Result": "ADI Data tab displays updated information for the selected PoS, with correct month and year."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. Valid Excel import has been performed for at least one PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS data present in imported Excel file.",
      "Expected Result": "Dashboard displays the imported data for each PoS, including correct month and year of reference.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPSZENIT511_InvalidDataValidation_Functional/Desktop_TEST_Desktop",
      "ID": "TC-444",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Import Profit and Loss - Shops' option.",
          "Expected Result": "Import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file with invalid data (e.g., non-numeric values in numeric fields, missing required fields, or invalid Zona Rice reference).",
          "Expected Result": "System rejects the file and displays an error message indicating the specific validation error."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. Excel file with invalid data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid data (e.g., text in numeric columns, invalid Zona Rice).",
      "Expected Result": "System displays a validation error and does not import any data from the file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossGH_XPS-512_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-445",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface for 'Profit and Loss - Gaming Hall' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the option to download the standard Excel template for P&L Gaming Hall Data.",
          "Expected Result": "Standard Excel template is downloaded successfully."
        },
        {
          "Step": 5,
          "Step Description": "Fill the template with valid Collection, Revenues, Fees, Zona Rice, Month, and Year data for at least one PoS.",
          "Expected Result": "Template is correctly filled with valid data."
        },
        {
          "Step": 6,
          "Step Description": "Upload the completed template via the import interface.",
          "Expected Result": "System accepts the file and initiates validation."
        },
        {
          "Step": 7,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "System confirms successful import and updates data for each PoS using Zona Rice as the key."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. Standard Excel template is available. 4. Test data for at least one PoS is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel template filled with correct data for at least one PoS (including Zona Rice, Month, Year, Collection, Revenues, Fees).",
      "Expected Result": "ZENIT system successfully imports the data, updates the information for each PoS, and displays the correct month and year on the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGH_XPS-512_InvalidTemplateStructure_MassiveImporter_TEST_Desktop",
      "ID": "TC-446",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, incorrect sheet name).",
          "Expected Result": "System rejects the file and displays a clear validation error message indicating the template structure is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. Invalid Excel file is prepared (e.g., missing required columns or incorrect sheet name).",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with incorrect structure (e.g., missing 'Zona Rice' column or incorrect sheet name).",
      "Expected Result": "System rejects the upload and provides a clear error message about the template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGH_XPS-512_MissingMonthYear_MassiveImporter_TEST_Desktop",
      "ID": "TC-447",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel template with Collection, Revenues, Fees, and Zona Rice data, but leave the Month and/or Year fields empty or invalid.",
          "Expected Result": "System rejects the file and displays a validation error indicating that Month and Year are required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. Excel template is prepared with missing or invalid Month/Year fields.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel template missing Month and/or Year fields.",
      "Expected Result": "System rejects the upload and provides a clear error message about missing Month/Year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGH_XPS-512_DashboardDataVerification_MassiveImporter_TEST_Desktop",
      "ID": "TC-448",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and import a valid Excel template with known data for a specific PoS, including Month and Year.",
          "Expected Result": "System confirms successful import."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' tab for the imported PoS.",
          "Expected Result": "Dashboard displays the imported Collection, Revenues, Fees, Month, and Year data for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for the same PoS.",
          "Expected Result": "Dashboard displays the imported data as expected in the ADI Data tab."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. Valid Excel template with known data for a specific PoS is imported successfully.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel template with known Collection, Revenues, Fees, Month, Year, and Zona Rice for a specific PoS.",
      "Expected Result": "Dashboard displays the correct imported data (Collection, Revenues, Fees, Month, Year) for the selected PoS in both Business Data and ADI Data tabs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGH_XPS-512_DuplicatePoS_MassiveImporter_TEST_Desktop",
      "ID": "TC-449",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel template containing duplicate entries for the same Zona Rice (PoS).",
          "Expected Result": "System rejects the file and displays a validation error indicating duplicate PoS entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. Excel template with duplicate Zona Rice entries is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel template with duplicate Zona Rice (PoS) entries.",
      "Expected Result": "System rejects the upload and provides a clear error message about duplicate PoS entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGH_XPS-512_InvalidDataTypes_MassiveImporter_TEST_Desktop",
      "ID": "TC-450",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel template where numeric fields (Collection, Revenues, Fees) contain invalid data types (e.g., text or special characters).",
          "Expected Result": "System rejects the file and displays a validation error indicating invalid data types in numeric fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. Excel template with invalid data types in numeric fields is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel template with text or special characters in numeric fields (Collection, Revenues, Fees).",
      "Expected Result": "System rejects the upload and provides a clear error message about invalid data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-451",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "The import interface for 'Profit and Loss - Corner' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file filled according to the provided template, including correct month and year of reference, and valid PoS data.",
          "Expected Result": "The file is uploaded and passes initial format validation."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message indicating that the data has been imported."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' tab for a PoS included in the import.",
          "Expected Result": "Imported Collection, Revenues, and Fees data for the selected PoS are displayed, with the correct month and year of reference."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The Excel template for P&L Corner Data is available and filled with valid data, including month and year.\n3. At least one PoS with matching Zona Rice exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct structure, month/year, and PoS data.",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the correct information on the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_InvalidTemplateFormat_MassiveImporter_TEST_Desktop",
      "ID": "TC-452",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template (e.g., missing columns, extra sheets, or incorrect headers).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials.\n2. An invalid Excel file (not matching the required template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with incorrect structure (e.g., missing required columns).",
      "Expected Result": "System prevents import and provides a clear error message about the template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_MissingMonthYear_MassiveImporter_TEST_Desktop",
      "ID": "TC-453",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Profit and Loss - Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file that is valid in structure but missing the month and/or year of reference.",
          "Expected Result": "System rejects the file and displays an error message indicating that month and year are required."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials.\n2. Excel file missing month/year fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing month and/or year fields.",
      "Expected Result": "System prevents import and displays a clear error message about missing month/year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_InvalidPoSReference_MassiveImporter_TEST_Desktop",
      "ID": "TC-454",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import Profit and Loss - Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file with one or more PoS records where the Zona Rice reference does not exist in the system.",
          "Expected Result": "System processes the file and displays an error message for each unmatched Zona Rice, indicating which records could not be imported."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials.\n2. Excel file with non-existent Zona Rice references is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with at least one Zona Rice value not present in the system.",
      "Expected Result": "System rejects records with invalid Zona Rice and provides clear error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_DuplicatePoSRecords_MassiveImporter_TEST_Desktop",
      "ID": "TC-455",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' and select 'Import Profit and Loss - Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file containing duplicate records for the same Zona Rice.",
          "Expected Result": "System detects duplicate records and displays an error or warning message, preventing import of duplicates."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials.\n2. Excel file with duplicate Zona Rice records is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate Zona Rice entries.",
      "Expected Result": "System prevents import of duplicate records and notifies the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-456",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Dashboard - Single PoS - Business Data' for a PoS included in a previous successful import.",
          "Expected Result": "Dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the imported Collection, Revenues, and Fees data are displayed for the correct month and year.",
          "Expected Result": "Dashboard displays the correct imported data, including month and year of reference."
        },
        {
          "Step": 4,
          "Step Description": "Switch to the 'ADI Data' tab for the same PoS.",
          "Expected Result": "ADI Data tab displays the corresponding imported data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials.\n2. At least one successful import has been performed for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Previously imported data for a known PoS.",
      "Expected Result": "Dashboard displays the correct imported data for the selected PoS, including month and year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportQRCorner-XPSZENIT514_ImportQRCorner_ValidTemplateUpload_DESKTOP_TEST_Desktop",
      "ID": "TC-457",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a valid Excel file filled according to the PoS Master Data template, containing correct data for multiple PoS.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Master Data' tab for one of the imported PoS.",
          "Expected Result": "Imported 'Date Activated' data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. The Excel file is filled according to the official PoS Master Data template and contains valid data.",
      "Execution Mode": "Manual",
      "Functionality": "Import QR Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct structure and sample PoS data.",
      "Expected Result": "System successfully imports the data, updates the PoS records, and displays the new data in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner-XPSZENIT514_ImportQRCorner_InvalidTemplateUpload_DESKTOP_TEST_Desktop",
      "ID": "TC-458",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file that does NOT conform to the required PoS Master Data template (e.g., missing columns, extra sheets, wrong format).",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to start the import process.",
          "Expected Result": "System displays an error message indicating the file structure is invalid and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An Excel file with incorrect structure is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import QR Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required columns or incorrect sheet names.",
      "Expected Result": "System rejects the file and displays a clear error message about the invalid template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner-XPSZENIT514_ImportQRCorner_MissingMandatoryFields_DESKTOP_TEST_Desktop",
      "ID": "TC-459",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with the correct template but with missing mandatory fields (e.g., missing 'Zona Rice' or 'Date Activated').",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to start the import process.",
          "Expected Result": "System displays an error message indicating which mandatory fields are missing and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An Excel file with missing mandatory fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import QR Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing 'Zona Rice' or 'Date Activated' fields.",
      "Expected Result": "System rejects the file and provides a clear error message about the missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner-XPSZENIT514_ImportQRCorner_DuplicatePoS_DESKTOP_TEST_Desktop",
      "ID": "TC-460",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with duplicate PoS entries (same 'Zona Rice' key appears more than once).",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to start the import process.",
          "Expected Result": "System displays an error message indicating duplicate PoS entries and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An Excel file with duplicate 'Zona Rice' entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import QR Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with two or more rows having the same 'Zona Rice' value.",
      "Expected Result": "System rejects the file and displays a clear error message about duplicate PoS entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner-XPSZENIT514_ImportQRCorner_ViewImportedData_DESKTOP_TEST_Desktop",
      "ID": "TC-461",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Master Data' tab for a PoS that was updated via a successful import.",
          "Expected Result": "'Master Data' tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Date Activated' field (for channel 1) reflects the value imported from the Excel file.",
          "Expected Result": "'Date Activated' field displays the correct value as per the imported data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. At least one successful import has been performed for a PoS.\n3. The imported data is known and available for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Import QR Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier and expected 'Date Activated' value from the last import.",
      "Expected Result": "Imported data is correctly displayed in the dashboard for the relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner-XPSZENIT514_ImportQRCorner_UploadOriginalNetworkFile_DESKTOP_TEST_Desktop",
      "ID": "TC-462",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select the original file received from Network Distribution (not transcribed into the PoS Master Data template).",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to start the import process.",
          "Expected Result": "System displays an error message indicating the file is not in the correct template and aborts the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. The original Network Distribution file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import QR Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Original 'QR_Corner_<month> <yyyy>' file from Network Distribution.",
      "Expected Result": "System rejects the original file and provides a clear error message about the required template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportOfflinePoSDataStorage-XPSZENIT520_Requirement_ValidExcelImport_DESKTOP_TEST_Desktop",
      "ID": "TC-463",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file (PoS_Offline) containing historical PoS data not present in MDM, with all required fields correctly filled (including ID Rice and Zona Rice).",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message indicating that the data has been imported."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for one of the imported PoS using ID Rice and Zona Rice.",
          "Expected Result": "Imported PoS data is visible and matches the data from the uploaded file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials.\n2. User has access to the 'Massive Importer' section.\n3. Valid Excel template (PoS_Offline) is available and filled with correct data for at least one PoS not present in MDM.\n4. No ongoing system maintenance.",
      "Execution Mode": "Manual",
      "Functionality": "Offline PoS Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file (PoS_Offline) with at least one historical PoS entry (including ID Rice, Zona Rice, and all required fields).",
      "Expected Result": "All valid PoS records from the Excel file are imported and visible in the Dashboard - Single PoS, with data matching the uploaded file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage-XPSZENIT520_Requirement_InvalidExcelFormat_DESKTOP_TEST_Desktop",
      "ID": "TC-464",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file with an invalid format (e.g., missing required columns or incorrect template).",
          "Expected Result": "System rejects the file and displays a clear error message indicating the format issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials.\n2. User has access to the 'Massive Importer' section.\n3. Invalid Excel file (wrong template or missing required columns) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Offline PoS Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required columns (e.g., missing ID Rice or Zona Rice).",
      "Expected Result": "System prevents import and displays an informative error message about the invalid file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage-XPSZENIT520_Requirement_DuplicatePoSHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-465",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing duplicate PoS entries (same ID Rice and Zona Rice).",
          "Expected Result": "System detects duplicate entries and displays a warning or error message, preventing duplicate import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials.\n2. User has access to the 'Massive Importer' section.\n3. Excel file with duplicate PoS entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Offline PoS Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with two or more rows having the same ID Rice and Zona Rice.",
      "Expected Result": "System prevents duplicate PoS records from being imported and notifies the user of the duplication.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage-XPSZENIT520_Requirement_WriteOffFlagPersistence_DESKTOP_TEST_Desktop",
      "ID": "TC-466",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing PoS entries with the 'Write-off applied Flag' set to true/yes.",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message."
        },
        {
          "Step": 6,
          "Step Description": "Query the backend database or use an admin interface to verify that the 'Write-off applied Flag' is stored for the imported PoS, even if not visible on the Dashboard.",
          "Expected Result": "The 'Write-off applied Flag' value is correctly stored in the system for the imported PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials.\n2. User has access to the 'Massive Importer' section.\n3. Excel file with 'Write-off applied Flag' set for at least one PoS is available.\n4. Access to backend database or admin interface for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Offline PoS Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Excel file with 'Write-off applied Flag' set to true/yes for at least one PoS entry.",
      "Expected Result": "The 'Write-off applied Flag' is stored in the system for imported PoS, even if not displayed on the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers persistence of hidden fields.",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage-XPSZENIT520_Requirement_UpdateExistingPoS_DESKTOP_TEST_Desktop",
      "ID": "TC-467",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing updated data for an existing Offline PoS (matching ID Rice and Zona Rice).",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for the updated PoS.",
          "Expected Result": "PoS data reflects the updated information from the latest import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials.\n2. User has access to the 'Massive Importer' section.\n3. At least one Offline PoS already exists in the system.\n4. Excel file with updated data for the existing PoS is available.",
      "Execution Mode": "Manual",
      "Functionality": "Offline PoS Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with updated data for an existing Offline PoS (same ID Rice and Zona Rice as existing record).",
      "Expected Result": "Existing PoS data is updated with new values from the imported file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage-XPSZENIT520_Requirement_NoExternalDataAcquisition_DESKTOP_TEST_Desktop",
      "ID": "TC-468",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with PoS entries that are not present in the MDM system.",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message."
        },
        {
          "Step": 6,
          "Step Description": "Verify that no additional data is automatically acquired from external systems (e.g., MDM) for the imported PoS.",
          "Expected Result": "Only the data provided in the uploaded file is present for the imported PoS; no external data is added."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials.\n2. User has access to the 'Massive Importer' section.\n3. Excel file with PoS entries not present in MDM is available.",
      "Execution Mode": "Manual",
      "Functionality": "Offline PoS Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Excel file with PoS entries not present in MDM system.",
      "Expected Result": "Imported PoS data contains only the information from the uploaded file, with no enrichment from external sources.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for external data acquisition.",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage-XPSZENIT520_Requirement_MissingRequiredFields_DESKTOP_TEST_Desktop",
      "ID": "TC-469",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with one or more PoS entries missing required fields (e.g., missing ID Rice or Zona Rice).",
          "Expected Result": "System rejects the file or the specific records and displays an error message indicating missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials.\n2. User has access to the 'Massive Importer' section.\n3. Excel file with missing required fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Offline PoS Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with at least one PoS entry missing ID Rice or Zona Rice.",
      "Expected Result": "System prevents import of records with missing required fields and notifies the user accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage-XPSZENIT520_Requirement_UploadLargeFile_DESKTOP_TEST_Desktop",
      "ID": "TC-470",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a large Excel file (e.g., 500+ PoS entries) with valid data.",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message. All records are imported."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials.\n2. User has access to the 'Massive Importer' section.\n3. Large Excel file (500+ valid PoS entries) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Offline PoS Data Import",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large Excel file with 500+ valid PoS entries.",
      "Expected Result": "System successfully imports all records from the large file without errors or timeouts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers performance and scalability for large imports.",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportTrackingWinnings_XPS-530_ValidImport_TicketsPaidOtherAgencies_TEST_Desktop",
      "ID": "TC-471",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Tickets paid at other agencies'.",
          "Expected Result": "File upload interface for 'Tickets paid at other agencies' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a valid Excel file filled using the provided template for 'Tickets paid at other agencies'.",
          "Expected Result": "Selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "System validates the file and displays a success message if the file is valid."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Winning Data' tab for a PoS included in the import.",
          "Expected Result": "Imported winnings data for the selected PoS is correctly displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions. 2. The dedicated Excel template for 'Tickets paid at other agencies' is available and filled with valid data. 3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file for 'Tickets paid at other agencies' with at least one PoS entry.",
      "Expected Result": "The system successfully imports the data, updates the Tracking Winnings for each PoS, and displays the correct information in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings_XPS-530_InvalidTemplate_UnpaidSportTickets_TEST_Desktop",
      "ID": "TC-472",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning SPORT tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning SPORT tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file not using the required template (e.g., missing columns or incorrect structure).",
          "Expected Result": "Selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "System validates the file and displays an error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions. 2. An Excel file for 'Unpaid winning SPORT tickets' is prepared with an incorrect structure (not matching the template). 3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid Excel file for 'Unpaid winning SPORT tickets' (e.g., missing required columns).",
      "Expected Result": "The system rejects the file and displays a clear error message about the invalid template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings_XPS-530_MissingMandatoryFields_UnpaidVRTickets_TEST_Desktop",
      "ID": "TC-473",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning VR tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning VR tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file using the correct template but with one or more mandatory fields left blank.",
          "Expected Result": "Selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "System validates the file and displays an error message indicating missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions. 2. An Excel file for 'Unpaid winning VR tickets' is prepared using the correct template but with missing mandatory data. 3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file for 'Unpaid winning VR tickets' with missing mandatory fields (e.g., Seller PoS identifier).",
      "Expected Result": "The system rejects the file and displays a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings_XPS-530_InvalidFileFormat_TicketsPaidOtherAgencies_TEST_Desktop",
      "ID": "TC-474",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Tickets paid at other agencies'.",
          "Expected Result": "File upload interface for 'Tickets paid at other agencies' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a file in an unsupported format (e.g., .csv or .pdf).",
          "Expected Result": "Selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "System validates the file and displays an error message indicating the file format is not supported."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions. 2. A file in an unsupported format (e.g., .csv or .pdf) is available. 3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File in unsupported format (e.g., .csv or .pdf) for 'Tickets paid at other agencies'.",
      "Expected Result": "The system rejects the file and displays a clear error message about unsupported file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings_XPS-530_DuplicateEntries_UnpaidSportTickets_TEST_Desktop",
      "ID": "TC-475",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning SPORT tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning SPORT tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file using the correct template but containing duplicate entries for the same Seller PoS identifier.",
          "Expected Result": "Selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "System validates the file and displays an error message indicating duplicate entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions. 2. An Excel file for 'Unpaid winning SPORT tickets' is prepared using the correct template but with duplicate Seller PoS identifiers. 3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file for 'Unpaid winning SPORT tickets' with duplicate Seller PoS identifiers.",
      "Expected Result": "The system rejects the file and displays a clear error message about duplicate entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings_XPS-530_ViewImportedData_DashboardSinglePoS_TEST_Desktop",
      "ID": "TC-476",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Winning Data' tab.",
          "Expected Result": "Dashboard for single PoS is displayed with the 'Winning Data' tab active."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS for which data was recently imported via the 'Massive Importer'.",
          "Expected Result": "Winning data for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the displayed data matches the information imported from the Excel file.",
          "Expected Result": "Displayed data is accurate and consistent with the imported file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions. 2. At least one successful import has been performed for a PoS. 3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier for which data was imported and the corresponding Excel file.",
      "Expected Result": "The dashboard displays the imported winning data accurately for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-477",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "Import interface for AWP - Altro Concessionario is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the provided template, containing valid AWP data for multiple PoS with correct 'Zona Rice' identifiers.",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System validates the file successfully and displays a confirmation message."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for a PoS included in the import.",
          "Expected Result": "The imported AWP data is correctly displayed for the selected PoS, reflecting the number of AWPs as per the uploaded file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has received the standard Excel template and filled it with valid AWP data as per the required structure.\n3. The system is up and running, and the 'Massive Importer' feature is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Import - Altro Concessionario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with multiple PoS and correct 'Zona Rice' identifiers; valid user credentials.",
      "Expected Result": "AWP data for each PoS is updated and visible in the Dashboard as per the imported file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_InvalidTemplateStructure_MassiveImporter_TEST_Desktop",
      "ID": "TC-478",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "Import interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, or incorrect headers).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has an Excel file with an invalid structure (not matching the required template).",
      "Execution Mode": "Manual",
      "Functionality": "AWP Import - Altro Concessionario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with invalid structure (e.g., missing required columns); valid user credentials.",
      "Expected Result": "System prevents import and provides a clear error message about the template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_MissingZonaRice_MassiveImporter_TEST_Desktop",
      "ID": "TC-479",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "Import interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file where one or more records are missing the 'Zona Rice' identifier.",
          "Expected Result": "System rejects the file or the affected records and displays an error message indicating missing 'Zona Rice' values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has an Excel file with one or more records missing the 'Zona Rice' field.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Import - Altro Concessionario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing 'Zona Rice' in some records; valid user credentials.",
      "Expected Result": "System prevents import and provides a clear error message about missing 'Zona Rice'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_DuplicateRecords_MassiveImporter_TEST_Desktop",
      "ID": "TC-480",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "Import interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing duplicate records for the same 'Zona Rice' and PoS.",
          "Expected Result": "System processes the file and calculates the 'Number AWP AC' as the count of occurrences for each 'Zona Rice', updating the PoS accordingly."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for the affected PoS.",
          "Expected Result": "The 'Number AWP AC' reflects the correct count, including duplicates as per the business rule."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has an Excel file with duplicate records for the same 'Zona Rice' and PoS.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Import - Altro Concessionario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate 'Zona Rice' records; valid user credentials.",
      "Expected Result": "System updates the 'Number AWP AC' for each PoS based on the total count of records per 'Zona Rice', including duplicates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-481",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for a PoS that has recently had AWP data imported.",
          "Expected Result": "Dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the 'Number AWP AC' and other imported data fields.",
          "Expected Result": "The dashboard displays the correct 'Number AWP AC' and other imported data as per the last successful import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful import of AWP data has been performed for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Import - Altro Concessionario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with previously imported AWP data; valid user credentials.",
      "Expected Result": "Dashboard displays the imported AWP data accurately for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_InvalidFileFormat_MassiveImporter_TEST_Desktop",
      "ID": "TC-482",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "Import interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file that is not in Excel format (e.g., .csv, .txt, .pdf).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has a file in an unsupported format (not .xlsx).",
      "Execution Mode": "Manual",
      "Functionality": "AWP Import - Altro Concessionario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File in unsupported format (e.g., .csv, .txt, .pdf); valid user credentials.",
      "Expected Result": "System prevents import and provides a clear error message about the file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-483",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "The file upload interface for DATABASE RETE import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file structured according to the standard DATABASE RETE template, containing correct data for at least one PoS (with valid ID Rice and Zona Rice).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for the PoS with the imported ID Rice and Zona Rice.",
          "Expected Result": "The imported data is visible and correctly updated for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The standard DATABASE RETE Excel template is available.\n3. The Excel file is correctly filled with valid data for at least one PoS (including valid ID Rice and Zona Rice).",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid DATABASE RETE Excel file with at least one PoS entry.",
      "Expected Result": "The system successfully imports the DATABASE RETE Excel file, updates the PoS data, and the imported data is visible in the Dashboard - Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_InvalidTemplateImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-484",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "The file upload interface for DATABASE RETE import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file that does NOT conform to the standard DATABASE RETE template (e.g., missing required columns, extra sheets, or incorrect format).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the template is invalid or not recognized."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An invalid Excel file (not matching the DATABASE RETE template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid DATABASE RETE Excel file (wrong structure).",
      "Expected Result": "The system rejects the invalid Excel file and displays an appropriate error message without updating any PoS data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_MissingRequiredFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-485",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "The file upload interface for DATABASE RETE import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a DATABASE RETE Excel file with missing required fields (e.g., missing ID Rice or Zona Rice for one or more rows).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system rejects the file and displays an error message specifying the missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file using the correct template but with missing required fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; DATABASE RETE Excel file with missing required fields.",
      "Expected Result": "The system rejects the file and displays a clear error message about the missing required fields. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_DuplicatePoSEntries_MassiveImporter_TEST_Desktop",
      "ID": "TC-486",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "The file upload interface for DATABASE RETE import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a DATABASE RETE Excel file containing duplicate entries for the same PoS (same ID Rice and Zona Rice).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system processes the file and displays a warning or error message indicating duplicate entries, and does not import the duplicates."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file using the correct template but containing duplicate PoS entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; DATABASE RETE Excel file with duplicate PoS entries.",
      "Expected Result": "The system identifies duplicate PoS entries and prevents their import, displaying an appropriate message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_EmptyFileImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-487",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "The file upload interface for DATABASE RETE import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an empty DATABASE RETE Excel file (correct template, but no data rows).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the file contains no data to import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An empty DATABASE RETE Excel file (correct template, no data) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Empty DATABASE RETE Excel file.",
      "Expected Result": "The system rejects the empty file and displays an appropriate error message. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_ViewImportedData_DashboardSinglePoS_TEST_Desktop",
      "ID": "TC-488",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section.",
          "Expected Result": "The 'Dashboard - Single PoS' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a PoS (using ID Rice and Zona Rice) that was updated via a successful DATABASE RETE import.",
          "Expected Result": "The PoS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the imported data is correctly reflected in the PoS details.",
          "Expected Result": "The PoS details show the updated information as per the imported DATABASE RETE file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful DATABASE RETE import has been performed for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with imported DATABASE RETE data.",
      "Expected Result": "The imported DATABASE RETE data is visible and correct in the Dashboard - Single PoS for the relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDBCorner-XPS-535_ValidImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-489",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select a valid Excel file structured according to the system's standard template, containing correct data for Unpaid winning VR tickets.",
          "Expected Result": "File is selected and displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System validates the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for a PoS included in the imported file.",
          "Expected Result": "Imported data for the selected PoS is correctly displayed and updated."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. The Excel template is correctly filled with valid data for Unpaid winning VR tickets. 4. No ongoing maintenance or downtime on the ZENIT system.",
      "Execution Mode": "Manual",
      "Functionality": "Import DB Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel template file with correct structure and sample data for at least one PoS.",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the new data in the Dashboard - Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS-535_InvalidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-490",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel file that does not conform to the required template (e.g., missing columns, incorrect sheet name, or extra fields).",
          "Expected Result": "File is selected and displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System validates the file and displays an error message indicating the template is invalid and the import is rejected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. An Excel file with an invalid template is available for upload. 4. No ongoing maintenance or downtime on the ZENIT system.",
      "Execution Mode": "Manual",
      "Functionality": "Import DB Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required columns or incorrect sheet name.",
      "Expected Result": "The system rejects the file and displays a clear error message about the template issue.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS-535_MissingMandatoryFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-491",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel file with missing mandatory fields (e.g., missing ID Rice or Zona Rice for some rows).",
          "Expected Result": "File is selected and displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System validates the file and displays an error message indicating which mandatory fields are missing, and the import is rejected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. An Excel file with missing mandatory fields is available for upload. 4. No ongoing maintenance or downtime on the ZENIT system.",
      "Execution Mode": "Manual",
      "Functionality": "Import DB Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing ID Rice or Zona Rice in one or more rows.",
      "Expected Result": "The system rejects the file and displays a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS-535_DuplicateEntries_MassiveImporter_TEST_Desktop",
      "ID": "TC-492",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel file containing duplicate entries for the same ID Rice and Zona Rice.",
          "Expected Result": "File is selected and displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System validates the file and displays an error or warning message indicating duplicate entries, and the import is rejected or handled according to business rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. An Excel file with duplicate entries for ID Rice and Zona Rice is available for upload. 4. No ongoing maintenance or downtime on the ZENIT system.",
      "Execution Mode": "Manual",
      "Functionality": "Import DB Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate ID Rice and Zona Rice entries.",
      "Expected Result": "The system detects duplicate entries and displays an appropriate error or warning message, preventing incorrect data import.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS-535_ViewImportedData_DashboardSinglePoS_TEST_Desktop",
      "ID": "TC-493",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section.",
          "Expected Result": "'Dashboard - Single PoS' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a PoS that was included in a previously successful import.",
          "Expected Result": "PoS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the imported data for Unpaid winning VR tickets is correctly displayed for the selected PoS.",
          "Expected Result": "Imported data is visible and matches the data from the imported Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. At least one successful import has been performed. 3. The PoS to be checked is included in the imported data. 4. No ongoing maintenance or downtime on the ZENIT system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Single PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier from a previously imported Excel file.",
      "Expected Result": "The imported data for the selected PoS is correctly displayed in the dashboard and matches the imported values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS-535_UploadNonExcelFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-494",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with available import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select a non-Excel file (e.g., .csv, .txt, .pdf).",
          "Expected Result": "File is selected and displayed in the upload interface."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System validates the file and displays an error message indicating that only Excel files are accepted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials. 2. User has access to the 'Massive Importer' section. 3. A non-Excel file is available for upload. 4. No ongoing maintenance or downtime on the ZENIT system.",
      "Execution Mode": "Manual",
      "Functionality": "Import DB Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Excel file (e.g., .csv, .txt, .pdf).",
      "Expected Result": "The system rejects the file and displays a clear error message about file type restrictions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportGNTNCreditSituation-proj_536_import_validExcelFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-495",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a valid Excel file that follows the required template and contains correct GNTN Credit Situation data.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "The system processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' section and select a PoS included in the import.",
          "Expected Result": "The updated GNTN Credit Situation data for the selected PoS is displayed as per the imported file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. The standard Excel template for GNTN Credit Situation import is available.\n3. The Excel file is correctly filled with valid data as per the template.\n4. At least one PoS in the file exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel file with correct data for at least one PoS (Zona Code, Rice Number, Credit Situation fields).",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the updated information in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation-proj_536_import_invalidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-496",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file that does NOT follow the required template (e.g., missing columns, extra columns, incorrect headers).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. An Excel file with incorrect template structure is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with incorrect template (e.g., missing required columns).",
      "Expected Result": "The system does not import the file and provides a clear error message about the template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation-proj_536_import_invalidData_MassiveImporter_TEST_Desktop",
      "ID": "TC-497",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with the correct template but containing invalid data (e.g., missing required fields, invalid Zona Code, non-numeric values in numeric fields).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "The system rejects the file and displays an error message indicating the specific data validation errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. An Excel file with correct template but invalid data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with correct template but invalid data (e.g., empty required fields, invalid Zona Code).",
      "Expected Result": "The system does not import the file and provides a clear error message about the data issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation-proj_536_import_duplicatePoS_MassiveImporter_TEST_Desktop",
      "ID": "TC-498",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with duplicate entries for the same PoS (same Zona Code and Rice Number).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "The system processes the file and displays an error or warning message indicating duplicate PoS entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. An Excel file with duplicate PoS entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate Zona Code and Rice Number entries.",
      "Expected Result": "The system does not import duplicate entries and provides a clear message to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation-proj_536_import_nonexistentPoS_MassiveImporter_TEST_Desktop",
      "ID": "TC-499",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with valid structure but containing PoS (Zona Code and Rice Number) not present in the system.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "The system processes the file and displays an error or warning message indicating that some PoS do not exist in the system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. An Excel file with valid structure but non-existent PoS is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with valid structure but PoS not present in the system.",
      "Expected Result": "The system does not update non-existent PoS and provides a clear message to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation-proj_536_import_largeFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-500",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a large Excel file (e.g., maximum allowed rows) with valid data.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to import the file.",
          "Expected Result": "The system processes the large file within acceptable time limits and displays a success message if the import is successful."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to ZENIT system.\n2. A large Excel file with valid data and within system limits is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials; Large Excel file with maximum allowed rows and valid data.",
      "Expected Result": "The system successfully imports the large file within acceptable time and updates the PoS records accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation-proj_537_import_validExcelFile_DESKTOP_TEST_Desktop",
      "ID": "TC-501",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The import interface for Corner Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the system's standard template, containing correct Corner Credit Situation data.",
          "Expected Result": "The file is uploaded and validated by the system without errors."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "ZENIT processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' for a PoS included in the import file.",
          "Expected Result": "The imported Corner Credit Situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The standard Excel template for Corner Credit Situation is available.\n3. The Excel file is correctly filled with valid data for at least one PoS.\n4. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel template file with correct data for at least one PoS (including Zona Code and Rice Number).",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the new data in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation-proj_537_import_invalidTemplate_DESKTOP_TEST_Desktop",
      "ID": "TC-502",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The import interface for Corner Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that does not conform to the required template structure (e.g., missing columns, incorrect headers).",
          "Expected Result": "The system rejects the file and displays a validation error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with an invalid structure (not matching the required template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with incorrect template (e.g., missing required columns).",
      "Expected Result": "The system does not import the file and provides a clear error message about the template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation-proj_537_import_missingRequiredFields_DESKTOP_TEST_Desktop",
      "ID": "TC-503",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The import interface for Corner Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that is missing required fields (e.g., missing Zona Code or Rice Number for some rows).",
          "Expected Result": "The system rejects the file and displays a validation error message indicating missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with missing required fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing required fields (e.g., Zona Code or Rice Number).",
      "Expected Result": "The system does not import the file and provides a clear error message about missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation-proj_537_import_duplicateEntries_DESKTOP_TEST_Desktop",
      "ID": "TC-504",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The import interface for Corner Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file containing duplicate entries for the same Zona Code and Rice Number.",
          "Expected Result": "The system detects duplicate entries and displays a validation error message indicating the presence of duplicates."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with duplicate entries for Zona Code and Rice Number is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate Zona Code and Rice Number entries.",
      "Expected Result": "The system does not import the file and provides a clear error message about duplicate entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation-proj_537_import_invalidDataTypes_DESKTOP_TEST_Desktop",
      "ID": "TC-505",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The import interface for Corner Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file where some fields contain invalid data types (e.g., text in numeric fields).",
          "Expected Result": "The system rejects the file and displays a validation error message indicating invalid data types."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with invalid data types in required fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid data types (e.g., text in numeric columns).",
      "Expected Result": "The system does not import the file and provides a clear error message about invalid data types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation-proj_537_import_largeFile_DESKTOP_TEST_Desktop",
      "ID": "TC-506",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The import interface for Corner Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file containing a large number of records (e.g., 10,000+ rows).",
          "Expected Result": "The system processes the file without performance issues and displays a success message upon completion."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. A valid Excel file with a large number of records is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials; Large valid Excel file (10,000+ rows).",
      "Expected Result": "The system successfully imports all records without errors or significant delays.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers performance and scalability aspects of the import functionality.",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation-proj_537_import_viewDashboardUpdate_DESKTOP_TEST_Desktop",
      "ID": "TC-507",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' for a PoS that will be updated by the import.",
          "Expected Result": "Current Corner Credit Situation data is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import Corner Credit Situation'.",
          "Expected Result": "The import interface for Corner Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel file containing updated data for the selected PoS and confirm the import.",
          "Expected Result": "The system processes the file and displays a success message."
        },
        {
          "Step": 5,
          "Step Description": "Return to the 'Dashboard - Single PoS - Credit Management' for the same PoS.",
          "Expected Result": "The dashboard displays the updated Corner Credit Situation data as per the imported file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The PoS to be updated exists in the system.\n3. A valid Excel file with updated data for the PoS is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Existing PoS; Valid Excel file with updated data for the PoS.",
      "Expected Result": "The dashboard reflects the updated Corner Credit Situation data after import.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_XPS-ZENIT-538_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-508",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Import Conti Gioco Credit Situation' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select a valid Excel file filled according to the provided template, containing correct Zona Code and Rice Number data.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' section and search for a PoS included in the imported file.",
          "Expected Result": "The credit situation data for the selected PoS is updated and matches the imported values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The standard Excel template for 'Conti Gioco Credit Situation' is available and correctly filled with valid data.\n3. The user has access to the 'Massive Importer' section.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct Zona Code, Rice Number, and credit data for at least one PoS.",
      "Expected Result": "The system successfully imports the data, updates the credit situation for each PoS, and displays the updated data in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_XPS-ZENIT-538_InvalidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-509",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Import Conti Gioco Credit Situation' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select an Excel file that does not conform to the required template (e.g., missing columns, incorrect headers).",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating that the file structure is invalid and the import is rejected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with an invalid structure (not matching the template) is available.\n3. The user has access to the 'Massive Importer' section.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required columns or incorrect headers.",
      "Expected Result": "The system rejects the file and displays a clear error message about the invalid template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_XPS-ZENIT-538_MissingMandatoryFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-510",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Import Conti Gioco Credit Situation' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select an Excel file that is missing mandatory fields (e.g., missing Zona Code or Rice Number for some rows).",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating which mandatory fields are missing and rejects the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file missing mandatory fields (e.g., Zona Code or Rice Number) is available.\n3. The user has access to the 'Massive Importer' section.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing Zona Code or Rice Number in one or more rows.",
      "Expected Result": "The system rejects the file and displays a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_XPS-ZENIT-538_DuplicateEntries_MassiveImporter_TEST_Desktop",
      "ID": "TC-511",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "File upload interface for 'Import Conti Gioco Credit Situation' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select an Excel file containing duplicate entries for the same Zona Code and Rice Number.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "System displays an error message indicating duplicate entries and rejects the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with duplicate Zona Code and Rice Number entries is available.\n3. The user has access to the 'Massive Importer' section.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with at least two rows having the same Zona Code and Rice Number.",
      "Expected Result": "The system rejects the file and displays a clear error message about duplicate entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_XPS-ZENIT-538_UnauthorizedUser_MassiveImporter_TEST_Desktop",
      "ID": "TC-512",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with a user account that does not have permission to access the 'Massive Importer' section.",
          "Expected Result": "User is logged in but does not see the 'Massive Importer' section or is denied access."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the 'Massive Importer' section directly via URL or navigation.",
          "Expected Result": "System denies access and displays an appropriate error or access denied message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists without permissions for 'Massive Importer'.\n2. The user has valid login credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account without 'Massive Importer' permissions.",
      "Expected Result": "Unauthorized users cannot access the import functionality and receive an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_XPS-ZENIT-538_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-513",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' section.",
          "Expected Result": "Dashboard for single PoS credit management is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a PoS that was included in a previously successful import.",
          "Expected Result": "The PoS is found and its credit situation data is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the credit situation data matches the data imported from the Excel file.",
          "Expected Result": "Displayed data matches the imported values for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. At least one successful import of 'Conti Gioco Credit Situation' data has been performed.\n2. User has valid credentials and access to the dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS data previously imported via valid Excel file.",
      "Expected Result": "The dashboard displays the correct, updated credit situation data for the imported PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj_539_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-514",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "The file upload interface for SIMP Credit Situation import is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the provided SIMP Credit Management template, containing correct data for multiple PoS.",
          "Expected Result": "The file is uploaded and the system begins validation."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "A success message is displayed indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for one of the imported PoS.",
          "Expected Result": "The imported SIMP Credit Situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. The SIMP Credit Management Excel template is available and correctly filled with valid data.\n4. At least one PoS exists in the system matching the IdRice and Zona Rice in the import file.",
      "Execution Mode": "Manual",
      "Functionality": "SIMP Credit Situation Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid SIMP Credit Management Excel file with multiple PoS records (IdRice, Zona Rice, and credit data).",
      "Expected Result": "The SIMP Credit Situation data is imported successfully and visible in the dashboard for each corresponding PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj_539_InvalidTemplateFormat_MassiveImporter_TEST_Desktop",
      "ID": "TC-515",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "The file upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required SIMP Credit Management template (e.g., missing columns, incorrect headers).",
          "Expected Result": "The system rejects the file and displays an error message indicating template format issues."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An invalid Excel file (wrong template structure) is available.",
      "Execution Mode": "Manual",
      "Functionality": "SIMP Credit Situation Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required columns or incorrect headers.",
      "Expected Result": "The system prevents import and displays a clear error message about the template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj_539_DuplicatePoSKeys_MassiveImporter_TEST_Desktop",
      "ID": "TC-516",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "The file upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file where two or more rows have the same IdRice and Zona Rice values.",
          "Expected Result": "The system detects duplicate PoS keys and displays an error message indicating the duplication."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An Excel file with duplicate IdRice and Zona Rice combinations is available.",
      "Execution Mode": "Manual",
      "Functionality": "SIMP Credit Situation Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with at least two rows sharing the same IdRice and Zona Rice.",
      "Expected Result": "The system rejects the import and displays a clear error message about duplicate PoS keys.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj_539_MissingMandatoryFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-517",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "The file upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with one or more mandatory fields (e.g., IdRice, Zona Rice, or credit value) left blank.",
          "Expected Result": "The system detects missing mandatory fields and displays an error message specifying the missing data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An Excel file with missing mandatory fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "SIMP Credit Situation Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with one or more rows missing IdRice, Zona Rice, or credit value.",
      "Expected Result": "The system rejects the import and displays a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj_539_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-518",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS that was included in a successful import.",
          "Expected Result": "The Credit Management tab is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Review the displayed SIMP Credit Situation data for the PoS.",
          "Expected Result": "The data matches the information imported from the Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. At least one successful SIMP Credit Situation import has been performed for a PoS.\n3. The PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "SIMP Credit Situation Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Previously imported SIMP Credit Situation data for a specific PoS.",
      "Expected Result": "The imported SIMP Credit Situation data is correctly displayed in the dashboard for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj_539_InvalidFileType_MassiveImporter_TEST_Desktop",
      "ID": "TC-519",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import SIMP Credit Situation' option.",
          "Expected Result": "The file upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file that is not an Excel file (e.g., .csv, .txt, .pdf).",
          "Expected Result": "The system rejects the file and displays an error message indicating invalid file type."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. A non-Excel file is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "SIMP Credit Situation Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Excel file (e.g., .csv, .txt, .pdf).",
      "Expected Result": "The system prevents import and displays a clear error message about invalid file type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportCervedData-proj_540_import_valid_excel_template_TEST_Desktop",
      "ID": "TC-520",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "'Import Cerved Data' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file filled according to the provided Cerved Data template, containing correct VAT numbers or Tax Codes and valid data.",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for a PoS included in the imported file.",
          "Expected Result": "Imported Cerved Data is visible and correctly updated for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions. 2. The Cerved Data Excel template is correctly filled with valid data. 3. At least one PoS in the system matches the VAT number or Tax Code in the import file.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Cerved Data Excel template with at least one PoS record (VAT/Tax Code matches existing PoS).",
      "Expected Result": "Cerved Data is successfully imported and visible for each relevant PoS in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-proj_540_import_invalid_excel_structure_TEST_Desktop",
      "ID": "TC-521",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "'Import Cerved Data' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, wrong headers).",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System displays an error message indicating the template structure is invalid and the import is rejected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system. 2. An invalid Excel file (wrong structure) is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with incorrect structure (e.g., missing required columns).",
      "Expected Result": "System rejects the file and displays a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-proj_540_import_excel_with_invalid_data_TEST_Desktop",
      "ID": "TC-522",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "'Import Cerved Data' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a validly structured Excel file containing invalid data (e.g., non-existent VAT numbers, invalid formats, missing mandatory fields).",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System displays an error message specifying the rows or fields with invalid data and rejects the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system. 2. Excel file with correct structure but invalid data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with correct structure but invalid data (e.g., invalid VAT numbers, missing fields).",
      "Expected Result": "System rejects the file and displays detailed error messages about the invalid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-proj_540_import_excel_with_duplicate_keys_TEST_Desktop",
      "ID": "TC-523",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "'Import Cerved Data' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a validly structured Excel file containing duplicate VAT numbers or Tax Codes.",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System displays an error message indicating duplicate keys and rejects the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system. 2. Excel file with duplicate VAT numbers or Tax Codes is available.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate VAT numbers or Tax Codes.",
      "Expected Result": "System rejects the file and displays an error message about duplicate reference keys.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-proj_540_import_excel_with_nonexistent_pos_TEST_Desktop",
      "ID": "TC-524",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "'Import Cerved Data' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a validly structured Excel file containing VAT numbers or Tax Codes not present in the system.",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System displays an error message indicating that some reference keys do not match any existing PoS and rejects the import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system. 2. Excel file with non-existent VAT numbers or Tax Codes is available.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with VAT numbers or Tax Codes not present in the system.",
      "Expected Result": "System rejects the file and displays an error message about non-existent PoS reference keys.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-proj_540_import_excel_with_large_dataset_performance_TEST_Desktop",
      "ID": "TC-525",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "'Import Cerved Data' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file with a large number of PoS records (e.g., 10,000 rows).",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System completes the import within acceptable performance thresholds and displays a success message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system. 2. Large Excel file (e.g., 10,000 PoS records) is available and correctly structured.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved Data Import",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large Excel file with 10,000 valid PoS records.",
      "Expected Result": "System successfully imports the large dataset within acceptable time limits and updates all relevant PoS records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers performance aspect only.",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-proj_540_view_imported_data_in_dashboard_TEST_Desktop",
      "ID": "TC-526",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section.",
          "Expected Result": "'Dashboard - Single PoS' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a PoS whose data was updated in a recent successful Cerved Data import.",
          "Expected Result": "PoS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Review the Cerved Data section for the selected PoS.",
          "Expected Result": "Imported Cerved Data is visible and matches the data from the imported Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system. 2. At least one successful Cerved Data import has been performed.",
      "Execution Mode": "Manual",
      "Functionality": "Cerved Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS updated by a previous successful import.",
      "Expected Result": "Imported Cerved Data is correctly displayed in the dashboard for the relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "VerifyExecution_proj_001_Back-EndProcedure_API_TEST_Backend",
      "ID": "TC-527",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the back-end procedure via the designated API endpoint or scheduled job.",
          "Expected Result": "The back-end procedure is initiated without errors."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the execution logs or status response for the procedure.",
          "Expected Result": "Logs/status indicate successful execution of the procedure."
        },
        {
          "Step": 3,
          "Step Description": "Validate that all expected data manipulations or outputs (e.g., database updates, file generation) have occurred as per the procedure's specification.",
          "Expected Result": "All data manipulations or outputs are present and correct according to the requirements."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "N/A",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux/Back-End Application",
      "Preconditions": "1. The back-end environment is deployed and accessible.\n2. The procedure to be tested is implemented and available.\n3. Test data is present in the database as required for the procedure.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Execution",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample input data in the database relevant to the procedure.",
      "Expected Result": "The back-end procedure executes successfully, performing all intended operations and producing correct outputs without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers successful execution and output validation of the back-end procedure.",
      "_polarion": "Back-End Procedure"
    },
    {
      "Title": "ErrorHandling_proj_001_Back-EndProcedure_InvalidInput_TEST_Backend",
      "ID": "TC-528",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the back-end procedure with invalid or malformed input data (e.g., missing required fields, incorrect data types).",
          "Expected Result": "The procedure detects the invalid input and does not proceed with execution."
        },
        {
          "Step": 2,
          "Step Description": "Check the error logs or API response for error messages.",
          "Expected Result": "Appropriate error messages are logged or returned, indicating the nature of the input error."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "N/A",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux/Back-End Application",
      "Preconditions": "1. The back-end environment is deployed and accessible.\n2. The procedure to be tested is implemented and available.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Malformed or incomplete input data for the procedure.",
      "Expected Result": "The back-end procedure gracefully handles invalid input by not executing and providing clear error feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for invalid input scenarios.",
      "_polarion": "Back-End Procedure"
    },
    {
      "Title": "BoundaryCondition_proj_001_Back-EndProcedure_LargeDataset_TEST_Backend",
      "ID": "TC-529",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a large dataset at the upper boundary of expected input size in the database.",
          "Expected Result": "Dataset is prepared and accessible by the back-end procedure."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the back-end procedure to process the large dataset.",
          "Expected Result": "The procedure starts processing the dataset without immediate failure."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the execution for completion and check for performance degradation or errors.",
          "Expected Result": "The procedure completes successfully within acceptable time limits and without errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "N/A",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux/Back-End Application",
      "Preconditions": "1. The back-end environment is deployed and accessible.\n2. The procedure to be tested is implemented and available.\n3. A large dataset is prepared in the database.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Boundary Testing",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large volume of input data at the upper boundary of expected size.",
      "Expected Result": "The back-end procedure processes large datasets efficiently and without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers boundary and performance aspects for large input data.",
      "_polarion": "Back-End Procedure"
    },
    {
      "Title": "Security_proj_001_Back-EndProcedure_UnauthorizedAccess_TEST_Backend",
      "ID": "TC-530",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to trigger the back-end procedure using invalid or unauthorized credentials.",
          "Expected Result": "The system denies access to the procedure."
        },
        {
          "Step": 2,
          "Step Description": "Check the response or logs for security-related error messages.",
          "Expected Result": "Appropriate security error messages are logged or returned, and no procedure execution occurs."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "N/A",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux/Back-End Application",
      "Preconditions": "1. The back-end environment is deployed and accessible.\n2. The procedure to be tested is implemented and available.\n3. User account with insufficient privileges is available.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Security",
      "Test Type": "vapt",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid or unauthorized user credentials.",
      "Expected Result": "Unauthorized users cannot execute the back-end procedure, and security is enforced.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers security and access control for the back-end procedure.",
      "_polarion": "Back-End Procedure"
    },
    {
      "Title": "DailyArchiving-proj_600_DailySnapshot_Scheduling_BACKEND_TEST_Desktop",
      "ID": "TC-531",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Verify that the daily snapshot job is scheduled to run at the configured nightly time.",
          "Expected Result": "The daily snapshot job is present in the scheduler with the correct time configuration."
        },
        {
          "Step": 2,
          "Step Description": "Allow the scheduled time to pass and monitor the execution of the snapshot job.",
          "Expected Result": "The snapshot job executes at the scheduled time without errors."
        },
        {
          "Step": 3,
          "Step Description": "Check the storage location for the presence of a new snapshot labeled with the current date and time.",
          "Expected Result": "A new snapshot file/folder is created with the correct date and time label."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System time is correctly set.\n2. Scheduler service is running.\n3. Sufficient storage space is available.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "System configuration for scheduling, access to storage location.",
      "Expected Result": "A daily snapshot is automatically created at the scheduled time, labeled with the correct date and time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers scheduling and execution of daily snapshot only.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-proj_600_ClosedPoS_DataDeletion_BACKEND_TEST_Desktop",
      "ID": "TC-532",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify PoS records marked as closed and not active for a period exceeding the configured retention (e.g., 10 years).",
          "Expected Result": "A list of eligible PoS records for deletion is generated."
        },
        {
          "Step": 2,
          "Step Description": "Verify that PoS under legal management or with loss transitions in recent years are excluded from deletion.",
          "Expected Result": "PoS under legal management or with recent loss transitions are not included in the deletion list."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the data deletion process for eligible PoS records.",
          "Expected Result": "Only eligible PoS records are deleted from the storage."
        },
        {
          "Step": 4,
          "Step Description": "Check that deleted PoS data is no longer retrievable from the system.",
          "Expected Result": "Deleted PoS data cannot be accessed or restored via standard retrieval functions."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System contains PoS records with various statuses and closure dates.\n2. Legal management and loss transition flags are set appropriately.\n3. Retention period is configured (e.g., 10 years).",
      "Execution Mode": "Manual",
      "Functionality": "Data Retention and Deletion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS records with different statuses, closure dates, and legal/loss flags.",
      "Expected Result": "Data for closed PoS exceeding the retention period is deleted, except for those under legal management or with recent loss transitions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on data deletion logic for closed PoS.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-proj_600_TemporaryLogicalClosurePoS_BACKEND_TEST_Desktop",
      "ID": "TC-533",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Mark a PoS as temporarily logically closed for a configurable period.",
          "Expected Result": "PoS status is updated to 'temporarily closed' and the closure period is set."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to display the temporarily closed PoS in the user interface or data retrieval API.",
          "Expected Result": "The PoS is not displayed or retrievable during the logical closure period."
        },
        {
          "Step": 3,
          "Step Description": "After the logical closure period expires, check if the PoS is eligible for permanent deletion.",
          "Expected Result": "PoS becomes eligible for permanent deletion after the logical closure period."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. PoS exists in the system.\n2. Logical closure period is configured.\n3. User has permission to update PoS status.",
      "Execution Mode": "Manual",
      "Functionality": "Temporary Logical Closure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record eligible for logical closure.",
      "Expected Result": "PoS is hidden during logical closure and becomes eligible for deletion after the period expires.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers logical closure and subsequent eligibility for deletion.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-proj_600_ContinuousDataStorageVerification_BACKEND_TEST_Desktop",
      "ID": "TC-534",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review the storage logs or records for the entire project duration.",
          "Expected Result": "No gaps are present in the daily storage records."
        },
        {
          "Step": 2,
          "Step Description": "Randomly select several dates and verify that data snapshots exist for each selected date.",
          "Expected Result": "Snapshots for all selected dates are present and correctly labeled."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System has been operational for a sufficient period.\n2. Access to storage logs and snapshot records.",
      "Execution Mode": "Manual",
      "Functionality": "Continuous Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Storage logs and snapshot records for the project duration.",
      "Expected Result": "Daily data storage is continuous and complete, with no missing days.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on continuity and completeness of daily storage.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-proj_600_DataLabelingWithDateTime_BACKEND_TEST_Desktop",
      "ID": "TC-535",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a daily snapshot and observe the resulting storage entry.",
          "Expected Result": "The storage entry is labeled with the correct date and time of creation."
        },
        {
          "Step": 2,
          "Step Description": "Verify the format of the date and time label matches the system specification (e.g., YYYY-MM-DD_HHMMSS).",
          "Expected Result": "Date and time label format is correct and consistent across entries."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System is configured to store daily snapshots.\n2. Access to storage location and naming conventions.",
      "Execution Mode": "Manual",
      "Functionality": "Data Labeling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Snapshot storage entries.",
      "Expected Result": "Each storage entry is labeled with the correct date and time in the specified format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers labeling of storage entries only.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-proj_600_HistoricizationDataCompliance_BACKEND_TEST_Desktop",
      "ID": "TC-536",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain the external file 'ZENIT - Elenco Dati V04.1.xlsx' specifying data to be stored and archiving type.",
          "Expected Result": "The file is accessible and contains the required data list and archiving types."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system stores all data points listed in the file according to their specified archiving frequency (daily, weekly, monthly).",
          "Expected Result": "All required data points are stored at the correct frequency."
        },
        {
          "Step": 3,
          "Step Description": "Check that no unlisted data is stored and no listed data is omitted.",
          "Expected Result": "Stored data matches exactly the specification in the external file."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. Access to 'ZENIT - Elenco Dati V04.1.xlsx'.\n2. System configured for data archiving as per file.",
      "Execution Mode": "Manual",
      "Functionality": "Historicization Compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT - Elenco Dati V04.1.xlsx, system storage records.",
      "Expected Result": "System stores only the required data at the correct frequency as specified in the external file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers compliance with external data specification.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-proj_600_HistoricalDataRetrievalAndAnalysis_BACKEND_TEST_Desktop",
      "ID": "TC-537",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request retrieval of historical data for a specific date using the system interface or API.",
          "Expected Result": "System returns the data snapshot for the requested date."
        },
        {
          "Step": 2,
          "Step Description": "Perform analysis or reporting on the retrieved data to verify its integrity and completeness.",
          "Expected Result": "Analysis/reporting functions operate correctly and data is complete and accurate."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. Historical data exists for the requested date.\n2. Access to retrieval and analysis functions.",
      "Execution Mode": "Manual",
      "Functionality": "Historical Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Historical data snapshots for various dates.",
      "Expected Result": "Historical data can be retrieved and analyzed for any stored date.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers retrieval and analysis of historical data.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-proj_600_DataStorageEfficiencyAndPerformance_BACKEND_TEST_Desktop",
      "ID": "TC-538",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Monitor system resource usage (CPU, memory, disk I/O) during the daily snapshot process.",
          "Expected Result": "Resource usage remains within acceptable performance thresholds."
        },
        {
          "Step": 2,
          "Step Description": "Measure the time taken to complete the daily snapshot process for a typical data volume.",
          "Expected Result": "Snapshot process completes within the defined performance window."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System monitoring tools are available.\n2. Baseline performance thresholds are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Performance and Efficiency",
      "Test Type": "performance",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Typical daily data volume.",
      "Expected Result": "Daily snapshot process is efficient and does not degrade system performance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on performance and efficiency of storage process.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-proj_600_ScalabilityLargeVolumeData_BACKEND_TEST_Desktop",
      "ID": "TC-539",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate the system with a large volume of data simulating several years of daily snapshots.",
          "Expected Result": "System accepts and stores all data without errors."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to retrieve daily snapshots from any point in the large data set.",
          "Expected Result": "All snapshots are retrievable without significant delay."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. Sufficient storage capacity is available.\n2. Tools/scripts to generate large data volumes.",
      "Execution Mode": "Manual",
      "Functionality": "Scalability",
      "Test Type": "performance",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Simulated large data set (multiple years of daily snapshots).",
      "Expected Result": "System is scalable and can handle large volumes of data with efficient retrieval.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers scalability and retrieval under large data volumes.",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "IntegrationCheck-proj_001_MDM_PoSMasterData_WebService_TEST_Desktop",
      "ID": "TC-540",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the MDM system is operational and accessible via the designated Web Service endpoint.",
          "Expected Result": "MDM Web Service endpoint is reachable and responsive."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a PoS Master Data update event in the MDM system.",
          "Expected Result": "PoS Master Data update event is successfully triggered."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the receiving application for the updated PoS Master Data in near real time.",
          "Expected Result": "Receiving application receives and processes the updated PoS Master Data within the expected near real time window."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, MDM Web Service",
      "Preconditions": "1. MDM system is up and running.\n2. Receiving application is configured to consume MDM PoS Master Data.\n3. Network connectivity between systems is established.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - MDM PoS Master Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS Master Data update payload.",
      "Expected Result": "PoS Master Data is transferred from MDM to the receiving application via Web Service in near real time without data loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the near real time data transfer for PoS Master Data via Web Service.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "IntegrationCheck-proj_001_CERVED_DataReport_WebService_TEST_Desktop",
      "ID": "TC-541",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the CERVED system and its Web Service endpoint are available.",
          "Expected Result": "CERVED Web Service endpoint is reachable."
        },
        {
          "Step": 2,
          "Step Description": "Request Cerved Data and Report via the Web Service (simulate both daily and on-demand requests).",
          "Expected Result": "Cerved Data and Report are returned for both daily and on-demand requests."
        },
        {
          "Step": 3,
          "Step Description": "Verify the integrity and completeness of the received data and report.",
          "Expected Result": "Data and report match expected structure and content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, CERVED Web Service",
      "Preconditions": "1. CERVED system is operational.\n2. Consumer application is authorized to request data.\n3. Test data for daily and on-demand scenarios is available.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - CERVED Data and Report",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Cerved Data and Report request parameters.",
      "Expected Result": "Cerved Data and Report are successfully retrieved via Web Service for both daily and on-demand scenarios, with correct data structure and content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers retrieval and validation of Cerved Data and Report via Web Service.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "IntegrationCheck-proj_001_GEO_CreditLinesSituation_Database_TEST_Desktop",
      "ID": "TC-542",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the GEO database is accessible and contains up-to-date Credit Lines Situation data.",
          "Expected Result": "GEO database is accessible and data is current."
        },
        {
          "Step": 2,
          "Step Description": "Query the GEO database for Credit Lines Situation in near real time.",
          "Expected Result": "Query returns the latest Credit Lines Situation data."
        },
        {
          "Step": 3,
          "Step Description": "Validate the accuracy and freshness of the returned data against known updates.",
          "Expected Result": "Returned data reflects the most recent updates to Credit Lines Situation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, GEO Database",
      "Preconditions": "1. GEO database is online and populated with test data.\n2. User/application has read access to the database.\n3. Recent updates to Credit Lines Situation are known for validation.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - GEO Credit Lines Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Credit Lines Situation records in GEO database.",
      "Expected Result": "Credit Lines Situation data is accurately and promptly retrieved from the GEO database in near real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on data retrieval and freshness from GEO database.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "IntegrationCheck-proj_001_SAP_UnpaidsData_WebService_TEST_Desktop",
      "ID": "TC-543",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure SAP system and its Web Service endpoint for 'Unpaids' Data are available.",
          "Expected Result": "SAP Web Service endpoint for 'Unpaids' Data is reachable."
        },
        {
          "Step": 2,
          "Step Description": "Trigger an 'Unpaids' Data update in SAP.",
          "Expected Result": "'Unpaids' Data update is successfully triggered in SAP."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the receiving application for the updated 'Unpaids' Data in near real time.",
          "Expected Result": "Receiving application receives and processes the updated 'Unpaids' Data within the expected near real time window."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, SAP Web Service",
      "Preconditions": "1. SAP system is operational.\n2. Receiving application is configured to consume 'Unpaids' Data.\n3. Network connectivity between SAP and receiving application is established.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - SAP 'Unpaids' Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample 'Unpaids' Data update payload.",
      "Expected Result": "'Unpaids' Data is transferred from SAP to the receiving application via Web Service in near real time without data loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the near real time data transfer for 'Unpaids' Data via Web Service.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "IntegrationCheck-proj_001_DWH_TrackingWinningsData_Database_TEST_Desktop",
      "ID": "TC-544",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the DWH database is accessible and contains Tracking Winnings Data.",
          "Expected Result": "DWH database is accessible and contains the required data."
        },
        {
          "Step": 2,
          "Step Description": "Query the DWH database for Tracking Winnings Data as per the daily schedule.",
          "Expected Result": "Query returns the expected Tracking Winnings Data for the day."
        },
        {
          "Step": 3,
          "Step Description": "Validate the completeness and correctness of the retrieved data.",
          "Expected Result": "Retrieved data matches expected values and structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, DWH Database",
      "Preconditions": "1. DWH database is online and populated with test Tracking Winnings Data.\n2. User/application has read access to the database.\n3. Expected data for the day is known for validation.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - DWH Tracking Winnings Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Tracking Winnings Data records in DWH database.",
      "Expected Result": "Tracking Winnings Data is accurately retrieved from the DWH database as per the daily schedule.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers daily data retrieval and validation from DWH database.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "ReferenceDocuments-proj_001_access_reference_documents_TEST_Desktop",
      "ID": "TC-545",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser on a desktop computer.",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the provided ZENIT project documentation URL: https://sisalprod.service-now.com/now/nav/ui/classic/params/target/pm_project.do%3Fsys_id%3Dee7e798a3b6b1e10221283d964e45a95%26sysparm_view%3Dtext_search",
          "Expected Result": "The ZENIT project documentation page loads without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all referenced documentation for ZENIT - Phase 1 is accessible and readable.",
          "Expected Result": "All documentation is visible, accessible, and readable without permission or loading issues."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge/Firefox)",
      "Preconditions": "1. User has access to a desktop computer with internet connectivity.\n2. User has valid credentials (if authentication is required for the documentation portal).\n3. Browser cache is cleared to avoid loading cached pages.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documents Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ZENIT documentation URL, user credentials (if required)",
      "Expected Result": "User is able to access and view all documentation related to ZENIT - Phase 1 without errors or access issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access and visibility of documentation, not content accuracy.",
      "_polarion": "REFERENCE DOCUMENTS"
    },
    {
      "Title": "ReferenceDocuments-proj_001_invalid_url_access_reference_documents_TEST_Desktop",
      "ID": "TC-546",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser on a desktop computer.",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to an invalid or malformed version of the ZENIT documentation URL.",
          "Expected Result": "The browser displays an error message indicating the page cannot be found or accessed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge/Firefox)",
      "Preconditions": "1. User has access to a desktop computer with internet connectivity.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documents Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Malformed or incorrect ZENIT documentation URL",
      "Expected Result": "System displays an appropriate error message when an invalid documentation URL is accessed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for invalid URL access.",
      "_polarion": "REFERENCE DOCUMENTS"
    },
    {
      "Title": "ReferenceDocuments-proj_001_access_reference_documents_with_invalid_credentials_TEST_Desktop",
      "ID": "TC-547",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser on a desktop computer.",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the ZENIT documentation URL: https://sisalprod.service-now.com/now/nav/ui/classic/params/target/pm_project.do%3Fsys_id%3Dee7e798a3b6b1e10221283d964e45a95%26sysparm_view%3Dtext_search",
          "Expected Result": "The login page for the documentation portal is displayed (if authentication is required)."
        },
        {
          "Step": 3,
          "Step Description": "Enter invalid or incorrect user credentials and attempt to log in.",
          "Expected Result": "Access is denied and an appropriate error message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge/Firefox)",
      "Preconditions": "1. User has access to a desktop computer with internet connectivity.\n2. Documentation portal requires authentication.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documents Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid user credentials",
      "Expected Result": "System prevents access to documentation and displays an error message when invalid credentials are used.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers authentication error handling for documentation access.",
      "_polarion": "REFERENCE DOCUMENTS"
    },
    {
      "Title": "ReferenceDocuments-proj_001_verify_documentation_content_visibility_TEST_Desktop",
      "ID": "TC-548",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT documentation portal as a valid user.",
          "Expected Result": "User is logged in and documentation portal is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Open several key documents related to ZENIT - Phase 1 (e.g., requirements, design, test plans).",
          "Expected Result": "Each document opens successfully and displays content."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the content of each document is readable and not corrupted or missing.",
          "Expected Result": "All document content is visible, readable, and complete."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge/Firefox)",
      "Preconditions": "1. User has access to a desktop computer with internet connectivity.\n2. User has valid credentials for the documentation portal.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documents Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials, ZENIT documentation portal URL",
      "Expected Result": "All referenced documentation is accessible and content is displayed correctly without corruption or missing sections.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only visibility and readability of documentation, not content accuracy or completeness.",
      "_polarion": "REFERENCE DOCUMENTS"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Reference_Files_Availability/Desktop_TEST_Desktop",
      "ID": "TC-549",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the appendix section of the documentation.",
          "Expected Result": "Appendix section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify the presence of all five reference file links as listed in the requirement.",
          "Expected Result": "All five reference file links are present and visible."
        },
        {
          "Step": 3,
          "Step Description": "Click on each link to ensure it is accessible and leads to the correct file.",
          "Expected Result": "Each link opens the correct file in a new tab or downloads the file as expected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge)",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions to view the appendix.\n3. Internet connection is available.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Files Availability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "All reference file links are present, accessible, and lead to the correct files as described in the appendix.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the presence and accessibility of reference files in the appendix.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Reference_File_Content_Verification/Desktop_TEST_Desktop",
      "ID": "TC-550",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the appendix section and click on the link for 'ZENIT - Elenco Dati_V_4.1.xlsx'.",
          "Expected Result": "The file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the downloaded file and verify that it contains the list of data to be predicted in the system.",
          "Expected Result": "The file contains a structured list of data to be predicted as per the requirement."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge), Excel",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions.\n3. Excel or compatible viewer is installed.",
      "Execution Mode": "Manual",
      "Functionality": "Reference File Content Verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Elenco Dati_V_4.1.xlsx",
      "Expected Result": "The file 'ZENIT - Elenco Dati_V_4.1.xlsx' contains the correct list of data to be predicted.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the content verification for the data prediction file.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Dashboard_Mockup_File_Accessibility/Desktop_TEST_Desktop",
      "ID": "TC-551",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the appendix section and click on the link for 'ZENIT - Dashboard Mockup - v01.0.xlsx'.",
          "Expected Result": "The file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the downloaded file and verify that it contains dashboard mockups as described in the requirement.",
          "Expected Result": "The file contains mockups of the dashboard designed as part of the functional analysis."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge), Excel",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions.\n3. Excel or compatible viewer is installed.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Mockup File Accessibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Dashboard Mockup - v01.0.xlsx",
      "Expected Result": "The file 'ZENIT - Dashboard Mockup - v01.0.xlsx' is accessible and contains the required dashboard mockups.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the accessibility and content of the dashboard mockup file.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_User_Profiles_Features_Mapping_File/Desktop_TEST_Desktop",
      "ID": "TC-552",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the appendix section and click on the link for 'ZENIT - Features and Profiles v1.0.xlsx'.",
          "Expected Result": "The file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the downloaded file and verify that it contains the mapping of user profiles and enabled features.",
          "Expected Result": "The file contains a mapping of user profiles with their corresponding enabled features."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge), Excel",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions.\n3. Excel or compatible viewer is installed.",
      "Execution Mode": "Manual",
      "Functionality": "User Profiles and Features Mapping File",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Features and Profiles v1.0.xlsx",
      "Expected Result": "The file 'ZENIT - Features and Profiles v1.0.xlsx' is accessible and contains the mapping of user profiles and enabled features.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the accessibility and content of the user profiles and features mapping file.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Excel_Files_Mapping_File/Desktop_TEST_Desktop",
      "ID": "TC-553",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the appendix section and click on the link for 'ZENIT - Excel files mapping v1.1.xlsx'.",
          "Expected Result": "The file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the downloaded file and verify that it contains the mapping of Excel files to be imported into the system.",
          "Expected Result": "The file contains a mapping of Excel files to be imported as described in the requirement."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge), Excel",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions.\n3. Excel or compatible viewer is installed.",
      "Execution Mode": "Manual",
      "Functionality": "Excel Files Mapping File",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Excel files mapping v1.1.xlsx",
      "Expected Result": "The file 'ZENIT - Excel files mapping v1.1.xlsx' is accessible and contains the correct mapping information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the accessibility and content of the Excel files mapping file.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Source_Systems_Data_Mapping_File/Desktop_TEST_Desktop",
      "ID": "TC-554",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the appendix section and click on the link for 'ZENIT - Data Colletion - Phase 1 - PRJ0015372- Mapping v1.0.xlsx'.",
          "Expected Result": "The file opens or downloads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Open the downloaded file and verify that it contains the mapping of data to be acquired from the source systems.",
          "Expected Result": "The file contains the mapping of data to be acquired from source systems as described in the requirement."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge), Excel",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions.\n3. Excel or compatible viewer is installed.",
      "Execution Mode": "Manual",
      "Functionality": "Source Systems Data Mapping File",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT - Data Colletion - Phase 1 - PRJ0015372- Mapping v1.0.xlsx",
      "Expected Result": "The file 'ZENIT - Data Colletion - Phase 1 - PRJ0015372- Mapping v1.0.xlsx' is accessible and contains the correct mapping information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the accessibility and content of the source systems data mapping file.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Reference_File_Link_Broken_Negative/Desktop_TEST_Desktop",
      "ID": "TC-555",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the appendix section of the documentation.",
          "Expected Result": "Appendix section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify a reference file link and intentionally modify the URL to simulate a broken link.",
          "Expected Result": "The modified link is present in the appendix."
        },
        {
          "Step": 3,
          "Step Description": "Click on the modified (broken) link.",
          "Expected Result": "The system displays an error message or a 'file not found' page, indicating the link is broken."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge)",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions.\n3. At least one reference file link is present in the appendix.",
      "Execution Mode": "Manual",
      "Functionality": "Reference File Link Error Handling",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The system appropriately handles broken links by displaying an error message or 'file not found' page.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the negative scenario for broken reference file links.",
      "_polarion": "APPENDIX"
    }
  ],
  "total_count": 555
}