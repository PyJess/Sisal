{
  "test_cases": [
    {
      "Title": "FirstLine_proj_001_display_first_line/Desktop_TEST_Desktop",
      "ID": "TC-001",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on a desktop device.",
          "Expected Result": "The application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the main screen or section where the first line should be displayed.",
          "Expected Result": "The main screen loads without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the first line is present and visible at the top of the designated area.",
          "Expected Result": "The first line is displayed clearly and is readable at the top of the section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Desktop Application",
      "Preconditions": "1. The application is installed on the desktop device.\n2. The user has access rights to open and view the application.\n3. The application is not running in the background.",
      "Execution Mode": "Manual",
      "Functionality": "Display Content",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; default application state.",
      "Expected Result": "The first line is displayed at the top of the designated area on the main screen, clearly visible and readable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the first line on desktop devices.",
      "_polarion": "== first line =="
    },
    {
      "Title": "FirstLine_proj_001_display_first_line/Mobile_TEST_Android",
      "ID": "TC-002",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an Android mobile device.",
          "Expected Result": "The application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the main screen or section where the first line should be displayed.",
          "Expected Result": "The main screen loads without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the first line is present and visible at the top of the designated area.",
          "Expected Result": "The first line is displayed clearly and is readable at the top of the section."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android 12, Mobile Application",
      "Preconditions": "1. The application is installed on the Android device.\n2. The user has access rights to open and view the application.\n3. The application is not running in the background.",
      "Execution Mode": "Manual",
      "Functionality": "Display Content",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; default application state.",
      "Expected Result": "The first line is displayed at the top of the designated area on the main screen, clearly visible and readable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the first line on Android mobile devices.",
      "_polarion": "== first line =="
    },
    {
      "Title": "FirstLine_proj_001_display_first_line/Mobile_TEST_iOS",
      "ID": "TC-003",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an iOS mobile device.",
          "Expected Result": "The application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the main screen or section where the first line should be displayed.",
          "Expected Result": "The main screen loads without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the first line is present and visible at the top of the designated area.",
          "Expected Result": "The first line is displayed clearly and is readable at the top of the section."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "Mobile",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "iOS 16, Mobile Application",
      "Preconditions": "1. The application is installed on the iOS device.\n2. The user has access rights to open and view the application.\n3. The application is not running in the background.",
      "Execution Mode": "Manual",
      "Functionality": "Display Content",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; default application state.",
      "Expected Result": "The first line is displayed at the top of the designated area on the main screen, clearly visible and readable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display of the first line on iOS mobile devices.",
      "_polarion": "== first line =="
    },
    {
      "Title": "FirstLine_proj_001_display_first_line/Desktop_NEGATIVE_TEST_Desktop",
      "ID": "TC-004",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on a desktop device with a corrupted configuration file.",
          "Expected Result": "The application launches and handles the corrupted configuration gracefully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the main screen or section where the first line should be displayed.",
          "Expected Result": "The main screen loads, or an appropriate error message is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the first line is not displayed or an error message is shown indicating the issue.",
          "Expected Result": "The application does not crash; it either displays an error message or omits the first line gracefully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Desktop Application",
      "Preconditions": "1. The application is installed on the desktop device.\n2. The configuration file is intentionally corrupted.\n3. The user has access rights to open and view the application.",
      "Execution Mode": "Manual",
      "Functionality": "Display Content",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Corrupted configuration file.",
      "Expected Result": "The application does not crash and handles the missing or corrupted first line gracefully, displaying an error message if appropriate.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing or corrupted first line data.",
      "_polarion": "== first line =="
    },
    {
      "Title": "InitialLoad-ZENIT_001_RF001_InitialLoadAndDataMigration_TEST_Desktop",
      "ID": "TC-005",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is in a clean state with no pre-existing data.",
          "Expected Result": "System is ready for initial data load."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial data load and migration process via the provided interface or backend trigger.",
          "Expected Result": "Data migration process starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process for completion.",
          "Expected Result": "Migration completes successfully with a confirmation message."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all expected data entities (e.g., PoS, Credit Lines, Contracts) are present in the system post-migration.",
          "Expected Result": "All data entities are correctly loaded and accessible."
        },
        {
          "Step": 5,
          "Step Description": "Check for data integrity by comparing a sample of migrated records with the source system.",
          "Expected Result": "Sample records match exactly between source and destination."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. Access to a clean test environment.\n2. Source data available and accessible.\n3. Migration tools/interfaces configured.\n4. User with permissions to execute migration.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Load and Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample source data set for migration (e.g., PoS list, contracts, credit lines).",
      "Expected Result": "System contains all migrated data, with integrity and completeness verified against the source.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "SessionTimeout-ZENIT_002_RF002_DisconnectedForInactivity_TEST_Desktop",
      "ID": "TC-006",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a valid user.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive (no mouse or keyboard input) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity detected during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system behavior after the timeout period elapses.",
          "Expected Result": "User is automatically logged out and redirected to the login page with a session timeout message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists and is active.\n2. Inactivity timeout configured in the system (e.g., 15 minutes).\n3. User is logged in to the application.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User is automatically logged out after inactivity and receives a session timeout notification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "LoginTracking-ZENIT_003_RF003_LoginTrackingSOX_TEST_Desktop",
      "ID": "TC-007",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application using valid credentials.",
          "Expected Result": "User is authenticated and login event is triggered."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit/log tracking system or database.",
          "Expected Result": "Audit/log tracking system is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Search for the login event corresponding to the user and timestamp.",
          "Expected Result": "Login event is recorded with correct user ID, timestamp, and relevant metadata (e.g., IP address, session ID)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists and is active.\n2. Audit/log tracking system is operational.\n3. User is not currently logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking (SOX)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "Login event is correctly recorded in the audit/log tracking system with all required details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "Concurrency-ZENIT_004_RF005_ManageConcurrency_TEST_Desktop",
      "ID": "TC-008",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as User A.",
          "Expected Result": "User A is logged in successfully."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to log in to the ZENIT application as User A from a different browser or device simultaneously.",
          "Expected Result": "System detects concurrent login attempt."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system response to the second login attempt.",
          "Expected Result": "System either prevents the second login or logs out the first session, according to the defined concurrency policy."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists and is active.\n2. Concurrency management is enabled in the system.\n3. Two browsers/devices available for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Session Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials for User A.",
      "Expected Result": "System enforces concurrency policy, preventing simultaneous sessions for the same user as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "Settings-ZENIT_005_RF006_SettingsManagement_TEST_Desktop",
      "ID": "TC-009",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application as a user with settings management permissions.",
          "Expected Result": "User is authenticated and settings menu is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the settings section of the application.",
          "Expected Result": "Settings page is displayed with configurable options."
        },
        {
          "Step": 3,
          "Step Description": "Modify a configurable setting (e.g., notification preferences, display options).",
          "Expected Result": "Setting is updated and saved successfully."
        },
        {
          "Step": 4,
          "Step Description": "Log out and log back in to verify the setting persists.",
          "Expected Result": "Modified setting remains in effect after re-login."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with settings management permissions exists.\n2. Application is accessible.\n3. Settings functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; example setting to modify.",
      "Expected Result": "User can modify and persist settings successfully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": ""
    },
    {
      "Title": "Introduction-proj_001_documentation_translation_functional_specification/Desktop_TEST_Desktop",
      "ID": "TC-010",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain the user requirements document and the corresponding functional specification document.",
          "Expected Result": "Both documents are available for review."
        },
        {
          "Step": 2,
          "Step Description": "Compare the content of the user requirements document with the functional specification document section by section.",
          "Expected Result": "Each user requirement is mapped to a corresponding functional specification."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all user requirements are accurately and completely translated into functional specifications.",
          "Expected Result": "No user requirement is missing or inaccurately represented in the functional specification."
        },
        {
          "Step": 4,
          "Step Description": "Check for consistency in terminology and structure between the two documents.",
          "Expected Result": "Terminology and structure are consistent, ensuring clarity and traceability."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Documentation System",
      "Preconditions": "1. User requirements document is finalized and approved.\n2. Functional specification document is available for review.\n3. Access to both documents is granted.",
      "Execution Mode": "Manual",
      "Functionality": "Documentation Translation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Sample user requirements document and corresponding functional specification document.",
      "Expected Result": "All user requirements are fully and accurately translated into functional specifications, with no omissions or inconsistencies.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the translation and mapping process, not the implementation of requirements.",
      "_polarion": "INTRODUCTION"
    },
    {
      "Title": "Glossary-proj_001_abbreviation_display_desktop_TEST_Desktop",
      "ID": "TC-011",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the glossary or abbreviation section of the application on a desktop device.",
          "Expected Result": "The glossary/abbreviation section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all terms and their corresponding descriptions are displayed in a tabular or structured format.",
          "Expected Result": "Each term (e.g., ADI, ADM, AWP, etc.) and its description are visible and correctly aligned."
        },
        {
          "Step": 3,
          "Step Description": "Check that the formatting (e.g., bold for important terms, clear separation between term and description) is consistent across all entries.",
          "Expected Result": "Formatting is consistent and enhances readability for all glossary entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application on a desktop device.\n2. User is logged in (if authentication is required).\n3. Glossary/abbreviation section is available in the application menu.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (static glossary data)",
      "Expected Result": "All glossary terms and their descriptions are displayed clearly and accurately in a structured format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and formatting of glossary terms, not editing or searching.",
      "_polarion": "DESCRIPTION AND ABBREVIATION"
    },
    {
      "Title": "Glossary-proj_001_abbreviation_search_desktop_TEST_Desktop",
      "ID": "TC-012",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the glossary or abbreviation section of the application on a desktop device.",
          "Expected Result": "The glossary/abbreviation section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter a term (e.g., 'AWP') into the search or filter field provided in the glossary section.",
          "Expected Result": "The glossary filters or highlights the entry for 'AWP'."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only the relevant term(s) and their descriptions are displayed after the search/filter is applied.",
          "Expected Result": "Only the searched term and its description are visible; unrelated entries are hidden or de-emphasized."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application on a desktop device.\n2. User is logged in (if authentication is required).\n3. Glossary/abbreviation section is available and contains a search/filter feature.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Search term example: 'AWP'",
      "Expected Result": "The glossary search/filter feature displays only the relevant term(s) and their descriptions based on the input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers search/filter functionality, not display or editing.",
      "_polarion": "DESCRIPTION AND ABBREVIATION"
    },
    {
      "Title": "Glossary-proj_001_abbreviation_invalid_search_desktop_TEST_Desktop",
      "ID": "TC-013",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the glossary or abbreviation section of the application on a desktop device.",
          "Expected Result": "The glossary/abbreviation section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid or non-existent term (e.g., 'XYZ') into the search or filter field.",
          "Expected Result": "No glossary entries are displayed or a 'No results found' message appears."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application on a desktop device.\n2. User is logged in (if authentication is required).\n3. Glossary/abbreviation section is available and contains a search/filter feature.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid search term example: 'XYZ'",
      "Expected Result": "The glossary displays no entries or an appropriate message when a non-existent term is searched.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative search scenario only.",
      "_polarion": "DESCRIPTION AND ABBREVIATION"
    },
    {
      "Title": "Glossary-proj_001_abbreviation_scroll_desktop_TEST_Desktop",
      "ID": "TC-014",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the glossary or abbreviation section of the application on a desktop device.",
          "Expected Result": "The glossary/abbreviation section loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Scroll through the entire list of glossary terms and descriptions.",
          "Expected Result": "All entries are accessible by scrolling, and no content is truncated or inaccessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application on a desktop device.\n2. User is logged in (if authentication is required).\n3. Glossary/abbreviation section contains enough entries to require scrolling.",
      "Execution Mode": "Manual",
      "Functionality": "Glossary Navigation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A (static glossary data)",
      "Expected Result": "All glossary entries are accessible via scrolling without loss of content or formatting.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only navigation and accessibility of glossary entries.",
      "_polarion": "DESCRIPTION AND ABBREVIATION"
    },
    {
      "Title": "GeneralDescription_proj_001_general_description_APPLICATION_TEST_Desktop",
      "ID": "TC-015",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application on a desktop device.",
          "Expected Result": "The application loads successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section labeled 'General Description'.",
          "Expected Result": "The 'General Description' section is displayed clearly and is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the content under 'General Description' is present and readable.",
          "Expected Result": "The content is present, complete, and readable without formatting issues."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. The desktop device is powered on and connected to the internet.\n2. The web browser is installed and up to date.\n3. The user has access credentials if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "General Description Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; use default application state.",
      "Expected Result": "The 'General Description' section is accessible and displays complete, readable content without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and accessibility of the 'General Description' section.",
      "_polarion": "GENERAL DESCRIPTION"
    },
    {
      "Title": "GeneralDescription_proj_002_general_description_APPLICATION_TEST_Mobile",
      "ID": "TC-016",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on a mobile device (Android or iOS).",
          "Expected Result": "The application launches successfully without errors."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'General Description' section within the app.",
          "Expected Result": "The 'General Description' section is visible and accessible on the mobile interface."
        },
        {
          "Step": 3,
          "Step Description": "Check that the content is present, properly formatted, and readable on the mobile screen.",
          "Expected Result": "The content is displayed correctly, with no truncation or formatting issues."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android 12, iOS 16, Mobile Application",
      "Preconditions": "1. The mobile device is charged and connected to the internet.\n2. The application is installed and updated to the latest version.\n3. The user is logged in if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "General Description Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; use default application state.",
      "Expected Result": "The 'General Description' section is accessible and displays complete, readable content without errors on mobile devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers display and accessibility of the 'General Description' section on mobile devices.",
      "_polarion": "GENERAL DESCRIPTION"
    },
    {
      "Title": "GeneralDescription_proj_003_general_description_content_validation_APPLICATION_TEST_Desktop",
      "ID": "TC-017",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application on a desktop device and navigate to the 'General Description' section.",
          "Expected Result": "The 'General Description' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Compare the displayed content with the approved documentation or requirements.",
          "Expected Result": "The content matches the approved documentation without omissions or errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. The desktop device is powered on and connected to the internet.\n2. The web browser is installed and up to date.\n3. Access to the approved documentation for comparison.",
      "Execution Mode": "Manual",
      "Functionality": "General Description Content Validation",
      "Test Type": "content",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Approved documentation for content comparison.",
      "Expected Result": "The 'General Description' content matches the approved documentation exactly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Validates only the correctness of the displayed content.",
      "_polarion": "GENERAL DESCRIPTION"
    },
    {
      "Title": "GeneralDescription_proj_004_general_description_accessibility_check_APPLICATION_TEST_Desktop",
      "ID": "TC-018",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application on a desktop device and navigate to the 'General Description' section.",
          "Expected Result": "The 'General Description' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Use a screen reader to read the content of the 'General Description' section.",
          "Expected Result": "The screen reader reads all content without skipping or mispronouncing any part."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. The desktop device is powered on and connected to the internet.\n2. The web browser is installed and up to date.\n3. A screen reader (e.g., NVDA, JAWS) is installed and configured.",
      "Execution Mode": "Manual",
      "Functionality": "Accessibility",
      "Test Type": "ux_ui",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "No specific data required; use default application state.",
      "Expected Result": "The 'General Description' section is fully accessible via screen reader.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers accessibility for visually impaired users.",
      "_polarion": "GENERAL DESCRIPTION"
    },
    {
      "Title": "CreditStatusVisibility-proj1_req1_CustomerCreditStatus_Backoffice_TEST_Desktop",
      "ID": "TC-019",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office application as a Finance team user.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Customer Credit Status' section from the main menu.",
          "Expected Result": "The 'Customer Credit Status' page is displayed, listing all retail customers."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific retail customer from the list.",
          "Expected Result": "Detailed credit status for the selected customer is displayed, including credit limit, current exposure, and available credit."
        },
        {
          "Step": 4,
          "Step Description": "Drill down into a business area (e.g., select a specific product or channel).",
          "Expected Result": "Credit status details are filtered and displayed for the selected business area."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.\n3. At least one retail customer with credit data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Status Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; at least one retail customer with credit data.",
      "Expected Result": "The user can view comprehensive and drill-down credit status information for any retail customer across all business areas.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "RiskSummary-proj1_req2_CompanyRiskSummary_Backoffice_TEST_Desktop",
      "ID": "TC-020",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office application as a Finance team user.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Risk Summary' section from the main menu.",
          "Expected Result": "The 'Risk Summary' page is displayed, showing an overview of the company's risk level."
        },
        {
          "Step": 3,
          "Step Description": "Review the risk indicators and summary metrics presented.",
          "Expected Result": "The risk summary displays aggregated risk metrics, including total exposure, risk by channel, and risk by product."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Test user account with Finance team permissions is available.\n3. Risk data is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Risk Summary",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; risk data for company and channels.",
      "Expected Result": "The user can view a summary of the company's risk level, including breakdowns by channel and product.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "ChannelClassification-proj1_req3_ChannelCategoryAssignment_Backoffice_TEST_Desktop",
      "ID": "TC-021",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office application as an admin user.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Points of Sale' management section.",
          "Expected Result": "The list of all points of sale is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a point of sale with 'Cluster PV' value set to 'PGI'.",
          "Expected Result": "Point of sale details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify the 'Canale 1' field value.",
          "Expected Result": "'Canale 1' is set to 'BRANDED'."
        },
        {
          "Step": 5,
          "Step Description": "Repeat steps 3-4 for 'PGS', 'Negozio', and 'Wincity' (expect 'BRANDED'), and for 'Pos AWP Only', 'Pos GNTN e AWP', 'Pos GNTN Only', 'Gaming Hall' (expect 'UNBRANDED').",
          "Expected Result": "Each point of sale is correctly classified as 'BRANDED' or 'UNBRANDED' according to the mapping rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Admin user account is available.\n3. Points of sale with all relevant 'Cluster PV' values exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Channel Classification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin user credentials; points of sale with 'Cluster PV' values: PGI, PGS, Negozio, Wincity, Pos AWP Only, Pos GNTN e AWP, Pos GNTN Only, Gaming Hall.",
      "Expected Result": "All points of sale are automatically and correctly assigned to the appropriate channel category ('BRANDED' or 'UNBRANDED') based on their 'Cluster PV' value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "CreditLineVisibility-proj1_req4_CreditLineProducts_Backoffice_TEST_Desktop",
      "ID": "TC-022",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office application as a Finance team user.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Lines' section.",
          "Expected Result": "The 'Credit Lines' page is displayed, listing all available credit lines/products."
        },
        {
          "Step": 3,
          "Step Description": "Select a point of sale from the list.",
          "Expected Result": "Credit line details for the selected point of sale are displayed, including all products (Totocalcio, Horse Racing, Fixed Odds Sports, Virtual Race, Global Game, Numerical Games, Corner, Game Accounts)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Finance team user account is available.\n3. Credit line data for all products is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Finance team user credentials; points of sale with credit line data for all products.",
      "Expected Result": "The user can view all available credit lines/products for each point of sale, with correct product mapping and weekly management indication.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "DashboardRealTime-proj1_req5_RealTimeDashboard_Backoffice_TEST_Desktop",
      "ID": "TC-023",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back office application as a Credit team user.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Observe the dashboard for real-time updates on credit status and risk metrics.",
          "Expected Result": "Dashboard displays up-to-date information without requiring manual refresh."
        },
        {
          "Step": 3,
          "Step Description": "Trigger a credit status change for a point of sale (e.g., simulate a transaction affecting credit exposure).",
          "Expected Result": "Dashboard updates in real time to reflect the new credit status and risk metrics."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. ZENIT application is deployed and accessible.\n2. Credit team user account is available.\n3. Real-time data integration is enabled.\n4. Ability to simulate or trigger credit status changes.",
      "Execution Mode": "Manual",
      "Functionality": "Real-Time Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Credit team user credentials; test point of sale for credit status simulation.",
      "Expected Result": "The dashboard provides real-time, accurate updates on credit status and risk metrics for all points of sale.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Purpose and Scope"
    },
    {
      "Title": "MDMIntegration-proj_001_MDM_MasterDataSync_ZENIT_TEST_Desktop",
      "ID": "TC-024",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM system contains up-to-date PoS master data for all countries.",
          "Expected Result": "MDM system is populated with valid PoS master data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger synchronization of PoS master data from MDM to ZENIT via ESB.",
          "Expected Result": "Synchronization process is initiated and data is sent to ZENIT."
        },
        {
          "Step": 3,
          "Step Description": "Access ZENIT and navigate to the PoS master data management section.",
          "Expected Result": "ZENIT displays the latest PoS master data received from MDM."
        },
        {
          "Step": 4,
          "Step Description": "Verify that PoS master data in ZENIT matches the data in MDM for all countries.",
          "Expected Result": "PoS master data in ZENIT is consistent with MDM data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. MDM system is operational and contains valid PoS master data.\n2. ESB is configured and operational.\n3. ZENIT is deployed and accessible.\n4. User has access rights to view PoS master data in ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "MDM Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS master data in MDM for multiple countries.",
      "Expected Result": "ZENIT successfully receives and displays PoS master data from MDM via ESB, matching the source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover error handling for failed synchronization.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "ORIONIntegration-proj_001_ORION_TerminalsProductsSync_ZENIT_TEST_Desktop",
      "ID": "TC-025",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ORION system contains updated PoS Terminals and Products data.",
          "Expected Result": "ORION system is populated with valid Terminals and Products data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data synchronization from ORION to ZENIT.",
          "Expected Result": "Data transfer process is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Access ZENIT and navigate to the Terminals and Products section.",
          "Expected Result": "ZENIT displays the latest Terminals and Products data received from ORION."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the data in ZENIT matches the data in ORION.",
          "Expected Result": "Terminals and Products data in ZENIT is consistent with ORION data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. ORION system is operational and contains valid Terminals and Products data.\n2. ZENIT is deployed and accessible.\n3. User has access rights to view Terminals and Products data in ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "ORION Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Terminals and Products data in ORION.",
      "Expected Result": "ZENIT successfully receives and displays Terminals and Products data from ORION, matching the source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover incremental updates or error scenarios.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "CERVEDIntegration-proj_001_CERVED_RiskAnalysisSync_ZENIT_TEST_Desktop",
      "ID": "TC-026",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure CERVED system contains up-to-date PoS commercial information (rating).",
          "Expected Result": "CERVED system is populated with valid commercial information."
        },
        {
          "Step": 2,
          "Step Description": "Trigger periodic risk analysis data transfer from CERVED to ZENIT.",
          "Expected Result": "Risk analysis data is sent to ZENIT."
        },
        {
          "Step": 3,
          "Step Description": "Access ZENIT and navigate to the PoS risk analysis section.",
          "Expected Result": "ZENIT displays the latest commercial information (rating) received from CERVED."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the commercial information in ZENIT matches the data in CERVED.",
          "Expected Result": "Commercial information in ZENIT is consistent with CERVED data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. CERVED system is operational and contains valid PoS commercial information.\n2. ZENIT is deployed and accessible.\n3. User has access rights to view risk analysis data in ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "CERVED Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS commercial information in CERVED.",
      "Expected Result": "ZENIT successfully receives and displays PoS commercial information (rating) from CERVED, matching the source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover error handling for failed data transfer.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "ARXIVARIntegration-proj_001_ARXIVAR_DocumentRetrieval_ZENIT_TEST_Desktop",
      "ID": "TC-027",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure ARXIVAR - NEXT contains archived documents and contracts related to PoS.",
          "Expected Result": "ARXIVAR - NEXT is populated with relevant documents."
        },
        {
          "Step": 2,
          "Step Description": "Access ZENIT and navigate to the document retrieval section.",
          "Expected Result": "ZENIT displays the document retrieval interface."
        },
        {
          "Step": 3,
          "Step Description": "Search for a specific archived document or contract using available filters.",
          "Expected Result": "ZENIT returns a list of matching documents from ARXIVAR - NEXT."
        },
        {
          "Step": 4,
          "Step Description": "Select a document from the list to view its details.",
          "Expected Result": "ZENIT displays the full content of the selected document as retrieved from ARXIVAR - NEXT."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. ARXIVAR - NEXT is operational and contains archived documents.\n2. ZENIT is deployed and accessible.\n3. User has access rights to retrieve and view documents in ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "ARXIVAR Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample archived documents and contracts in ARXIVAR - NEXT.",
      "Expected Result": "ZENIT successfully retrieves and displays archived documents and contracts from ARXIVAR - NEXT.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover document upload or error scenarios.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "ArchiCONIntegration-proj_001_ArchiCON_BorderoLink_ZENIT_TEST_Desktop",
      "ID": "TC-028",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access ZENIT and navigate to the PoS borderò details section.",
          "Expected Result": "ZENIT displays the section with PoS borderò details."
        },
        {
          "Step": 2,
          "Step Description": "Click on the provided link to ArchiCON from within ZENIT.",
          "Expected Result": "A new browser tab or window opens, redirecting to the ArchiCON platform."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the ArchiCON platform displays the correct PoS borderò details.",
          "Expected Result": "ArchiCON displays the relevant PoS borderò details as expected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Web Application",
      "Preconditions": "1. ZENIT is deployed and accessible.\n2. ArchiCON platform is operational and accessible via link.\n3. User has access rights to view PoS borderò details in both ZENIT and ArchiCON.",
      "Execution Mode": "Manual",
      "Functionality": "ArchiCON Integration",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Sample PoS borderò details in ArchiCON.",
      "Expected Result": "ZENIT provides a working link to ArchiCON, and the user can view the correct PoS borderò details on the external platform.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only link navigation, not data synchronization.",
      "_polarion": "Relations with other systems"
    },
    {
      "Title": "GeneralRestrictions_proj001_requirement_NoRestrictions_TEST_Desktop",
      "ID": "TC-029",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the application on the Desktop platform.",
          "Expected Result": "The application loads successfully without displaying any restriction-related messages."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to perform any standard user action (e.g., login, navigation, data entry).",
          "Expected Result": "All actions are permitted and no restriction or limitation is encountered."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. The application is deployed and accessible on the Desktop platform.\n2. Tester has valid credentials if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "General Restrictions",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials (if required).",
      "Expected Result": "No restrictions are present; all standard functionalities are accessible without limitation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers the absence of general restrictions as per requirement.",
      "_polarion": "General Restrictions"
    },
    {
      "Title": "GeneralRestrictions_proj001_requirement_NoRestrictions_TEST_MobileAndroid",
      "ID": "TC-030",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an Android mobile device.",
          "Expected Result": "The application launches without any restriction-related notifications."
        },
        {
          "Step": 2,
          "Step Description": "Navigate through the main features and attempt standard user actions (e.g., login, browse, submit data).",
          "Expected Result": "All features are accessible and no restrictions are encountered during usage."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Android 12, Mobile Application",
      "Preconditions": "1. The application is installed on the Android device.\n2. Device is connected to the internet.\n3. Tester has valid credentials if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "General Restrictions",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials (if required).",
      "Expected Result": "No restrictions are present; all standard functionalities are accessible without limitation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Validates the absence of general restrictions on Android devices.",
      "_polarion": "General Restrictions"
    },
    {
      "Title": "GeneralRestrictions_proj001_requirement_NoRestrictions_TEST_MobileIOS",
      "ID": "TC-031",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on an iOS mobile device.",
          "Expected Result": "The application starts without displaying any restriction messages."
        },
        {
          "Step": 2,
          "Step Description": "Perform standard user actions such as login, navigation, and data entry.",
          "Expected Result": "All actions are permitted and no restriction or limitation is encountered."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "iOS 16, Mobile Application",
      "Preconditions": "1. The application is installed on the iOS device.\n2. Device is connected to the internet.\n3. Tester has valid credentials if authentication is required.",
      "Execution Mode": "Manual",
      "Functionality": "General Restrictions",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials (if required).",
      "Expected Result": "No restrictions are present; all standard functionalities are accessible without limitation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Ensures no general restrictions exist on iOS devices.",
      "_polarion": "General Restrictions"
    },
    {
      "Title": "InitialLoadDataMigration_proj_RF001_XPS-ZENIT-001_DataMigration_TEST_Desktop",
      "ID": "TC-032",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is in a clean state with no prior data loaded.",
          "Expected Result": "System is ready for initial data load."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial load and data migration process using the provided migration tool or interface.",
          "Expected Result": "Migration process starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process until completion.",
          "Expected Result": "Migration completes successfully with a confirmation message."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all expected data has been migrated and is accessible in the new system.",
          "Expected Result": "All data is present, accurate, and accessible as per migration plan."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is installed and configured. 2. Migration tool/interface is available. 3. Source data is available and accessible. 4. No prior data loaded in the target system.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample migration dataset as per migration plan.",
      "Expected Result": "All data from the source system is successfully migrated and accessible in the target system without loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "SessionTimeout_proj_RF002_XPS-ZENIT-202_DisconnectedInactivity_TEST_Desktop",
      "ID": "TC-033",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during this period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system behavior after the timeout period elapses.",
          "Expected Result": "User is automatically disconnected and redirected to the login screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists. 2. Inactivity timeout is configured in the system. 3. User is able to log in.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User is automatically logged out after inactivity and redirected to the login screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "LoginTrackingSOX_proj_RF003_XPS-ZENIT-203_LoginTracking_TEST_Desktop",
      "ID": "TC-034",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with a valid user account.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access the login tracking (SOX) logs or audit trail.",
          "Expected Result": "Login event is recorded in the tracking logs with correct user, timestamp, and status."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists. 2. Audit/logging functionality is enabled. 3. User has access to view logs or an admin can verify logs.",
      "Execution Mode": "Manual",
      "Functionality": "Audit Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "Each login attempt is accurately recorded in the audit logs with all required details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "VisualizationDataAccessTracking_proj_RF003_XPS-ZENIT-204_DataAccessTracking_TEST_Desktop",
      "ID": "TC-035",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with a valid user account.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access a visualization or report containing sensitive data.",
          "Expected Result": "Data is displayed to the user."
        },
        {
          "Step": 3,
          "Step Description": "Access the data access tracking logs or audit trail.",
          "Expected Result": "Data access event is recorded with user, timestamp, and data accessed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists. 2. Audit/logging functionality is enabled. 3. User has access to view logs or an admin can verify logs.",
      "Execution Mode": "Manual",
      "Functionality": "Audit Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample sensitive data/report.",
      "Expected Result": "Each data access event is accurately recorded in the audit logs with all required details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "OperationsTracking_proj_RF004_XPS-ZENIT-220_OperationsTracking_TEST_Desktop",
      "ID": "TC-036",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a critical operation in the application (e.g., data update, deletion).",
          "Expected Result": "Operation is executed successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the operations tracking logs or audit trail.",
          "Expected Result": "Operation event is recorded with user, timestamp, operation type, and status."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists. 2. Audit/logging functionality is enabled. 3. User has access to perform and view operations.",
      "Execution Mode": "Manual",
      "Functionality": "Audit Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; operation details.",
      "Expected Result": "All critical operations are tracked and logged with complete details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "ManageConcurrency_proj_RF005_XPS-ZENIT-210_ConcurrencyManagement_TEST_Desktop",
      "ID": "TC-037",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with two different user accounts on separate devices or browsers.",
          "Expected Result": "Both users are logged in successfully."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to modify the same record or data entity simultaneously from both sessions.",
          "Expected Result": "System detects concurrent modification and prevents data corruption, displaying an appropriate message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Two user accounts exist. 2. Both users have access to the same data entity. 3. Concurrency control is enabled in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Two valid user credentials; target data entity for modification.",
      "Expected Result": "System prevents concurrent modifications and maintains data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "SettingsManagement_proj_RF006_XPS-ZENIT-211_Settings_TEST_Desktop",
      "ID": "TC-038",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with settings management permissions.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the settings management section.",
          "Expected Result": "Settings management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Modify a configurable setting and save changes.",
          "Expected Result": "Setting is updated and saved successfully."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the updated setting is applied throughout the application.",
          "Expected Result": "Application reflects the updated setting as expected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with settings management permissions exists. 2. Settings management functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid admin user credentials; sample setting to modify.",
      "Expected Result": "Settings can be modified and changes are applied system-wide.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "TRACEABILITY MATRICES USER REQUIREMENTS, FUNCTIONAL REQUIREMENTS AND USE CASES"
    },
    {
      "Title": "AutomatedDataCollection-proj1_req1_DataCollection/POS/TEST_Desktop",
      "ID": "TC-039",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed with available data sources listed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate automated data collection from POS registries.",
          "Expected Result": "System starts the data collection process and displays a progress indicator."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the data collection process to complete.",
          "Expected Result": "System confirms successful data collection and displays the newly collected data in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with data collection permissions exists.\n2. POS registries are connected and accessible.\n3. ZENIT application is running and accessible via supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Automated Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; Accessible POS registry endpoints.",
      "Expected Result": "Automated data collection from POS registries completes successfully and data is visible in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only POS data source for automated collection.",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "AutomatedDataCollection-proj1_req1_DataCollection/GamingPlatform/TEST_Desktop",
      "ID": "TC-040",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed with available data sources listed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate automated data collection from gaming platforms.",
          "Expected Result": "System starts the data collection process and displays a progress indicator."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the data collection process to complete.",
          "Expected Result": "System confirms successful data collection and displays the newly collected data in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with data collection permissions exists.\n2. Gaming platforms are connected and accessible.\n3. ZENIT application is running and accessible via supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Automated Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; Accessible gaming platform endpoints.",
      "Expected Result": "Automated data collection from gaming platforms completes successfully and data is visible in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only gaming platform data source for automated collection.",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "AutomatedDataCollection-proj1_req1_DataCollection/DocumentArchive/TEST_Desktop",
      "ID": "TC-041",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed with available data sources listed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate automated data collection from document archives.",
          "Expected Result": "System starts the data collection process and displays a progress indicator."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the data collection process to complete.",
          "Expected Result": "System confirms successful data collection and displays the newly collected data in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with data collection permissions exists.\n2. Document archives are connected and accessible.\n3. ZENIT application is running and accessible via supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Automated Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; Accessible document archive endpoints.",
      "Expected Result": "Automated data collection from document archives completes successfully and data is visible in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only document archive data source for automated collection.",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "CentralizedDashboard-proj1_req2_DisplayCreditInfo/TEST_Desktop",
      "ID": "TC-042",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the centralized dashboard section.",
          "Expected Result": "Centralized dashboard is displayed with relevant credit information panels."
        },
        {
          "Step": 3,
          "Step Description": "Verify that financial data, credit ratings, and other relevant information are displayed correctly.",
          "Expected Result": "All relevant credit information is visible, accurate, and up-to-date."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with dashboard access exists.\n2. Data sources have been successfully collected and integrated.\n3. ZENIT application is running and accessible via supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Centralized Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; Pre-collected credit data.",
      "Expected Result": "Centralized dashboard displays all relevant credit information accurately and in real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers display and accuracy of credit information only.",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "MultiBrandCustomerManagement-proj1_req3_MultiBrandMode/TEST_Desktop",
      "ID": "TC-043",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user with multi-brand management permissions.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the customer management section.",
          "Expected Result": "Customer management section is displayed with multi-brand options."
        },
        {
          "Step": 3,
          "Step Description": "Select a trusted customer and assign them to multiple brands according to FlutterSEA B2B retail master classifications.",
          "Expected Result": "Customer is successfully assigned to multiple brands and the assignment is reflected in the system."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the customer’s multi-brand assignments are visible and correctly classified.",
          "Expected Result": "Customer’s multi-brand status and classifications are displayed accurately."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with multi-brand management permissions exists.\n2. Trusted customer records are present in the system.\n3. FlutterSEA B2B retail master classifications are configured.\n4. ZENIT application is running and accessible via supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Multi-Brand Customer Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; Trusted customer records; Brand classification data.",
      "Expected Result": "System allows trusted customers to be managed in multi-brand mode according to FlutterSEA B2B retail master classifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers multi-brand assignment and classification only.",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "ErrorHandling-proj1_req4_DataCollectionFailure/TEST_Desktop",
      "ID": "TC-044",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed with available data sources listed."
        },
        {
          "Step": 3,
          "Step Description": "Simulate a failure in the POS registry connection (e.g., disconnect the network or provide invalid credentials).",
          "Expected Result": "System detects the failure and displays an appropriate error message."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system’s response and error logging.",
          "Expected Result": "Error is logged for audit and traceability purposes; user is informed of the failure with actionable guidance."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with data collection permissions exists.\n2. POS registries are initially connected.\n3. ZENIT application is running and accessible via supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; POS registry with simulated failure.",
      "Expected Result": "System handles data collection failures gracefully, logs the error, and informs the user with a clear message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for POS registry failures only.",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "AuditTraceability-proj1_req5_AuditLogVerification/TEST_Desktop",
      "ID": "TC-045",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as an authorized user with audit access.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Perform a data collection operation from any available source.",
          "Expected Result": "Data collection operation is completed successfully."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the audit log section of the application.",
          "Expected Result": "Audit log section is displayed with recent activity logs."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the data collection operation is recorded in the audit log with correct details (timestamp, user, action, source).",
          "Expected Result": "Audit log contains a detailed, accurate entry for the performed data collection operation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with audit log access exists.\n2. Data sources are available for collection.\n3. ZENIT application is running and accessible via supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Audit and Traceability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; Data sources for collection.",
      "Expected Result": "All data collection operations are accurately recorded in the audit log with complete details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers audit log verification for data collection actions only.",
      "_polarion": "ANALYSIS OF FUNCTIONAL AND NON-FUNCTIONAL SPECIFICATIONS"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Import_Excel_Data_DESKTOP_TEST",
      "ID": "TC-046",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid Excel file containing required data fields as per ZENIT data model.",
          "Expected Result": "Excel file is ready and contains valid, well-formed data."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for data upload."
        },
        {
          "Step": 3,
          "Step Description": "Select the prepared Excel file for import.",
          "Expected Result": "System accepts the Excel file and displays a preview or confirmation of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the import process.",
          "Expected Result": "System processes the Excel file and imports the data without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all records from the Excel file are present in the ZENIT system.",
          "Expected Result": "All data from the Excel file is accurately reflected in the ZENIT system."
        },
        {
          "Step": 6,
          "Step Description": "Check for data integrity and quality (e.g., no missing fields, correct data types, no duplicates).",
          "Expected Result": "Data integrity and quality are maintained; no errors or inconsistencies found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. Valid Excel file is available and formatted according to ZENIT requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Load",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Excel file with valid data records for ZENIT.",
      "Expected Result": "ZENIT system is fully populated with data from the Excel file, maintaining data integrity and quality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Excel file import scenario.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Import_CSV_Data_DESKTOP_TEST",
      "ID": "TC-047",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid CSV file containing required data fields as per ZENIT data model.",
          "Expected Result": "CSV file is ready and contains valid, well-formed data."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for data upload."
        },
        {
          "Step": 3,
          "Step Description": "Select the prepared CSV file for import.",
          "Expected Result": "System accepts the CSV file and displays a preview or confirmation of the data to be imported."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the import process.",
          "Expected Result": "System processes the CSV file and imports the data without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all records from the CSV file are present in the ZENIT system.",
          "Expected Result": "All data from the CSV file is accurately reflected in the ZENIT system."
        },
        {
          "Step": 6,
          "Step Description": "Check for data integrity and quality (e.g., no missing fields, correct data types, no duplicates).",
          "Expected Result": "Data integrity and quality are maintained; no errors or inconsistencies found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. Valid CSV file is available and formatted according to ZENIT requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Load",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample CSV file with valid data records for ZENIT.",
      "Expected Result": "ZENIT system is fully populated with data from the CSV file, maintaining data integrity and quality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only CSV file import scenario.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Import_Database_Data_DESKTOP_TEST",
      "ID": "TC-048",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure access credentials and connection details for the source database are available.",
          "Expected Result": "Database credentials and connection details are ready."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data migration interface on a desktop environment before system boot.",
          "Expected Result": "Data migration interface is accessible and ready for configuration."
        },
        {
          "Step": 3,
          "Step Description": "Configure the connection to the source database using the provided credentials.",
          "Expected Result": "System successfully connects to the source database."
        },
        {
          "Step": 4,
          "Step Description": "Select the required tables or data sets for migration.",
          "Expected Result": "System displays the available tables/data sets and allows selection."
        },
        {
          "Step": 5,
          "Step Description": "Initiate the data migration process.",
          "Expected Result": "System migrates the selected data into ZENIT without errors."
        },
        {
          "Step": 6,
          "Step Description": "Verify that all migrated records are present in the ZENIT system.",
          "Expected Result": "All data from the source database is accurately reflected in the ZENIT system."
        },
        {
          "Step": 7,
          "Step Description": "Check for data integrity and quality (e.g., no missing fields, correct data types, no duplicates).",
          "Expected Result": "Data integrity and quality are maintained; no errors or inconsistencies found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data migration interface.\n3. Source database is accessible and contains valid data.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Source database with valid data records for ZENIT.",
      "Expected Result": "ZENIT system is fully populated with data from the source database, maintaining data integrity and quality.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only database migration scenario.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Invalid_File_Format_Error_DESKTOP_TEST",
      "ID": "TC-049",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a file in an unsupported format (e.g., .txt or .pdf) with arbitrary data.",
          "Expected Result": "Unsupported file is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for data upload."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload the unsupported file format for import.",
          "Expected Result": "System rejects the file and displays an appropriate error message indicating unsupported format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. Unsupported file format is available.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Load",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample .txt or .pdf file with arbitrary data.",
      "Expected Result": "System prevents import of unsupported file formats and displays a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for file format validation.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Data_Integrity_Check_DESKTOP_TEST",
      "ID": "TC-050",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid Excel or CSV file with intentional data integrity issues (e.g., missing required fields, invalid data types, duplicate records).",
          "Expected Result": "File with data integrity issues is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for data upload."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to import the file with data integrity issues.",
          "Expected Result": "System detects data integrity issues and prevents import, displaying detailed error messages for each issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. File with data integrity issues is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Integrity Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel or CSV file with missing fields, invalid types, and duplicate records.",
      "Expected Result": "System prevents import of data with integrity issues and provides clear, actionable error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for data integrity validation.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad-ZENIT_RF001_Large_Data_Volume_Import_DESKTOP_TEST",
      "ID": "TC-051",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a large Excel or CSV file containing a high volume of valid data records as per ZENIT data model.",
          "Expected Result": "Large data file is ready for testing."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT system's data import interface on a desktop environment before system boot.",
          "Expected Result": "Data import interface is accessible and ready for data upload."
        },
        {
          "Step": 3,
          "Step Description": "Select and upload the large data file for import.",
          "Expected Result": "System accepts the file and begins processing."
        },
        {
          "Step": 4,
          "Step Description": "Monitor the import process for completion and any performance issues.",
          "Expected Result": "System completes the import within acceptable time limits and without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all records from the large file are present in the ZENIT system.",
          "Expected Result": "All data from the large file is accurately reflected in the ZENIT system."
        },
        {
          "Step": 6,
          "Step Description": "Check for data integrity and quality (e.g., no missing fields, correct data types, no duplicates).",
          "Expected Result": "Data integrity and quality are maintained; no errors or inconsistencies found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is not yet booted for operational use.\n2. User has access to the data import interface.\n3. Large Excel or CSV file is available and formatted according to ZENIT requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Data Load",
      "Test Type": "performance",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Large Excel or CSV file with thousands of valid records.",
      "Expected Result": "ZENIT system successfully imports large data volumes, maintaining data integrity and acceptable performance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers performance and scalability for large data imports.",
      "_polarion": "RF001 - Initial Load and Data Migration"
    },
    {
      "Title": "InactivityLogout-proj_RF002_AutoLogoutFunctionality_TEST_Desktop",
      "ID": "TC-052",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application using valid user credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive (do not interact with the application) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system behavior after the inactivity timeout period elapses.",
          "Expected Result": "The system automatically logs out the user and redirects to the login page with an appropriate message indicating logout due to inactivity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on a desktop device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User is automatically logged out after the inactivity timeout and redirected to the login page with a relevant message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "InactivityLogout-proj_RF002_AutoLogoutFunctionality_TEST_MobileAndroid",
      "ID": "TC-053",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the mobile application using valid user credentials on an Android device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive (do not interact with the application) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system behavior after the inactivity timeout period elapses.",
          "Expected Result": "The system automatically logs out the user and redirects to the login page with an appropriate message indicating logout due to inactivity."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Android 12, Mobile Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on an Android device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User is automatically logged out after the inactivity timeout and redirected to the login page with a relevant message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "InactivityLogout-proj_RF002_AutoLogoutFunctionality_TEST_MobileIOS",
      "ID": "TC-054",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the mobile application using valid user credentials on an iOS device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive (do not interact with the application) for the configured inactivity timeout period (e.g., 15 minutes).",
          "Expected Result": "No user activity is detected during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system behavior after the inactivity timeout period elapses.",
          "Expected Result": "The system automatically logs out the user and redirects to the login page with an appropriate message indicating logout due to inactivity."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "iOS 16, Mobile Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on an iOS device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User is automatically logged out after the inactivity timeout and redirected to the login page with a relevant message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "InactivityLogout-proj_RF002_NoLogoutWithActivity_TEST_Desktop",
      "ID": "TC-055",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application using valid user credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Periodically interact with the application (e.g., move mouse, click, or type) within the inactivity timeout period (e.g., every 5 minutes for a 15-minute timeout).",
          "Expected Result": "User activity is detected and session remains active."
        },
        {
          "Step": 3,
          "Step Description": "Continue this activity for a duration exceeding the inactivity timeout period (e.g., 20 minutes).",
          "Expected Result": "User remains logged in and is not logged out due to inactivity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on a desktop device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "User remains logged in as long as activity is detected within the timeout period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "InactivityLogout-proj_RF002_LogoutMessageContent_TEST_Desktop",
      "ID": "TC-056",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application using valid user credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for the configured inactivity timeout period.",
          "Expected Result": "No user activity is detected during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "Observe the message displayed after automatic logout due to inactivity.",
          "Expected Result": "A clear and informative message is displayed, indicating that the user was logged out due to inactivity."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on a desktop device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "A clear message is shown to the user after logout, explaining the reason (inactivity).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "InactivityLogout-proj_RF002_SessionResourceRelease_TEST_Desktop",
      "ID": "TC-057",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application using valid user credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for the configured inactivity timeout period.",
          "Expected Result": "No user activity is detected during the timeout period."
        },
        {
          "Step": 3,
          "Step Description": "After automatic logout, attempt to perform an action that requires an active session (e.g., refresh the page or access a protected resource).",
          "Expected Result": "The system prevents access and prompts the user to log in again, confirming that the session has been terminated and resources released."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is able to access the application on a desktop device.\n3. Inactivity timeout is configured (e.g., 15 minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "After logout, session resources are released and protected actions require re-authentication.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF002 - Disconnected for inactivity"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginActivityRecording_Backend_TEST_Desktop",
      "ID": "TC-058",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the main system with a valid user account.",
          "Expected Result": "User is successfully authenticated and granted access to the system."
        },
        {
          "Step": 2,
          "Step Description": "Access the backend or audit log interface as a Control Room team member.",
          "Expected Result": "Audit log interface is accessible and displays recent login activities."
        },
        {
          "Step": 3,
          "Step Description": "Search for the recent login activity using the user ID or timestamp.",
          "Expected Result": "The login activity is present in the log with details such as user, login time, and role."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The main system is operational and accessible.\n2. The test user account exists and is active.\n3. The Control Room team member has access to the audit log interface.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Control Room team member credentials.",
      "Expected Result": "Login activity is recorded in the audit log with all required details (user, login time, role) and is viewable by authorized personnel.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard login and log recording.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginActivityDetailVerification_Backend_TEST_Desktop",
      "ID": "TC-059",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the main system with a user assigned a specific role (e.g., Admin).",
          "Expected Result": "User is authenticated and logged in with the specified role."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log as a Control Room team member.",
          "Expected Result": "Audit log interface is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Locate the login event for the user and verify that the recorded details include user ID, login time, and role.",
          "Expected Result": "Audit log entry contains accurate user ID, login time, and role information."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The main system is operational.\n2. User account with a specific role exists.\n3. Control Room team member has access to the audit log interface.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with specific role; Control Room team member credentials.",
      "Expected Result": "Audit log records all required details (user, login time, role) for each login event.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Verifies completeness of recorded login details.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginActivityExtraction_Backend_TEST_Desktop",
      "ID": "TC-060",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the audit log interface as a Control Room team member.",
          "Expected Result": "Audit log interface is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Use the export or extract function to download login activity records for a specified date range.",
          "Expected Result": "System generates and allows download of the login activity report for the selected period."
        },
        {
          "Step": 3,
          "Step Description": "Open the exported file and verify that it contains all required details (user, login time, role) for each login event.",
          "Expected Result": "Exported file contains accurate and complete login activity data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The main system is operational.\n2. Control Room team member has access to the audit log interface.\n3. There are login activities recorded in the system for the selected date range.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room team member credentials; Date range with login activities.",
      "Expected Result": "Login activity data can be extracted and contains all required details for compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers extraction and verification of login activity data.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginActivityComplianceCheck_Backend_TEST_Desktop",
      "ID": "TC-061",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the main system with a valid user account.",
          "Expected Result": "User is authenticated and logged in."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log as a Control Room team member.",
          "Expected Result": "Audit log interface is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the login event includes all SOX-required fields (user, login time, role, etc.).",
          "Expected Result": "Audit log entry contains all SOX-mandated fields for login tracking."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The main system is operational.\n2. Control Room team member has access to the audit log interface.\n3. SOX compliance requirements are documented and available.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Control Room team member credentials; SOX compliance checklist.",
      "Expected Result": "Login activity records are SOX-compliant, containing all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on SOX compliance of login tracking.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LoginTracking-proj_RF003_LoginActivityUnauthorizedAccess_Backend_TEST_Desktop",
      "ID": "TC-062",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the audit log interface with a user account that is not part of the Control Room team.",
          "Expected Result": "Access to the audit log interface is denied."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The main system is operational.\n2. Non-Control Room user account exists.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Control Room user credentials.",
      "Expected Result": "Unauthorized users cannot access or view login activity records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for unauthorized access.",
      "_polarion": "RF003 - Login Tracking (SOX)"
    },
    {
      "Title": "LogTracking-proj_RF004_LogTraceability_SOXCompliance_TEST_Desktop",
      "ID": "TC-063",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a user login operation on the application.",
          "Expected Result": "The login event is recorded in the application log with a timestamp, user ID, and action details."
        },
        {
          "Step": 2,
          "Step Description": "Access the log management system or retrieve the log file for the session.",
          "Expected Result": "The log entry for the login operation is present, complete, and unaltered."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the log entry contains all required SOX-compliant fields (timestamp, user ID, action, result, source IP, etc.).",
          "Expected Result": "All SOX-mandated fields are present and correctly populated in the log entry."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The application is deployed and accessible on a desktop environment.\n2. The user has valid credentials.\n3. Log management system is enabled and configured for SOX compliance.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; access to log management system.",
      "Expected Result": "All user actions are logged with SOX-compliant traceability, and log entries are complete and unaltered.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers positive scenario for SOX-compliant log traceability on user login.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "LogTracking-proj_RF004_LogIntegrity_TamperDetection_TEST_Desktop",
      "ID": "TC-064",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a sensitive operation (e.g., change user password) in the application.",
          "Expected Result": "The operation is logged with all required SOX-compliant fields."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to manually alter or delete the corresponding log entry in the log management system or log file.",
          "Expected Result": "The system detects the tampering attempt and either prevents the change or logs an alert/event indicating the tampering attempt."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The application is deployed and accessible on a desktop environment.\n2. The user has valid credentials.\n3. Log management system is enabled and configured for SOX compliance.\n4. Access to log files or log management interface is available for testing tampering.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; access to log files or log management interface.",
      "Expected Result": "Any attempt to alter or delete log entries is detected and handled according to SOX compliance requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for log integrity and tamper detection.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "LogTracking-proj_RF004_LogRetention_SOXPolicy_TEST_Desktop",
      "ID": "TC-065",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or simulate a log retention policy event (e.g., reach end of retention period for a log entry).",
          "Expected Result": "The system identifies log entries that have reached the end of their retention period."
        },
        {
          "Step": 2,
          "Step Description": "Verify that log entries are archived or deleted according to SOX-compliant retention policies.",
          "Expected Result": "Log entries are archived or deleted as per SOX requirements, and the action is itself logged."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The application is deployed and accessible on a desktop environment.\n2. Log management system is enabled and configured for SOX compliance.\n3. Log entries exist that are eligible for retention policy action.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Log entries with known creation dates; access to retention policy configuration.",
      "Expected Result": "Log retention and archiving/deletion are performed according to SOX-compliant policies, and actions are logged.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers log retention and archival/deletion policy enforcement.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "LogTracking-proj_RF004_LogAccessControl_AuditTrail_TEST_Desktop",
      "ID": "TC-066",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the log management system with a user account lacking log access permissions.",
          "Expected Result": "Access is denied, and the attempt is logged as a security event."
        },
        {
          "Step": 2,
          "Step Description": "Access the log management system with a user account that has appropriate permissions.",
          "Expected Result": "Access is granted, and the access event is logged with all SOX-required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The application is deployed and accessible on a desktop environment.\n2. Log management system is enabled and configured for SOX compliance.\n3. Two user accounts exist: one with log access permissions, one without.",
      "Execution Mode": "Manual",
      "Functionality": "Log Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Two user accounts (one with, one without log access permissions).",
      "Expected Result": "Log access is controlled according to permissions, and all access attempts are logged for audit trail purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control and audit trail for log management.",
      "_polarion": "RF004 - Log Tracking"
    },
    {
      "Title": "ConcurrentUpdate-proj_RF005_ManageConcurrency_UpdateRecord_TEST_Desktop",
      "ID": "TC-067",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to the shared data record.",
          "Expected Result": "User A successfully accesses the data record."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same shared data record.",
          "Expected Result": "User B successfully accesses the same data record."
        },
        {
          "Step": 3,
          "Step Description": "User A edits a field in the record and saves the changes.",
          "Expected Result": "User A's changes are saved successfully."
        },
        {
          "Step": 4,
          "Step Description": "User B, without refreshing, edits the same field in the record and attempts to save.",
          "Expected Result": "The system detects the concurrent modification and either prevents User B from saving, prompts for conflict resolution, or merges changes according to business rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access rights.\n2. The shared data record exists in the system.\n3. The system is running and accessible to both users.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; shared data record ID.",
      "Expected Result": "The system detects and manages concurrent updates, ensuring data consistency and preventing data loss.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent update scenario for a single data record.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "ConcurrentReadWrite-proj_RF005_ManageConcurrency_ReadWhileWrite_TEST_Desktop",
      "ID": "TC-068",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to a shared data record.",
          "Expected Result": "User A successfully accesses the data record."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same shared data record.",
          "Expected Result": "User B successfully accesses the same data record."
        },
        {
          "Step": 3,
          "Step Description": "User A begins editing the record but does not save yet.",
          "Expected Result": "User A is in edit mode for the record."
        },
        {
          "Step": 4,
          "Step Description": "User B attempts to read the record while User A is editing.",
          "Expected Result": "User B either sees a lock notification, a read-only version, or the last saved state, depending on system design."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access rights.\n2. The shared data record exists in the system.\n3. The system is running and accessible to both users.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; shared data record ID.",
      "Expected Result": "The system prevents data inconsistency by managing read/write access during concurrent operations.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers read access during concurrent write operation.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "SimultaneousCreate-proj_RF005_ManageConcurrency_CreateRecord_TEST_Desktop",
      "ID": "TC-069",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A and User B log into the system simultaneously.",
          "Expected Result": "Both users are authenticated and have access to the application."
        },
        {
          "Step": 2,
          "Step Description": "Both users attempt to create a new record with the same unique identifier at the same time.",
          "Expected Result": "The system processes both requests."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to both creation attempts.",
          "Expected Result": "The system allows only one record with the unique identifier to be created and notifies the other user of a conflict or duplicate entry."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access rights.\n2. The system is running and accessible to both users.\n3. The unique identifier to be used for the new record does not already exist.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; unique identifier for new record.",
      "Expected Result": "The system prevents duplicate records and maintains data integrity during simultaneous create operations.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers simultaneous creation of records with unique constraints.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "ConcurrentDelete-proj_RF005_ManageConcurrency_DeleteWhileEdit_TEST_Desktop",
      "ID": "TC-070",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and navigates to a shared data record.",
          "Expected Result": "User A successfully accesses the data record."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and navigates to the same shared data record.",
          "Expected Result": "User B successfully accesses the same data record."
        },
        {
          "Step": 3,
          "Step Description": "User A begins editing the record but does not save yet.",
          "Expected Result": "User A is in edit mode for the record."
        },
        {
          "Step": 4,
          "Step Description": "User B attempts to delete the record while User A is editing.",
          "Expected Result": "The system either prevents the deletion, prompts for conflict resolution, or handles the operation according to business rules (e.g., notifies User A, cancels edit, or allows deletion with warning)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access rights.\n2. The shared data record exists in the system.\n3. The system is running and accessible to both users.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; shared data record ID.",
      "Expected Result": "The system manages concurrent delete and edit operations to ensure data consistency and prevent data loss.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers delete operation during concurrent edit.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "ConcurrentBulkUpdate-proj_RF005_ManageConcurrency_BulkUpdate_TEST_Desktop",
      "ID": "TC-071",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and selects multiple records for bulk update.",
          "Expected Result": "User A is able to select and initiate bulk update on multiple records."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and selects one or more of the same records for individual update.",
          "Expected Result": "User B is able to select and begin editing the records."
        },
        {
          "Step": 3,
          "Step Description": "User A performs and submits the bulk update.",
          "Expected Result": "Bulk update is processed by the system."
        },
        {
          "Step": 4,
          "Step Description": "User B attempts to save changes to a record that was included in the bulk update.",
          "Expected Result": "The system detects the concurrent modification and either prevents User B from saving, prompts for conflict resolution, or merges changes according to business rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Both User A and User B have valid credentials and access rights.\n2. Multiple shared data records exist in the system.\n3. The system is running and accessible to both users.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; IDs of records for bulk update.",
      "Expected Result": "The system manages concurrent bulk and individual updates to maintain data consistency.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent bulk and individual update scenarios.",
      "_polarion": "RF005 - Manage concurrency"
    },
    {
      "Title": "Settings-proj_RF006_LanguagePreferenceSelection_application_TEST_Desktop",
      "ID": "TC-072",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the Settings page.",
          "Expected Result": "Settings page is displayed with customization options."
        },
        {
          "Step": 2,
          "Step Description": "Locate the language preference section within the Settings page.",
          "Expected Result": "Language preference options (e.g., English, Italian) are visible."
        },
        {
          "Step": 3,
          "Step Description": "Select a different language (e.g., switch from English to Italian).",
          "Expected Result": "The application interface updates to the selected language immediately or after confirmation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is logged into the application.\n3. Application is running on a supported desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Language Preference",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials (e.g., testuser1/testpass1)",
      "Expected Result": "The application interface language changes to the selected language, and all UI elements are translated accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Settings-proj_RF006_FontSizeAdjustment_application_TEST_Desktop",
      "ID": "TC-073",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the Settings page.",
          "Expected Result": "Settings page is displayed with customization options."
        },
        {
          "Step": 2,
          "Step Description": "Locate the display preferences section and find the font size adjustment option.",
          "Expected Result": "Font size adjustment controls (e.g., slider or dropdown) are visible."
        },
        {
          "Step": 3,
          "Step Description": "Increase the font size to the maximum available value.",
          "Expected Result": "All text in the application interface increases in size accordingly."
        },
        {
          "Step": 4,
          "Step Description": "Decrease the font size to the minimum available value.",
          "Expected Result": "All text in the application interface decreases in size accordingly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is logged into the application.\n3. Application is running on a supported desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Display Preferences (Font Size)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials (e.g., testuser1/testpass1)",
      "Expected Result": "Font size changes are applied throughout the application interface as per user selection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Settings-proj_RF006_LightDarkThemeToggle_application_TEST_Desktop",
      "ID": "TC-074",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the Settings page.",
          "Expected Result": "Settings page is displayed with customization options."
        },
        {
          "Step": 2,
          "Step Description": "Locate the display preferences section and find the theme toggle option.",
          "Expected Result": "Theme toggle (Light/Dark) is visible."
        },
        {
          "Step": 3,
          "Step Description": "Switch from Light theme to Dark theme.",
          "Expected Result": "Application interface updates to Dark theme immediately or after confirmation."
        },
        {
          "Step": 4,
          "Step Description": "Switch back from Dark theme to Light theme.",
          "Expected Result": "Application interface updates to Light theme immediately or after confirmation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is logged into the application.\n3. Application is running on a supported desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Display Preferences (Theme)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials (e.g., testuser1/testpass1)",
      "Expected Result": "Theme changes are applied throughout the application interface as per user selection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Settings-proj_RF006_InvalidLanguageSelectionHandling_application_TEST_Desktop",
      "ID": "TC-075",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the Settings page.",
          "Expected Result": "Settings page is displayed with customization options."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to select a language option that is not supported (if possible, e.g., via direct URL manipulation or unsupported value injection).",
          "Expected Result": "The application displays an error message or prevents the selection of unsupported languages."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is logged into the application.\n3. Application is running on a supported desktop browser.\n4. Tester has knowledge of how to attempt unsupported value injection (if applicable).",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Language Preference",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials (e.g., testuser1/testpass1)",
      "Expected Result": "The application gracefully handles invalid language selections without crashing or displaying incorrect content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for unsupported language selection.",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Settings-proj_RF006_DisplayPreferencePersistence_application_TEST_Desktop",
      "ID": "TC-076",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the Settings page.",
          "Expected Result": "Settings page is displayed with customization options."
        },
        {
          "Step": 2,
          "Step Description": "Change the display preferences (e.g., set font size to large and theme to dark).",
          "Expected Result": "Display preferences are updated in the application interface."
        },
        {
          "Step": 3,
          "Step Description": "Log out of the application.",
          "Expected Result": "User is logged out successfully."
        },
        {
          "Step": 4,
          "Step Description": "Log back into the application with the same user account.",
          "Expected Result": "Display preferences (font size and theme) are retained as previously set."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account exists and is active.\n2. User is logged into the application.\n3. Application is running on a supported desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Settings - Display Preferences Persistence",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials (e.g., testuser1/testpass1)",
      "Expected Result": "User's display preferences persist across sessions and are correctly applied after re-login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers persistence of display preferences across sessions.",
      "_polarion": "RF006 - Settings"
    },
    {
      "Title": "Arxivar_001_RF007_DocumentList_AutomaticRetrieval_DESKTOP_TEST_Desktop",
      "ID": "TC-077",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system with valid credentials as a user associated with a specific PoS.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section where Arxivar integration is available.",
          "Expected Result": "The 'Documents' section is displayed with options to view documents from Arxivar."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the document acquisition process for the specific PoS (e.g., by clicking 'Retrieve Documents').",
          "Expected Result": "The system initiates a connection to the Arxivar service."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the system to automatically list the documents based on predefined criteria (type and status).",
          "Expected Result": "A list of documents matching the predefined criteria (type and status) is displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the specific PoS exists.\n2. The Arxivar service is available and reachable from the test environment.\n3. Predefined criteria for document type and status are configured in the system.\n4. At least one document matching the criteria exists in Arxivar for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Document Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, sample documents in Arxivar with various types and statuses.",
      "Expected Result": "The system connects to Arxivar and displays only the documents for the specific PoS that match the predefined type and status criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "Arxivar_002_RF007_DocumentList_FilterByType_DESKTOP_TEST_Desktop",
      "ID": "TC-078",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user associated with a specific PoS.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section and trigger the Arxivar document acquisition.",
          "Expected Result": "The system connects to Arxivar and retrieves documents for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only documents of the predefined type(s) are listed.",
          "Expected Result": "All listed documents match the predefined document type(s); no documents of other types are shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the specific PoS exists.\n2. The Arxivar service is available.\n3. Predefined document type criteria are configured.\n4. Arxivar contains documents of multiple types for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Document Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, documents in Arxivar with various types.",
      "Expected Result": "Only documents of the predefined type(s) are displayed for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "Arxivar_003_RF007_DocumentList_FilterByStatus_DESKTOP_TEST_Desktop",
      "ID": "TC-079",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user associated with a specific PoS.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section and trigger the Arxivar document acquisition.",
          "Expected Result": "The system connects to Arxivar and retrieves documents for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only documents with the predefined status(es) are listed.",
          "Expected Result": "All listed documents have the predefined status(es); documents with other statuses are not shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the specific PoS exists.\n2. The Arxivar service is available.\n3. Predefined document status criteria are configured.\n4. Arxivar contains documents with various statuses for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Document Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, documents in Arxivar with various statuses.",
      "Expected Result": "Only documents with the predefined status(es) are displayed for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "Arxivar_004_RF007_DocumentList_NoMatchingDocuments_DESKTOP_TEST_Desktop",
      "ID": "TC-080",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user associated with a specific PoS.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section and trigger the Arxivar document acquisition.",
          "Expected Result": "The system connects to Arxivar and attempts to retrieve documents for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify the system's response when no documents match the predefined criteria.",
          "Expected Result": "A clear message is displayed indicating that no documents are available for the selected criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the specific PoS exists.\n2. The Arxivar service is available.\n3. Predefined criteria are configured.\n4. No documents in Arxivar match the criteria for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Document Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, no matching documents in Arxivar.",
      "Expected Result": "The system informs the user that no documents are available for the selected PoS and criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "Arxivar_005_RF007_DocumentList_ArxivarServiceUnavailable_DESKTOP_TEST_Desktop",
      "ID": "TC-081",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system as a user associated with a specific PoS.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section and trigger the Arxivar document acquisition while the Arxivar service is unavailable (simulate service downtime).",
          "Expected Result": "The system attempts to connect to Arxivar and fails."
        },
        {
          "Step": 3,
          "Step Description": "Verify the error message or handling displayed to the user.",
          "Expected Result": "A clear error message is shown indicating that the Arxivar service is currently unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the specific PoS exists.\n2. The Arxivar service is intentionally made unavailable or unreachable.\n3. Predefined criteria are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Document Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier, Arxivar service offline.",
      "Expected Result": "The system displays an appropriate error message when the Arxivar service cannot be reached.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF007 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "ViewDocuments-proj_RF008_Dashboard_DocumentsList_TEST_Desktop",
      "ID": "TC-082",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Identify and select a specific POS from the list of available POS entries on the dashboard.",
          "Expected Result": "The selected POS is highlighted or otherwise indicated as active."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' section or tab associated with the selected POS.",
          "Expected Result": "A dedicated 'Documents' section opens, displaying a list of documents associated with the selected POS."
        },
        {
          "Step": 4,
          "Step Description": "Review the list of documents and verify that documents from both Cerved and ARXivar are present.",
          "Expected Result": "Documents from both Cerved and ARXivar are displayed in the list, regardless of their origin."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the dashboard is available.\n2. At least one POS is configured in the system and associated with documents from both Cerved and ARXivar.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Listing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, POS with documents from both Cerved and ARXivar.",
      "Expected Result": "All documents associated with the selected POS, regardless of origin, are displayed in the dedicated 'Documents' section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "NoDocuments-proj_RF008_Dashboard_EmptyDocumentsList_TEST_Desktop",
      "ID": "TC-083",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS from the dashboard that has no associated documents in either Cerved or ARXivar.",
          "Expected Result": "The selected POS is highlighted or otherwise indicated as active."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' section or tab for the selected POS.",
          "Expected Result": "A dedicated 'Documents' section opens."
        },
        {
          "Step": 4,
          "Step Description": "Observe the content of the 'Documents' section.",
          "Expected Result": "A message or indicator is displayed stating that no documents are available for the selected POS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the dashboard is available.\n2. At least one POS is configured in the system with no associated documents from either Cerved or ARXivar.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Listing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, POS with no associated documents.",
      "Expected Result": "The 'Documents' section displays an appropriate message indicating that no documents are available for the selected POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "OriginFilter-proj_RF008_Dashboard_DocumentOriginVerification_TEST_Desktop",
      "ID": "TC-084",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS from the dashboard that has documents from both Cerved and ARXivar.",
          "Expected Result": "The selected POS is highlighted or otherwise indicated as active."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' section or tab for the selected POS.",
          "Expected Result": "A dedicated 'Documents' section opens, displaying a list of documents."
        },
        {
          "Step": 4,
          "Step Description": "For each document in the list, verify that the origin (Cerved or ARXivar) is clearly indicated.",
          "Expected Result": "Each document entry displays its origin (Cerved or ARXivar) in the list."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the dashboard is available.\n2. At least one POS is configured in the system with documents from both Cerved and ARXivar.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Listing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, POS with documents from both Cerved and ARXivar.",
      "Expected Result": "Each document in the 'Documents' section clearly displays its origin (Cerved or ARXivar).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "AccessDenied-proj_RF008_Dashboard_DocumentsAccessControl_TEST_Desktop",
      "ID": "TC-085",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with a user account that does not have permission to view documents for a specific POS.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to select a POS for which the user does not have document viewing permissions.",
          "Expected Result": "The POS is either not selectable or is selected with restricted access."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access the 'Documents' section for the restricted POS.",
          "Expected Result": "Access to the 'Documents' section is denied, and an appropriate error message or access denied notification is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with restricted access to certain POS documents is available.\n2. At least one POS is configured in the system with restricted document access for the test user.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with restricted access, POS with restricted documents.",
      "Expected Result": "User is prevented from accessing the 'Documents' section for POS where they lack permission, and an appropriate error message is shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "DocumentDetails-proj_RF008_Dashboard_DocumentDetailsView_TEST_Desktop",
      "ID": "TC-086",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS from the dashboard that has at least one associated document.",
          "Expected Result": "The selected POS is highlighted or otherwise indicated as active."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' section or tab for the selected POS.",
          "Expected Result": "A dedicated 'Documents' section opens, displaying a list of documents."
        },
        {
          "Step": 4,
          "Step Description": "Click on a document entry in the list to view its details.",
          "Expected Result": "A detailed view or modal opens, displaying the document's metadata and content preview."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to the dashboard is available.\n2. At least one POS is configured in the system with at least one associated document.\n3. The dashboard application is accessible from a desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Document Details",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, POS with at least one document.",
      "Expected Result": "User can view detailed information and a preview of any document associated with the selected POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF008 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "ViewBordero-proj_RF009_Dashboard_OpenArchiCONLink_TEST_Desktop",
      "ID": "TC-087",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system with valid credentials and access the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry that has an associated Borderò document.",
          "Expected Result": "PoS entry is visible and indicates the presence of a Borderò document (e.g., via an icon or link)."
        },
        {
          "Step": 3,
          "Step Description": "Click on the ArchiCON link or icon associated with the selected PoS.",
          "Expected Result": "A new browser tab or window opens, displaying the Borderò document in ArchiCON for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS with an associated Borderò document exists in the system.\n3. User is logged in and on the dashboard page.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò Document",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with associated Borderò document.",
      "Expected Result": "The Borderò document for the selected PoS is displayed in ArchiCON after clicking the link from the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF009 - View Borderò - ArchiCON"
    },
    {
      "Title": "ViewBordero-proj_RF009_Dashboard_NoBorderoLink_TEST_Desktop",
      "ID": "TC-088",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system with valid credentials and access the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry that does NOT have an associated Borderò document.",
          "Expected Result": "PoS entry is visible and does not display the ArchiCON link or icon."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to locate or click the ArchiCON link for this PoS.",
          "Expected Result": "No ArchiCON link is available; user cannot attempt to open a non-existent Borderò document."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS without an associated Borderò document exists in the system.\n3. User is logged in and on the dashboard page.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò Document",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS without associated Borderò document.",
      "Expected Result": "The ArchiCON link is not displayed for PoS entries without an associated Borderò document.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for PoS without Borderò document.",
      "_polarion": "RF009 - View Borderò - ArchiCON"
    },
    {
      "Title": "ViewBordero-proj_RF009_Dashboard_InvalidArchiCONLink_TEST_Desktop",
      "ID": "TC-089",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system with valid credentials and access the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry with an associated Borderò document but with an intentionally corrupted or invalid ArchiCON link (test data setup required).",
          "Expected Result": "PoS entry is visible and displays the ArchiCON link."
        },
        {
          "Step": 3,
          "Step Description": "Click on the invalid ArchiCON link.",
          "Expected Result": "A new browser tab or window opens, but an error message is displayed (e.g., 'Document not found' or 'Invalid link')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS with an associated Borderò document and an invalid ArchiCON link exists in the system.\n3. User is logged in and on the dashboard page.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò Document",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with invalid ArchiCON link.",
      "Expected Result": "System displays an appropriate error message when the ArchiCON link is invalid or the document cannot be found.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for invalid ArchiCON links.",
      "_polarion": "RF009 - View Borderò - ArchiCON"
    },
    {
      "Title": "ViewBordero-proj_RF009_Dashboard_OpenArchiCONLink_TEST_Mobile",
      "ID": "TC-090",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the system using a mobile browser or app with valid credentials and access the dashboard.",
          "Expected Result": "Dashboard is displayed with a list of PoS entries."
        },
        {
          "Step": 2,
          "Step Description": "Identify a PoS entry that has an associated Borderò document.",
          "Expected Result": "PoS entry is visible and indicates the presence of a Borderò document (e.g., via an icon or link)."
        },
        {
          "Step": 3,
          "Step Description": "Tap on the ArchiCON link or icon associated with the selected PoS.",
          "Expected Result": "A new browser tab or in-app browser opens, displaying the Borderò document in ArchiCON for the selected PoS."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "Web",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Android 12, Mobile Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard via mobile device.\n2. At least one PoS with an associated Borderò document exists in the system.\n3. User is logged in and on the dashboard page.",
      "Execution Mode": "Manual",
      "Functionality": "View Borderò Document",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with associated Borderò document.",
      "Expected Result": "The Borderò document for the selected PoS is displayed in ArchiCON after tapping the link from the dashboard on a mobile device.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers mobile device compatibility.",
      "_polarion": "RF009 - View Borderò - ArchiCON"
    },
    {
      "Title": "ViewNotes-proj_RF010_dashboard_ViewNotes_TEST_Desktop",
      "ID": "TC-091",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the list.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS.",
          "Expected Result": "The 'Notes' section is visible, displaying any existing notes related to the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS exists in the system.\n3. The selected PoS has at least one note already entered.",
      "Execution Mode": "Manual",
      "Functionality": "Notes Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with existing notes.",
      "Expected Result": "The user can view all existing notes for the selected PoS in the 'Notes' section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "AddNote-proj_RF010_dashboard_AddNote_TEST_Desktop",
      "ID": "TC-092",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the list.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS.",
          "Expected Result": "The 'Notes' section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Click on the option to add a new note.",
          "Expected Result": "A form or input area for entering a new note is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Enter note details including date, name, and relevant characteristics (e.g., '2024-06-10, John Doe, Credit limit increased').",
          "Expected Result": "The note details are entered into the form."
        },
        {
          "Step": 6,
          "Step Description": "Save or submit the new note.",
          "Expected Result": "The new note is saved and displayed in the 'Notes' section for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Notes Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS, note details (e.g., date: 2024-06-10, name: John Doe, info: Credit limit increased).",
      "Expected Result": "The user can successfully add a new note with all required details to the selected PoS, and the note is immediately visible in the 'Notes' section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "AddNoteMissingFields-proj_RF010_dashboard_AddNoteValidation_TEST_Desktop",
      "ID": "TC-093",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the list.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS.",
          "Expected Result": "The 'Notes' section is visible."
        },
        {
          "Step": 4,
          "Step Description": "Click on the option to add a new note.",
          "Expected Result": "A form or input area for entering a new note is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to save the note without entering any details (leave all fields blank).",
          "Expected Result": "The system displays a validation error indicating that required fields must be filled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Notes Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS.",
      "Expected Result": "The system prevents saving a note with missing required fields and displays appropriate validation messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "EditNote-proj_RF010_dashboard_EditNote_TEST_Desktop",
      "ID": "TC-094",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the list.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS.",
          "Expected Result": "The 'Notes' section is visible with existing notes listed."
        },
        {
          "Step": 4,
          "Step Description": "Select an existing note and choose the option to edit it.",
          "Expected Result": "The note details are displayed in an editable form."
        },
        {
          "Step": 5,
          "Step Description": "Modify the note details (e.g., update the name or add additional information).",
          "Expected Result": "The updated details are entered into the form."
        },
        {
          "Step": 6,
          "Step Description": "Save the changes to the note.",
          "Expected Result": "The note is updated and the changes are reflected in the 'Notes' section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS exists in the system.\n3. The selected PoS has at least one note already entered.",
      "Execution Mode": "Manual",
      "Functionality": "Notes Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with existing notes.",
      "Expected Result": "The user can successfully edit and update an existing note for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "DeleteNote-proj_RF010_dashboard_DeleteNote_TEST_Desktop",
      "ID": "TC-095",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard application with valid user credentials.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific Point of Sale (PoS) from the list.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Notes' section for the selected PoS.",
          "Expected Result": "The 'Notes' section is visible with existing notes listed."
        },
        {
          "Step": 4,
          "Step Description": "Select an existing note and choose the option to delete it.",
          "Expected Result": "A confirmation prompt is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the deletion of the note.",
          "Expected Result": "The note is removed from the 'Notes' section and is no longer visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials and access to the dashboard.\n2. At least one PoS exists in the system.\n3. The selected PoS has at least one note already entered.",
      "Execution Mode": "Manual",
      "Functionality": "Notes Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with existing notes.",
      "Expected Result": "The user can successfully delete an existing note for the selected PoS, and the note is no longer displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF010 - Dashboard - Single PoS - \"Notes\""
    },
    {
      "Title": "ImportRedList_proj_RF011_ImportExcelFile_ZENIT_TEST_Desktop",
      "ID": "TC-096",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice system with valid administrator credentials.",
          "Expected Result": "User is successfully logged into the ZENIT Backoffice."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'RedList Import' section within the application.",
          "Expected Result": "The 'RedList Import' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Upload' button and select a valid 'RedList_Mm_yyyy.xlsx' file containing all required columns (IdRice, Zona Rice, Flag RedList, General Reason, SIMP Management, SIMP Reason).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload action.",
          "Expected Result": "The system processes the file and displays a success message indicating the RedList data has been imported."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the imported data is correctly displayed in the RedList management section, matching the content of the uploaded Excel file.",
          "Expected Result": "All records from the Excel file are present and correctly mapped in the RedList management section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid administrator credentials for ZENIT Backoffice.\n2. The RedList_Mm_yyyy.xlsx file is available and contains all required columns with valid data.\n3. The ZENIT Backoffice system is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid administrator credentials; RedList_Mm_yyyy.xlsx with valid data.",
      "Expected Result": "RedList data from the Excel file is successfully imported and displayed in ZENIT, with all fields correctly mapped.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList_proj_RF011_ImportExcelFileWithMissingColumns_ZENIT_TEST_Desktop",
      "ID": "TC-097",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice system with valid administrator credentials.",
          "Expected Result": "User is successfully logged into the ZENIT Backoffice."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'RedList Import' section within the application.",
          "Expected Result": "The 'RedList Import' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Upload' button and select a 'RedList_Mm_yyyy.xlsx' file missing one or more required columns (e.g., missing 'Flag RedList').",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload action.",
          "Expected Result": "The system validates the file and displays an error message indicating missing required columns."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid administrator credentials for ZENIT Backoffice.\n2. The RedList_Mm_yyyy.xlsx file is available but missing one or more required columns.\n3. The ZENIT Backoffice system is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid administrator credentials; RedList_Mm_yyyy.xlsx missing required columns.",
      "Expected Result": "System rejects the import and displays a clear error message about missing columns.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList_proj_RF011_ImportInvalidExcelFileFormat_ZENIT_TEST_Desktop",
      "ID": "TC-098",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice system with valid administrator credentials.",
          "Expected Result": "User is successfully logged into the ZENIT Backoffice."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'RedList Import' section within the application.",
          "Expected Result": "The 'RedList Import' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Upload' button and select a file that is not in Excel format (e.g., a .csv or .txt file).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload action.",
          "Expected Result": "The system validates the file and displays an error message indicating invalid file format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid administrator credentials for ZENIT Backoffice.\n2. An invalid file (not .xlsx) is available for upload.\n3. The ZENIT Backoffice system is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid administrator credentials; Invalid file format (e.g., .csv, .txt).",
      "Expected Result": "System rejects the file and displays an error message about invalid file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList_proj_RF011_ImportExcelFileWithInvalidData_ZENIT_TEST_Desktop",
      "ID": "TC-099",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice system with valid administrator credentials.",
          "Expected Result": "User is successfully logged into the ZENIT Backoffice."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'RedList Import' section within the application.",
          "Expected Result": "The 'RedList Import' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Upload' button and select a 'RedList_Mm_yyyy.xlsx' file containing invalid data (e.g., non-numeric IdRice, invalid values in 'Flag RedList').",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload action.",
          "Expected Result": "The system validates the file and displays an error message indicating the specific data validation errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid administrator credentials for ZENIT Backoffice.\n2. The RedList_Mm_yyyy.xlsx file is available with invalid data entries.\n3. The ZENIT Backoffice system is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid administrator credentials; RedList_Mm_yyyy.xlsx with invalid data (e.g., text in numeric fields, invalid flag values).",
      "Expected Result": "System rejects the import and displays a clear error message about the invalid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList_proj_RF011_ImportExcelFileWithDuplicateEntries_ZENIT_TEST_Desktop",
      "ID": "TC-100",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice system with valid administrator credentials.",
          "Expected Result": "User is successfully logged into the ZENIT Backoffice."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'RedList Import' section within the application.",
          "Expected Result": "The 'RedList Import' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Upload' button and select a 'RedList_Mm_yyyy.xlsx' file containing duplicate IdRice entries.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload action.",
          "Expected Result": "The system validates the file and displays a warning or error message indicating duplicate entries, and prevents import or requests user confirmation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid administrator credentials for ZENIT Backoffice.\n2. The RedList_Mm_yyyy.xlsx file is available with duplicate IdRice entries.\n3. The ZENIT Backoffice system is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid administrator credentials; RedList_Mm_yyyy.xlsx with duplicate IdRice entries.",
      "Expected Result": "System detects duplicate entries and displays an appropriate message, preventing import or requesting confirmation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "ImportRedList_proj_RF011_ImportLargeExcelFile_ZENIT_TEST_Desktop",
      "ID": "TC-101",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Backoffice system with valid administrator credentials.",
          "Expected Result": "User is successfully logged into the ZENIT Backoffice."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'RedList Import' section within the application.",
          "Expected Result": "The 'RedList Import' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Upload' button and select a large 'RedList_Mm_yyyy.xlsx' file (e.g., 10,000+ records).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the upload action.",
          "Expected Result": "The system processes the large file without errors and displays a success message upon completion."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all records from the large file are correctly imported and displayed in the RedList management section.",
          "Expected Result": "All records are present and correctly mapped, with no data loss."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Backoffice",
      "Preconditions": "1. User has valid administrator credentials for ZENIT Backoffice.\n2. A large RedList_Mm_yyyy.xlsx file (10,000+ records) is available.\n3. The ZENIT Backoffice system is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid administrator credentials; Large RedList_Mm_yyyy.xlsx file.",
      "Expected Result": "System successfully imports all records from the large file without errors or data loss.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RF011 - Import RedList"
    },
    {
      "Title": "LoginLogout-proj_001_Login_ValidCredentials_TEST_Desktop",
      "ID": "TC-102",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Back-Office login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid username and password.",
          "Expected Result": "Username and password fields accept input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User account with valid credentials exists in the system.\n2. Back-Office application is accessible.\n3. User is logged out before starting the test.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password (e.g., user1/password123).",
      "Expected Result": "User successfully logs in and is redirected to the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only valid login scenario.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "LoginLogout-proj_002_Logout_SessionTermination_TEST_Desktop",
      "ID": "TC-103",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Back-Office application with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Logout' button in the application header.",
          "Expected Result": "User session is terminated and login page is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User is logged in to the Back-Office application.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user session.",
      "Expected Result": "User is logged out and redirected to the login page. Session is terminated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers logout and session termination only.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "LoginLogout-proj_003_Login_InvalidCredentials_TEST_Desktop",
      "ID": "TC-104",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Back-Office login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid username and/or password.",
          "Expected Result": "Username and password fields accept input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button.",
          "Expected Result": "Authentication fails and an error message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. Back-Office application is accessible.\n2. User is logged out before starting the test.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and/or password (e.g., user1/wrongpass).",
      "Expected Result": "Login attempt fails and user receives an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only invalid login scenario.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "DataMigration-proj_004_InitialLoad_ValidData_TEST_Backend",
      "ID": "TC-105",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid data set for initial load as per the 'ZENIT - Elenco Dati' Excel file.",
          "Expected Result": "Data set is ready for migration."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial data load process via the back-end interface or API.",
          "Expected Result": "System accepts the data load request."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data load process until completion.",
          "Expected Result": "Data is loaded without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all records are present and correctly migrated in the target database.",
          "Expected Result": "All data is accurately migrated and available in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux, Back-End System",
      "Preconditions": "1. Access to the back-end system and migration tools.\n2. Valid data set prepared as per business requirements.\n3. Target database is empty or in a clean state.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Load and Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid data set from 'ZENIT - Elenco Dati' Excel file.",
      "Expected Result": "All valid data is migrated successfully without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only valid data migration scenario.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "DataMigration-proj_005_InitialLoad_InvalidData_TEST_Backend",
      "ID": "TC-106",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an invalid data set (e.g., missing required fields, incorrect formats) for initial load.",
          "Expected Result": "Invalid data set is ready for migration."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial data load process via the back-end interface or API.",
          "Expected Result": "System accepts the data load request."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data load process.",
          "Expected Result": "System detects errors and rejects invalid records."
        },
        {
          "Step": 4,
          "Step Description": "Verify that invalid records are not present in the target database and appropriate error logs are generated.",
          "Expected Result": "Invalid data is not migrated; error logs are available for review."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Back-End System",
      "Preconditions": "1. Access to the back-end system and migration tools.\n2. Invalid data set prepared as per business requirements.\n3. Target database is empty or in a clean state.",
      "Execution Mode": "Manual",
      "Functionality": "Initial Load and Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid data set with missing or malformed fields.",
      "Expected Result": "Invalid data is rejected and not migrated; errors are logged.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only invalid data migration scenario.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "DataCollection-proj_006_CollectData_InternalSystem_TEST_Backend",
      "ID": "TC-107",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger data collection from an internal system via the back-end interface or API.",
          "Expected Result": "System initiates data collection process."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data collection process.",
          "Expected Result": "Data is collected without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the collected data is stored in the appropriate database tables.",
          "Expected Result": "Data from the internal system is present and accurate in the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Back-End System",
      "Preconditions": "1. Internal system is available and accessible.\n2. Back-end system is operational.\n3. Database is ready to receive new data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data from internal system.",
      "Expected Result": "Data is successfully collected from the internal system and stored correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only internal system data collection.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "DataCollection-proj_007_CollectData_ExternalSystem_TEST_Backend",
      "ID": "TC-108",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger data collection from an external system via the back-end interface or API.",
          "Expected Result": "System initiates data collection process."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data collection process.",
          "Expected Result": "Data is collected without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the collected data is stored in the appropriate database tables.",
          "Expected Result": "Data from the external system is present and accurate in the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Back-End System",
      "Preconditions": "1. External system is available and accessible.\n2. Back-end system is operational.\n3. Database is ready to receive new data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data from external system.",
      "Expected Result": "Data is successfully collected from the external system and stored correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only external system data collection.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "LogAudit-proj_008_TransactionLogging_SuccessfulOperation_TEST_Backend",
      "ID": "TC-109",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a successful transaction (e.g., data update) in the system.",
          "Expected Result": "Transaction is completed successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log via the back-end interface or log files.",
          "Expected Result": "Audit log is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the transaction is recorded in the audit log with correct details (timestamp, user, operation, status).",
          "Expected Result": "Transaction details are present and accurate in the audit log."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux, Back-End System",
      "Preconditions": "1. User has permissions to perform transactions and access audit logs.\n2. Audit logging is enabled in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample transaction (e.g., update record ID 123).",
      "Expected Result": "Successful transaction is logged with all required details for audit purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only successful transaction logging.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "LogAudit-proj_009_TransactionLogging_FailedOperation_TEST_Backend",
      "ID": "TC-110",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt a transaction that is expected to fail (e.g., update with invalid data).",
          "Expected Result": "Transaction fails with an error."
        },
        {
          "Step": 2,
          "Step Description": "Access the audit log via the back-end interface or log files.",
          "Expected Result": "Audit log is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the failed transaction is recorded in the audit log with correct details (timestamp, user, operation, status, error message).",
          "Expected Result": "Failed transaction details are present and accurate in the audit log."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Back-End System",
      "Preconditions": "1. User has permissions to perform transactions and access audit logs.\n2. Audit logging is enabled in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample failed transaction (e.g., update with missing required field).",
      "Expected Result": "Failed transaction is logged with all required details for audit purposes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only failed transaction logging.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "DashboardCreditManagement-proj_010_ViewCreditLines_TEST_Desktop",
      "ID": "TC-111",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Back-Office application with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section of the dashboard.",
          "Expected Result": "Credit Management section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all credit lines are listed with correct details (e.g., credit amount, status, owner).",
          "Expected Result": "Credit lines are displayed with accurate information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User account with valid credentials exists.\n2. Credit lines are configured in the system.\n3. User is logged in to the Back-Office application.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Credit Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample credit lines configured in the system.",
      "Expected Result": "All credit lines are visible and display correct information on the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only viewing of credit lines.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "MassiveImporter-proj_011_BulkImport_ValidExcel_TEST_Desktop",
      "ID": "TC-112",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Back-Office application with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload a valid Excel file containing PoS information as per the required format.",
          "Expected Result": "File is uploaded and validated successfully."
        },
        {
          "Step": 4,
          "Step Description": "Initiate the bulk import process.",
          "Expected Result": "System processes the file and imports data without errors."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all PoS records from the Excel file are present in the system.",
          "Expected Result": "All records are imported and available in the system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User account with valid credentials exists.\n2. Valid Excel file prepared as per business requirements.\n3. User is logged in to the Back-Office application.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with PoS data.",
      "Expected Result": "All valid PoS records are imported successfully from the Excel file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only valid bulk import scenario.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "MassiveImporter-proj_012_BulkImport_InvalidExcel_TEST_Desktop",
      "ID": "TC-113",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Back-Office application with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an invalid Excel file (e.g., missing required columns, incorrect format).",
          "Expected Result": "System validates the file and detects errors."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to initiate the bulk import process.",
          "Expected Result": "System rejects the import and displays error messages."
        },
        {
          "Step": 5,
          "Step Description": "Verify that no invalid records are imported into the system.",
          "Expected Result": "No records are imported; errors are logged and displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Back-Office Web Application",
      "Preconditions": "1. User account with valid credentials exists.\n2. Invalid Excel file prepared (e.g., missing columns).\n3. User is logged in to the Back-Office application.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid Excel file with missing or malformed data.",
      "Expected Result": "Invalid Excel file is rejected; no data is imported and errors are reported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only invalid bulk import scenario.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "BackendProcedure-proj_013_BackendOperation_DataStorage_TEST_Backend",
      "ID": "TC-114",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Send a data storage request to the back-end via API or interface with valid data.",
          "Expected Result": "System accepts the request and stores the data."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the data is present and accurate in the database.",
          "Expected Result": "Data is stored correctly in the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Back-End System",
      "Preconditions": "1. Back-end system is operational.\n2. Database is available and accessible.\n3. Valid data is prepared for storage.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid data for storage operation.",
      "Expected Result": "Data is stored successfully in the database.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only valid data storage operation.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "BackendProcedure-proj_014_BackendOperation_ProcessAutomation_TEST_Backend",
      "ID": "TC-115",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a process automation request via the back-end interface or API.",
          "Expected Result": "System initiates the automation process."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the process until completion.",
          "Expected Result": "Process completes without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the expected outcome of the automation is achieved (e.g., data updated, notification sent).",
          "Expected Result": "Automation process outcome is as expected."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux, Back-End System",
      "Preconditions": "1. Back-end system is operational.\n2. Automation process is configured and available.\n3. Required input data is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Input data for automation process.",
      "Expected Result": "Automation process completes successfully and achieves the expected outcome.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only process automation operation.",
      "_polarion": "USE CASES"
    },
    {
      "Title": "InitialLoadDataMigration_proj001_requirement_DataImportValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-116",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the legacy data source is available and accessible.",
          "Expected Result": "Legacy data source is reachable and data can be read."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the initial data load process using the migration tool.",
          "Expected Result": "Migration tool starts and begins importing data."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process for errors or interruptions.",
          "Expected Result": "Migration process completes without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all expected records are present in the new system.",
          "Expected Result": "All records from the legacy system are present in the new system."
        },
        {
          "Step": 5,
          "Step Description": "Validate the integrity and accuracy of migrated data by comparing sample records between legacy and new systems.",
          "Expected Result": "Sample records match exactly between legacy and new systems."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Legacy data source is populated and accessible.\n2. Migration tool is installed and configured.\n3. Target system is available and empty.\n4. User has necessary permissions to perform migration.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample legacy data set with known records.",
      "Expected Result": "All legacy data is successfully migrated to the new system with complete accuracy and no data loss.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers initial load and data integrity validation.",
      "_polarion": "Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoadDataMigration_proj001_requirement_ErrorHandlingOnCorruptData_DESKTOP_TEST_Desktop",
      "ID": "TC-117",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a legacy data source containing intentionally corrupt or malformed records.",
          "Expected Result": "Corrupt data is present in the legacy source."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data migration process.",
          "Expected Result": "Migration process starts and processes available data."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the migration process for error handling and logging.",
          "Expected Result": "Migration tool detects corrupt records and logs appropriate errors without halting the entire process."
        },
        {
          "Step": 4,
          "Step Description": "Verify that only valid records are migrated to the new system.",
          "Expected Result": "Only valid records are present in the new system; corrupt records are excluded."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Corrupt legacy data set is prepared and accessible.\n2. Migration tool is installed and configured.\n3. Target system is available and empty.\n4. User has necessary permissions to perform migration.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Legacy data set with a mix of valid and corrupt records.",
      "Expected Result": "Migration process completes, valid records are migrated, and corrupt records are logged and excluded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for corrupt data during migration.",
      "_polarion": "Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoadDataMigration_proj001_requirement_PerformanceOfBulkMigration_DESKTOP_TEST_Desktop",
      "ID": "TC-118",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a large legacy data set (e.g., 1 million records).",
          "Expected Result": "Large data set is available for migration."
        },
        {
          "Step": 2,
          "Step Description": "Start the initial data migration process and record the start time.",
          "Expected Result": "Migration process begins and time is tracked."
        },
        {
          "Step": 3,
          "Step Description": "Monitor system resources and migration progress.",
          "Expected Result": "System remains stable and migration progresses without critical failures."
        },
        {
          "Step": 4,
          "Step Description": "Record the end time when migration completes.",
          "Expected Result": "Migration completes successfully and end time is noted."
        },
        {
          "Step": 5,
          "Step Description": "Calculate total migration duration and compare against performance benchmarks (e.g., must complete within 2 hours).",
          "Expected Result": "Migration completes within the defined performance threshold."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Large legacy data set is prepared and accessible.\n2. Migration tool is installed and configured.\n3. Target system is available and empty.\n4. User has necessary permissions to perform migration.\n5. Performance benchmarks are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large legacy data set (e.g., 1 million records).",
      "Expected Result": "Bulk data migration completes within the defined performance threshold without system instability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers performance of initial load and migration.",
      "_polarion": "Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoadDataMigration_proj001_requirement_RollbackOnFailure_DESKTOP_TEST_Desktop",
      "ID": "TC-119",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a legacy data set and configure the migration tool to simulate a failure during migration (e.g., network interruption, disk full).",
          "Expected Result": "Migration tool is set to simulate a failure scenario."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data migration process.",
          "Expected Result": "Migration process starts and proceeds until the simulated failure occurs."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the failure.",
          "Expected Result": "Migration process halts and triggers rollback procedures."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the target system remains unchanged or is restored to its pre-migration state.",
          "Expected Result": "No partial or inconsistent data is present in the target system after rollback."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Legacy data set is prepared and accessible.\n2. Migration tool is installed and configured to simulate failure.\n3. Target system is available and empty.\n4. User has necessary permissions to perform migration.",
      "Execution Mode": "Manual",
      "Functionality": "Data Migration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Legacy data set; migration tool configured for failure simulation.",
      "Expected Result": "On migration failure, the system performs a rollback, ensuring no partial or inconsistent data remains in the target system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers rollback and data consistency on migration failure.",
      "_polarion": "Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_PoS_Personal_Data_Import_DESKTOP_TEST_Desktop",
      "ID": "TC-120",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an administrator user.",
          "Expected Result": "User is successfully logged in and has access to import functionalities."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Collection session.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to import PoS Personal Data.",
          "Expected Result": "PoS Personal Data import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel file containing PoS Personal Data.",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 5,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the PoS Personal Data successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid PoS Personal Data Excel file is prepared according to the required template.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid PoS Personal Data Excel file (sample: PoS_ID, Name, Address, Contact)",
      "Expected Result": "PoS Personal Data is imported successfully and available in the system for operational use.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the initial import of PoS Personal Data as a prerequisite for other imports.",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_Cerved_Data_Import_DESKTOP_TEST_Desktop",
      "ID": "TC-121",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure PoS Personal Data has been successfully imported.",
          "Expected Result": "PoS Personal Data is present in the system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Collection session.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to import Cerved Data.",
          "Expected Result": "Cerved Data import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid CSV file containing Cerved Data.",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 5,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the Cerved Data successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. PoS Personal Data has already been imported.\n4. Valid Cerved Data CSV file is prepared according to the required template.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Cerved Data CSV file (sample: Cerved_ID, PoS_ID, Rating, Score)",
      "Expected Result": "Cerved Data is imported successfully and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the import of Cerved Data after PoS Personal Data import.",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_Types_of_Contract_Import_MassiveImporter_DESKTOP_TEST_Desktop",
      "ID": "TC-122",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an administrator user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer session.",
          "Expected Result": "Massive Importer session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to import Types of Contract.",
          "Expected Result": "Types of Contract import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel file containing Types of Contract data.",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 5,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the Types of Contract data successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid Types of Contract Excel file is prepared according to the required template.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Types of Contract Excel file (sample: Contract_Type_ID, Description, Validity)",
      "Expected Result": "Types of Contract data is imported successfully and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the import of Types of Contract via Massive Importer.",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_RedList_Data_Import_MassiveImporter_DESKTOP_TEST_Desktop",
      "ID": "TC-123",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an administrator user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer session.",
          "Expected Result": "Massive Importer session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to import RedList Data.",
          "Expected Result": "RedList Data import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid CSV file containing RedList Data.",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 5,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the RedList Data successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid RedList Data CSV file is prepared according to the required template.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid RedList Data CSV file (sample: RedList_ID, PoS_ID, Reason, Date)",
      "Expected Result": "RedList Data is imported successfully and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the import of RedList Data via Massive Importer.",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_Borderò_Historical_Data_Import_DESKTOP_TEST_Desktop",
      "ID": "TC-124",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an administrator user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Collection session.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to import Borderò Data.",
          "Expected Result": "Borderò Data import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel file containing Borderò Data for the last 12 months.",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 5,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the Borderò Data successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid Borderò Data Excel file (covering last 12 months) is prepared according to the required template.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Borderò Data Excel file (sample: Borderò_ID, PoS_ID, Date, Amount) for last 12 months",
      "Expected Result": "Borderò Data for the last 12 months is imported successfully and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the import of historical Borderò Data.",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_Unpaids_Historical_Data_Import_DESKTOP_TEST_Desktop",
      "ID": "TC-125",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an administrator user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Collection session.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to import Unpaids Data.",
          "Expected Result": "Unpaids Data import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid CSV file containing Unpaids Data for the last 12 months.",
          "Expected Result": "System accepts the file and displays a preview of the data to be imported."
        },
        {
          "Step": 5,
          "Step Description": "Confirm and execute the import operation.",
          "Expected Result": "System processes the file and imports the Unpaids Data successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Valid Unpaids Data CSV file (covering last 12 months) is prepared according to the required template.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Unpaids Data CSV file (sample: Unpaid_ID, PoS_ID, Date, Amount) for last 12 months",
      "Expected Result": "Unpaids Data for the last 12 months is imported successfully and available in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the import of historical Unpaids Data.",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_Invalid_File_Format_Handling_DESKTOP_TEST_Desktop",
      "ID": "TC-126",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an administrator user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Collection or Massive Importer session.",
          "Expected Result": "Import session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload an unsupported file format (e.g., PDF) for any data import type.",
          "Expected Result": "System rejects the file and displays an appropriate error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. Invalid file (e.g., PDF) is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid file format (e.g., PDF)",
      "Expected Result": "System does not accept unsupported file formats and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only invalid file format handling for data import.",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "InitialLoad_XPS-ZENIT-001_Import_Without_PoS_Personal_Data_DESKTOP_TEST_Desktop",
      "ID": "TC-127",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an administrator user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Data Collection session.",
          "Expected Result": "Data Collection session is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to import Cerved Data without having imported PoS Personal Data.",
          "Expected Result": "System prevents the import and displays an error indicating PoS Personal Data must be imported first."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is installed and accessible.\n2. Administrator user credentials are available.\n3. PoS Personal Data has NOT been imported.\n4. Valid Cerved Data file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Data Import Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Cerved Data file (CSV)",
      "Expected Result": "System enforces the prerequisite of PoS Personal Data import before allowing other imports.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the enforcement of PoS Personal Data as a prerequisite.",
      "_polarion": "XPS-ZENIT-001 - Initial Load and Data Migration"
    },
    {
      "Title": "ExcelUpload-proj_001_TemporarySolution_DataCollection_TEST_Desktop",
      "ID": "TC-128",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Data Collection application as a user with permission to upload data.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data upload section of the application.",
          "Expected Result": "Data upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to upload data via Excel file.",
          "Expected Result": "File selection dialog appears, allowing the user to choose an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Choose a valid Excel file containing the required data and confirm the upload.",
          "Expected Result": "The system accepts the file and begins processing the data."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the upload process to complete and observe the confirmation message.",
          "Expected Result": "System displays a success message indicating that the data has been uploaded and integrated successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with data upload permissions exists.\n2. User is able to access the Data Collection application.\n3. A valid Excel file with required data is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Data Upload (Temporary Solution)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with required data fields as per ZENIT documentation.",
      "Expected Result": "The system allows data integration via Excel upload when direct integration is unavailable, ensuring process continuity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the temporary solution for data upload via Excel, not direct integration.",
      "_polarion": "Data Collection"
    },
    {
      "Title": "AcquisitionDate-proj_001_MandatoryField_DataCollection_TEST_Desktop",
      "ID": "TC-129",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Data Collection application as a user with permission to upload data.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data upload section of the application.",
          "Expected Result": "Data upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select and upload an Excel file that omits the acquisition date for one or more data entries.",
          "Expected Result": "System processes the file and validates the data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system's response to the missing acquisition date field.",
          "Expected Result": "System displays an error message indicating that the acquisition date is mandatory and rejects the upload."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with data upload permissions exists.\n2. User is able to access the Data Collection application.\n3. An Excel file missing the acquisition date field for at least one entry is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Validation (Acquisition Date)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing acquisition date for one or more records.",
      "Expected Result": "System enforces the acquisition date as a mandatory field and prevents upload of incomplete data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for missing mandatory acquisition date.",
      "_polarion": "Data Collection"
    },
    {
      "Title": "AcquisitionDate-proj_001_Traceability_DataCollection_TEST_Desktop",
      "ID": "TC-130",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Data Collection application as a user with permission to upload data.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data upload section of the application.",
          "Expected Result": "Data upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select and upload an Excel file where each data entry includes a valid acquisition date.",
          "Expected Result": "System processes the file and integrates the data."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the data management or reporting section and view the uploaded data.",
          "Expected Result": "Each data entry displays the correct acquisition date as provided in the Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with data upload permissions exists.\n2. User is able to access the Data Collection application.\n3. An Excel file with valid acquisition dates for all entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Traceability (Acquisition Date)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with acquisition date field populated for all records.",
      "Expected Result": "System records and displays the acquisition date for each data entry, ensuring traceability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers positive scenario for acquisition date traceability.",
      "_polarion": "Data Collection"
    },
    {
      "Title": "ExcelUpload-proj_001_InvalidFormat_DataCollection_TEST_Desktop",
      "ID": "TC-131",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Data Collection application as a user with permission to upload data.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data upload section of the application.",
          "Expected Result": "Data upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select and attempt to upload an Excel file with an invalid format (e.g., missing required columns, corrupted file).",
          "Expected Result": "System processes the file and detects the invalid format."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system's response to the invalid file format.",
          "Expected Result": "System displays an error message indicating the file format is invalid and rejects the upload."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with data upload permissions exists.\n2. User is able to access the Data Collection application.\n3. An Excel file with invalid format is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Upload Validation (File Format)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing columns or corrupted structure.",
      "Expected Result": "System rejects Excel files with invalid format and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for invalid Excel file format.",
      "_polarion": "Data Collection"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_InitialImportDataCompleteness_DESKTOP_TEST_Desktop",
      "ID": "TC-132",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure MDM contains at least one PoS record with all mandatory fields populated.",
          "Expected Result": "MDM has PoS records with all required fields."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the initial import process from MDM to ZENIT via ESB.",
          "Expected Result": "ZENIT starts the import process and retrieves PoS data from MDM."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "All fields listed in the requirement are displayed for the PoS in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. MDM is operational and accessible.\n2. ESB is configured and running.\n3. ZENIT is deployed and accessible.\n4. At least one PoS record exists in MDM with all required fields populated.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with all required fields (see requirement list).",
      "Expected Result": "ZENIT successfully imports all PoS master data fields from MDM and displays them in the dashboard for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers initial import and field completeness for one PoS.",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_RealTimeUpdateOnPoSModification_DESKTOP_TEST_Desktop",
      "ID": "TC-133",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a PoS record exists in both MDM and ZENIT.",
          "Expected Result": "PoS record is present in both systems."
        },
        {
          "Step": 2,
          "Step Description": "Update a field (e.g., Denomination) for the PoS in MDM.",
          "Expected Result": "PoS record in MDM is updated."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the near real-time integration to process the update.",
          "Expected Result": "Integration process completes."
        },
        {
          "Step": 4,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the updated PoS.",
          "Expected Result": "The updated field value is reflected in ZENIT."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. MDM and ZENIT are synchronized with at least one PoS record.\n2. ESB and integration services are running.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Existing PoS record in MDM and ZENIT; updated field value (e.g., new Denomination).",
      "Expected Result": "ZENIT reflects the updated PoS data from MDM in near real-time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers update propagation for a single field.",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_PrivacyCompliance_PhoneNumbers_DESKTOP_TEST_Desktop",
      "ID": "TC-134",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a PoS record in MDM with both PoS phone numbers and personal phone numbers (e.g., Holder Cell).",
          "Expected Result": "PoS record in MDM contains both types of phone numbers."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data acquisition from MDM to ZENIT.",
          "Expected Result": "ZENIT imports PoS data from MDM."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "Only PoS phone numbers are displayed; personal numbers (e.g., Holder Cell) are not shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. MDM and ZENIT are operational.\n2. ESB is running.\n3. PoS record in MDM contains both PoS and personal phone numbers.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with PoS phone numbers and personal phone numbers populated.",
      "Expected Result": "ZENIT displays only PoS phone numbers, ensuring personal numbers are excluded for privacy compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers privacy compliance for phone number fields.",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_FieldLevelValidation_MandatoryFields_DESKTOP_TEST_Desktop",
      "ID": "TC-135",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a PoS record in MDM with one or more mandatory fields missing (e.g., IdRice, Denomination).",
          "Expected Result": "PoS record in MDM is missing required fields."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data acquisition from MDM to ZENIT.",
          "Expected Result": "ZENIT attempts to import the PoS record."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "ZENIT either rejects the record or displays an error/placeholder for missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. MDM and ZENIT are operational.\n2. ESB is running.\n3. PoS record in MDM is missing one or more mandatory fields.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with missing mandatory fields (e.g., IdRice, Denomination).",
      "Expected Result": "ZENIT handles missing mandatory fields gracefully, either by rejecting the record or indicating missing data in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers validation of mandatory fields during data acquisition.",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_BusinessLineArrayDataAcquisition_DESKTOP_TEST_Desktop",
      "ID": "TC-136",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert a PoS record in MDM with multiple Business Line (Ldb) entries, each with all subfields populated.",
          "Expected Result": "PoS record in MDM contains multiple Ldb entries."
        },
        {
          "Step": 2,
          "Step Description": "Trigger data acquisition from MDM to ZENIT.",
          "Expected Result": "ZENIT imports PoS data including all Ldb array entries."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the imported PoS.",
          "Expected Result": "All Ldb entries and their subfields are displayed correctly in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. MDM and ZENIT are operational.\n2. ESB is running.\n3. PoS record in MDM contains multiple Ldb entries with all subfields populated.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in MDM with multiple Ldb entries and all subfields populated.",
      "Expected Result": "ZENIT displays all Business Line (Ldb) array entries and their subfields for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers array data acquisition for Business Line (Ldb).",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataAcquisition_XPS-ZENIT-010_ActivationDateCalculation_Channel1Change_DESKTOP_TEST_Desktop",
      "ID": "TC-137",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a PoS record exists in MDM and ZENIT with Channel 1 set to an initial value.",
          "Expected Result": "PoS record is present with Channel 1 set."
        },
        {
          "Step": 2,
          "Step Description": "Update Channel 1 value for the PoS in MDM.",
          "Expected Result": "Channel 1 value is updated in MDM."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the near real-time integration to process the update.",
          "Expected Result": "Integration process completes."
        },
        {
          "Step": 4,
          "Step Description": "Access the ZENIT Dashboard - Single PoS - PoS Master Data tab for the updated PoS.",
          "Expected Result": "Activation Date (Data attivazione Canale 1) is updated to the date/time of the Channel 1 change."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. MDM and ZENIT are synchronized with at least one PoS record.\n2. ESB and integration services are running.\n3. Channel 1 is set to an initial value.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Existing PoS record in MDM and ZENIT; new Channel 1 value.",
      "Expected Result": "Activation Date field in ZENIT is updated to reflect the date/time of the Channel 1 change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers calculated field update for Activation Date on Channel 1 change.",
      "_polarion": "XPS-ZENIT-010 - PoS - Data Acquisition"
    },
    {
      "Title": "PoSDataRetrieval_XPS-ZENIT-011_SinglePoSSelection_Retrieval_DESKTOP_TEST_Desktop",
      "ID": "TC-138",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section.",
          "Expected Result": "PoS management section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a Single PoS from the list.",
          "Expected Result": "Single PoS details screen is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the data fields for Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data.",
          "Expected Result": "The system retrieves and displays the most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data for the selected PoS in real time."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Desktop Application",
      "Preconditions": "1. User account with access to PoS management.\n2. At least one PoS available in the system.\n3. Source system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with retrievable data in the source system.",
      "Expected Result": "Upon selecting a Single PoS, the system retrieves and displays the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data in real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers real-time retrieval upon user selection of a Single PoS.",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "PoSDataRetrieval_XPS-ZENIT-011_RefreshButton_Retrieval_DESKTOP_TEST_Desktop",
      "ID": "TC-139",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section and select a Single PoS.",
          "Expected Result": "Single PoS details screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Press the 'Refresh' button on the Single PoS screen.",
          "Expected Result": "The system initiates a call to the source system to retrieve the most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the updated data fields for Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data.",
          "Expected Result": "The displayed data is updated to reflect the latest information from the source system."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Desktop Application",
      "Preconditions": "1. User account with access to PoS management.\n2. At least one PoS available in the system.\n3. Source system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with retrievable data in the source system.",
      "Expected Result": "Upon pressing the 'Refresh' button, the system retrieves and displays the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data in real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers real-time retrieval upon user-initiated refresh action.",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "PoSDataRetrieval_XPS-ZENIT-011_DailyArchival_Retrieval_BACKEND_TEST_Backend",
      "ID": "TC-140",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system is scheduled to perform daily data storage for archival purposes.",
          "Expected Result": "Archival process is scheduled and ready to execute."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled archival process to trigger (or manually trigger if possible).",
          "Expected Result": "Archival process starts at the scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the system logs or archival storage for data retrieval activity.",
          "Expected Result": "System makes a call to the source system to retrieve the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data for all PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify the archived data for completeness and freshness.",
          "Expected Result": "Archived data contains the most up-to-date Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data as of the archival time."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Backend",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Server, Backend Service",
      "Preconditions": "1. System configured for daily archival.\n2. Source system is online and accessible.\n3. Sufficient storage space for archival data.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "System configuration for archival; PoS data available in the source system.",
      "Expected Result": "During daily archival, the system retrieves and stores the latest Credit Lines Data, NOIAG Credits, and NOIAG Hopper Data for all PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers automated retrieval during scheduled archival process.",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "PoSDataRetrieval_XPS-ZENIT-011_InvalidSourceSystem_ErrorHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-141",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section and select a Single PoS.",
          "Expected Result": "Single PoS details screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Simulate source system unavailability (e.g., disconnect network or stop source system service).",
          "Expected Result": "Source system is unreachable."
        },
        {
          "Step": 4,
          "Step Description": "Press the 'Refresh' button on the Single PoS screen.",
          "Expected Result": "System attempts to retrieve data from the source system."
        },
        {
          "Step": 5,
          "Step Description": "Observe the application's response to the failed data retrieval attempt.",
          "Expected Result": "System displays an appropriate error message indicating data retrieval failure and does not update the data fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Desktop Application",
      "Preconditions": "1. User account with access to PoS management.\n2. At least one PoS available in the system.\n3. Ability to simulate source system unavailability.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with retrievable data; method to simulate source system failure.",
      "Expected Result": "If the source system is unavailable, the application displays an error message and does not update PoS data fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for source system unavailability.",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "PoSDataRetrieval_XPS-ZENIT-011_PartialDataReturned_Validation_DESKTOP_TEST_Desktop",
      "ID": "TC-142",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS management section and select a Single PoS.",
          "Expected Result": "Single PoS details screen is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Configure the source system to return only partial data (e.g., missing NOIAG Hopper Data).",
          "Expected Result": "Source system is set to return incomplete data."
        },
        {
          "Step": 4,
          "Step Description": "Press the 'Refresh' button on the Single PoS screen.",
          "Expected Result": "System retrieves data from the source system."
        },
        {
          "Step": 5,
          "Step Description": "Observe how the application displays the partially returned data.",
          "Expected Result": "System displays available data fields and indicates missing data appropriately (e.g., with a placeholder or error message for missing fields)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Desktop Application",
      "Preconditions": "1. User account with access to PoS management.\n2. At least one PoS available in the system.\n3. Ability to configure source system to return partial data.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with retrievable data; source system configured for partial data response.",
      "Expected Result": "If the source system returns partial data, the application displays available fields and clearly indicates any missing data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers handling of partial data responses from the source system.",
      "_polarion": "XPS-ZENIT-011 - PoS Data Retrieval from Source System"
    },
    {
      "Title": "GEOCLines-XPS020_DataAcquisition_CreditLineFieldsValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-143",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present for each Credit Line/Product: Zona Code, RICE Number, Credit Lines/Products, Fido Base Week, Estensione Week, Fido Totale Week, Consumato Week, % consumato Week, Residuo Week.",
          "Expected Result": "All required fields are present and visible for each Credit Line/Product."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to the GEO system.\n2. Test user account with access to the Credit Management tab is available.\n3. At least one PoS with active credit lines/products exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS with known credit line data in GEO system.",
      "Expected Result": "All required credit line fields are displayed for each PoS in the Credit Management tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers presence and visibility of all required fields for credit lines/products.",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "GEOCLines-XPS020_DataAcquisition_RealTimeUpdateValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-144",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Update a credit line value (e.g., Consumato Week) for the PoS in the GEO system backend.",
          "Expected Result": "Credit line value is updated in the GEO system."
        },
        {
          "Step": 3,
          "Step Description": "Refresh the Credit Management tab in ZENIT within the expected near real-time window (e.g., within 1 minute).",
          "Expected Result": "The updated credit line value is reflected in the ZENIT dashboard within the expected timeframe."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT and GEO systems are operational and integrated.\n2. Test user account with access to the dashboard.\n3. Access to GEO system backend to modify credit line data.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with modifiable credit line data in GEO system.",
      "Expected Result": "ZENIT dashboard reflects GEO credit line changes within the near real-time update window.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers real-time data acquisition and update propagation.",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "GEOCLines-XPS020_DataAcquisition_CalculatedFieldsValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-145",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with known credit line values.",
          "Expected Result": "Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Note the values for 'Fido Totale Week' and 'Consumato Week' for a credit line/product.",
          "Expected Result": "Values for 'Fido Totale Week' and 'Consumato Week' are visible and recorded."
        },
        {
          "Step": 3,
          "Step Description": "Verify that '% consumato Week' is correctly calculated as (Consumato Week / Fido Totale Week) * 100.",
          "Expected Result": "'% consumato Week' matches the expected calculated value."
        },
        {
          "Step": 4,
          "Step Description": "Verify that 'Residuo Week' is correctly calculated as (Fido Totale Week - Consumato Week).",
          "Expected Result": "'Residuo Week' matches the expected calculated value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to GEO.\n2. Test user account with dashboard access.\n3. PoS with known, non-zero values for Fido Totale Week and Consumato Week.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Fido Totale Week = 1000, Consumato Week = 250 (expected % consumato = 25%, Residuo = 750).",
      "Expected Result": "Calculated fields '% consumato Week' and 'Residuo Week' are accurate for each credit line/product.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers calculation logic for derived fields.",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "GEOCLines-XPS020_DataAcquisition_BoundaryValuesValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-146",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with boundary credit line values.",
          "Expected Result": "Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify the display and calculation when Consumato Week = 0 (unused credit).",
          "Expected Result": "'% consumato Week' is 0%, 'Residuo Week' equals 'Fido Totale Week'."
        },
        {
          "Step": 3,
          "Step Description": "Verify the display and calculation when Consumato Week = Fido Totale Week (fully used credit).",
          "Expected Result": "'% consumato Week' is 100%, 'Residuo Week' is 0."
        },
        {
          "Step": 4,
          "Step Description": "Verify the display and calculation when Fido Totale Week = 0 (no credit available).",
          "Expected Result": "'% consumato Week' is displayed as 0% or handled gracefully (no division by zero error), 'Residuo Week' is 0."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT and GEO systems operational.\n2. Test user account with dashboard access.\n3. PoS with test data for boundary conditions (zero and max values).",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Consumato Week = 0, Consumato Week = Fido Totale Week, Fido Totale Week = 0.",
      "Expected Result": "System correctly handles and displays boundary values for credit line calculations.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers boundary and edge cases for credit line calculations.",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "GEOCLines-XPS020_DataAcquisition_InvalidDataHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-147",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Inject invalid or corrupted credit line data for a PoS in the GEO system (e.g., negative values, non-numeric strings in numeric fields).",
          "Expected Result": "Invalid data is present in the GEO system for the test PoS."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for the affected PoS.",
          "Expected Result": "Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe how the system displays or handles the invalid data fields.",
          "Expected Result": "System displays an error, warning, or handles invalid data gracefully without crashing or displaying misleading information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT and GEO systems operational.\n2. Test user account with dashboard access.\n3. Ability to inject or simulate invalid data in GEO system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with negative or non-numeric credit line values in GEO system.",
      "Expected Result": "System handles invalid or corrupted credit line data gracefully and securely.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for invalid or corrupted data.",
      "_polarion": "XPS-ZENIT-020 - GEO Credit Lines - Data Acquisition"
    },
    {
      "Title": "CreditLines_XPS-ZENIT-030_DataAcquisition_FieldPresence_DESKTOP_TEST_Desktop",
      "ID": "TC-148",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present for each Credit Line/Product: Zona Code, RICE Number, Alias, Credit Lines/Products, Basic credit line, Credit line extension, Total credit line, Consumed credit line, Percentage of credit consumed, Residual credit line.",
          "Expected Result": "All specified fields are present and visible for each Credit Line/Product."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with access to the dashboard.\n2. At least one PoS with associated credit line/product data in SIMP or DWH.\n3. ZENIT system is connected to SIMP or DWH and data acquisition is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with credit line data in SIMP/DWH.",
      "Expected Result": "All required fields for each Credit Line/Product are present and visible in the dashboard for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only field presence, not data correctness or calculation.",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "CreditLines_XPS-ZENIT-030_DataAcquisition_FieldAccuracy_DESKTOP_TEST_Desktop",
      "ID": "TC-149",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Compare the displayed values for Zona Code, RICE Number, Alias, and Credit Lines/Products with the source data in SIMP or DWH for the selected PoS.",
          "Expected Result": "All displayed values match exactly with the source data in SIMP or DWH."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with access to the dashboard.\n2. At least one PoS with known credit line/product data in SIMP or DWH.\n3. ZENIT system is connected to SIMP or DWH and data acquisition is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known credit line data in SIMP/DWH.",
      "Expected Result": "All displayed field values for the selected PoS match the source data in SIMP or DWH.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data accuracy, not calculation logic.",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "CreditLines_XPS-ZENIT-030_DataAcquisition_CalculationValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-150",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS with known credit line values.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "For each Credit Line/Product, verify that 'Fido Totale Day' equals 'Fido Base Day' + 'Estensione Day' and 'Fido Totale Week' equals 'Fido Base Week' + 'Estensione Week'.",
          "Expected Result": "'Fido Totale Day' and 'Fido Totale Week' are correctly calculated and displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that '% consumato Day' equals ('Consumato Day' / 'Fido Totale Day') * 100 and '% consumato Week' equals ('Consumato Week' / 'Fido Totale Week') * 100.",
          "Expected Result": "Percentage of credit consumed is correctly calculated and displayed."
        },
        {
          "Step": 5,
          "Step Description": "Verify that 'Residuo Day' equals 'Fido Totale Day' - 'Consumato Day' and 'Residuo Week' equals 'Fido Totale Week' - 'Consumato Week'.",
          "Expected Result": "Residual credit line is correctly calculated and displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with access to the dashboard.\n2. At least one PoS with known credit line values in SIMP or DWH.\n3. ZENIT system is connected to SIMP or DWH and data acquisition is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known credit line values in SIMP/DWH.",
      "Expected Result": "All calculated fields (total, percentage consumed, residual) are accurate and match the expected calculations for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers calculation logic for credit line fields.",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "CreditLines_XPS-ZENIT-030_DataAcquisition_RealTimeUpdate_DESKTOP_TEST_Desktop",
      "ID": "TC-151",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Update a credit line/product value in the SIMP system (e.g., increase 'Fido Base Day').",
          "Expected Result": "The update is successfully saved in SIMP."
        },
        {
          "Step": 4,
          "Step Description": "Monitor the ZENIT dashboard for the selected PoS and verify that the updated value is reflected within the near real-time update window (as defined by system requirements).",
          "Expected Result": "The updated value appears in the ZENIT dashboard within the expected near real-time interval."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with access to the dashboard.\n2. At least one PoS with credit line data in SIMP.\n3. Ability to update credit line data in SIMP.\n4. ZENIT system is connected to SIMP and data acquisition is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; PoS with updatable credit line data in SIMP.",
      "Expected Result": "Updates in SIMP are reflected in ZENIT dashboard within the near real-time update window.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers real-time update propagation only.",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "CreditLines_XPS-ZENIT-030_DataAcquisition_ErrorHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-152",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a disconnection or failure between ZENIT and SIMP/DWH (e.g., by disabling network connectivity or stopping the SIMP/DWH service).",
          "Expected Result": "ZENIT loses connection to the data source."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS.",
          "Expected Result": "The dashboard attempts to retrieve credit line data."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system behavior and any error messages displayed.",
          "Expected Result": "A clear and user-friendly error message is displayed indicating data is temporarily unavailable, and no outdated or incorrect data is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account with access to the dashboard.\n2. At least one PoS with credit line data in SIMP/DWH.\n3. Ability to simulate data source unavailability.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; PoS with credit line data in SIMP/DWH.",
      "Expected Result": "System displays a clear error message when data source is unavailable and does not show outdated or incorrect data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for data source unavailability.",
      "_polarion": "XPS-ZENIT-030 - SIMP Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS040_CreditLineDataRetrieval_DashboardView_TEST_Desktop",
      "ID": "TC-153",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for a specific PoS.",
          "Expected Result": "The Credit Management tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present and populated: Zona Code, RICE Number, Credit Lines/Products, Fido Base Day/Week, Estensione Day/Week, Fido Totale Day/Week, Consumato Day/Week, % consumato Day/Week, Residuo Day/Week.",
          "Expected Result": "All required fields are present and display non-empty values for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH data sources.\n2. Test user credentials with appropriate access rights are available.\n3. At least one PoS with credit line data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Acquisition and Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid PoS with known credit line data (e.g., Zona Code: ZN123, RICE: 456789).",
      "Expected Result": "All required credit line/product fields are displayed with correct, non-empty values for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data presence and field completeness for a single PoS.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS040_CreditLineCalculation_Validation_TEST_Desktop",
      "ID": "TC-154",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with known credit line data.",
          "Expected Result": "Credit Management tab is displayed with all credit line fields populated."
        },
        {
          "Step": 2,
          "Step Description": "Manually calculate 'Fido Totale Day' as the sum of 'Fido Base Day' and 'Estensione Day'.",
          "Expected Result": "Manual calculation matches the value displayed for 'Fido Totale Day'."
        },
        {
          "Step": 3,
          "Step Description": "Manually calculate '% consumato Day' as (Consumato Day / Fido Totale Day) * 100.",
          "Expected Result": "Manual calculation matches the value displayed for '% consumato Day'."
        },
        {
          "Step": 4,
          "Step Description": "Manually calculate 'Residuo Day' as Fido Totale Day - Consumato Day.",
          "Expected Result": "Manual calculation matches the value displayed for 'Residuo Day'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH data sources.\n2. Test user credentials with appropriate access rights are available.\n3. PoS with known and predictable credit line data is available for calculation verification.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Calculation Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Fido Base Day: 1000, Estensione Day: 500, Consumato Day: 600 (Expected: Fido Totale Day=1500, % consumato Day=40%, Residuo Day=900).",
      "Expected Result": "Displayed calculated fields (Fido Totale Day, % consumato Day, Residuo Day) match manual calculations based on source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers calculation logic for Day-based credit lines. Similar logic applies for Week-based fields.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS040_CreditLineDataUpdate_RealTimeSync_TEST_Desktop",
      "ID": "TC-155",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS.",
          "Expected Result": "Credit Management tab is displayed with current credit line data."
        },
        {
          "Step": 2,
          "Step Description": "Update the credit line data for the PoS in the MST (or SIMP/DWH) source system (e.g., increase Fido Base Day by 200).",
          "Expected Result": "Credit line data is updated in the source system."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the near real-time update interval (as defined by system configuration).",
          "Expected Result": "Sufficient time has passed for the update to propagate."
        },
        {
          "Step": 4,
          "Step Description": "Refresh the ZENIT Dashboard for the same PoS and verify that the updated credit line data is displayed.",
          "Expected Result": "ZENIT Dashboard reflects the updated credit line data from the source system within the expected time frame."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH data sources.\n2. Test user credentials with appropriate access rights are available.\n3. Access to update credit line data in the source system (MST/SIMP/DWH).\n4. Known PoS with modifiable credit line data.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Synchronization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "PoS with initial Fido Base Day: 1000, updated to 1200 in the source system.",
      "Expected Result": "ZENIT Dashboard displays the updated credit line data within the near real-time update window.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers real-time data synchronization for a single PoS.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS040_CreditLineData_MissingOrCorrupt_TEST_Desktop",
      "ID": "TC-156",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with missing or corrupt credit line data in the source system.",
          "Expected Result": "Credit Management tab is displayed for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify how the system displays fields where data is missing or corrupt (e.g., null, non-numeric, or out-of-range values).",
          "Expected Result": "System displays appropriate error messages, placeholders, or default values for missing/corrupt data without crashing or displaying misleading information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH data sources.\n2. Test user credentials with appropriate access rights are available.\n3. PoS with intentionally missing or corrupt credit line data in the source system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing Fido Base Day or non-numeric Consumato Day in the source system.",
      "Expected Result": "System handles missing or corrupt data gracefully, displaying appropriate messages or placeholders without system failure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing or corrupt credit line data.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "DataAcquisition-XPS040_CreditLineData_BoundaryValues_TEST_Desktop",
      "ID": "TC-157",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard and navigate to the 'Dashboard - Single PoS - Credit Management' tab for a PoS with boundary value credit line data (e.g., zero, maximum allowed values).",
          "Expected Result": "Credit Management tab is displayed for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that fields such as Fido Base Day, Estensione Day, Consumato Day, etc., correctly display and calculate values at their minimum (0) and maximum (system-defined limit).",
          "Expected Result": "System displays and calculates boundary values correctly without errors or overflows."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT system is operational and connected to MST/SIMP/DWH data sources.\n2. Test user credentials with appropriate access rights are available.\n3. PoS with credit line data set to boundary values in the source system.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Data Boundary Value Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Fido Base Day: 0, Estensione Day: 0, Consumato Day: 0; PoS with maximum allowed values (e.g., Fido Base Day: 999999).",
      "Expected Result": "System correctly displays and calculates all fields for boundary values without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers minimum and maximum value handling for credit line data.",
      "_polarion": "XPS-ZENIT-040 - MST Credit Lines - Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT-050_DailyDataAcquisition_AutomatedIntegrationUpdate_DESKTOP_TEST_Desktop",
      "ID": "TC-158",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the COMMA6 system has up-to-date AWP data for all PoS as of the previous evening.",
          "Expected Result": "COMMA6 contains the latest AWP data for all PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily integration process between ZENIT and COMMA6.",
          "Expected Result": "The integration process initiates automatically at the scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT receives and stores the daily snapshot of AWP data for each PoS from COMMA6.",
          "Expected Result": "ZENIT stores the daily snapshot data for each PoS as received from COMMA6."
        },
        {
          "Step": 4,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for a selected PoS.",
          "Expected Result": "Dashboard displays the latest daily data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Application",
      "Preconditions": "1. COMMA6 system is operational and contains valid AWP data for all PoS as of the previous evening.\n2. ZENIT system is operational and configured to integrate with COMMA6.\n3. Scheduled integration job is enabled and set to run daily.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data in COMMA6 with all required fields populated.",
      "Expected Result": "ZENIT automatically updates and stores daily AWP data for each PoS from COMMA6, and the data is viewable in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers automated daily integration and data storage.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT-050_DailyDataAcquisition_FieldValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-159",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or wait for the daily integration process between ZENIT and COMMA6 to complete.",
          "Expected Result": "Integration process completes successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the ZENIT Dashboard - Single PoS -- ADI Data Tab for a specific PoS.",
          "Expected Result": "ADI Data Tab is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present and populated: IdRice, ZonaRice, Nr AWP Management IAG, Nr AWP Management NO IAG, Nr AWP Third-party IAG, Nr AWP Third-partyNO IAG, Nr AWP Average, Type of Collection AWP under Management, Coin In Average AWP - YTD.",
          "Expected Result": "All required fields are present and populated with correct values as per COMMA6 data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Application",
      "Preconditions": "1. Daily integration process has run successfully.\n2. COMMA6 contains valid data for all required fields for at least one PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in COMMA6 with all required fields populated with known values.",
      "Expected Result": "All required AWP data fields are correctly displayed in the ZENIT Dashboard for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers field-level data validation post-integration.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT-050_DailyDataAcquisition_MissingDataHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-160",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In COMMA6, remove or leave blank one or more required fields (e.g., Nr AWP Management IAG) for a specific PoS.",
          "Expected Result": "COMMA6 contains incomplete data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily integration process between ZENIT and COMMA6 to complete.",
          "Expected Result": "Integration process completes, handling missing data as per system design."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS -- ADI Data Tab for the affected PoS.",
          "Expected Result": "Dashboard displays the PoS data, with missing fields handled according to requirements (e.g., shown as blank, zero, or with an error indicator)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Application",
      "Preconditions": "1. COMMA6 contains at least one PoS record with missing required field(s).\n2. ZENIT system is operational and scheduled integration is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in COMMA6 with one or more required fields intentionally left blank.",
      "Expected Result": "ZENIT handles missing data gracefully and displays appropriate indicators in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing data fields.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT-050_DailyDataAcquisition_DataConsistency_DESKTOP_TEST_Desktop",
      "ID": "TC-161",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Update AWP data for a specific PoS in COMMA6 (e.g., change Nr AWP Management IAG from 5 to 7).",
          "Expected Result": "COMMA6 reflects the updated data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the next daily integration process to complete.",
          "Expected Result": "Integration process completes and updates ZENIT with new data."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for the updated PoS.",
          "Expected Result": "Dashboard displays the updated value (e.g., Nr AWP Management IAG is now 7)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Application",
      "Preconditions": "1. COMMA6 contains at least one PoS record with known initial values.\n2. ZENIT system is operational and scheduled integration is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record in COMMA6 with initial and updated values for at least one field.",
      "Expected Result": "ZENIT Dashboard reflects the latest data from COMMA6 after daily integration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data consistency between COMMA6 and ZENIT after updates.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "AWP-ZENIT-050_DailyDataAcquisition_IntegrationFailureHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-162",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a failure in the integration process (e.g., disconnect COMMA6 or introduce a network error) during the scheduled daily update.",
          "Expected Result": "Integration process fails to complete successfully."
        },
        {
          "Step": 2,
          "Step Description": "Check ZENIT system logs or error notifications for appropriate error messages or alerts.",
          "Expected Result": "ZENIT logs the integration failure and notifies relevant stakeholders as per system design."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard - Single PoS for any PoS.",
          "Expected Result": "Dashboard displays the last successfully acquired data, with an indicator or message about the failed update."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, ZENIT Application",
      "Preconditions": "1. COMMA6 and ZENIT systems are operational.\n2. Mechanism to simulate integration failure is available (e.g., network control, service stop).",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A (integration failure scenario).",
      "Expected Result": "ZENIT handles integration failures gracefully, logs errors, and displays appropriate notifications without data corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for integration failures.",
      "_polarion": "XPS-ZENIT-050 - AWP - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_DailyVLTDataIntegration_AutomatedUpdate_TEST_Backend",
      "ID": "TC-163",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the integration between ZENIT and NEXT VLT is configured and operational.",
          "Expected Result": "Integration is active and ready for data exchange."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data acquisition process to run.",
          "Expected Result": "The automated process initiates without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT receives the following data for each PoS: IdRice, ZonaRice, Nr VLT, Nr VLT Average (YTD).",
          "Expected Result": "All required data fields are received for each PoS."
        },
        {
          "Step": 4,
          "Step Description": "Check that the data snapshot corresponds to the previous evening's data.",
          "Expected Result": "Data reflects the correct reference date (previous evening)."
        },
        {
          "Step": 5,
          "Step Description": "Confirm that the data is stored in ZENIT's daily data storage.",
          "Expected Result": "Data is successfully stored and available for retrieval."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux Backend",
      "Preconditions": "1. ZENIT and NEXT VLT systems are operational and network connectivity is established.\n2. Scheduled daily integration job is configured.\n3. Test PoS data exists in NEXT VLT for the previous day.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS records with known IdRice, ZonaRice, Nr VLT, and Nr VLT Average values for the previous day in NEXT VLT.",
      "Expected Result": "ZENIT automatically acquires and stores the complete daily VLT data snapshot for each PoS from NEXT VLT, reflecting the previous evening's data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_DashboardDataDisplay_SinglePoS_TEST_Desktop",
      "ID": "TC-164",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to PoS data.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section.",
          "Expected Result": "Single PoS dashboard view is loaded."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS for which data was acquired in the last daily update.",
          "Expected Result": "PoS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fields IdRice, ZonaRice, Nr VLT, and Nr VLT Average (YTD) are displayed and populated with the latest data.",
          "Expected Result": "All required fields are visible and show correct, up-to-date values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Web",
      "Preconditions": "1. Daily data acquisition process has completed successfully for at least one PoS.\n2. User account with dashboard access is available.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with known data from the last acquisition.",
      "Expected Result": "The dashboard displays the latest daily VLT data for the selected PoS, including all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_DashboardADIDataTabDisplay_SinglePoS_TEST_Desktop",
      "ID": "TC-165",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard as a user with access to PoS data.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section and select a PoS.",
          "Expected Result": "Single PoS dashboard view is loaded for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Switch to the 'ADI Data' tab within the Single PoS dashboard.",
          "Expected Result": "ADI Data tab is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that IdRice, ZonaRice, Nr VLT, and Nr VLT Average (YTD) are displayed and reflect the latest daily snapshot.",
          "Expected Result": "All required fields are visible and show correct, up-to-date values from the last daily acquisition."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Web",
      "Preconditions": "1. Daily data acquisition process has completed successfully for at least one PoS.\n2. User account with dashboard access is available.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with known data from the last acquisition.",
      "Expected Result": "The ADI Data tab displays the latest daily VLT data for the selected PoS, including all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_DailyDataAcquisition_FailureHandling_TEST_Backend",
      "ID": "TC-166",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a failure in the integration process (e.g., disconnect NEXT VLT or corrupt data payload).",
          "Expected Result": "Integration process fails to acquire data."
        },
        {
          "Step": 2,
          "Step Description": "Monitor ZENIT for error logging or alert generation related to the failed acquisition.",
          "Expected Result": "ZENIT logs the error and/or generates an alert as per system design."
        },
        {
          "Step": 3,
          "Step Description": "Verify that no incomplete or corrupted data is stored in ZENIT for the affected day.",
          "Expected Result": "ZENIT does not store partial or invalid data for the failed acquisition."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux Backend",
      "Preconditions": "1. ZENIT and NEXT VLT systems are operational.\n2. Mechanism to simulate integration failure is available.\n3. Monitoring/logging tools are accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS records; mechanism to simulate integration failure.",
      "Expected Result": "ZENIT detects and logs acquisition failures, does not store incomplete data, and generates alerts as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-060_DailyDataAcquisition_BoundaryTest_MissingPoSData_TEST_Backend",
      "ID": "TC-167",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that at least one PoS in NEXT VLT has missing or null values for one or more required fields (IdRice, ZonaRice, Nr VLT, Nr VLT Average).",
          "Expected Result": "Test PoS with incomplete data is present in NEXT VLT."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the daily data acquisition process.",
          "Expected Result": "Process runs and attempts to acquire data."
        },
        {
          "Step": 3,
          "Step Description": "Verify how ZENIT handles PoS records with missing or null data fields.",
          "Expected Result": "ZENIT either skips, flags, or logs the incomplete records as per system requirements, and does not store invalid data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux Backend",
      "Preconditions": "1. ZENIT and NEXT VLT systems are operational.\n2. At least one PoS in NEXT VLT has missing/null required data fields.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test PoS records with missing/null fields in NEXT VLT.",
      "Expected Result": "ZENIT handles missing or null PoS data gracefully, according to requirements, without storing invalid records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-060 - VLT - Daily Data Acquisition"
    },
    {
      "Title": "DailyDataAcquisition_XPS-ZENIT-070_DailyDataAcquisition_AutomatedUpdate_DESKTOP_TEST_Desktop",
      "ID": "TC-168",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the GESTORETE system contains up-to-date data for all PoS as of the previous evening.",
          "Expected Result": "GESTORETE system has valid and updated data for all PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily integration process between ZENIT and GESTORETE.",
          "Expected Result": "Integration process initiates automatically at the scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the integration process for completion and check for any errors or failures.",
          "Expected Result": "Integration process completes successfully without errors."
        },
        {
          "Step": 4,
          "Step Description": "Access the ZENIT Dashboard for a specific PoS.",
          "Expected Result": "Dashboard displays data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the data fields (ZonaRice, Nr AWP other dealer, NOIAG Credits, NOIAG Hopper, Keys AWP Drawer, Keys AWP Counter, Keys AWP Change Coins) are populated with the latest data from GESTORETE.",
          "Expected Result": "All required data fields are present and reflect the previous evening's snapshot."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop, ZENIT Web Application",
      "Preconditions": "1. GESTORETE system is operational and contains valid data for all PoS as of the previous evening.\n2. ZENIT system is operational and configured to connect to GESTORETE.\n3. Scheduled integration job is enabled and set to run daily.\n4. Tester has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data in GESTORETE for at least one ZonaRice, with all required fields populated.",
      "Expected Result": "ZENIT Dashboard displays, for each PoS, the previous evening's data as received from GESTORETE, updated daily without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "FieldValidation_XPS-ZENIT-070_DailyDataAcquisition_DataFieldValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-169",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard for a specific PoS after the daily integration has completed.",
          "Expected Result": "Dashboard is accessible and displays data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the 'ZonaRice' field displays the correct Zone and PoS identifier as per GESTORETE data.",
          "Expected Result": "'ZonaRice' matches the value in GESTORETE for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Nr AWP other dealer' field displays the correct number as per GESTORETE data.",
          "Expected Result": "'Nr AWP other dealer' matches the value in GESTORETE for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'NOIAG Credits' and 'NOIAG Hopper' fields display the correct values as per GESTORETE data.",
          "Expected Result": "'NOIAG Credits' and 'NOIAG Hopper' match the values in GESTORETE for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the 'Keys AWP Drawer', 'Keys AWP Counter', and 'Keys AWP Change Coins' fields display either 'GESTORE' or 'ESERCENTE' as per GESTORETE data.",
          "Expected Result": "Each key field displays the correct value ('GESTORE' or 'ESERCENTE') as per GESTORETE for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop, ZENIT Web Application",
      "Preconditions": "1. Daily integration between ZENIT and GESTORETE has completed successfully.\n2. Tester has access to ZENIT Dashboard.\n3. Known reference data for the selected PoS is available in GESTORETE.",
      "Execution Mode": "Manual",
      "Functionality": "Data Field Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known PoS data in GESTORETE for validation (e.g., ZonaRice: 'Z1-001', Nr AWP other dealer: 3, NOIAG Credits: 100, NOIAG Hopper: 50, Keys: 'GESTORE').",
      "Expected Result": "All data fields in ZENIT Dashboard for the selected PoS exactly match the corresponding values in GESTORETE.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "ErrorHandling_XPS-ZENIT-070_DailyDataAcquisition_MissingDataHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-170",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that for a specific PoS, one or more required data fields are missing or null in GESTORETE before the daily integration.",
          "Expected Result": "GESTORETE contains incomplete data for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the daily integration process between ZENIT and GESTORETE.",
          "Expected Result": "Integration process initiates as scheduled."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard for the affected PoS after integration completes.",
          "Expected Result": "Dashboard is accessible for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the ZENIT Dashboard displays missing or null data fields (e.g., empty, 'N/A', or error message).",
          "Expected Result": "Missing data fields are clearly indicated (e.g., shown as empty, 'N/A', or with a user-friendly message), and no system error occurs."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop, ZENIT Web Application",
      "Preconditions": "1. GESTORETE system contains at least one PoS with missing or null data fields.\n2. ZENIT system is operational and configured for daily integration.\n3. Tester has access to ZENIT Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS in GESTORETE with one or more fields intentionally left null or empty.",
      "Expected Result": "ZENIT Dashboard handles missing data gracefully, displaying a clear indication for missing fields without causing errors or crashes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "NegativeScenario_XPS-ZENIT-070_DailyDataAcquisition_IntegrationFailure_DESKTOP_TEST_Desktop",
      "ID": "TC-171",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a failure in the connection between ZENIT and GESTORETE during the scheduled daily integration (e.g., by disabling network connectivity or GESTORETE service).",
          "Expected Result": "Integration process fails to retrieve data from GESTORETE."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the ZENIT system for error logs, notifications, or alerts related to the failed integration attempt.",
          "Expected Result": "ZENIT system logs the failure and generates an appropriate error notification or alert."
        },
        {
          "Step": 3,
          "Step Description": "Access the ZENIT Dashboard for any PoS after the failed integration attempt.",
          "Expected Result": "Dashboard displays the last successfully acquired data (from the previous day) or a clear message indicating that the data is not updated due to integration failure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop, ZENIT Web Application",
      "Preconditions": "1. ZENIT and GESTORETE systems are operational.\n2. Tester has access to system configuration to simulate integration failure.\n3. Previous successful integration has occurred at least once.",
      "Execution Mode": "Manual",
      "Functionality": "Integration Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (simulate integration failure by disabling connectivity or service).",
      "Expected Result": "ZENIT system detects integration failure, logs the error, notifies the user/admin, and displays the last available data or a clear message about the data being outdated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "UIValidation_XPS-ZENIT-070_DailyDataAcquisition_DashboardDisplay_DESKTOP_TEST_Desktop",
      "ID": "TC-172",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT Dashboard - Single PoS view for a specific PoS after daily data acquisition.",
          "Expected Result": "Dashboard - Single PoS view loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' tab within the Dashboard - Single PoS view.",
          "Expected Result": "'ADI Data' tab is accessible and displays relevant data fields."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all required data fields (ZonaRice, Nr AWP other dealer, NOIAG Credits, NOIAG Hopper, Keys AWP Drawer, Keys AWP Counter, Keys AWP Change Coins) are visible and properly labeled.",
          "Expected Result": "All required data fields are present, clearly labeled, and display the correct values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop, ZENIT Web Application",
      "Preconditions": "1. Daily integration between ZENIT and GESTORETE has completed successfully.\n2. Tester has access to ZENIT Dashboard.\n3. Known reference data for the selected PoS is available in GESTORETE.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard UI Validation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Known PoS data in GESTORETE for validation.",
      "Expected Result": "ZENIT Dashboard - Single PoS and 'ADI Data' tab display all required fields, with correct labels and values, ensuring data is easily readable and accessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-070 - GESTORETE - Daily Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_Retrieve_CGS_and_ActivityStatus_TEST_Desktop",
      "ID": "TC-173",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the Zenit system is connected to the Cerved system and the daily scheduled job is configured.",
          "Expected Result": "Zenit system is ready to retrieve data from Cerved."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the daily data acquisition flow manually or wait for the scheduled execution.",
          "Expected Result": "Data acquisition process starts."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each active PoS, the CGS (Cerved Group Score) and Activity Status are retrieved from Cerved.",
          "Expected Result": "CGS and Activity Status are retrieved for all active PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and integrated with Cerved.\n2. There are active PoS in the system (issued invoices in the last 12 months).\n3. Cerved system is available and contains up-to-date data for PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "List of active PoS with known CGS and Activity Status in Cerved.",
      "Expected Result": "Zenit system successfully retrieves CGS and Activity Status for each active PoS from Cerved.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_Log_And_Track_Cerved_Updates_TEST_Desktop",
      "ID": "TC-174",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the daily data acquisition flow for Cerved data.",
          "Expected Result": "Data acquisition process starts."
        },
        {
          "Step": 2,
          "Step Description": "Introduce a change in Cerved data for a specific PoS (e.g., update CGS or Activity Status).",
          "Expected Result": "Change is present in Cerved system."
        },
        {
          "Step": 3,
          "Step Description": "Run the data acquisition flow again.",
          "Expected Result": "Zenit system detects the change."
        },
        {
          "Step": 4,
          "Step Description": "Check the Zenit system logs and tracking records for the update.",
          "Expected Result": "The update is logged and tracked with details (PoS, field changed, old value, new value, timestamp)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and integrated with Cerved.\n2. Logging and tracking mechanisms are enabled in Zenit.\n3. At least one PoS exists with known data in Cerved.",
      "Execution Mode": "Manual",
      "Functionality": "Data Logging & Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with modifiable CGS and Activity Status in Cerved.",
      "Expected Result": "All updates to Cerved data are logged and tracked in Zenit with complete details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_Automatic_Daily_Flow_Scheduling_TEST_Desktop",
      "ID": "TC-175",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Verify the configuration of the daily scheduled job for Cerved data acquisition in Zenit.",
          "Expected Result": "Scheduled job is set to run once per day."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the scheduled time or simulate the scheduled trigger.",
          "Expected Result": "Scheduled job initiates automatically."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the execution and completion of the data acquisition flow.",
          "Expected Result": "Data acquisition completes without manual intervention."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and integrated with Cerved.\n2. Scheduled job for daily data acquisition is configured.\n3. System clock is synchronized.",
      "Execution Mode": "Manual",
      "Functionality": "Scheduling & Automation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses system configuration and time).",
      "Expected Result": "Cerved data acquisition flow runs automatically once per day as scheduled.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_New_PoS_Monitoring_On_Inspection_TEST_Desktop",
      "ID": "TC-176",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate an inspection phase for a new PoS in Zenit.",
          "Expected Result": "Inspection phase for new PoS is started."
        },
        {
          "Step": 2,
          "Step Description": "Request a Cerved report for the new PoS during the inspection phase.",
          "Expected Result": "Cerved report request is sent for the new PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the new PoS is now monitored in Cerved and data is available in Zenit.",
          "Expected Result": "New PoS appears in Zenit with Cerved data (CGS, Activity Status)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and integrated with Cerved.\n2. New PoS is available for inspection.\n3. Cerved system is available to process new report requests.",
      "Execution Mode": "Manual",
      "Functionality": "New PoS Monitoring",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "New PoS details for inspection and Cerved report request.",
      "Expected Result": "New PoS is monitored in Cerved and corresponding data is imported into Zenit during inspection phase.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_CGS_Risk_Cluster_Mapping_TEST_Desktop",
      "ID": "TC-177",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Dashboard - Single PoS in Zenit for a PoS with known CGS values.",
          "Expected Result": "Dashboard - Single PoS is displayed with PoS details."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Risk Data Tab for the selected PoS.",
          "Expected Result": "Risk Data Tab is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the CGS value is displayed and mapped to the correct Risk Cluster according to the provided matrix.",
          "Expected Result": "CGS value and corresponding Risk Cluster are correctly displayed as per the matrix."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and integrated with Cerved.\n2. PoS exists with a known CGS value.\n3. Risk Cluster matrix is configured in Zenit.",
      "Execution Mode": "Manual",
      "Functionality": "Risk Assessment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with CGS values covering all risk clusters (n.a.-24, 25-34, ..., 85-100).",
      "Expected Result": "CGS values are correctly mapped to Risk Clusters and displayed in the Dashboard - Single PoS Risk Data Tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_CGS_Risk_Cluster_Boundary_Values_TEST_Desktop",
      "ID": "TC-178",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "For each boundary value of the CGS risk cluster matrix (e.g., 24, 25, 34, 35, etc.), assign the value to a PoS in Cerved.",
          "Expected Result": "PoS in Cerved has the specified CGS value."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data acquisition flow in Zenit.",
          "Expected Result": "Zenit retrieves the updated CGS value for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS Risk Data Tab for the PoS.",
          "Expected Result": "Risk Data Tab displays the CGS value and mapped Risk Cluster."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the Risk Cluster displayed matches the expected cluster for the boundary value.",
          "Expected Result": "Risk Cluster mapping is correct for each boundary value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and integrated with Cerved.\n2. PoS exists for each boundary value.\n3. Risk Cluster matrix is configured in Zenit.",
      "Execution Mode": "Manual",
      "Functionality": "Risk Assessment",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with CGS values at each risk cluster boundary (24, 25, 34, 35, 44, 45, 54, 55, 64, 65, 74, 75, 84, 85, 100).",
      "Expected Result": "Each boundary CGS value is mapped to the correct Risk Cluster and displayed accurately in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers boundary value analysis for risk cluster mapping.",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "CervedDataAcquisition_proj080_ErrorHandling_Cerved_Unavailable_TEST_Desktop",
      "ID": "TC-179",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Cerved system unavailability during the scheduled data acquisition flow.",
          "Expected Result": "Zenit attempts to connect to Cerved and fails."
        },
        {
          "Step": 2,
          "Step Description": "Observe the error handling and logging mechanisms in Zenit.",
          "Expected Result": "Zenit logs the error and does not import incomplete or invalid data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system notifies the appropriate stakeholders (e.g., via alert or dashboard message).",
          "Expected Result": "Stakeholders are notified of the failure to acquire data from Cerved."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Zenit system is operational and integrated with Cerved.\n2. Scheduled job for daily data acquisition is configured.\n3. Mechanism to simulate Cerved unavailability is in place.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (simulate Cerved system downtime).",
      "Expected Result": "Zenit handles Cerved unavailability gracefully, logs the error, and notifies stakeholders without importing invalid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for external system unavailability.",
      "_polarion": "XPS-ZENIT-080 - Cerved - Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_ExtractionAndStorage_Backend_TEST_Desktop",
      "ID": "TC-180",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the accounting period has ended and Borderò data has been validated in Valorizzatore.",
          "Expected Result": "Borderò data is available and marked as validated in Valorizzatore."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the Zenit system's scheduled data acquisition process (weekly or bi-weekly, as per configuration).",
          "Expected Result": "Zenit system initiates data acquisition from Valorizzatore."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Zenit system extracts the following fields for each Borderò: idRice, ZonaRice, Borderò number, Accounting period (from - to), Total amount of Borderò.",
          "Expected Result": "All required fields are extracted for each Borderò record."
        },
        {
          "Step": 4,
          "Step Description": "Check that the extracted data is correctly stored in the Zenit system's database.",
          "Expected Result": "Extracted Borderò data is present and accurate in the Zenit database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend",
      "Preconditions": "1. Accounting period has ended.\n2. Borderò data has been validated in Valorizzatore.\n3. Zenit system is operational and connected to Valorizzatore.\n4. Scheduled acquisition process is configured (weekly or bi-weekly).",
      "Execution Mode": "Manual",
      "Functionality": "Borderò Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample validated Borderò records in Valorizzatore with all required fields populated.",
      "Expected Result": "Zenit system successfully extracts and stores all required Borderò data fields after each accounting period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_DashboardDisplay_SinglePoS_Desktop_TEST_Desktop",
      "ID": "TC-181",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as a user with access to PoS data.",
          "Expected Result": "User is authenticated and redirected to the Dashboard home page."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section of the Dashboard.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS for which Borderò data has been acquired.",
          "Expected Result": "PoS details are loaded."
        },
        {
          "Step": 4,
          "Step Description": "Access the 'Borderò' Data Tab within the Single PoS dashboard.",
          "Expected Result": "'Borderò' Data Tab is displayed, showing the list of Borderò records."
        },
        {
          "Step": 5,
          "Step Description": "Verify that for each Borderò, the following fields are displayed: idRice, ZonaRice, Borderò number, Accounting period (from - to), Total amount of Borderò.",
          "Expected Result": "All required fields are visible and correctly populated for each Borderò record."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop/Web",
      "Preconditions": "1. User account with access to the Dashboard.\n2. At least one PoS with acquired Borderò data.\n3. Zenit Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Borderò Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with existing Borderò data.",
      "Expected Result": "All required Borderò data fields are correctly displayed in the Dashboard for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_AverageCalculation_12MonthsYTD_Backend_TEST_Desktop",
      "ID": "TC-182",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that Borderò data for at least 12 months is present in the Zenit system for a given PoS.",
          "Expected Result": "Zenit system contains Borderò records spanning at least 12 months for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the Zenit system's calculation process for average Borderò values.",
          "Expected Result": "Zenit system initiates calculation of average Borderò values."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system calculates the average Borderò over the last 12 months for the selected PoS.",
          "Expected Result": "Average Borderò for the last 12 months is calculated and stored/displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system calculates the average Borderò for the current year YTD for the selected PoS.",
          "Expected Result": "Average Borderò for the current year YTD is calculated and stored/displayed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend",
      "Preconditions": "1. Borderò data for at least 12 months is present in the Zenit system for the PoS.\n2. Calculation process is scheduled or can be triggered manually.",
      "Execution Mode": "Manual",
      "Functionality": "Borderò Data Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Borderò records for a PoS covering at least 12 months, including current year data.",
      "Expected Result": "Zenit system correctly calculates and stores/displays average Borderò values for both the last 12 months and current year YTD.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_InvalidDataHandling_Backend_TEST_Desktop",
      "ID": "TC-183",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure that the Valorizzatore contains at least one Borderò record with missing or invalid required fields (e.g., missing idRice or invalid accounting period).",
          "Expected Result": "Valorizzatore contains at least one invalid Borderò record."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the Zenit system's data acquisition process.",
          "Expected Result": "Zenit system attempts to acquire Borderò data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Zenit system does not import invalid Borderò records and logs an appropriate error or warning message.",
          "Expected Result": "Invalid Borderò records are not imported; error/warning is logged."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend",
      "Preconditions": "1. At least one invalid Borderò record exists in Valorizzatore.\n2. Zenit system is operational and connected to Valorizzatore.",
      "Execution Mode": "Manual",
      "Functionality": "Borderò Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid Borderò records (e.g., missing idRice, invalid accounting period).",
      "Expected Result": "Zenit system rejects invalid Borderò records and logs the issue without importing them.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "BorderoDataAcquisition_XPS-ZENIT-090_ScheduleVariation_WeeklyBiWeekly_Backend_TEST_Desktop",
      "ID": "TC-184",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure the Zenit system to acquire Borderò data on a weekly basis.",
          "Expected Result": "Zenit system is set to weekly acquisition schedule."
        },
        {
          "Step": 2,
          "Step Description": "Ensure a new accounting period has ended and Borderò data is validated in Valorizzatore.",
          "Expected Result": "Validated Borderò data is available for acquisition."
        },
        {
          "Step": 3,
          "Step Description": "Trigger or wait for the scheduled acquisition process.",
          "Expected Result": "Zenit system acquires Borderò data as per the weekly schedule."
        },
        {
          "Step": 4,
          "Step Description": "Change the Zenit system configuration to bi-weekly acquisition.",
          "Expected Result": "Zenit system is set to bi-weekly acquisition schedule."
        },
        {
          "Step": 5,
          "Step Description": "Repeat the process for a bi-weekly accounting period.",
          "Expected Result": "Zenit system acquires Borderò data as per the bi-weekly schedule."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend",
      "Preconditions": "1. Zenit system supports both weekly and bi-weekly acquisition schedules.\n2. Borderò data is available and validated for both schedule types.",
      "Execution Mode": "Manual",
      "Functionality": "Borderò Data Acquisition Scheduling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Borderò records for both weekly and bi-weekly accounting periods.",
      "Expected Result": "Zenit system correctly acquires Borderò data according to the configured schedule (weekly or bi-weekly).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-090 - Valorizzatore - Borderò Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_AutomaticUnpaidDetectionAndAcquisition_TEST_Backend",
      "ID": "TC-185",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate the creation of a new unpaid payment for a specific PoS in SAP.",
          "Expected Result": "A new unpaid payment is registered in SAP for the selected PoS."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the automatic data acquisition mechanism to trigger.",
          "Expected Result": "The system detects the new unpaid payment event from SAP."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system retrieves the following data from SAP: IdRice (PoS Identifier), Unpaid Date, Unpaid Identifier.",
          "Expected Result": "The system acquires all required fields for the new unpaid payment."
        },
        {
          "Step": 4,
          "Step Description": "Check the system logs or monitoring dashboard for the data acquisition event.",
          "Expected Result": "The acquisition event is logged with correct details and timestamp."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "SAP, Zenit Backend",
      "Preconditions": "1. SAP system is operational and accessible.\n2. Integration between SAP and Zenit backend is configured and active.\n3. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no prior unpaid, SAP credentials, test unpaid payment data.",
      "Expected Result": "The system automatically detects and acquires new unpaid payment data from SAP for the PoS, including IdRice, Unpaid Date, and Unpaid Identifier.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_AggregatedUnpaidsCalculationAndDisplay_TEST_Desktop",
      "ID": "TC-186",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure multiple unpaid payments exist for a PoS, with varying dates (some within current year, some within last 6 and 12 months).",
          "Expected Result": "Test data is prepared with unpaid payments distributed across relevant timeframes."
        },
        {
          "Step": 2,
          "Step Description": "Access the Zenit Dashboard as an authorized user.",
          "Expected Result": "Dashboard is displayed with access to PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the Single PoS view and select the 'Unpaids' tab.",
          "Expected Result": "The 'Unpaids' tab is displayed for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Verify the displayed total number of unpaid cases for the current year, rolling 6 months, and rolling 12 months.",
          "Expected Result": "The dashboard displays correct aggregated counts for each period, matching the test data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Zenit Dashboard (Web)",
      "Preconditions": "1. Backend has acquired unpaid data for the PoS.\n2. User has valid credentials and access rights to the Dashboard.\n3. Test data includes unpaid payments with dates spanning the required periods.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with unpaid payments dated within current year, last 6 months, and last 12 months; user credentials.",
      "Expected Result": "The Dashboard correctly displays the total number of unpaid cases for the current year, rolling 6 months, and rolling 12 months for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_UnpaidsTabDataVisibility_TEST_Desktop",
      "ID": "TC-187",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as an authorized user.",
          "Expected Result": "User is authenticated and redirected to the Dashboard home."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS view and select the 'Unpaids' tab.",
          "Expected Result": "The 'Unpaids' tab is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the list of unpaid payments is visible, including IdRice, Unpaid Date, and Unpaid Identifier for each entry.",
          "Expected Result": "All required fields for each unpaid payment are displayed correctly in the 'Unpaids' tab."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Zenit Dashboard (Web)",
      "Preconditions": "1. User has valid credentials and access rights.\n2. At least one unpaid payment exists for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with at least one unpaid payment; user credentials.",
      "Expected Result": "The 'Unpaids' tab displays all unpaid payments for the PoS, showing IdRice, Unpaid Date, and Unpaid Identifier for each entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_RiskDataTabUnpaidsVisibility_TEST_Desktop",
      "ID": "TC-188",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit Dashboard as an authorized user.",
          "Expected Result": "User is authenticated and redirected to the Dashboard home."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS view and select the 'Risk Data' tab.",
          "Expected Result": "The 'Risk Data' tab is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the aggregated unpaid data (current year, rolling 6 months, rolling 12 months) is visible in the 'Risk Data' tab.",
          "Expected Result": "The 'Risk Data' tab displays the correct aggregated unpaid data for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Zenit Dashboard (Web)",
      "Preconditions": "1. User has valid credentials and access rights.\n2. At least one unpaid payment exists for the selected PoS.\n3. Aggregated data is available in the backend.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with at least one unpaid payment; user credentials.",
      "Expected Result": "The 'Risk Data' tab displays the correct aggregated unpaid data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_UnpaidAcquisitionErrorHandling_TEST_Backend",
      "ID": "TC-189",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a failure in the SAP connection (e.g., network outage or SAP service down) when a new unpaid payment is created.",
          "Expected Result": "The system attempts to acquire new unpaid payment data from SAP and encounters a connection error."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the system's error handling and logging mechanisms.",
          "Expected Result": "The system logs the error with relevant details and does not crash."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system retries the acquisition according to the configured retry policy (if applicable).",
          "Expected Result": "The system attempts to reacquire the data as per retry configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "SAP, Zenit Backend",
      "Preconditions": "1. SAP system is temporarily unavailable or network is disconnected.\n2. Integration between SAP and Zenit backend is configured.\n3. Retry policy is defined in the system configuration.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with new unpaid payment; SAP connection failure scenario.",
      "Expected Result": "The system gracefully handles SAP connection errors, logs the incident, and retries acquisition as configured without data loss or crash.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "UnpaidsDataAcquisition_proj100_Requirement_UnpaidDataFieldValidation_TEST_Backend",
      "ID": "TC-190",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate the creation of a new unpaid payment in SAP with missing or invalid data fields (e.g., missing IdRice, invalid date format).",
          "Expected Result": "A new unpaid payment with incomplete or invalid data is registered in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the automatic data acquisition mechanism.",
          "Expected Result": "The system attempts to acquire the new unpaid payment data from SAP."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the system's validation and error handling processes.",
          "Expected Result": "The system identifies the missing or invalid fields and logs a validation error."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "SAP, Zenit Backend",
      "Preconditions": "1. SAP system is operational.\n2. Integration between SAP and Zenit backend is configured.\n3. Test data with missing or invalid fields is prepared in SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with unpaid payment missing IdRice or with invalid date format.",
      "Expected Result": "The system detects and logs validation errors for missing or invalid unpaid payment data fields during acquisition.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-100 - SAP - \"Unpaids\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcquisition_proj101_AutomaticGuaranteeUpdate_SAP_TEST_Desktop",
      "ID": "TC-191",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a change in the guarantee status for a specific POS in SAP (e.g., update the balance or type).",
          "Expected Result": "A change event is registered in SAP for the selected POS."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system to automatically acquire updated guarantee data from SAP.",
          "Expected Result": "The system initiates the data acquisition process without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected POS.",
          "Expected Result": "Dashboard loads the POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab within the Single PoS Dashboard.",
          "Expected Result": "The 'Guarantees' tab displays updated guarantee information."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the following fields are updated and displayed correctly: IdRice, Type of Guarantee, Total Balance Amount by type, Guarantee Start Date (if Bank guarantee), Guarantee Expiration Date (if Bank guarantee).",
          "Expected Result": "All guarantee fields reflect the latest data from SAP for the selected POS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The POS exists in SAP with at least one guarantee record.\n2. The system is connected to SAP and the Dashboard application is accessible.\n3. User has valid credentials to access the Dashboard.\n4. Guarantee status for the POS is known before the test.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier (IdRice), guarantee type, initial and updated guarantee data in SAP.",
      "Expected Result": "The system automatically updates and displays the latest guarantee information for the POS in the Dashboard after a change in SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcquisition_proj101_BankGuaranteeFieldsValidation_SAP_TEST_Desktop",
      "ID": "TC-192",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In SAP, create or update a Bank guarantee for a specific POS, including start and expiration dates.",
          "Expected Result": "Bank guarantee with valid start and expiration dates is present in SAP for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a change in the Bank guarantee (e.g., update the expiration date).",
          "Expected Result": "A change event is registered in SAP for the Bank guarantee."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the system to acquire the updated Bank guarantee data from SAP.",
          "Expected Result": "System processes the updated Bank guarantee data."
        },
        {
          "Step": 4,
          "Step Description": "Access the Dashboard - Single PoS for the affected POS.",
          "Expected Result": "Dashboard loads the POS details."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the 'Guarantees' tab.",
          "Expected Result": "The 'Guarantees' tab displays guarantee details."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the Guarantee Start Date and Expiration Date fields are displayed and match the updated values from SAP.",
          "Expected Result": "Start and Expiration Dates are correctly shown for the Bank guarantee type."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The POS exists in SAP with a Bank guarantee record.\n2. The system is connected to SAP and the Dashboard application is accessible.\n3. User has valid credentials to access the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier (IdRice), Bank guarantee with start and expiration dates in SAP.",
      "Expected Result": "The Dashboard displays the correct start and expiration dates for Bank guarantees after SAP updates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcquisition_proj101_GuaranteeTypeAndBalanceValidation_SAP_TEST_Desktop",
      "ID": "TC-193",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In SAP, update the guarantee type (e.g., from Plan Provisions to Deposits) and adjust the total balance amount for a POS.",
          "Expected Result": "Guarantee type and balance are updated in SAP for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system to acquire the updated guarantee data from SAP.",
          "Expected Result": "System processes the updated guarantee type and balance."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected POS.",
          "Expected Result": "Dashboard loads the POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab.",
          "Expected Result": "The 'Guarantees' tab displays guarantee details."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the Type of Guarantee and Total Balance Amount fields reflect the updated values from SAP.",
          "Expected Result": "Type of Guarantee and Total Balance Amount are correctly updated and displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The POS exists in SAP with at least one guarantee record.\n2. The system is connected to SAP and the Dashboard application is accessible.\n3. User has valid credentials to access the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier (IdRice), guarantee types and balances in SAP.",
      "Expected Result": "The Dashboard displays the correct guarantee type and balance after SAP updates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcquisition_proj101_NoUpdateOnNoChange_SAP_TEST_Desktop",
      "ID": "TC-194",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no changes are made to the guarantee data for a POS in SAP.",
          "Expected Result": "Guarantee data remains unchanged in SAP for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the system for any automatic data acquisition attempts for the POS.",
          "Expected Result": "No data acquisition is triggered by the system."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the POS.",
          "Expected Result": "Dashboard loads the POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab.",
          "Expected Result": "The 'Guarantees' tab displays guarantee details."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the guarantee data displayed matches the previous known state and has not been updated.",
          "Expected Result": "No changes are observed in the guarantee data on the Dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The POS exists in SAP with guarantee records.\n2. The system is connected to SAP and the Dashboard application is accessible.\n3. User has valid credentials to access the Dashboard.\n4. No changes are made to guarantee data in SAP during the test.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier (IdRice), guarantee data in SAP.",
      "Expected Result": "The system does not trigger unnecessary data acquisition or update the Dashboard when no changes occur in SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "GuaranteesDataAcquisition_proj101_InvalidGuaranteeDataHandling_SAP_TEST_Desktop",
      "ID": "TC-195",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "In SAP, attempt to update a guarantee record for a POS with invalid data (e.g., missing required fields, negative balance, or invalid date format).",
          "Expected Result": "Invalid data is present in SAP for the POS guarantee record."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the system to attempt to acquire the invalid guarantee data from SAP.",
          "Expected Result": "System processes the invalid data input."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected POS.",
          "Expected Result": "Dashboard loads the POS details."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Guarantees' tab.",
          "Expected Result": "The 'Guarantees' tab displays guarantee details or error messages."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the system handles the invalid data gracefully (e.g., displays an error message, skips the invalid record, or logs the error without corrupting the Dashboard display).",
          "Expected Result": "System does not display corrupted or misleading data and provides appropriate error handling or messaging."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. The POS exists in SAP with at least one guarantee record.\n2. The system is connected to SAP and the Dashboard application is accessible.\n3. User has valid credentials to access the Dashboard.\n4. Invalid guarantee data is present in SAP for the POS.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS identifier (IdRice), invalid guarantee data in SAP (e.g., missing fields, negative values, invalid dates).",
      "Expected Result": "The system handles invalid guarantee data from SAP without corrupting the Dashboard and provides appropriate error handling.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-101- SAP - \"Guarantees\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_AutomaticDataAcquisition_SAP_TEST_Desktop",
      "ID": "TC-196",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the 'Status Collection' of a POS in SAP (e.g., update an open item status).",
          "Expected Result": "The system detects the change in 'Status Collection' for the affected POS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered by the status change.",
          "Expected Result": "The data acquisition process is initiated without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Check the data sent from SAP to the system for the affected POS.",
          "Expected Result": "The data includes the correct IdRice (POS Identifier) and the updated 'Status Collection' flag."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. At least one POS exists in the SAP system.\n2. The automatic data acquisition mechanism is configured and active.\n3. The tester has access to SAP and the backend system logs.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS with open items and known IdRice values.",
      "Expected Result": "The system automatically acquires updated 'Status Collection' data from SAP for the POS whenever a status change occurs, including correct IdRice and flag.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_SeverityHierarchy_SAP_TEST_Desktop",
      "ID": "TC-197",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate multiple block statuses for a single customer across different companies in SAP (e.g., legal, warning, re-entry plan).",
          "Expected Result": "Multiple block statuses are present for the customer in SAP."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a status change in one of the open items to activate the data acquisition flow.",
          "Expected Result": "The system initiates the data acquisition process."
        },
        {
          "Step": 3,
          "Step Description": "Verify the data sent to the system for the affected POS.",
          "Expected Result": "Only the most serious block (according to the hierarchy: legal > warning > re-entry plan) is sent, ignoring company distinctions."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. A customer exists with multiple block statuses across different companies in SAP.\n2. The block severity hierarchy is defined in the system.\n3. The automatic data acquisition mechanism is active.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Customer with multiple block statuses (legal, warning, re-entry plan) across companies.",
      "Expected Result": "The system sends only the most severe block status for each customer, ignoring company distinctions, upon status change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_DashboardDisplay_SinglePoS_SAP_TEST_Desktop",
      "ID": "TC-198",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a status change has occurred for a POS and the updated data has been acquired from SAP.",
          "Expected Result": "The system has the latest 'Status Collection' data for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS view for the affected POS.",
          "Expected Result": "The Dashboard loads the Single PoS view."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Status Collection' information (IdRice and flag) is displayed correctly and reflects the latest update.",
          "Expected Result": "The Dashboard displays the correct and most recent 'Status Collection' data for the POS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend, Dashboard Web",
      "Preconditions": "1. At least one POS with a recent 'Status Collection' status change.\n2. The Dashboard application is accessible.\n3. The tester has credentials to access the Dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with known IdRice and updated 'Status Collection' status.",
      "Expected Result": "The Dashboard - Single PoS view displays the correct and up-to-date 'Status Collection' data for the selected POS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_DataUpdateOnOpenItemChange_SAP_TEST_Desktop",
      "ID": "TC-199",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a POS with at least one open item in SAP.",
          "Expected Result": "A POS with open items is available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Change the status of the open item (e.g., mark as paid, overdue, or blocked).",
          "Expected Result": "The open item status is updated in SAP."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the system for data acquisition activity.",
          "Expected Result": "The system detects the open item status change and updates the 'Status Collection' data accordingly."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. At least one POS with open items in SAP.\n2. The automatic data acquisition mechanism is active.\n3. The tester has access to SAP and system monitoring tools.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with open items and known IdRice.",
      "Expected Result": "The system updates the 'Status Collection' data for the POS every time the status of an open item changes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "StatusCollection_XPS-ZENIT-102_NoDataSentIfNoChange_SAP_TEST_Desktop",
      "ID": "TC-200",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no changes are made to the 'Status Collection' status or open items for a POS in SAP.",
          "Expected Result": "The 'Status Collection' status remains unchanged for the POS."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the system for any data acquisition or transmission activity related to the POS.",
          "Expected Result": "No data acquisition or transmission is triggered."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. At least one POS with stable 'Status Collection' status and open items in SAP.\n2. The automatic data acquisition mechanism is active.\n3. The tester has access to SAP and system monitoring tools.",
      "Execution Mode": "Manual",
      "Functionality": "Status Collection Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS with unchanged 'Status Collection' status and open items.",
      "Expected Result": "No data is sent or acquired for the POS if there is no change in the 'Status Collection' status.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-102- SAP - \"Status Collection\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataAcquisition_AutomaticUpdate_SAP_TEST_Desktop",
      "ID": "TC-201",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the status of 'Open Credits' for a specific PoS in SAP.",
          "Expected Result": "The system detects the change in 'Open Credits' status for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered.",
          "Expected Result": "The data acquisition process starts automatically without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Check the data sent from SAP to the system for the affected PoS.",
          "Expected Result": "The data includes IdRice (PoS Identifier), total balance amount, and balances of open items for all three companies."
        },
        {
          "Step": 4,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The updated 'Open Credits' data is visible and matches the data received from SAP."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and integrated with the application.\n2. At least one PoS exists with open credits.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester has access to the Dashboard - Single PoS view.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits, SAP credentials, test PoS IdRice.",
      "Expected Result": "The system automatically acquires and displays updated 'Open Credits' data for the PoS upon status change, ensuring data consistency between SAP and the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataAcquisition_IAGCreditsHandling_SAP_TEST_Desktop",
      "ID": "TC-202",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate an IAG credit transaction for a PoS in SAP, leaving the credit open for several hours after the IAG event.",
          "Expected Result": "The system detects the open IAG credit status for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered for the IAG credit status change.",
          "Expected Result": "The data acquisition process starts automatically for the IAG credit event."
        },
        {
          "Step": 3,
          "Step Description": "Check the data sent from SAP to the system for the affected PoS, focusing on IAG credits.",
          "Expected Result": "The data includes IdRice, total balance amount, and balances of open items, including the IAG credit."
        },
        {
          "Step": 4,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The IAG credit is displayed as open for the expected duration and is updated once closed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and integrated with the application.\n2. At least one PoS is configured to process IAG credits.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester has access to the Dashboard - Single PoS view.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with IAG credit capability, SAP credentials, test PoS IdRice.",
      "Expected Result": "The system correctly acquires and displays IAG credits as open for the appropriate duration, updating the Dashboard accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on IAG credits handling and timing.",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataAcquisition_MissingDataHandling_SAP_TEST_Desktop",
      "ID": "TC-203",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in 'Open Credits' status for a PoS in SAP, but omit the total balance amount in the data sent.",
          "Expected Result": "The system receives incomplete data (missing total balance amount) for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify the system's response to the incomplete data acquisition event.",
          "Expected Result": "The system logs an error or warning and does not update the Dashboard with incomplete data."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The Dashboard does not display incomplete or inconsistent 'Open Credits' data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and integrated with the application.\n2. At least one PoS exists with open credits.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester has access to the Dashboard - Single PoS view.\n5. Ability to simulate or inject incomplete data from SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits, SAP credentials, test PoS IdRice, mechanism to simulate missing data.",
      "Expected Result": "The system gracefully handles missing data by not updating the Dashboard and logging the issue for further investigation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing required fields.",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataAcquisition_MultiCompanyBalances_SAP_TEST_Desktop",
      "ID": "TC-204",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in 'Open Credits' status for a PoS in SAP, ensuring open items exist for all three companies.",
          "Expected Result": "The system detects the change in 'Open Credits' status for the PoS with open items for three companies."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered and collects balances for all three companies.",
          "Expected Result": "The data acquisition process retrieves balances for all three companies without distinction."
        },
        {
          "Step": 3,
          "Step Description": "Check the data sent from SAP to the system for the affected PoS.",
          "Expected Result": "The data includes IdRice, total balance amount, and balances of open items for all three companies."
        },
        {
          "Step": 4,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The Dashboard displays the aggregated open credits data for all three companies."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and integrated with the application.\n2. At least one PoS exists with open credits for all three companies.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester has access to the Dashboard - Single PoS view.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits for three companies, SAP credentials, test PoS IdRice.",
      "Expected Result": "The system correctly acquires and displays open credits balances for all three companies in the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers multi-company open credits aggregation.",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "OpenCredits_XPS-ZENIT-103_DataAcquisition_NoStatusChange_NoUpdate_SAP_TEST_Desktop",
      "ID": "TC-205",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no change occurs in the 'Open Credits' status for a PoS in SAP.",
          "Expected Result": "No status change event is triggered for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the system for any automatic data acquisition activity.",
          "Expected Result": "No data acquisition process is triggered."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the PoS.",
          "Expected Result": "The Dashboard displays the previously acquired 'Open Credits' data without any update."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and integrated with the application.\n2. At least one PoS exists with open credits.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester has access to the Dashboard - Single PoS view.",
      "Execution Mode": "Manual",
      "Functionality": "Open Credits Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits, SAP credentials, test PoS IdRice.",
      "Expected Result": "The system does not perform unnecessary data acquisition or update the Dashboard when there is no change in 'Open Credits' status.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for unnecessary updates.",
      "_polarion": "XPS-ZENIT-103- SAP - \"Open credits\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChanger_XPS-ZENIT-104_AutomaticDataAcquisition_SAP_TEST_Desktop",
      "ID": "TC-206",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the status of the Hopper or Coin Changer for a specific PoS in the SAP system.",
          "Expected Result": "The system detects the change in status for the specified PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the automatic data acquisition mechanism is triggered by the status change.",
          "Expected Result": "The data acquisition process is initiated automatically without manual intervention."
        },
        {
          "Step": 3,
          "Step Description": "Check that the following data is sent from SAP: IdRice (PoS Identifier), IAG Hopper Balance Amount - Severance, IAG Hopper Balance Amount - Recovery, Coin exchange balance amount.",
          "Expected Result": "All required data fields are sent and contain valid, updated values."
        },
        {
          "Step": 4,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The dashboard displays the updated Hopper and Coin Changer data for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and connected to the PoS network.\n2. At least one PoS is registered in the system with Hopper and Coin Changer components.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester has access to the SAP backend and the Dashboard - Single PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known Hopper and Coin Changer status; SAP test credentials.",
      "Expected Result": "Upon status change, the system automatically acquires and updates the Hopper and Coin Changer data for the PoS, and the Dashboard reflects the latest values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChanger_XPS-ZENIT-104_MissingDataHandling_SAP_TEST_Desktop",
      "ID": "TC-207",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in the status of the Hopper or Coin Changer for a PoS, but omit one or more required data fields (e.g., leave Coin exchange balance amount empty).",
          "Expected Result": "The system detects the missing data during the acquisition process."
        },
        {
          "Step": 2,
          "Step Description": "Observe the system's response to the incomplete data set.",
          "Expected Result": "The system logs an error or warning and does not update the Dashboard with incomplete information."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The dashboard does not display incomplete or invalid data; previous valid data remains visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and connected to the PoS network.\n2. At least one PoS is registered in the system.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester can manipulate or simulate incomplete data from SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with incomplete Hopper and Coin Changer data; SAP test credentials.",
      "Expected Result": "The system gracefully handles missing data by not updating the Dashboard and logging the issue for review.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChanger_XPS-ZENIT-104_DashboardDataConsistency_SAP_TEST_Desktop",
      "ID": "TC-208",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger multiple consecutive changes in Hopper and Coin Changer status for a PoS in SAP (e.g., change balance amounts several times in quick succession).",
          "Expected Result": "The system detects each change and initiates the data acquisition process for each event."
        },
        {
          "Step": 2,
          "Step Description": "After each change, access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The dashboard displays the most recent and correct Hopper and Coin Changer data after each update."
        },
        {
          "Step": 3,
          "Step Description": "Compare the data shown on the Dashboard with the latest values in SAP for the PoS.",
          "Expected Result": "The Dashboard data matches the latest SAP data for all relevant fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and connected to the PoS network.\n2. At least one PoS is registered in the system.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester has access to both SAP backend and the Dashboard - Single PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with modifiable Hopper and Coin Changer data; SAP test credentials.",
      "Expected Result": "The Dashboard always reflects the latest Hopper and Coin Changer data from SAP after each status change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChanger_XPS-ZENIT-104_NoStatusChange_NoDataAcquisition_SAP_TEST_Desktop",
      "ID": "TC-209",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure no changes are made to the Hopper or Coin Changer status for a PoS in SAP.",
          "Expected Result": "No status change is detected by the system."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the data acquisition mechanism for any activity.",
          "Expected Result": "The data acquisition process is not triggered."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the PoS.",
          "Expected Result": "The dashboard continues to display the last valid data without unnecessary updates."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and connected to the PoS network.\n2. At least one PoS is registered in the system.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. No changes are made to Hopper or Coin Changer status during the test window.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition Trigger",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with stable Hopper and Coin Changer data; SAP test credentials.",
      "Expected Result": "No unnecessary data acquisition occurs, and the Dashboard remains unchanged.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "HopperCoinChanger_XPS-ZENIT-104_InvalidDataFormatHandling_SAP_TEST_Desktop",
      "ID": "TC-210",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a change in Hopper or Coin Changer status for a PoS, but provide one or more data fields in an invalid format (e.g., non-numeric value for balance amount).",
          "Expected Result": "The system detects the invalid data format during the acquisition process."
        },
        {
          "Step": 2,
          "Step Description": "Observe the system's response to the invalid data.",
          "Expected Result": "The system logs an error or warning and does not update the Dashboard with invalid information."
        },
        {
          "Step": 3,
          "Step Description": "Access the Dashboard - Single PoS for the affected PoS.",
          "Expected Result": "The dashboard does not display invalid data; previous valid data remains visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, SAP Backend",
      "Preconditions": "1. The SAP system is operational and connected to the PoS network.\n2. At least one PoS is registered in the system.\n3. The automatic data acquisition mechanism is configured and enabled.\n4. Tester can manipulate or simulate invalid data from SAP.",
      "Execution Mode": "Manual",
      "Functionality": "Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with invalid Hopper and Coin Changer data; SAP test credentials.",
      "Expected Result": "The system rejects invalid data formats and maintains data integrity on the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-104- SAP - \"Hopper - Coin Changer\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPS-ZENIT-110_DailyDataAcquisition_SportTicketsPaidOtherPoS_backend_TEST_Desktop",
      "ID": "TC-211",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the DWH has generated the daily winnings monitoring report for sport tickets paid at other sales points, containing all required fields.",
          "Expected Result": "DWH report is available and contains data for sport tickets paid at other sales points."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the Zenit system's daily data acquisition process to run at end of day.",
          "Expected Result": "Zenit system initiates data acquisition from DWH."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Zenit acquires and aggregates data based on: Seller PoS identifier (ZonaRice), Sell date, Identifier of PoS where payment was made, and Payment date.",
          "Expected Result": "Data is aggregated correctly according to the specified keys."
        },
        {
          "Step": 4,
          "Step Description": "Check that the following fields are extracted and aggregated: Seller Agency Code, Seller PoS identifier, Competence Day, Cash day, Winning payment Day, Agency Code Payment, PoS Identifier of the payment, Amount bet, Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        },
        {
          "Step": 5,
          "Step Description": "Validate that Seller Agency Code is a 6-character string left-padded with zeros, or for 'Corner' PoS, prefixed with 4-digit zone number and hyphen.",
          "Expected Result": "Seller Agency Code format matches specification for both standard and 'Corner' PoS."
        },
        {
          "Step": 6,
          "Step Description": "Verify that date fields (Competence Day, Cash day, Winning payment Day) are in 'yyyy-mm-dd' format.",
          "Expected Result": "All date fields are correctly formatted."
        },
        {
          "Step": 7,
          "Step Description": "Compare the aggregated data in Zenit with the DWH source to ensure consistency and accuracy.",
          "Expected Result": "Zenit data matches DWH source data in content and aggregation logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. DWH system has completed daily extraction and report generation for the day.\n2. Zenit system is operational and configured to connect to DWH.\n3. Test environment contains sample data for sport tickets paid at other sales points, including both standard and 'Corner' PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition & Aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample DWH report with sport tickets paid at other PoS, including various PoS types, dates, and amounts.",
      "Expected Result": "Zenit system acquires, aggregates, and formats sport tickets paid at other PoS data from DWH daily, matching all field and format requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPS-ZENIT-110_DailyDataAcquisition_UnpaidWinningSportsTickets_backend_TEST_Desktop",
      "ID": "TC-212",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the DWH has generated the daily winnings monitoring report for unpaid winning sports tickets, containing all required fields.",
          "Expected Result": "DWH report is available and contains data for unpaid winning sports tickets."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the Zenit system's daily data acquisition process to run at end of day.",
          "Expected Result": "Zenit system initiates data acquisition from DWH."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Zenit acquires and aggregates data based on: Seller PoS identifier (ZonaRice) and Sell date.",
          "Expected Result": "Data is aggregated correctly according to the specified keys."
        },
        {
          "Step": 4,
          "Step Description": "Check that the following fields are extracted and aggregated: Seller Agency Code, Seller PoS identifier, Competence Day, Cash day, Amount bet, Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        },
        {
          "Step": 5,
          "Step Description": "Validate that Seller Agency Code is a 6-character string left-padded with zeros, or for 'Corner' PoS, prefixed with 4-digit zone number and hyphen.",
          "Expected Result": "Seller Agency Code format matches specification for both standard and 'Corner' PoS."
        },
        {
          "Step": 6,
          "Step Description": "Verify that date fields (Competence Day, Cash day) are in 'yyyy-mm-dd' format.",
          "Expected Result": "All date fields are correctly formatted."
        },
        {
          "Step": 7,
          "Step Description": "Compare the aggregated data in Zenit with the DWH source to ensure consistency and accuracy.",
          "Expected Result": "Zenit data matches DWH source data in content and aggregation logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. DWH system has completed daily extraction and report generation for the day.\n2. Zenit system is operational and configured to connect to DWH.\n3. Test environment contains sample data for unpaid winning sports tickets, including both standard and 'Corner' PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition & Aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample DWH report with unpaid winning sports tickets, including various PoS types, dates, and amounts.",
      "Expected Result": "Zenit system acquires, aggregates, and formats unpaid winning sports tickets data from DWH daily, matching all field and format requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPS-ZENIT-110_DailyDataAcquisition_UnpaidWinningVirtualRaceTickets_backend_TEST_Desktop",
      "ID": "TC-213",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the DWH has generated the daily winnings monitoring report for unpaid winning virtual race tickets, containing all required fields.",
          "Expected Result": "DWH report is available and contains data for unpaid winning virtual race tickets."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the Zenit system's daily data acquisition process to run at end of day.",
          "Expected Result": "Zenit system initiates data acquisition from DWH."
        },
        {
          "Step": 3,
          "Step Description": "Verify that Zenit acquires and aggregates data based on: Seller PoS identifier (ZonaRice) and Sell date.",
          "Expected Result": "Data is aggregated correctly according to the specified keys."
        },
        {
          "Step": 4,
          "Step Description": "Check that the following fields are extracted and aggregated: Seller Agency Code, Seller PoS identifier, Competence Day, Cash day, Amount bet, Amount Won.",
          "Expected Result": "All required fields are present and correctly formatted in the aggregated data."
        },
        {
          "Step": 5,
          "Step Description": "Validate that Seller Agency Code is a 6-character string left-padded with zeros, or for 'Corner' PoS, prefixed with 4-digit zone number and hyphen.",
          "Expected Result": "Seller Agency Code format matches specification for both standard and 'Corner' PoS."
        },
        {
          "Step": 6,
          "Step Description": "Verify that date fields (Competence Day, Cash day) are in 'yyyy-mm-dd' format.",
          "Expected Result": "All date fields are correctly formatted."
        },
        {
          "Step": 7,
          "Step Description": "Compare the aggregated data in Zenit with the DWH source to ensure consistency and accuracy.",
          "Expected Result": "Zenit data matches DWH source data in content and aggregation logic."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Desktop",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. DWH system has completed daily extraction and report generation for the day.\n2. Zenit system is operational and configured to connect to DWH.\n3. Test environment contains sample data for unpaid winning virtual race tickets, including both standard and 'Corner' PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Acquisition & Aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample DWH report with unpaid winning virtual race tickets, including various PoS types, dates, and amounts.",
      "Expected Result": "Zenit system acquires, aggregates, and formats unpaid winning virtual race tickets data from DWH daily, matching all field and format requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPS-ZENIT-110_FieldFormatValidation_SellerAgencyCodeAndPoS_backend_TEST_Desktop",
      "ID": "TC-214",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Acquire sample data from DWH containing both standard and 'Corner' PoS entries.",
          "Expected Result": "Sample data includes Seller Agency Codes in both formats."
        },
        {
          "Step": 2,
          "Step Description": "Trigger Zenit data acquisition process for the day.",
          "Expected Result": "Zenit system processes the sample data."
        },
        {
          "Step": 3,
          "Step Description": "Inspect the aggregated data for Seller Agency Code and Seller PoS identifier fields.",
          "Expected Result": "Seller Agency Code is a 6-character string left-padded with zeros for standard PoS, or prefixed with 4-digit zone number and hyphen for 'Corner' PoS. Seller PoS identifier is left-padded with zeros as specified."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. DWH sample data includes both standard and 'Corner' PoS entries.\n2. Zenit system is operational and configured to connect to DWH.",
      "Execution Mode": "Manual",
      "Functionality": "Field Format Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample DWH report with mixed PoS types and agency codes.",
      "Expected Result": "Seller Agency Code and Seller PoS identifier fields in Zenit output strictly follow the required format for all PoS types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only field format validation, not full data acquisition logic.",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPS-ZENIT-110_DashboardDataDisplay_SinglePoS_backend_TEST_Desktop",
      "ID": "TC-215",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure Zenit system has acquired and aggregated daily winnings monitoring data for a specific PoS.",
          "Expected Result": "Aggregated data for the selected PoS is available in Zenit."
        },
        {
          "Step": 2,
          "Step Description": "Access the Dashboard - Single PoS - 'Winning Data' Tab for the selected PoS.",
          "Expected Result": "Dashboard displays the 'Winning Data' tab for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all aggregated fields (Seller Agency Code, Seller PoS identifier, Competence Day, Cash day, Winning payment Day, Agency Code Payment, PoS Identifier of the payment, Amount bet, Amount Won) are displayed as per the data acquired.",
          "Expected Result": "All fields are displayed correctly and match the acquired data."
        },
        {
          "Step": 4,
          "Step Description": "Check that field formats (e.g., date formats, code padding) are consistent with requirements.",
          "Expected Result": "All displayed fields adhere to the specified formats."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Zenit system has completed daily data acquisition for the selected PoS.\n2. Dashboard is accessible and operational.\n3. Test PoS has data for at least one day.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Aggregated winnings monitoring data for a specific PoS.",
      "Expected Result": "Dashboard displays all required winnings monitoring data fields for the selected PoS, matching the acquired and aggregated data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data display, not acquisition or aggregation logic.",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPS-ZENIT-110_DailyExtractionFrequencyValidation_backend_TEST_Desktop",
      "ID": "TC-216",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Verify that the Zenit system is configured to trigger data acquisition from DWH at the end of each day.",
          "Expected Result": "Zenit system is scheduled for daily data acquisition."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the Zenit system for at least three consecutive days.",
          "Expected Result": "Zenit system triggers data acquisition at the end of each day."
        },
        {
          "Step": 3,
          "Step Description": "Check that for each day, the acquired data corresponds to the correct day's DWH report.",
          "Expected Result": "Data acquired each day matches the DWH report for that specific day."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Zenit system is operational and scheduled for daily acquisition.\n2. DWH generates daily reports consistently.\n3. Test environment allows monitoring over multiple days.",
      "Execution Mode": "Manual",
      "Functionality": "Extraction Frequency Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "DWH daily reports for at least three consecutive days.",
      "Expected Result": "Zenit system acquires winnings monitoring data from DWH at the end of each day, maintaining correct frequency and data alignment.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only extraction frequency, not field-level validation.",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "WinningsMonitoring_XPS-ZENIT-110_ErrorHandling_MissingOrMalformedFields_backend_TEST_Desktop",
      "ID": "TC-217",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a DWH report with missing or malformed required fields (e.g., missing Seller Agency Code, invalid date format).",
          "Expected Result": "Malformed DWH report is available for acquisition."
        },
        {
          "Step": 2,
          "Step Description": "Trigger Zenit data acquisition process for the day.",
          "Expected Result": "Zenit system processes the malformed data."
        },
        {
          "Step": 3,
          "Step Description": "Observe how Zenit handles missing or malformed fields during acquisition and aggregation.",
          "Expected Result": "Zenit system logs errors, skips invalid records, or flags them for review according to error handling policy."
        },
        {
          "Step": 4,
          "Step Description": "Check that no invalid data is present in the aggregated output or displayed in the Dashboard.",
          "Expected Result": "Aggregated data excludes or flags records with missing/malformed fields; Dashboard does not display invalid data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Desktop",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Desktop, Backend",
      "Preconditions": "1. Zenit system is operational and configured to connect to DWH.\n2. Malformed DWH report is available for the test day.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Malformed DWH report with missing or invalid fields.",
      "Expected Result": "Zenit system handles missing or malformed fields gracefully, ensuring only valid data is aggregated and displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only error handling for missing/malformed fields.",
      "_polarion": "XPS-ZENIT-110 - DWH - \"Winnings Monitoring\" Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_proj120_requirement_DashboardDataExtraction_TEST_Desktop",
      "ID": "TC-218",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard home page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section of the Dashboard.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the list to view its details.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab within the selected PoS details.",
          "Expected Result": "The 'PoS Master Data' tab is displayed, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the following information is displayed for each Terminal Type: IdRice, Type ID, Type Name, Number of Terminals.",
          "Expected Result": "For each Terminal Type at the selected PoS, IdRice, Type ID, Type Name, and Number of Terminals are correctly displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT Dashboard is accessible.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS with terminal data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with at least one terminal type configured in ORION.",
      "Expected Result": "All required terminal data fields (IdRice, Type ID, Type Name, Number of Terminals) are displayed for each Terminal Type at the selected PoS in the 'PoS Master Data' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_proj120_requirement_MissingTerminalDataHandling_TEST_Desktop",
      "ID": "TC-219",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard home page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section of the Dashboard.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS that does not have any terminal data configured in ORION.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab within the selected PoS details.",
          "Expected Result": "The 'PoS Master Data' tab is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Verify the system's behavior when no terminal data is available for the selected PoS.",
          "Expected Result": "A clear message is displayed indicating that no terminal data is available for this PoS, and no erroneous or placeholder data is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT Dashboard is accessible.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS exists in the system with no terminal data configured in ORION.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no terminal data in ORION.",
      "Expected Result": "The system displays a clear message indicating the absence of terminal data for the selected PoS, with no erroneous or placeholder data shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_proj120_requirement_TerminalDataAccuracy_TEST_Desktop",
      "ID": "TC-220",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard home page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section of the Dashboard.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS with known terminal data in ORION.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab within the selected PoS details.",
          "Expected Result": "The 'PoS Master Data' tab is displayed, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Compare the displayed terminal data (IdRice, Type ID, Type Name, Number of Terminals) with the data stored in ORION for the selected PoS.",
          "Expected Result": "All terminal data displayed in the ZENIT Dashboard matches exactly with the data stored in ORION for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT Dashboard is accessible.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS exists with terminal data configured in ORION and known values for verification.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with known terminal data in ORION for cross-verification.",
      "Expected Result": "Terminal data displayed in the ZENIT Dashboard matches the data in ORION for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_proj120_requirement_MultipleTerminalTypesDisplay_TEST_Desktop",
      "ID": "TC-221",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard home page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section of the Dashboard.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS that has multiple terminal types configured in ORION.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab within the selected PoS details.",
          "Expected Result": "The 'PoS Master Data' tab is displayed, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all terminal types and their respective data (Type ID, Type Name, Number of Terminals) are displayed for the selected PoS.",
          "Expected Result": "All terminal types configured in ORION for the selected PoS are displayed with their correct data in the ZENIT Dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT Dashboard is accessible.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS exists with multiple terminal types configured in ORION.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with multiple terminal types in ORION.",
      "Expected Result": "All terminal types and their data are displayed for the selected PoS in the 'PoS Master Data' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "TerminalDataAcquisition_proj120_requirement_TerminalDataRefreshOnUpdate_TEST_Desktop",
      "ID": "TC-222",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard home page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section of the Dashboard.",
          "Expected Result": "The list of available Points of Sale (PoS) is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS with terminal data configured in ORION.",
          "Expected Result": "The details page for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Go to the 'PoS Master Data' tab within the selected PoS details.",
          "Expected Result": "The 'PoS Master Data' tab is displayed, showing terminal data for the selected PoS."
        },
        {
          "Step": 5,
          "Step Description": "Update the terminal data for the selected PoS in ORION (e.g., change the number of terminals for a type).",
          "Expected Result": "Terminal data is updated in ORION."
        },
        {
          "Step": 6,
          "Step Description": "Refresh the 'PoS Master Data' tab in the ZENIT Dashboard.",
          "Expected Result": "The updated terminal data is displayed in the ZENIT Dashboard, reflecting the changes made in ORION."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. ZENIT Dashboard is accessible.\n2. User has valid credentials with access to PoS data.\n3. At least one PoS exists with terminal data configured in ORION.\n4. User has access to update terminal data in ORION.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with terminal data in ORION; access to update ORION data.",
      "Expected Result": "Any updates to terminal data in ORION are reflected in the ZENIT Dashboard after refresh.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-120 - Terminal Data Acquisition"
    },
    {
      "Title": "ReportAcquisition-XPS130_Dashboard_DocumentsListDisplay_DESKTOP_TEST_Desktop",
      "ID": "TC-223",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, displaying the module reserved for Source system data."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of available documents sourced from Cerved.",
          "Expected Result": "A list of available reports/documents for the selected PoS is displayed, each with a clickable link or button."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS with available Cerved reports/documents.\n3. User is logged in and has permission to view documents.",
      "Execution Mode": "Manual",
      "Functionality": "Report Acquisition - Documents List Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with available Cerved documents.",
      "Expected Result": "The system displays the list of available Cerved reports/documents for the selected PoS in the 'Documents' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130 - Cerved - Report Acquisition"
    },
    {
      "Title": "ReportAcquisition-XPS130_Dashboard_DocumentView_DESKTOP_TEST_Desktop",
      "ID": "TC-224",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, displaying the list of available documents."
        },
        {
          "Step": 4,
          "Step Description": "Click on a specific document from the list to view it.",
          "Expected Result": "The selected document/report is opened and its content is displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS with available Cerved reports/documents.\n3. User is logged in and has permission to view documents.",
      "Execution Mode": "Manual",
      "Functionality": "Report Acquisition - Document Viewing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with available Cerved documents.",
      "Expected Result": "The user is able to open and view the content of a selected Cerved report/document from the 'Documents' tab.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130 - Cerved - Report Acquisition"
    },
    {
      "Title": "ReportAcquisition-XPS130_Dashboard_NoDocumentsAvailable_DESKTOP_TEST_Desktop",
      "ID": "TC-225",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS that has no available Cerved documents.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened."
        },
        {
          "Step": 4,
          "Step Description": "Observe the area where the list of documents would be displayed.",
          "Expected Result": "A message is shown indicating that no documents are available for this PoS, and no document links are displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit Dashboard.\n2. At least one PoS with no available Cerved reports/documents.\n3. User is logged in and has permission to view documents.",
      "Execution Mode": "Manual",
      "Functionality": "Report Acquisition - No Documents Scenario",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no available Cerved documents.",
      "Expected Result": "If no Cerved documents are available for the selected PoS, the system displays an appropriate message and does not show any document links.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130 - Cerved - Report Acquisition"
    },
    {
      "Title": "ReportAcquisition-XPS130_Dashboard_DocumentAccessDenied_DESKTOP_TEST_Desktop",
      "ID": "TC-226",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials that do not have permission to view documents.",
          "Expected Result": "User is successfully logged in and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to click on a document from the list.",
          "Expected Result": "Access is denied, and an appropriate error message is displayed to the user (e.g., 'You do not have permission to view this document')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with restricted permissions (cannot view documents).\n2. At least one PoS with available Cerved reports/documents.\n3. User is logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Report Acquisition - Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Restricted user credentials; PoS with available Cerved documents.",
      "Expected Result": "If the user does not have permission to view a document, the system prevents access and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-130 - Cerved - Report Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_ViewList_DESKTOP_TEST_Desktop",
      "ID": "TC-227",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, and the system triggers a request to Arxivar to acquire available documents for the selected PoS."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of documents displayed in the 'Documents' tab.",
          "Expected Result": "A list of available documents retrieved from Arxivar is displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials for Zenit Dashboard.\n2. At least one PoS with documents available in Arxivar exists.\n3. User has access rights to view PoS and associated documents.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with documents in Arxivar.",
      "Expected Result": "The system displays the list of available documents for the selected PoS in the 'Documents' tab, as retrieved from Arxivar.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_ViewDocument_DESKTOP_TEST_Desktop",
      "ID": "TC-228",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, and the list of available documents is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on a document from the displayed list.",
          "Expected Result": "The selected document is opened and its content is displayed for viewing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials for Zenit Dashboard.\n2. At least one PoS with documents available in Arxivar exists.\n3. User has access rights to view PoS and associated documents.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with documents in Arxivar.",
      "Expected Result": "The user is able to view the content of the selected document retrieved from Arxivar.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_NoDocuments_DESKTOP_TEST_Desktop",
      "ID": "TC-229",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list that has no documents in Arxivar.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The 'Documents' tab is opened, and the system triggers a request to Arxivar."
        },
        {
          "Step": 4,
          "Step Description": "Observe the 'Documents' tab for the absence of documents.",
          "Expected Result": "A message indicating 'No documents available' or similar is displayed, and no documents are listed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials for Zenit Dashboard.\n2. At least one PoS with no documents available in Arxivar exists.\n3. User has access rights to view PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with no documents in Arxivar.",
      "Expected Result": "The system displays an appropriate message indicating that no documents are available for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_ArxivarUnavailable_DESKTOP_TEST_Desktop",
      "ID": "TC-230",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Simulate Arxivar system being unavailable (e.g., disconnect network or stop Arxivar service).",
          "Expected Result": "Arxivar system is unavailable."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The system attempts to retrieve documents from Arxivar."
        },
        {
          "Step": 5,
          "Step Description": "Observe the error handling in the 'Documents' tab.",
          "Expected Result": "An error message is displayed indicating that documents cannot be retrieved due to Arxivar unavailability."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials for Zenit Dashboard.\n2. At least one PoS exists.\n3. User has access rights to view PoS.\n4. Arxivar system is made unavailable for the test.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS; Arxivar system unavailable.",
      "Expected Result": "The system displays an appropriate error message when Arxivar is unavailable and documents cannot be retrieved.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "DocumentsAcquisition-XPSZENIT131_Dashboard_SinglePoS_DocumentsTab_InvalidSession_DESKTOP_TEST_Desktop",
      "ID": "TC-231",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the Zenit Dashboard with valid credentials.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard and select a specific PoS from the list.",
          "Expected Result": "Single PoS screen is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Manually invalidate the user session (e.g., by logging out in another tab or expiring the session).",
          "Expected Result": "User session is invalidated."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Documents' tab within the Single PoS screen.",
          "Expected Result": "The system attempts to retrieve documents from Arxivar."
        },
        {
          "Step": 5,
          "Step Description": "Observe the system's response to the invalid session.",
          "Expected Result": "The system prompts the user to re-authenticate or displays a session expired message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials for Zenit Dashboard.\n2. At least one PoS exists.\n3. User has access rights to view PoS.\n4. User session is invalidated before accessing the 'Documents' tab.",
      "Execution Mode": "Manual",
      "Functionality": "Documents Acquisition",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS; Session invalidation method.",
      "Expected Result": "The system handles invalid sessions gracefully by prompting for re-authentication or displaying a session expired message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-131 - Arxivar - Documents Acquisition"
    },
    {
      "Title": "LoginLogout_proj_001_Login_ValidCredentials_TEST_Android",
      "ID": "TC-232",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on an Android device.",
          "Expected Result": "Application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid username and password into the respective fields.",
          "Expected Result": "Username and password are entered without errors."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Login' button.",
          "Expected Result": "User is authenticated and redirected to the home/dashboard screen."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Android, App Android",
      "Preconditions": "1. Android device is powered on and connected to the internet.\n2. Application is installed on the device.\n3. User has a valid account with correct credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password (e.g., user@example.com / Password123)",
      "Expected Result": "User is successfully logged in and navigated to the home/dashboard screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "LoginLogout_proj_002_Login_InvalidCredentials_TEST_Android",
      "ID": "TC-233",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on an Android device.",
          "Expected Result": "Application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid username and/or password into the respective fields.",
          "Expected Result": "Username and/or password are entered without errors."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Login' button.",
          "Expected Result": "An error message is displayed indicating invalid credentials. User remains on the login screen."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android, App Android",
      "Preconditions": "1. Android device is powered on and connected to the internet.\n2. Application is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and/or password (e.g., user@example.com / WrongPass)",
      "Expected Result": "User is not logged in and receives an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "LoginLogout_proj_003_Logout_ActiveSession_TEST_Android",
      "ID": "TC-234",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is logged in and on the home/dashboard screen."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the account or settings menu.",
          "Expected Result": "Account/settings menu is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Logout' button.",
          "Expected Result": "User is logged out and redirected to the login screen."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Android, App Android",
      "Preconditions": "1. Android device is powered on and connected to the internet.\n2. Application is installed on the device.\n3. User is logged in with a valid account.",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password for login.",
      "Expected Result": "User is successfully logged out and returned to the login screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "LoginLogout_proj_004_Login_EmptyFields_TEST_Android",
      "ID": "TC-235",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on an Android device.",
          "Expected Result": "Application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Leave the username and/or password fields empty.",
          "Expected Result": "Fields remain empty."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Login' button.",
          "Expected Result": "An error message is displayed indicating that fields cannot be empty. User remains on the login screen."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android, App Android",
      "Preconditions": "1. Android device is powered on and connected to the internet.\n2. Application is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Empty username and/or password fields.",
      "Expected Result": "User is not logged in and receives an error message about empty fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "LoginLogout_proj_005_Login_ValidCredentials_TEST_iOS",
      "ID": "TC-236",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on an iOS device.",
          "Expected Result": "Application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid username and password into the respective fields.",
          "Expected Result": "Username and password are entered without errors."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Login' button.",
          "Expected Result": "User is authenticated and redirected to the home/dashboard screen."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "iOS, App IOS",
      "Preconditions": "1. iOS device is powered on and connected to the internet.\n2. Application is installed on the device.\n3. User has a valid account with correct credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password (e.g., user@example.com / Password123)",
      "Expected Result": "User is successfully logged in and navigated to the home/dashboard screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "LoginLogout_proj_006_Logout_ActiveSession_TEST_iOS",
      "ID": "TC-237",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid credentials.",
          "Expected Result": "User is logged in and on the home/dashboard screen."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the account or settings menu.",
          "Expected Result": "Account/settings menu is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Logout' button.",
          "Expected Result": "User is logged out and redirected to the login screen."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "iOS, App IOS",
      "Preconditions": "1. iOS device is powered on and connected to the internet.\n2. Application is installed on the device.\n3. User is logged in with a valid account.",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password for login.",
      "Expected Result": "User is successfully logged out and returned to the login screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "LoginLogout_proj_007_Login_InvalidCredentials_TEST_iOS",
      "ID": "TC-238",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on an iOS device.",
          "Expected Result": "Application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid username and/or password into the respective fields.",
          "Expected Result": "Username and/or password are entered without errors."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Login' button.",
          "Expected Result": "An error message is displayed indicating invalid credentials. User remains on the login screen."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "iOS, App IOS",
      "Preconditions": "1. iOS device is powered on and connected to the internet.\n2. Application is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and/or password (e.g., user@example.com / WrongPass)",
      "Expected Result": "User is not logged in and receives an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "LoginLogout_proj_008_Login_EmptyFields_TEST_iOS",
      "ID": "TC-239",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on an iOS device.",
          "Expected Result": "Application launches successfully and displays the login screen."
        },
        {
          "Step": 2,
          "Step Description": "Leave the username and/or password fields empty.",
          "Expected Result": "Fields remain empty."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Login' button.",
          "Expected Result": "An error message is displayed indicating that fields cannot be empty. User remains on the login screen."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "iOS, App IOS",
      "Preconditions": "1. iOS device is powered on and connected to the internet.\n2. Application is installed on the device.",
      "Execution Mode": "Manual",
      "Functionality": "Login",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Empty username and/or password fields.",
      "Expected Result": "User is not logged in and receives an error message about empty fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Login/Logout"
    },
    {
      "Title": "UserProfileManagement-XPSZENIT200_FullAccessUser_AllFeaturesAccess_DESKTOP_TEST_Desktop",
      "ID": "TC-240",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'Full Access User' role.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate through all available features: data consultation, data extraction, massive import, and threshold management.",
          "Expected Result": "All features are visible and accessible to the user."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform each action: consult data, extract data, perform a massive import, and manage thresholds.",
          "Expected Result": "All actions are successfully performed without any access restriction messages."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with 'Full Access User' role assigned.\n2. User is assigned to at least one group with full access privileges.\n3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Full Access User credentials; test data for consultation, extraction, import, and threshold management.",
      "Expected Result": "Full Access User can access and perform all ZENIT features without restriction.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Full Access User role for all features.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileManagement-XPSZENIT200_OperatorUser_PartialFeaturesAccess_DESKTOP_TEST_Desktop",
      "ID": "TC-241",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'Operator User' role.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access features: data consultation, data extraction, and threshold management.",
          "Expected Result": "Data consultation and extraction features are accessible. Threshold management is partially accessible."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform a massive import operation.",
          "Expected Result": "Massive import feature is not visible or access is denied with an appropriate message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with 'Operator User' role assigned.\n2. User is assigned to a group with operator privileges.\n3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Operator User credentials; test data for consultation, extraction, and threshold management.",
      "Expected Result": "Operator User can access consultation, extraction, and partial threshold management features, but cannot access massive import.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers Operator User role and feature restrictions.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileManagement-XPSZENIT200_ObserverUser_ConsultationExtractionOnly_DESKTOP_TEST_Desktop",
      "ID": "TC-242",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'Observer User' role.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access data consultation and extraction features.",
          "Expected Result": "Data consultation and extraction features are accessible."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access threshold management and massive import features.",
          "Expected Result": "Threshold management and massive import features are not visible or access is denied with an appropriate message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with 'Observer User' role assigned.\n2. User is assigned to a group with observer privileges.\n3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Observer User credentials; test data for consultation and extraction.",
      "Expected Result": "Observer User can only access consultation and extraction features; all other features are restricted.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers Observer User role and feature restrictions.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileManagement-XPSZENIT200_ITSupportUser_LogAccessOnly_DESKTOP_TEST_Desktop",
      "ID": "TC-243",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with the 'IT Support' role.",
          "Expected Result": "User is successfully authenticated and redirected to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access log information via Splunk integration.",
          "Expected Result": "Log information is accessible in read-only mode."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access any other ZENIT features (consultation, extraction, import, threshold management).",
          "Expected Result": "All other features are not visible or access is denied with an appropriate message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with 'IT Support' role assigned.\n2. User is assigned to a group with IT Support privileges.\n3. ZENIT Dashboard is accessible.\n4. Splunk integration is configured and operational.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "IT Support User credentials; access to Splunk logs.",
      "Expected Result": "IT Support User can only access log information in read-only mode; all other features are restricted.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers IT Support User role and log access restriction.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileManagement-XPSZENIT200_MultiCountryRoleAssignment_DESKTOP_TEST_Desktop",
      "ID": "TC-244",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user assigned with different roles for two countries (e.g., Full Access for Italy, Observer for Albania).",
          "Expected Result": "User is authenticated and can select or view country-specific dashboards."
        },
        {
          "Step": 2,
          "Step Description": "Switch to the Italy dashboard and attempt to access all features.",
          "Expected Result": "All features are accessible as per Full Access User role."
        },
        {
          "Step": 3,
          "Step Description": "Switch to the Albania dashboard and attempt to access all features.",
          "Expected Result": "Only consultation and extraction features are accessible as per Observer User role; other features are restricted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with multiple country role assignments.\n2. User is assigned to appropriate groups for each country.\n3. ZENIT Dashboard is accessible.\n4. Country switching functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Full Access for Italy and Observer for Albania; test data for both countries.",
      "Expected Result": "User can access features according to their assigned role for each country.",
      "Country": "Italy, Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers multi-country role assignment and feature access.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileManagement-XPSZENIT200_GroupRoleAssignment_ApplicationNavigation_DESKTOP_TEST_Desktop",
      "ID": "TC-245",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user assigned to a group (e.g., Credit Manager).",
          "Expected Result": "User is authenticated and group role is recognized."
        },
        {
          "Step": 2,
          "Step Description": "Navigate through the application and attempt to access features based on the group's assigned roles.",
          "Expected Result": "Only features permitted by the group's roles are accessible; restricted features are not visible or access is denied."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists and is assigned to a specific group with defined roles.\n2. Group roles are configured in the system.\n3. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials assigned to a group (e.g., Credit Manager); group role configuration.",
      "Expected Result": "User can access only those features allowed by their group's assigned roles.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers group-based role assignment and navigation.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "UserProfileManagement-XPSZENIT200_Negative_InvalidRoleAccessAttempt_DESKTOP_TEST_Desktop",
      "ID": "TC-246",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT Dashboard as a user with no assigned role or with an invalid role.",
          "Expected Result": "User is authenticated but no features are accessible, or an error message is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access any feature from the dashboard.",
          "Expected Result": "Access is denied for all features with an appropriate error or restriction message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with no role or an invalid role assigned.\n2. ZENIT Dashboard is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with no or invalid role assignment.",
      "Expected Result": "User with no or invalid role cannot access any features and receives an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for invalid or missing role assignment.",
      "_polarion": "XPS-ZENIT-200 - User Profile Management"
    },
    {
      "Title": "Login_XPS-ZENIT-201_Login_Successful_Authentication_DESKTOP_TEST",
      "ID": "TC-247",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page on a desktop browser.",
          "Expected Result": "ZENIT login screen is displayed with an 'Access' button."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid company username and password, then submit.",
          "Expected Result": "System accepts credentials and prompts for second factor authentication."
        },
        {
          "Step": 4,
          "Step Description": "Approve the authentication request via push notification in the Authenticator App or enter a valid OTP code from the app.",
          "Expected Result": "System verifies the second factor and authenticates the user."
        },
        {
          "Step": 5,
          "Step Description": "Observe the landing page after successful login.",
          "Expected Result": "User is redirected to the home page appropriate for their role, with a clear indication of the current environment (e.g., TEST)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User is pre-registered in ZENIT with an enabled profile.\n2. User has configured MFA and the Authenticator App on their mobile device.\n3. System is configured to support MFA.\n4. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Authentication",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid company username and password; Authenticator App configured for the user.",
      "Expected Result": "User is authenticated, redirected to the correct home page, and the environment is clearly displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "Login_XPS-ZENIT-201_Login_Invalid_Credentials_Error_DESKTOP_TEST",
      "ID": "TC-248",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page on a desktop browser.",
          "Expected Result": "ZENIT login screen is displayed with an 'Access' button."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid company username or password, then submit.",
          "Expected Result": "System rejects credentials and displays an 'Invalid credentials' error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User is pre-registered in ZENIT.\n2. System is configured to support MFA.\n3. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Authentication",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username or password (e.g., wrong password for a valid user).",
      "Expected Result": "System displays an 'Invalid credentials' error and does not proceed to second factor authentication.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "Login_XPS-ZENIT-201_Login_Invalid_Second_Factor_Error_DESKTOP_TEST",
      "ID": "TC-249",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the ZENIT back-office login page on a desktop browser.",
          "Expected Result": "ZENIT login screen is displayed with an 'Access' button."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Access' button.",
          "Expected Result": "User is redirected to the Microsoft login page."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid company username and password, then submit.",
          "Expected Result": "System accepts credentials and prompts for second factor authentication."
        },
        {
          "Step": 4,
          "Step Description": "Enter an invalid OTP code or reject the push notification in the Authenticator App.",
          "Expected Result": "System rejects the second factor and displays an error message indicating authentication failure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User is pre-registered in ZENIT with an enabled profile.\n2. User has configured MFA and the Authenticator App on their mobile device.\n3. System is configured to support MFA.\n4. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Authentication",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password; invalid OTP code or rejected push notification.",
      "Expected Result": "System displays an error message and does not grant access to the application.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "Login_XPS-ZENIT-201_Environment_Indicator_Visible_After_Login_DESKTOP_TEST",
      "ID": "TC-250",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Complete a successful login to the ZENIT back-office as per TC-001.",
          "Expected Result": "User is authenticated and redirected to the home page."
        },
        {
          "Step": 2,
          "Step Description": "Observe the user interface for environment indicators.",
          "Expected Result": "The current environment (e.g., TEST, DEV, PRE-PROD, PROD) is clearly and unambiguously displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User is pre-registered in ZENIT with an enabled profile.\n2. User has configured MFA and the Authenticator App on their mobile device.\n3. System is configured to support MFA.\n4. User has access to a desktop computer and a supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Environment Indicator",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password; Authenticator App configured for the user.",
      "Expected Result": "Environment indicator is visible and unambiguous on the home page after login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "Logout_XPS-ZENIT-201_Logout_Successful_Session_Termination_DESKTOP_TEST",
      "ID": "TC-251",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT back-office as per TC-001.",
          "Expected Result": "User is authenticated and on the home page."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Logout' or 'Exit' button in the application.",
          "Expected Result": "System logs the user out and redirects to the login screen or a confirmation page."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access any protected resource or page via browser navigation or direct URL.",
          "Expected Result": "System denies access and redirects to the login page, confirming session termination."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User is pre-registered in ZENIT with an enabled profile.\n2. User has configured MFA and the Authenticator App on their mobile device.\n3. System is configured to support MFA.\n4. User is logged in to the application.",
      "Execution Mode": "Manual",
      "Functionality": "Logout/Session Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid username and password; Authenticator App configured for the user.",
      "Expected Result": "User is logged out, session is terminated, and access to protected resources is blocked until next login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "Audit_XPS-ZENIT-201_Login_Logout_Audit_Log_Recorded_DESKTOP_TEST",
      "ID": "TC-252",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a successful login to the ZENIT back-office as per TC-001.",
          "Expected Result": "User is authenticated and on the home page."
        },
        {
          "Step": 2,
          "Step Description": "Perform a logout as per TC-005.",
          "Expected Result": "User is logged out and redirected to the login screen."
        },
        {
          "Step": 3,
          "Step Description": "Access the audit log (requires appropriate permissions or request from admin).",
          "Expected Result": "Audit log contains entries for both the login and logout actions, including timestamp, user ID, and action type."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User is pre-registered in ZENIT with an enabled profile.\n2. User has configured MFA and the Authenticator App on their mobile device.\n3. System is configured to support MFA.\n4. User has access to audit log (admin or auditor role).",
      "Execution Mode": "Manual",
      "Functionality": "Audit/Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid username and password; Authenticator App configured for the user; access to audit log.",
      "Expected Result": "Login and logout actions are recorded in the audit log with correct details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-201 - Login and Logout"
    },
    {
      "Title": "AutoLogout-XPS202_Inactivity_LogoutFunctionality_DESKTOP_TEST_Desktop",
      "ID": "TC-253",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Remain completely inactive (no mouse movement, clicks, or keyboard input) for 5 minutes.",
          "Expected Result": "No user activity is detected by the system for 5 minutes."
        },
        {
          "Step": 3,
          "Step Description": "Observe if a notification or pop-up warning about impending session expiration appears after 5 minutes of inactivity.",
          "Expected Result": "A notification or pop-up appears, warning the user that the session will expire soon due to inactivity, possibly with a countdown timer."
        },
        {
          "Step": 4,
          "Step Description": "Do not interact with the system after the notification appears. Wait for the countdown to complete.",
          "Expected Result": "The system automatically logs out the user after the countdown expires."
        },
        {
          "Step": 5,
          "Step Description": "Observe the post-logout behavior.",
          "Expected Result": "User is redirected to the login screen and cannot access any features without logging in again."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system on a desktop device.\n3. No other active sessions for the same user.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management / Automatic Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user1/password1)",
      "Expected Result": "The user is automatically logged out after 5 minutes of inactivity, receives a warning notification before logout, and is redirected to the login screen. The disconnect event is logged in the system logs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-XPS202_Notification_ContinueSession_DESKTOP_TEST_Desktop",
      "ID": "TC-254",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for 5 minutes.",
          "Expected Result": "No user activity is detected by the system for 5 minutes."
        },
        {
          "Step": 3,
          "Step Description": "Observe the notification or pop-up warning about impending session expiration.",
          "Expected Result": "A notification or pop-up appears, warning the user that the session will expire soon due to inactivity, with a 'Continue' button."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Continue' button within the countdown period.",
          "Expected Result": "The session remains active, the notification disappears, and the user is not logged out."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system on a desktop device.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management / Session Extension",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user2/password2)",
      "Expected Result": "The user receives a notification after 5 minutes of inactivity and, upon clicking 'Continue', the session remains active without logout.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-XPS202_ActiveUser_NoLogout_DESKTOP_TEST_Desktop",
      "ID": "TC-255",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform periodic interactions (e.g., mouse movement, clicks, or typing) at intervals less than 5 minutes for a total duration of 10 minutes.",
          "Expected Result": "User activity is continuously detected by the system."
        },
        {
          "Step": 3,
          "Step Description": "Observe if any inactivity notification or automatic logout occurs during this period.",
          "Expected Result": "No inactivity notification or automatic logout occurs; the session remains active."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system on a desktop device.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management / Activity Monitoring",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user3/password3)",
      "Expected Result": "As long as the user remains active, no inactivity notification or automatic logout is triggered.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-XPS202_Inactivity_LogoutFunctionality_MOBILE_TEST_Android",
      "ID": "TC-256",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials on an Android mobile device.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Remain completely inactive (no touch, taps, or input) for 5 minutes.",
          "Expected Result": "No user activity is detected by the system for 5 minutes."
        },
        {
          "Step": 3,
          "Step Description": "Observe if a notification or pop-up warning about impending session expiration appears after 5 minutes of inactivity.",
          "Expected Result": "A notification or pop-up appears, warning the user that the session will expire soon due to inactivity, possibly with a countdown timer."
        },
        {
          "Step": 4,
          "Step Description": "Do not interact with the system after the notification appears. Wait for the countdown to complete.",
          "Expected Result": "The system automatically logs out the user after the countdown expires."
        },
        {
          "Step": 5,
          "Step Description": "Observe the post-logout behavior.",
          "Expected Result": "User is redirected to the login screen and cannot access any features without logging in again."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Android 12, ZENIT Mobile App",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system on an Android device.\n3. No other active sessions for the same user.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management / Automatic Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user4/password4)",
      "Expected Result": "The user is automatically logged out after 5 minutes of inactivity, receives a warning notification before logout, and is redirected to the login screen. The disconnect event is logged in the system logs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-XPS202_Inactivity_LogoutFunctionality_MOBILE_TEST_iOS",
      "ID": "TC-257",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials on an iOS mobile device.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Remain completely inactive (no touch, taps, or input) for 5 minutes.",
          "Expected Result": "No user activity is detected by the system for 5 minutes."
        },
        {
          "Step": 3,
          "Step Description": "Observe if a notification or pop-up warning about impending session expiration appears after 5 minutes of inactivity.",
          "Expected Result": "A notification or pop-up appears, warning the user that the session will expire soon due to inactivity, possibly with a countdown timer."
        },
        {
          "Step": 4,
          "Step Description": "Do not interact with the system after the notification appears. Wait for the countdown to complete.",
          "Expected Result": "The system automatically logs out the user after the countdown expires."
        },
        {
          "Step": 5,
          "Step Description": "Observe the post-logout behavior.",
          "Expected Result": "User is redirected to the login screen and cannot access any features without logging in again."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "iOS 16, ZENIT Mobile App",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system on an iOS device.\n3. No other active sessions for the same user.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management / Automatic Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user5/password5)",
      "Expected Result": "The user is automatically logged out after 5 minutes of inactivity, receives a warning notification before logout, and is redirected to the login screen. The disconnect event is logged in the system logs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "AutoLogout-XPS202_LogoutEvent_Logging_DESKTOP_TEST_Desktop",
      "ID": "TC-258",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials on a desktop device.",
          "Expected Result": "User is successfully logged in and the main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Remain inactive for 5 minutes to trigger automatic logout.",
          "Expected Result": "No user activity is detected by the system for 5 minutes."
        },
        {
          "Step": 3,
          "Step Description": "After automatic logout, access the system logs as an administrator or with appropriate permissions.",
          "Expected Result": "System logs are accessible for review."
        },
        {
          "Step": 4,
          "Step Description": "Search for the disconnect event corresponding to the user's session.",
          "Expected Result": "A disconnect event is logged with the correct timestamp and user identifier."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged into the ZENIT system on a desktop device.\n3. Tester has access to system logs with appropriate permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Session Management / Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user6/password6); Admin credentials for log access.",
      "Expected Result": "The disconnect event for the user's session is correctly logged in the system logs with accurate details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-202 - Disconnected for inactivity"
    },
    {
      "Title": "LoginTracking-XPS203_LoginTracking_RegistrationOfAccess_DESKTOP_TEST_Desktop",
      "ID": "TC-259",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on a desktop device.",
          "Expected Result": "Application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password credentials for a test user.",
          "Expected Result": "Credentials are entered."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button to authenticate.",
          "Expected Result": "User is authenticated and granted access to the application."
        },
        {
          "Step": 4,
          "Step Description": "Query the secure database for the latest login record for the test user.",
          "Expected Result": "A new login record is present in the database for the test user."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the login record contains the following fields: Username, Surname and First Name, Email Address, Title, Department, Date of Last Login, Status of the Username, and Role.",
          "Expected Result": "All required fields are present and correctly populated in the login record."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Test user account is created with all required profile information (Username, Surname, First Name, Email, Title, Department, Status, Role).\n2. Tester has access to the secure database for verification.\n3. Application is deployed and accessible on the desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials (e.g., username: testuser1, password: Test@1234) and expected profile data.",
      "Expected Result": "Upon successful login, a new record is created in the secure database with all required fields accurately populated for the authenticated user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "LoginTracking-XPS203_LoginTracking_RegistrationOfAccess_MOBILE_ANDROID_TEST_Android",
      "ID": "TC-260",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an Android mobile device.",
          "Expected Result": "Application opens successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password credentials for a test user.",
          "Expected Result": "Credentials are entered."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Login' button to authenticate.",
          "Expected Result": "User is authenticated and granted access to the application."
        },
        {
          "Step": 4,
          "Step Description": "Query the secure database for the latest login record for the test user.",
          "Expected Result": "A new login record is present in the database for the test user."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the login record contains the following fields: Username, Surname and First Name, Email Address, Title, Department, Date of Last Login, Status of the Username, and Role.",
          "Expected Result": "All required fields are present and correctly populated in the login record."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Android 12, Mobile Application",
      "Preconditions": "1. Test user account is created with all required profile information (Username, Surname, First Name, Email, Title, Department, Status, Role).\n2. Tester has access to the secure database for verification.\n3. Application is installed and accessible on the Android device.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials (e.g., username: testuser2, password: Test@5678) and expected profile data.",
      "Expected Result": "Upon successful login, a new record is created in the secure database with all required fields accurately populated for the authenticated user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "LoginTracking-XPS203_LoginTracking_RegistrationOfAccess_MOBILE_IOS_TEST_iOS",
      "ID": "TC-261",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application on an iOS mobile device.",
          "Expected Result": "Application opens successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password credentials for a test user.",
          "Expected Result": "Credentials are entered."
        },
        {
          "Step": 3,
          "Step Description": "Tap the 'Login' button to authenticate.",
          "Expected Result": "User is authenticated and granted access to the application."
        },
        {
          "Step": 4,
          "Step Description": "Query the secure database for the latest login record for the test user.",
          "Expected Result": "A new login record is present in the database for the test user."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the login record contains the following fields: Username, Surname and First Name, Email Address, Title, Department, Date of Last Login, Status of the Username, and Role.",
          "Expected Result": "All required fields are present and correctly populated in the login record."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "iOS 16, Mobile Application",
      "Preconditions": "1. Test user account is created with all required profile information (Username, Surname, First Name, Email, Title, Department, Status, Role).\n2. Tester has access to the secure database for verification.\n3. Application is installed and accessible on the iOS device.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials (e.g., username: testuser3, password: Test@9101) and expected profile data.",
      "Expected Result": "Upon successful login, a new record is created in the secure database with all required fields accurately populated for the authenticated user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "LoginTracking-XPS203_LoginTracking_RegistrationOfAccess_InvalidLoginAttempt_DESKTOP_TEST_Desktop",
      "ID": "TC-262",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on a desktop device.",
          "Expected Result": "Application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid username or password credentials.",
          "Expected Result": "Credentials are entered."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button to attempt authentication.",
          "Expected Result": "Authentication fails and user is not granted access."
        },
        {
          "Step": 4,
          "Step Description": "Query the secure database for any new login record for the attempted user.",
          "Expected Result": "No new login record is created in the database for the failed login attempt."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Test user account exists.\n2. Tester has access to the secure database for verification.\n3. Application is deployed and accessible on the desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid credentials (e.g., username: testuser1, password: WrongPass123).",
      "Expected Result": "No login record is created in the secure database for failed authentication attempts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for login tracking (failed login).",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "LoginTracking-XPS203_LoginTracking_RegistrationOfAccess_FieldValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-263",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Launch the application on a desktop device.",
          "Expected Result": "Application launches successfully."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password credentials for a test user with all profile fields populated (including special characters and edge cases).",
          "Expected Result": "Credentials are entered."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Login' button to authenticate.",
          "Expected Result": "User is authenticated and granted access to the application."
        },
        {
          "Step": 4,
          "Step Description": "Query the secure database for the latest login record for the test user.",
          "Expected Result": "A new login record is present in the database for the test user."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all required fields (Username, Surname and First Name, Email Address, Title, Department, Date of Last Login, Status of the Username, Role) are correctly populated, including handling of special characters and edge cases.",
          "Expected Result": "All fields are correctly populated and stored, including special characters and edge cases."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Test user account is created with all required profile information, including special characters (e.g., accents, hyphens) and edge case values.\n2. Tester has access to the secure database for verification.\n3. Application is deployed and accessible on the desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials (e.g., username: testuser4, password: Test@Edge1) with special characters in profile fields.",
      "Expected Result": "All required fields are correctly stored in the database, including special characters and edge cases.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers field validation and edge cases for login tracking.",
      "_polarion": "XPS-ZENIT-203 - Login tracking (SOX)"
    },
    {
      "Title": "AccessLoginTracking_XPS-ZENIT-204_ViewLoginTracking_Splunk_TEST_Desktop",
      "ID": "TC-264",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application with valid credentials as a member of the Control Room (IT Support) team.",
          "Expected Result": "User is successfully authenticated and granted access to the Splunk dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard or section dedicated to ZENIT system login tracking information.",
          "Expected Result": "The dashboard or section for ZENIT login tracking is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that login tracking records from the ZENIT system are visible and accessible.",
          "Expected Result": "Login tracking records are displayed, including relevant details such as username, timestamp, and login status."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, Splunk Application",
      "Preconditions": "1. User account exists in the Control Room (IT Support) group.\n2. User has valid Splunk credentials.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. Splunk application is accessible from the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room user credentials; Sample ZENIT login tracking data.",
      "Expected Result": "Authorized Control Room users can view ZENIT login tracking information in Splunk.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "AccessDenied_XPS-ZENIT-204_UnauthorizedUserBlocked_Splunk_TEST_Desktop",
      "ID": "TC-265",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application with valid credentials as a user NOT belonging to the Control Room (IT Support) team.",
          "Expected Result": "User is authenticated but does not have access to the ZENIT login tracking dashboard or section."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the ZENIT login tracking information section.",
          "Expected Result": "Access is denied, and an appropriate error or access denied message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows, Splunk Application",
      "Preconditions": "1. User account exists but is NOT part of the Control Room (IT Support) group.\n2. User has valid Splunk credentials.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. Splunk application is accessible from the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Control Room user credentials; Sample ZENIT login tracking data.",
      "Expected Result": "Unauthorized users cannot access ZENIT login tracking information in Splunk.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "DataIntegrity_XPS-ZENIT-204_VerifyTrackingDataAccuracy_Splunk_TEST_Desktop",
      "ID": "TC-266",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application as a Control Room (IT Support) user.",
          "Expected Result": "User is authenticated and has access to the ZENIT login tracking dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Compare the login tracking records displayed in Splunk with the source records from the ZENIT system for a specific time period.",
          "Expected Result": "The records in Splunk match the source records from ZENIT in terms of count, timestamps, usernames, and statuses."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, Splunk Application",
      "Preconditions": "1. User account exists in the Control Room (IT Support) group.\n2. User has valid Splunk credentials.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. Sample login tracking data is available in both ZENIT and Splunk for comparison.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room user credentials; Sample ZENIT login tracking data; Source ZENIT records for comparison.",
      "Expected Result": "Login tracking data in Splunk accurately reflects the source data from ZENIT.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "FilterSearch_XPS-ZENIT-204_FilterLoginTracking_Splunk_TEST_Desktop",
      "ID": "TC-267",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application as a Control Room (IT Support) user.",
          "Expected Result": "User is authenticated and has access to the ZENIT login tracking dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Apply filters (e.g., by username, date range, login status) to the ZENIT login tracking data.",
          "Expected Result": "Filtered results are displayed according to the selected criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows, Splunk Application",
      "Preconditions": "1. User account exists in the Control Room (IT Support) group.\n2. User has valid Splunk credentials.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. Sufficient login tracking data exists for filtering.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room user credentials; Sample ZENIT login tracking data with varied usernames, dates, and statuses.",
      "Expected Result": "ZENIT login tracking data can be filtered and searched as expected in Splunk.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "NoData_XPS-ZENIT-204_EmptyTrackingData_Splunk_TEST_Desktop",
      "ID": "TC-268",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Splunk application as a Control Room (IT Support) user.",
          "Expected Result": "User is authenticated and has access to the ZENIT login tracking dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the ZENIT login tracking section when no login tracking data is available for the selected period.",
          "Expected Result": "A message indicating that no data is available is displayed, and the dashboard remains functional."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows, Splunk Application",
      "Preconditions": "1. User account exists in the Control Room (IT Support) group.\n2. User has valid Splunk credentials.\n3. ZENIT system is configured to send login tracking data to Splunk.\n4. No login tracking data exists for the selected period.",
      "Execution Mode": "Manual",
      "Functionality": "Login Tracking Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Control Room user credentials; No ZENIT login tracking data for the selected period.",
      "Expected Result": "System gracefully handles the absence of login tracking data and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-204 - Visualization Data Access Tracking"
    },
    {
      "Title": "ConcurrentUpdate_XPS-ZENIT-210_ManageConcurrency_DataConsistency_TEST_Desktop",
      "ID": "TC-269",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and opens Record X for editing.",
          "Expected Result": "User A successfully accesses Record X in edit mode."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and opens the same Record X for editing simultaneously.",
          "Expected Result": "User B successfully accesses Record X in edit mode."
        },
        {
          "Step": 3,
          "Step Description": "User A modifies a field in Record X and saves the changes.",
          "Expected Result": "System saves User A's changes and confirms the update."
        },
        {
          "Step": 4,
          "Step Description": "User B modifies a different field in Record X and attempts to save the changes.",
          "Expected Result": "System detects concurrent modification and either merges changes, prompts User B to review changes, or prevents overwrite, ensuring no data loss or inconsistency."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. Record X exists in the database.\n3. Two valid user accounts (User A and User B) are available.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; Record X with known initial values.",
      "Expected Result": "The system maintains data consistency and integrity, preventing conflicting updates to Record X by multiple users.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent update scenario for a single record.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "SimultaneousCreate_XPS-ZENIT-210_ManageConcurrency_DuplicatePrevention_TEST_Desktop",
      "ID": "TC-270",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A and User B log into the system simultaneously.",
          "Expected Result": "Both users are authenticated and have access to the application."
        },
        {
          "Step": 2,
          "Step Description": "Both users attempt to create a new record with the same unique identifier (e.g., same email or ID) at the same time.",
          "Expected Result": "System processes both requests concurrently."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to both creation attempts.",
          "Expected Result": "System allows only one record to be created with the unique identifier, and the other user receives an error or notification about the duplicate."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. Two valid user accounts (User A and User B) are available.\n3. No existing record with the test unique identifier.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; unique identifier value for new record creation.",
      "Expected Result": "The system prevents duplicate records from being created during simultaneous requests, ensuring data integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent creation and duplicate prevention.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "ConcurrentReadWrite_XPS-ZENIT-210_ManageConcurrency_ReadWhileWrite_TEST_Desktop",
      "ID": "TC-271",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and opens Record Y for editing.",
          "Expected Result": "User A accesses Record Y in edit mode."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and opens the same Record Y for viewing (read-only mode).",
          "Expected Result": "User B accesses Record Y in view mode."
        },
        {
          "Step": 3,
          "Step Description": "User A modifies and saves changes to Record Y.",
          "Expected Result": "System saves User A's changes and confirms the update."
        },
        {
          "Step": 4,
          "Step Description": "User B refreshes the view of Record Y after User A's save.",
          "Expected Result": "User B sees the updated data reflecting User A's changes, ensuring data consistency."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. Record Y exists in the database.\n3. Two valid user accounts (User A and User B) are available.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; Record Y with known initial values.",
      "Expected Result": "The system ensures that users viewing data see the most recent committed changes, maintaining data consistency during concurrent read/write operations.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrent read and write scenario for a single record.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "BulkConcurrentAccess_XPS-ZENIT-210_ManageConcurrency_StressSimultaneousUsers_TEST_Desktop",
      "ID": "TC-272",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate 50 users logging into the system and accessing the same dataset simultaneously.",
          "Expected Result": "All users are authenticated and can access the dataset without errors."
        },
        {
          "Step": 2,
          "Step Description": "All users attempt to perform read and write operations on different records within the dataset at the same time.",
          "Expected Result": "System processes all operations without data loss, corruption, or performance degradation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. Test environment supports simulation of 50 concurrent users.\n3. Dataset with multiple records exists.",
      "Execution Mode": "Automated",
      "Functionality": "Concurrency Management",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": true,
      "Dataset": "Test user pool (50 accounts); dataset with multiple records.",
      "Expected Result": "The system maintains data consistency and integrity under high concurrent load, with no errors or data conflicts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers high-load concurrency and stress scenario.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "TransactionRollback_XPS-ZENIT-210_ManageConcurrency_ConflictRollback_TEST_Desktop",
      "ID": "TC-273",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A logs into the system and begins editing Record Z.",
          "Expected Result": "User A accesses Record Z in edit mode."
        },
        {
          "Step": 2,
          "Step Description": "User B logs into the system and begins editing the same Record Z.",
          "Expected Result": "User B accesses Record Z in edit mode."
        },
        {
          "Step": 3,
          "Step Description": "User A saves changes to Record Z.",
          "Expected Result": "System saves User A's changes and confirms the update."
        },
        {
          "Step": 4,
          "Step Description": "User B attempts to save conflicting changes to Record Z.",
          "Expected Result": "System detects the conflict and either rolls back User B's transaction or prompts User B to resolve the conflict, ensuring no data inconsistency."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. System is deployed and accessible.\n2. Record Z exists in the database.\n3. Two valid user accounts (User A and User B) are available.",
      "Execution Mode": "Manual",
      "Functionality": "Concurrency Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User A and User B credentials; Record Z with known initial values.",
      "Expected Result": "The system prevents data inconsistency by rolling back or resolving conflicting transactions during concurrent edits.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers transaction rollback and conflict resolution scenario.",
      "_polarion": "XPS-ZENIT-210 - Manage concurrency"
    },
    {
      "Title": "Settings-XPS211_Access_SettingsMenu_functionality/Desktop_TEST_Desktop",
      "ID": "TC-274",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the BO ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Locate and click on the 'Settings' menu option from the main navigation.",
          "Expected Result": "Settings menu is displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User has a valid BO ZENIT account.\n2. User is logged into the BO ZENIT application.\n3. Application is running on a supported desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Menu Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials for BO ZENIT.",
      "Expected Result": "User is able to access the Settings menu without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only access to the Settings menu, not the individual settings within.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_LanguageSelection_ItalianOnly/Desktop_TEST_Desktop",
      "ID": "TC-275",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the language selection option within the Settings menu.",
          "Expected Result": "Language selection option is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only 'Italian' is available for selection.",
          "Expected Result": "Only 'Italian' is selectable; other languages are not available."
        },
        {
          "Step": 4,
          "Step Description": "Select 'Italian' and save/apply the setting (if not already selected).",
          "Expected Result": "Application confirms the language is set to Italian."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into BO ZENIT.\n2. User has access to the Settings menu.\n3. Application is in Phase 1 (only Italian implemented).",
      "Execution Mode": "Manual",
      "Functionality": "Language Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (default application state)",
      "Expected Result": "Only Italian is available for language selection and can be set successfully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers Phase 1 limitation: only Italian language implemented.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_LanguageSelection_FormatVerification/Desktop_TEST_Desktop",
      "ID": "TC-276",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set the application language to Italian in the Settings menu.",
          "Expected Result": "Language is set to Italian."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a section displaying dates (e.g., transaction history).",
          "Expected Result": "Dates are displayed in dd/mm/yyyy format."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to a section displaying monetary amounts (e.g., account balance).",
          "Expected Result": "Amounts are displayed in 0.000,00 € format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into BO ZENIT.\n2. Italian language is set in Settings.\n3. Application contains data with dates and amounts to display.",
      "Execution Mode": "Manual",
      "Functionality": "Language Format Application",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample transactions with dates and amounts.",
      "Expected Result": "All dates and amounts are displayed in Italian local formats when Italian is selected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Italian format as per Phase 1.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_ThemeStyle_LightDarkSwitch/Desktop_TEST_Desktop",
      "ID": "TC-277",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the theme style option (light/dark) in the Settings menu.",
          "Expected Result": "Theme style option is visible with 'Light' and 'Dark' choices."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Dark' theme and save/apply the setting.",
          "Expected Result": "Application switches to dark theme; UI updates accordingly."
        },
        {
          "Step": 4,
          "Step Description": "Select 'Light' theme and save/apply the setting.",
          "Expected Result": "Application switches back to light theme; UI updates accordingly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into BO ZENIT.\n2. User has access to the Settings menu.",
      "Execution Mode": "Manual",
      "Functionality": "Theme Style Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (default application state)",
      "Expected Result": "User can switch between light and dark themes, and the UI updates immediately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers both theme options and UI update.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_FontSize_NormalLargeSwitch/Desktop_TEST_Desktop",
      "ID": "TC-278",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu as a logged-in user.",
          "Expected Result": "Settings menu is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the font size option (normal/large) in the Settings menu.",
          "Expected Result": "Font size option is visible with 'Normal' and 'Large' choices."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Large' font size and save/apply the setting.",
          "Expected Result": "Application UI updates to display larger font size."
        },
        {
          "Step": 4,
          "Step Description": "Select 'Normal' font size and save/apply the setting.",
          "Expected Result": "Application UI updates to display normal font size."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into BO ZENIT.\n2. User has access to the Settings menu.",
      "Execution Mode": "Manual",
      "Functionality": "Font Size Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (default application state)",
      "Expected Result": "User can switch between normal and large font sizes, and the UI updates accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers both font size options and UI update.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_SettingsPersistence_AfterLogoutLogin/Desktop_TEST_Desktop",
      "ID": "TC-279",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Settings menu and set theme to 'Dark' and font size to 'Large'.",
          "Expected Result": "Settings are saved and UI updates accordingly."
        },
        {
          "Step": 2,
          "Step Description": "Log out from the BO ZENIT application.",
          "Expected Result": "User is logged out and redirected to the login page."
        },
        {
          "Step": 3,
          "Step Description": "Log in again with the same user credentials.",
          "Expected Result": "User is logged in and lands on the main dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the previously selected theme and font size are still applied.",
          "Expected Result": "Theme is 'Dark' and font size is 'Large' as previously set."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is logged into BO ZENIT.\n2. User has access to the Settings menu.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Persistence",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials for BO ZENIT.",
      "Expected Result": "User settings for theme and font size persist after logout and login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers persistence of settings across sessions.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "Settings-XPS211_SettingsMenu_InvalidAccess/Desktop_TEST_Desktop",
      "ID": "TC-280",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the Settings menu without logging in (e.g., by navigating directly to the URL).",
          "Expected Result": "Access is denied; user is redirected to the login page or shown an appropriate error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, BO ZENIT Web Application",
      "Preconditions": "1. User is not logged into BO ZENIT.\n2. Application is running on a supported desktop environment.",
      "Execution Mode": "Manual",
      "Functionality": "Settings Menu Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (default application state)",
      "Expected Result": "Unauthorized users cannot access the Settings menu.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for unauthorized access.",
      "_polarion": "XPS-ZENIT-211 - Settings"
    },
    {
      "Title": "LogAudit-proj_001_log_creation_and_content_TEST_Desktop",
      "ID": "TC-281",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a user action that should trigger a log entry (e.g., user login).",
          "Expected Result": "The action is completed successfully."
        },
        {
          "Step": 2,
          "Step Description": "Access the log/audit system or file.",
          "Expected Result": "Log/audit file or system is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Locate the log entry corresponding to the performed action.",
          "Expected Result": "A log entry for the action exists."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the log entry contains all required information (timestamp, user ID, action performed, status, etc.).",
          "Expected Result": "Log entry contains accurate and complete information as per requirements."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account exists.\n2. User is able to access the application.\n3. Log/audit system is enabled and configured.\n4. Tester has access to log/audit files or system.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, access to log/audit system.",
      "Expected Result": "A log entry is created for the user action, containing all required and accurate information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers log creation and content for a single user action.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogAudit-proj_001_log_integrity_and_tamper_detection_TEST_Desktop",
      "ID": "TC-282",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a user action that triggers a log entry (e.g., data update).",
          "Expected Result": "Action is completed and log entry is generated."
        },
        {
          "Step": 2,
          "Step Description": "Access the log/audit file or system.",
          "Expected Result": "Log/audit file or system is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to modify or delete the generated log entry (if permissions allow).",
          "Expected Result": "System prevents unauthorized modification or deletion, or logs the tampering attempt."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account exists.\n2. Log/audit system is enabled and configured.\n3. Tester has access to log/audit files or system.\n4. Permissions for log modification are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, access to log/audit system.",
      "Expected Result": "Log entries cannot be tampered with without detection; unauthorized modifications are prevented or logged.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers log integrity and tamper detection.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogAudit-proj_001_log_retention_and_deletion_policy_TEST_Desktop",
      "ID": "TC-283",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform actions that generate log entries over a period exceeding the retention policy (simulate if necessary).",
          "Expected Result": "Log entries are created for each action."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the retention period to elapse (or simulate passage of time).",
          "Expected Result": "Retention period is reached."
        },
        {
          "Step": 3,
          "Step Description": "Check the log/audit system for entries older than the retention period.",
          "Expected Result": "Log entries older than the retention period are deleted or archived as per policy."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Log/audit system is enabled and configured.\n2. Retention policy is defined and active.\n3. Tester has access to log/audit files or system.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, access to log/audit system, retention policy details.",
      "Expected Result": "Log entries are retained and deleted/archived according to the defined retention policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers log retention and deletion policy enforcement.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogAudit-proj_001_log_access_control_and_auditability_TEST_Desktop",
      "ID": "TC-284",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access log/audit files or system with a user account lacking sufficient permissions.",
          "Expected Result": "Access is denied and the attempt is logged."
        },
        {
          "Step": 2,
          "Step Description": "Access log/audit files or system with an authorized user account.",
          "Expected Result": "Access is granted and the access is logged."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Log/audit system is enabled and configured.\n2. User accounts with different permission levels exist.\n3. Tester has access to both authorized and unauthorized accounts.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with different permission levels.",
      "Expected Result": "Only authorized users can access logs; all access attempts are logged.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control and auditability of log access.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogAudit-proj_001_log_format_and_time_synchronization_TEST_Desktop",
      "ID": "TC-285",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a user action that triggers a log entry.",
          "Expected Result": "Log entry is generated."
        },
        {
          "Step": 2,
          "Step Description": "Access the log/audit file or system.",
          "Expected Result": "Log/audit file or system is accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the log entry timestamp matches the system time and is in the correct format (e.g., ISO 8601).",
          "Expected Result": "Timestamp is accurate and formatted as per requirements."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. Log/audit system is enabled and configured.\n2. System time is synchronized.\n3. Tester has access to log/audit files or system.",
      "Execution Mode": "Manual",
      "Functionality": "Log/Audit",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, system time settings.",
      "Expected Result": "Log entries have accurate, synchronized timestamps in the correct format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers log entry format and time synchronization.",
      "_polarion": "Log/Audit"
    },
    {
      "Title": "LogTemplate_XPS-ZENIT-220_LogFormatValidation_OperationsTracking_TEST_Backend_TEST_Desktop",
      "ID": "TC-286",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a modification operation on the database (e.g., update a user record) via the application.",
          "Expected Result": "A log entry is generated for the operation."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the generated log entry from the log storage system.",
          "Expected Result": "The log entry is accessible for review by authorized personnel."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the log entry description matches the required template: #*<applicationName>*# #AUDIT# #*<actionCategory>*# User '<username>' having role '<userRole>' has performed the following action: <actionDescription>",
          "Expected Result": "The log entry strictly follows the specified template with correct values for applicationName, actionCategory, username, userRole, and actionDescription."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend Application",
      "Preconditions": "1. Application is deployed and configured with log traceability management enabled. 2. Test user account with modification privileges is available. 3. Access to log storage system is granted for test purposes.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking - Log Format",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user: johndoe, Role: admin, Application: XPS-ZENIT, Action: Update user email, ActionCategory: DB_MODIFICATION",
      "Expected Result": "All modification operation logs strictly follow the required template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only log format validation for modification operations.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogRetention_XPS-ZENIT-220_LogRetentionPolicy_OperationsTracking_TEST_Backend_TEST_Desktop",
      "ID": "TC-287",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a modification operation that triggers an audit log entry.",
          "Expected Result": "A log entry is generated and stored."
        },
        {
          "Step": 2,
          "Step Description": "Wait for the standard log retention period to expire (simulate or configure a short retention for test).",
          "Expected Result": "Standard logs are purged according to policy."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the audit log entry generated in Step 1 is still retained beyond the standard log retention period.",
          "Expected Result": "Audit log entry is still present and accessible after standard logs are purged."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend Application",
      "Preconditions": "1. Application is configured with differentiated log retention policies (audit logs vs. standard logs). 2. Access to log storage system. 3. Ability to simulate or configure log retention periods for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking - Log Retention",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Audit log entry generated by user johndoe, Role: admin, Application: XPS-ZENIT, Action: Update user email",
      "Expected Result": "Audit logs are retained longer than standard logs as per configuration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers retention policy for audit logs only.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogImmutability_XPS-ZENIT-220_LogImmutability_OperationsTracking_TEST_Backend_TEST_Desktop",
      "ID": "TC-288",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a modification operation that generates an audit log entry.",
          "Expected Result": "Audit log entry is created and stored."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to modify the content of the generated audit log entry via direct database/file access or application interface.",
          "Expected Result": "Modification attempt is rejected or fails; log entry remains unchanged."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to delete the audit log entry via direct database/file access or application interface.",
          "Expected Result": "Deletion attempt is rejected or fails; log entry remains present."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend Application",
      "Preconditions": "1. Application is deployed and configured with immutable log storage. 2. Access to log storage system with sufficient privileges to attempt modification/deletion. 3. Test user account with modification privileges.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking - Log Immutability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Audit log entry generated by user johndoe, Role: admin, Application: XPS-ZENIT, Action: Update user email",
      "Expected Result": "Audit log entries are immutable and cannot be modified or deleted after creation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers immutability for audit logs only.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogSecurity_XPS-ZENIT-220_LogAccessControl_OperationsTracking_TEST_Backend_TEST_Desktop",
      "ID": "TC-289",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access audit log entries as an unauthorized user (e.g., user without audit log access privileges).",
          "Expected Result": "Access to audit log entries is denied."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access audit log entries as an authorized user (e.g., user with audit log access privileges).",
          "Expected Result": "Access to audit log entries is granted."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend Application",
      "Preconditions": "1. Application is deployed with role-based access control configured. 2. Test user accounts with and without audit log access privileges are available. 3. Audit log entries exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking - Log Security",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User1: johndoe (no access), User2: adminuser (has access), Audit log entry present",
      "Expected Result": "Audit log entries are accessible only to authorized users; unauthorized access is denied.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control for audit logs only.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "LogVisibility_XPS-ZENIT-220_NoUserVisibility_OperationsTracking_TEST_Backend_TEST_Desktop",
      "ID": "TC-290",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as an authorized user (with standard privileges).",
          "Expected Result": "User is authenticated and navigates to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to locate any interface or menu option that allows viewing of audit log entries.",
          "Expected Result": "No option or interface is available for viewing audit log entries."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux Backend Application",
      "Preconditions": "1. Application is deployed and running. 2. Test user account with standard privileges is available.",
      "Execution Mode": "Manual",
      "Functionality": "Operations Tracking - Log Visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User: johndoe (standard privileges)",
      "Expected Result": "Audit log entries are not visible to users in the current application phase.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers absence of user-facing log visibility.",
      "_polarion": "XPS-ZENIT-220 - Operations Tracking"
    },
    {
      "Title": "ExcelExport-proj_001_CreditManagement_ExportFunctionality/Desktop_TEST_Desktop",
      "ID": "TC-291",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with valid credentials and a profile that has access to Credit Management.",
          "Expected Result": "User is successfully logged in and the Credit Management dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section of the dashboard.",
          "Expected Result": "Credit Management interface is displayed according to the latest mockup specifications."
        },
        {
          "Step": 3,
          "Step Description": "Locate and click the 'Export to Excel' button or link within the Credit Management dashboard.",
          "Expected Result": "System initiates the export process and prompts the user to download an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Download and open the exported Excel file.",
          "Expected Result": "Excel file opens successfully and contains data as per the agreed export format and naming conventions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials with access to Credit Management.\n2. Dashboard application is accessible and operational.\n3. User is assigned a profile with export permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Excel Export",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample Credit Management data present in the system.",
      "Expected Result": "The exported Excel file is generated with the correct format, data, and naming convention as per the latest specifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers standard export scenario for authorized users.",
      "_polarion": "Dashboard - Credit Management"
    },
    {
      "Title": "AccessProfile-proj_001_CreditManagement_VisibilityByProfile/Desktop_TEST_Desktop",
      "ID": "TC-292",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has restricted access to Credit Management data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section.",
          "Expected Result": "Only the data and components permitted for the user's access profile are visible. Restricted data/components are hidden or disabled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with restricted access profile is available.\n2. Dashboard application is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Access Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with restricted access profile.",
      "Expected Result": "The dashboard displays only the data and components allowed for the user's access profile, ensuring compliance with visibility rules.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers visibility logic for restricted profiles.",
      "_polarion": "Dashboard - Credit Management"
    },
    {
      "Title": "Mockup-proj_001_CreditManagement_LayoutConsistency/Desktop_TEST_Desktop",
      "ID": "TC-293",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a valid user account.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section.",
          "Expected Result": "Credit Management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Compare the displayed layout and data aggregation with the latest approved mockup and specifications.",
          "Expected Result": "The layout and data aggregation match the mockup and business specifications, or any deviations are documented as per change management process."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with access to Credit Management.\n2. Latest approved mockup/specification document is available.\n3. Dashboard application is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "UI Consistency",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; latest mockup/specification document.",
      "Expected Result": "The Credit Management dashboard layout and data aggregation are consistent with the latest approved mockup and specifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers UI and data aggregation consistency with mockup.",
      "_polarion": "Dashboard - Credit Management"
    },
    {
      "Title": "ExcelExportError-proj_001_CreditManagement_ExportErrorHandling/Desktop_TEST_Desktop",
      "ID": "TC-294",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with valid credentials and access to Credit Management.",
          "Expected Result": "User is successfully logged in and the Credit Management dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Credit Management section.",
          "Expected Result": "Credit Management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Simulate a scenario where the export service is unavailable (e.g., disconnect network or stop export backend service).",
          "Expected Result": "Export service is unavailable."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to export Credit Management data to Excel.",
          "Expected Result": "System displays a clear error message indicating the export failed due to a service issue. No corrupted or incomplete file is downloaded."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with export permissions.\n2. Dashboard application is accessible.\n3. Ability to simulate export service unavailability (e.g., via network tools or backend configuration).",
      "Execution Mode": "Manual",
      "Functionality": "Excel Export Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; method to simulate export service failure.",
      "Expected Result": "System prevents export and displays a clear error message when the export service is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for export failures.",
      "_polarion": "Dashboard - Credit Management"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_ValidFilters_DESKTOP_TEST_Desktop",
      "ID": "TC-295",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed with all search filters visible."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values in one or more search filters (e.g., select 'Zona', enter 'Rice' as 123, select 'Channel 1' as 'BRANDED').",
          "Expected Result": "Entered values are accepted and displayed in the respective fields."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System processes the search request."
        },
        {
          "Step": 5,
          "Step Description": "Observe the results table/list displayed.",
          "Expected Result": "A list of PoS matching the search criteria is displayed in a table, with each row representing a single PoS and columns for IdRice, Company Name, etc."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "Search PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Example search filters: Zona='A', Rice=123, Channel 1='BRANDED'.",
      "Expected Result": "System displays a list of PoS matching the entered search criteria in a table format with all required columns.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_NoResults_DESKTOP_TEST_Desktop",
      "ID": "TC-296",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter search criteria that do not match any PoS (e.g., set Rice to 9999, which is known to not exist).",
          "Expected Result": "Entered values are accepted."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System processes the search request."
        },
        {
          "Step": 5,
          "Step Description": "Observe the notification displayed.",
          "Expected Result": "A notification is shown indicating that no results were found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "Search PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search filters: Rice=9999 (assuming this does not exist).",
      "Expected Result": "System displays a notification indicating that no PoS were found matching the search criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_InvalidInput_DESKTOP_TEST_Desktop",
      "ID": "TC-297",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter invalid data in one or more input fields (e.g., enter letters in the 'Rice' numeric field, enter a VAT number with less than 11 digits).",
          "Expected Result": "Invalid data is entered in the respective fields."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System validates the input fields."
        },
        {
          "Step": 5,
          "Step Description": "Observe the error messages displayed.",
          "Expected Result": "System displays a message indicating the specific input errors. User is required to correct the errors before proceeding."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "Search PoS Input Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid input examples: Rice='ABC', VAT Number='12345'.",
      "Expected Result": "System detects and displays error messages for invalid input fields, preventing the search until corrections are made.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_ResetFilters_DESKTOP_TEST_Desktop",
      "ID": "TC-298",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter values in one or more search filters.",
          "Expected Result": "Values are entered in the respective fields."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'RESET' button.",
          "Expected Result": "All search filters are cleared and reset to their default state."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "Search PoS Reset Filters",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Example filter values: Zona='B', Cluster='Retail'.",
      "Expected Result": "All search filters are cleared and ready for new input after clicking 'RESET'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_SelectSinglePoS_DESKTOP_TEST_Desktop",
      "ID": "TC-299",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid search criteria and click 'SEARCH'.",
          "Expected Result": "A list of PoS matching the criteria is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click the edit icon next to a PoS in the results list.",
          "Expected Result": "System retrieves and displays the details of the selected PoS on the 'Single PoS' screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.\n4. At least one PoS exists matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Single PoS Selection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search filters: Zona='C', Channel 2='UNBRANDED'.",
      "Expected Result": "System displays the 'Single PoS' screen with all relevant details for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_ManualRefreshSinglePoS_DESKTOP_TEST_Desktop",
      "ID": "TC-300",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid search criteria and click 'SEARCH'.",
          "Expected Result": "A list of PoS matching the criteria is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click the edit icon next to a PoS in the results list to open the 'Single PoS' screen.",
          "Expected Result": "The 'Single PoS' screen is displayed with PoS details."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'REFRESH' button on the 'Single PoS' screen.",
          "Expected Result": "System updates and refreshes the PoS data displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.\n4. At least one PoS exists matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Manual Refresh Single PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search filters: Cluster='Wholesale'.",
      "Expected Result": "PoS data is refreshed and the latest information is displayed on the 'Single PoS' screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_AutoCompleteCity_DESKTOP_TEST_Desktop",
      "ID": "TC-301",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Begin typing a city name in the 'City (Località)' field.",
          "Expected Result": "A list of suggested city names appears based on the entered characters."
        },
        {
          "Step": 4,
          "Step Description": "Select a city from the auto-complete suggestions.",
          "Expected Result": "Selected city is populated in the 'City' field."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "Search PoS Auto-Complete",
      "Test Type": "ux_ui",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials; Example city: 'Mil'.",
      "Expected Result": "Auto-complete suggestions are shown and can be selected for the 'City' field.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_ClosedPoSCheckbox_DESKTOP_TEST_Desktop",
      "ID": "TC-302",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check the 'Closed PoS' checkbox.",
          "Expected Result": "Checkbox is selected."
        },
        {
          "Step": 4,
          "Step Description": "Enter valid search criteria and click 'SEARCH'.",
          "Expected Result": "System processes the search request."
        },
        {
          "Step": 5,
          "Step Description": "Observe the results table/list displayed.",
          "Expected Result": "Results include both open and closed PoS matching the search criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "Search PoS Closed PoS Filter",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search filters: Closed PoS checked, Zona='D'.",
      "Expected Result": "Results include closed PoS when the checkbox is selected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_MandatoryFields_DESKTOP_TEST_Desktop",
      "ID": "TC-303",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform a search without selecting any value for mandatory fields (Channel 1, Channel 2, Cluster).",
          "Expected Result": "Mandatory fields are left empty."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'SEARCH' button.",
          "Expected Result": "System validates the input fields."
        },
        {
          "Step": 5,
          "Step Description": "Observe the error messages displayed.",
          "Expected Result": "System displays a message indicating that mandatory fields must be filled before performing the search."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.",
      "Execution Mode": "Manual",
      "Functionality": "Search PoS Mandatory Fields Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; No values entered for Channel 1, Channel 2, Cluster.",
      "Expected Result": "System prevents the search and displays error messages for missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "SearchPoS-XPSZENIT300_Dashboard_SearchPoS_SectionNavigation_DESKTOP_TEST_Desktop",
      "ID": "TC-304",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Search PoS' function within the Credit Management Dashboard.",
          "Expected Result": "The 'Search PoS' interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid search criteria and click 'SEARCH'.",
          "Expected Result": "A list of PoS matching the criteria is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click the edit icon next to a PoS in the results list to open the 'Single PoS' screen.",
          "Expected Result": "The 'Single PoS' screen is displayed with PoS details."
        },
        {
          "Step": 5,
          "Step Description": "Navigate between different sections/tabs (e.g., 'Credit Management', 'Contracts', 'Guarantees', etc.) on the 'Single PoS' screen.",
          "Expected Result": "Each section/tab loads asynchronously, displaying the relevant data without reloading the entire page. The header remains fixed and visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web (ZENIT)",
      "Preconditions": "1. User has a valid ZENIT account.\n2. User is logged in to ZENIT.\n3. User has access to the Credit Management Dashboard and 'Search PoS' function.\n4. At least one PoS exists matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Single PoS Section Navigation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; Search filters: Cluster='Retail'.",
      "Expected Result": "Each section/tab displays the correct data, loads asynchronously, and the header remains fixed during navigation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-300 - Dashboard - Search PoS"
    },
    {
      "Title": "ExportListPoS_XPS-ZENIT-311_ExportToExcel_ListOfPoS_TEST_Desktop",
      "ID": "TC-305",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a search that returns a list of PoS (Points of Sale).",
          "Expected Result": "A table with multiple PoS entries is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Export to Excel' button for the list of PoS.",
          "Expected Result": "The system generates and initiates the download of an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Check the downloaded file name format.",
          "Expected Result": "File name matches 'PoSFound_<yyyymmddhhmm>.xlsx', where <yyyymmddhhmm> is the extraction timestamp."
        },
        {
          "Step": 5,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The file contains all data presented in the table after the search."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. At least one PoS exists in the system.\n3. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search criteria returning multiple PoS.",
      "Expected Result": "Excel file 'PoSFound_<yyyymmddhhmm>.xlsx' is downloaded and contains all data from the search result table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "ExportSinglePoS_XPS-ZENIT-311_ExportToExcel_SinglePoS_TEST_Desktop",
      "ID": "TC-306",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Search for a specific Single PoS using its unique identifier.",
          "Expected Result": "Details page for the Single PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Export to Excel' button for the Single PoS.",
          "Expected Result": "The system generates and initiates the download of an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Check the downloaded file name format.",
          "Expected Result": "File name matches 'SinglePoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx' with correct values."
        },
        {
          "Step": 5,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The file contains all header data and all information related to all sections for the Single PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. At least one Single PoS exists with known idrice and zonarice.\n3. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Single PoS with known idrice and zonarice.",
      "Expected Result": "Excel file 'SinglePoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx' is downloaded and contains all header and section data for the Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "ExportRelatedPoS_XPS-ZENIT-311_ExportToExcel_RelatedPoS_TEST_Desktop",
      "ID": "TC-307",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a Single PoS details page that has related PoS entries.",
          "Expected Result": "Related PoS table is displayed within the Single PoS details page."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Export to Excel' button for Related PoS.",
          "Expected Result": "The system generates and initiates the download of an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Check the downloaded file name format.",
          "Expected Result": "File name matches 'RelatedPoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx' with correct values."
        },
        {
          "Step": 5,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The file contains all Related PoS presented in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. At least one Single PoS with related PoS exists.\n3. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Single PoS with related PoS entries.",
      "Expected Result": "Excel file 'RelatedPoS_<idrice>_<zonarice>_<yyyymmddhhmm>.xlsx' is downloaded and contains all related PoS data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "ExportToExcel_XPS-ZENIT-311_ExportToExcel_InvalidSearchResult_TEST_Desktop",
      "ID": "TC-308",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a search that returns no PoS results.",
          "Expected Result": "A message indicating 'No results found' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to click on the 'Export to Excel' button.",
          "Expected Result": "The 'Export to Excel' button is disabled or an appropriate message is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search criteria returning zero PoS.",
      "Expected Result": "Export to Excel is not available when no search results are present.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for export functionality.",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "ExportToExcel_XPS-ZENIT-311_ExportToExcel_FileContentValidation_TEST_Desktop",
      "ID": "TC-309",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application via desktop.",
          "Expected Result": "User is successfully logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a search that returns a list of PoS.",
          "Expected Result": "A table with multiple PoS entries is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Export to Excel' button for the list of PoS.",
          "Expected Result": "The system generates and initiates the download of an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The file opens successfully in Excel."
        },
        {
          "Step": 5,
          "Step Description": "Verify that all columns and rows in the Excel file match the data displayed in the search result table.",
          "Expected Result": "All data in the Excel file matches the data shown in the application table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and access to Zenit application.\n2. At least one PoS exists in the system.\n3. User is on a desktop computer with Excel installed.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Search criteria returning multiple PoS.",
      "Expected Result": "Excel file content matches exactly the data displayed in the application table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on data integrity between UI and exported file.",
      "_polarion": "XPS-ZENIT-311 - Export Data"
    },
    {
      "Title": "CreditManagement-XPS330_Requirement_DefaultSectionActivation_Dashboard_TEST_Desktop",
      "ID": "TC-310",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and redirected to the PoS overview page."
        },
        {
          "Step": 2,
          "Step Description": "Select an individual PoS from the list.",
          "Expected Result": "The PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the sections displayed by default on the PoS detail page.",
          "Expected Result": "The 'Credit Management' section is active and visible by default, providing an overview of credit management."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to at least one PoS.\n2. The PoS has been configured in the system.\n3. Dashboard application is accessible from a desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Management Section Activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier.",
      "Expected Result": "Upon accessing the PoS detail page, the 'Credit Management' section is active and visible by default.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_Requirement_ZeroValues_NoCreditLines_Dashboard_TEST_Desktop",
      "ID": "TC-311",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a PoS that has no associated credit lines.",
          "Expected Result": "User is successfully logged in and redirected to the PoS overview page."
        },
        {
          "Step": 2,
          "Step Description": "Select the PoS with no credit lines from the list.",
          "Expected Result": "The PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Management' section (should be active by default).",
          "Expected Result": "The 'Credit Management' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the values displayed for all credit line fields (Base, Extension, Total, Consumed, % Consumed, Residue).",
          "Expected Result": "All values for each field and product line are displayed as zero."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS with no credit lines.\n2. Dashboard application is accessible from a desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Zero State",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with no credit lines.",
      "Expected Result": "All credit line fields display zero values when no credit lines are associated with the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_Requirement_DailyCreditLinesDisplay_Dashboard_TEST_Desktop",
      "ID": "TC-312",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a PoS with daily credit lines.",
          "Expected Result": "User is successfully logged in and redirected to the PoS overview page."
        },
        {
          "Step": 2,
          "Step Description": "Select the relevant PoS from the list.",
          "Expected Result": "The PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Management' section (should be active by default).",
          "Expected Result": "The 'Credit Management' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Locate the 'FIDO SIMP GG' (Daily) section.",
          "Expected Result": "The 'FIDO SIMP GG' section is visible."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the following product lines are present: TOTOCALCIO, IPPICA, SPORT QF, VIRTUAL, and GLOBALE.",
          "Expected Result": "All specified product lines are displayed as rows in the table."
        },
        {
          "Step": 6,
          "Step Description": "For each product line, verify the presence of columns: Base Amount, Extension Amount, Total, Consumed, % Consumed, Residue.",
          "Expected Result": "Each row contains all required columns with correct labels and values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS with daily credit lines.\n2. Dashboard application is accessible from a desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Credit Lines Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with daily credit lines.",
      "Expected Result": "The 'FIDO SIMP GG' section displays all required product lines and columns with correct values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_Requirement_WeeklyCreditLinesDisplay_Dashboard_TEST_Desktop",
      "ID": "TC-313",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a PoS with weekly credit lines.",
          "Expected Result": "User is successfully logged in and redirected to the PoS overview page."
        },
        {
          "Step": 2,
          "Step Description": "Select the relevant PoS from the list.",
          "Expected Result": "The PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Management' section (should be active by default).",
          "Expected Result": "The 'Credit Management' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Locate the 'FIDO SIMP WK' (Weekly) section.",
          "Expected Result": "The 'FIDO SIMP WK' section is visible."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the following product lines are present: TOTOCALCIO, IPPICA, SPORT QF, VIRTUAL, and GLOBALE.",
          "Expected Result": "All specified product lines are displayed as rows in the table."
        },
        {
          "Step": 6,
          "Step Description": "For each product line, verify the presence of columns: Base Amount, Extension Amount, Total, Consumed, % Consumed, Residue.",
          "Expected Result": "Each row contains all required columns with correct labels and values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS with weekly credit lines.\n2. Dashboard application is accessible from a desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Weekly Credit Lines Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with weekly credit lines.",
      "Expected Result": "The 'FIDO SIMP WK' section displays all required product lines and columns with correct values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_Requirement_GeoWeeklyCreditLinesDisplay_Dashboard_TEST_Desktop",
      "ID": "TC-314",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a PoS with GEO weekly credit lines.",
          "Expected Result": "User is successfully logged in and redirected to the PoS overview page."
        },
        {
          "Step": 2,
          "Step Description": "Select the relevant PoS from the list.",
          "Expected Result": "The PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Management' section (should be active by default).",
          "Expected Result": "The 'Credit Management' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Locate the 'FIDO GEO' (Weekly) section.",
          "Expected Result": "The 'FIDO GEO' section is visible."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the following product lines are present: GNTN, CORNER, ONLINE, and TOTALE.",
          "Expected Result": "All specified product lines are displayed as rows in the table."
        },
        {
          "Step": 6,
          "Step Description": "For each product line, verify the presence of columns: Base Amount, Extension Amount, Total, Consumed, % Consumed, Residue.",
          "Expected Result": "Each row contains all required columns with correct labels and values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS with GEO weekly credit lines.\n2. Dashboard application is accessible from a desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Weekly Credit Lines Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with GEO weekly credit lines.",
      "Expected Result": "The 'FIDO GEO' section displays all required product lines and columns with correct values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_Requirement_CreditLineFieldCalculations_Dashboard_TEST_Desktop",
      "ID": "TC-315",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a PoS with at least one credit line.",
          "Expected Result": "User is successfully logged in and redirected to the PoS overview page."
        },
        {
          "Step": 2,
          "Step Description": "Select the relevant PoS from the list.",
          "Expected Result": "The PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Management' section (should be active by default).",
          "Expected Result": "The 'Credit Management' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "For a selected credit line, note the values for Base Amount and Extension Amount.",
          "Expected Result": "Base Amount and Extension Amount are displayed."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the Total value equals the sum of Base Amount and Extension Amount.",
          "Expected Result": "Total = Base Amount + Extension Amount."
        },
        {
          "Step": 6,
          "Step Description": "Note the Consumed value and verify that % Consumed equals (Consumed / Total) * 100%.",
          "Expected Result": "% Consumed is correctly calculated and displayed as a percentage."
        },
        {
          "Step": 7,
          "Step Description": "Verify that Residue equals Total minus Consumed.",
          "Expected Result": "Residue = Total - Consumed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS with at least one credit line.\n2. Dashboard application is accessible from a desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Field Calculations",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with credit lines and known values for Base, Extension, and Consumed.",
      "Expected Result": "All credit line fields (Total, % Consumed, Residue) are calculated and displayed correctly according to the provided formulas.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_Requirement_TotalsSectionDisplay_Dashboard_TEST_Desktop",
      "ID": "TC-316",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a PoS with daily and weekly credit lines.",
          "Expected Result": "User is successfully logged in and redirected to the PoS overview page."
        },
        {
          "Step": 2,
          "Step Description": "Select the relevant PoS from the list.",
          "Expected Result": "The PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Management' section (should be active by default).",
          "Expected Result": "The 'Credit Management' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Scroll to the bottom of the 'Credit Management' section to locate the Totals Section.",
          "Expected Result": "The Totals Section is visible at the bottom of the page."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the 'Total Daily Credits' and 'Total Weekly Credits (Rolling + Static)' are displayed.",
          "Expected Result": "Both summary totals are present and labeled correctly."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the values for these totals represent the sum of the respective metrics from the daily and weekly credit lines.",
          "Expected Result": "Total values are correct and match the sum of the relevant credit line metrics."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS with daily and weekly credit lines.\n2. Dashboard application is accessible from a desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Totals Section Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with both daily and weekly credit lines.",
      "Expected Result": "The Totals Section displays 'Total Daily Credits' and 'Total Weekly Credits (Rolling + Static)' with correct calculated values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "CreditManagement-XPS330_Requirement_CreditLineTableStructure_Dashboard_TEST_Desktop",
      "ID": "TC-317",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a PoS with credit lines.",
          "Expected Result": "User is successfully logged in and redirected to the PoS overview page."
        },
        {
          "Step": 2,
          "Step Description": "Select the relevant PoS from the list.",
          "Expected Result": "The PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Management' section (should be active by default).",
          "Expected Result": "The 'Credit Management' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "For each section ('FIDO SIMP GG', 'FIDO SIMP WK', 'FIDO GEO'), verify that a table is present.",
          "Expected Result": "Each section contains a table."
        },
        {
          "Step": 5,
          "Step Description": "Verify that each row represents a product line and each column represents one of the required fields (Base, Extension, Total, Consumed, % Consumed, Residue).",
          "Expected Result": "Table structure matches the requirement: rows = product lines, columns = required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS with credit lines.\n2. Dashboard application is accessible from a desktop browser.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Line Table Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS identifier with credit lines.",
      "Expected Result": "Each credit line section contains a table with rows for product lines and columns for all required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-330 - Dashboard - Single PoS - \"Credit Management\""
    },
    {
      "Title": "PoS_MasterData_XPS-ZENIT-335_PoSDataVisualization_TEST_Desktop",
      "ID": "TC-318",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to PoS Master Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following PoS data fields are visible: PV Type, Business Type, Network Cluster, Tax Code PoS, Address, Fraction, Province Code, Postal Code, Region, Country, Phone, Phone 2, email.",
          "Expected Result": "All listed PoS data fields are displayed with correct and non-empty values (if data exists for the PoS)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. At least one PoS with complete master data is present in the system.\n3. User is able to access the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all master data fields populated.",
      "Expected Result": "All PoS master data fields are displayed accurately and completely for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only PoS data fields visualization.",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoS_MasterData_XPS-ZENIT-335_HolderDataVisualization_TEST_Desktop",
      "ID": "TC-319",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to Holder Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following Holder data fields are visible: Last Name of Holder, First Name of Holder, Tax Code of Holder, Mobile of Holder, Mobile of Holder 2.",
          "Expected Result": "All listed Holder data fields are displayed with correct and non-empty values (if data exists for the PoS)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. At least one PoS with complete holder data is present in the system.\n3. User is able to access the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "Holder Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all holder data fields populated.",
      "Expected Result": "All Holder data fields are displayed accurately and completely for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Holder data fields visualization.",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoS_MasterData_XPS-ZENIT-335_LdBDataVisualization_TEST_Desktop",
      "ID": "TC-320",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to LdB Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each Line of Business (LdB), the following fields are visible: LdB Name, LdB Status, Date of the last transfer.",
          "Expected Result": "All listed LdB data fields are displayed for each LdB associated with the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. At least one PoS with multiple LdB entries is present in the system.\n3. User is able to access the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "LdB Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with multiple LdB entries and all LdB data fields populated.",
      "Expected Result": "All LdB data fields are displayed accurately for each LdB associated with the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only LdB data fields visualization.",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoS_MasterData_XPS-ZENIT-335_BettingDataVisualization_TEST_Desktop",
      "ID": "TC-321",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to Betting Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following Betting data fields are visible: SIMP Code, SIMP Alias, Sports Concession Code, Horse-Racing Concession Code, Sports Grant Code, Horse-Racing Grant Code.",
          "Expected Result": "All listed Betting data fields are displayed with correct and non-empty values (if data exists for the PoS)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. At least one PoS with complete betting data is present in the system.\n3. User is able to access the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "Betting Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all betting data fields populated.",
      "Expected Result": "All Betting data fields are displayed accurately and completely for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Betting data fields visualization.",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoS_MasterData_XPS-ZENIT-335_TerminalDataVisualization_TEST_Desktop",
      "ID": "TC-322",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to Terminal Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each terminal type, the following fields are visible: Terminal Type, Number of Terminals by Type.",
          "Expected Result": "All listed Terminal data fields are displayed for each terminal type associated with the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. At least one PoS with multiple terminal types is present in the system.\n3. User is able to access the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with multiple terminal types and all terminal data fields populated.",
      "Expected Result": "All Terminal data fields are displayed accurately for each terminal type associated with the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Terminal data fields visualization.",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoS_MasterData_XPS-ZENIT-335_OtherDataVisualization_TEST_Desktop",
      "ID": "TC-323",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to Other Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following Other data fields are visible: Prepaid flag, Mysisal flag, Activation date of the channel 1, Date of the last transfer (Voltura), AM (last name and first name).",
          "Expected Result": "All listed Other data fields are displayed with correct and non-empty values (if data exists for the PoS)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. At least one PoS with all other data fields populated is present in the system.\n3. User is able to access the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "Other Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all other data fields populated.",
      "Expected Result": "All Other data fields are displayed accurately and completely for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Other data fields visualization.",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoS_MasterData_XPS-ZENIT-335_UserProfileDataRestriction_TEST_Desktop",
      "ID": "TC-324",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has restricted access to PoS Master Data fields.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a specific PoS entry.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only the data fields permitted by the user profile are visible, and restricted fields are not displayed or accessible.",
          "Expected Result": "Only authorized data fields are visible; restricted fields are hidden or inaccessible as per user profile permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with restricted permissions exists.\n2. At least one PoS with all master data fields populated is present in the system.\n3. User is able to access the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "User Profile Data Restriction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with all master data fields populated; user profile with restricted access.",
      "Expected Result": "Data visibility is correctly enforced according to user profile permissions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers data visibility restriction based on user profile.",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "PoS_MasterData_XPS-ZENIT-335_EmptyOrMissingDataFields_TEST_Desktop",
      "ID": "TC-325",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application with a user profile that has access to PoS Master Data.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' section and select a PoS entry with some missing or empty data fields.",
          "Expected Result": "The PoS Master Data section for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify how the interface displays fields with missing or empty data (e.g., blank, 'N/A', or placeholder text).",
          "Expected Result": "Fields with missing or empty data are displayed in a user-friendly manner (e.g., blank, 'N/A', or appropriate placeholder), without causing errors or layout issues."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with appropriate permissions exists.\n2. At least one PoS with missing or empty data fields is present in the system.\n3. User is able to access the Dashboard application.",
      "Execution Mode": "Manual",
      "Functionality": "Data Visualization - Empty Fields",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with some master data fields intentionally left empty or missing.",
      "Expected Result": "Interface handles missing or empty data fields gracefully and clearly for the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers visualization of empty or missing data fields.",
      "_polarion": "XPS-ZENIT-335 - Dashboard - Single PoS - \"PoS Master Data\""
    },
    {
      "Title": "ContractsList_XPS-340_Dashboard_DisplayContractsList_DESKTOP_TEST_Desktop",
      "ID": "TC-326",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the list of contracts displayed in the section.",
          "Expected Result": "A list of contracts is displayed, each showing Contract Type, Contract Name, and Upload Date."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to at least one PoS.\n2. At least one contract is associated with the PoS in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Contracts List Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with associated contracts.",
      "Expected Result": "The contracts list displays all contracts for the PoS, each with Contract Type, Contract Name, and Upload Date.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "ContractsList_XPS-340_Dashboard_EmptyContractsList_DESKTOP_TEST_Desktop",
      "ID": "TC-327",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the contracts list when no contracts are associated with the PoS.",
          "Expected Result": "A message indicating 'No contracts available' or similar is displayed; no contract rows are shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS.\n2. No contracts are associated with the PoS in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Contracts List Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with no associated contracts.",
      "Expected Result": "If no contracts exist, the system displays an appropriate message and does not show contract rows.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "ContractsList_XPS-340_Dashboard_ContractTypeValues_DESKTOP_TEST_Desktop",
      "ID": "TC-328",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the 'Contract Type' field for each contract in the list.",
          "Expected Result": "Each contract displays a valid Contract Type (Betting, VLT, AWP, PGS, or PGI)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS.\n2. Contracts of each type (Betting, VLT, AWP, PGS, PGI) are associated with the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Contracts List Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with contracts of all specified types.",
      "Expected Result": "Only valid contract types are displayed for each contract entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "ContractsList_XPS-340_Dashboard_ContractDocumentViewLink_DESKTOP_TEST_Desktop",
      "ID": "TC-329",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Identify the action or link to view a contract document for a listed contract.",
          "Expected Result": "A link or button is available for each contract to view the document."
        },
        {
          "Step": 4,
          "Step Description": "Click the link or button to view the contract document.",
          "Expected Result": "The contract document opens in the external system currently in use for document viewing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS.\n2. At least one contract with an associated document is present for the PoS.\n3. The external document viewing system is operational and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Contract Document Viewing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, PoS with at least one contract and document, access to external document system.",
      "Expected Result": "Clicking the view link/button opens the contract document in the external system as per current process.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not verify document content, only access.",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "ContractsList_XPS-340_Dashboard_ContractListFieldValidation_DESKTOP_TEST_Desktop",
      "ID": "TC-330",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and navigated to the Dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Contracts' section for the selected PoS.",
          "Expected Result": "The 'Contracts' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "For each contract, verify that Contract Type, Contract Name, and Upload Date are present and not empty.",
          "Expected Result": "All three fields are populated for each contract entry."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to a PoS.\n2. At least one contract is associated with the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Contracts List Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, PoS with contracts having all required fields.",
      "Expected Result": "Each contract entry displays non-empty Contract Type, Contract Name, and Upload Date fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-340 - Dashboard - Single PoS - \"Contracts\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_DisplayGuaranteesData_DESKTOP_TEST_Desktop",
      "ID": "TC-331",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to a single PoS.",
          "Expected Result": "User is successfully logged in and the Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Guarantees' section for the selected PoS.",
          "Expected Result": "The 'Guarantees' section is displayed, showing all relevant data fields."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following fields are present: Start Date, Expiration Date, Bank Guarantee, Deposits, Reserves, Total Guarantees.",
          "Expected Result": "All specified fields are visible in the 'Guarantees' section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS assigned.\n2. The PoS has guarantee data configured in the backend system.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with PoS access; PoS with guarantee data (sample: Start Date: 01/01/2023, Expiration Date: 31/12/2023, Bank Guarantee: 10,000.00 €, Deposits: 2,000.00 €, Reserves: 1,000.00 €)",
      "Expected Result": "All guarantee data fields are displayed for the selected PoS in the correct section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_ValidateDateFormats_DESKTOP_TEST_Desktop",
      "ID": "TC-332",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application and navigate to the 'Guarantees' section for a PoS.",
          "Expected Result": "The 'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the format of the Start Date and Expiration Date fields.",
          "Expected Result": "Dates are displayed in the format dd/mm/yyyy or another standard date format (e.g., 01/01/2023)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS assigned.\n2. Guarantee data with valid dates is present for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Start Date: 01/01/2023, Expiration Date: 31/12/2023",
      "Expected Result": "Start Date and Expiration Date are displayed in the correct date format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_ValidateMonetaryFormats_DESKTOP_TEST_Desktop",
      "ID": "TC-333",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application and navigate to the 'Guarantees' section for a PoS.",
          "Expected Result": "The 'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the format of the Bank Guarantee, Deposits, Reserves, and Total Guarantees fields.",
          "Expected Result": "All monetary values are displayed in the correct format (e.g., 10,000.00 €)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS assigned.\n2. Guarantee data with monetary values is present for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Bank Guarantee: 10,000.00 €, Deposits: 2,000.00 €, Reserves: 1,000.00 €, Total Guarantees: 13,000.00 €",
      "Expected Result": "All monetary values are displayed in the correct format with currency symbol and decimal separator.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_ValidateTotalGuaranteesCalculation_DESKTOP_TEST_Desktop",
      "ID": "TC-334",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application and navigate to the 'Guarantees' section for a PoS.",
          "Expected Result": "The 'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Note the values for Bank Guarantee, Deposits, and Reserves.",
          "Expected Result": "Values are visible and readable."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the Total Guarantees value equals the sum of Bank Guarantee, Deposits, and Reserves.",
          "Expected Result": "Total Guarantees = Bank Guarantee + Deposits + Reserves (e.g., 10,000.00 € + 2,000.00 € + 1,000.00 € = 13,000.00 €)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS assigned.\n2. Guarantee data with known values for Bank Guarantee, Deposits, and Reserves is present for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Bank Guarantee: 10,000.00 €, Deposits: 2,000.00 €, Reserves: 1,000.00 €, Total Guarantees: 13,000.00 €",
      "Expected Result": "Total Guarantees is correctly calculated and displayed as the sum of Bank Guarantee, Deposits, and Reserves.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_HandleMissingGuaranteeData_DESKTOP_TEST_Desktop",
      "ID": "TC-335",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application and navigate to the 'Guarantees' section for a PoS with no guarantee data.",
          "Expected Result": "The 'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the display of all guarantee fields when data is missing or not available.",
          "Expected Result": "Fields are either empty, show a placeholder (e.g., 'N/A'), or display an appropriate message indicating no data is available."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS assigned.\n2. The selected PoS has no guarantee data configured in the backend system.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with no guarantee data (all fields null or missing)",
      "Expected Result": "The application gracefully handles missing guarantee data by displaying empty fields, placeholders, or a clear message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "GuaranteesDashboard_XPS-ZENIT-345_ValidateNegativeAndZeroValues_DESKTOP_TEST_Desktop",
      "ID": "TC-336",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application and navigate to the 'Guarantees' section for a PoS with negative or zero values in guarantee fields.",
          "Expected Result": "The 'Guarantees' section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Observe the display of negative and zero values for Bank Guarantee, Deposits, Reserves, and Total Guarantees.",
          "Expected Result": "Negative and zero values are displayed correctly and do not cause calculation or display errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Dashboard Web Application",
      "Preconditions": "1. User account with access to the Dashboard and at least one PoS assigned.\n2. Guarantee data with negative or zero values is present for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Guarantees Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Bank Guarantee: 0.00 €, Deposits: -500.00 €, Reserves: 0.00 €, Total Guarantees: -500.00 €",
      "Expected Result": "Negative and zero values are displayed as entered and the Total Guarantees calculation reflects these values accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-345 - Dashboard - Single PoS - \"Guarantees\""
    },
    {
      "Title": "Unpaids-XPS-350_CurrentYear_Display_Dashboard_TEST_Desktop",
      "ID": "TC-337",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to Single PoS data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS section of the dashboard.",
          "Expected Result": "Single PoS section is displayed with relevant data panels."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' data panel.",
          "Expected Result": "The 'Unpaids' panel is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'Current Year' value is displayed in the 'Unpaids' panel.",
          "Expected Result": "The 'Current Year' number of defaults is displayed, representing defaults from the beginning of the calendar year until today."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and Single PoS data.\n2. At least one default recorded in the current year in the system.\n3. Zenit system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Single PoS access; test PoS with known defaults for the current year.",
      "Expected Result": "The dashboard displays the correct number of 'Unpaids' for the current year, calculated from the beginning of the year until today.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and calculation for the 'Current Year' period.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "Unpaids-XPS-350_Rolling6Months_Display_Dashboard_TEST_Desktop",
      "ID": "TC-338",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to Single PoS data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS section of the dashboard.",
          "Expected Result": "Single PoS section is displayed with relevant data panels."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' data panel.",
          "Expected Result": "The 'Unpaids' panel is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'Rolling 6 months' value is displayed in the 'Unpaids' panel.",
          "Expected Result": "The 'Rolling 6 months' number of defaults is displayed, representing defaults recorded in the last 6 months from today."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and Single PoS data.\n2. At least one default recorded in the last 6 months in the system.\n3. Zenit system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Single PoS access; test PoS with known defaults in the last 6 months.",
      "Expected Result": "The dashboard displays the correct number of 'Unpaids' for the rolling 6 months, calculated backward from the current date.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and calculation for the 'Rolling 6 months' period.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "Unpaids-XPS-350_Rolling12Months_Display_Dashboard_TEST_Desktop",
      "ID": "TC-339",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to Single PoS data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS section of the dashboard.",
          "Expected Result": "Single PoS section is displayed with relevant data panels."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' data panel.",
          "Expected Result": "The 'Unpaids' panel is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'Rolling 12 months' value is displayed in the 'Unpaids' panel.",
          "Expected Result": "The 'Rolling 12 months' number of defaults is displayed, representing defaults recorded in the last 12 months from today."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and Single PoS data.\n2. At least one default recorded in the last 12 months in the system.\n3. Zenit system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Single PoS access; test PoS with known defaults in the last 12 months.",
      "Expected Result": "The dashboard displays the correct number of 'Unpaids' for the rolling 12 months, calculated backward from the current date.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and calculation for the 'Rolling 12 months' period.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "Unpaids-XPS-350_NoDefaults_Display_Dashboard_TEST_Desktop",
      "ID": "TC-340",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to Single PoS data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS section of the dashboard.",
          "Expected Result": "Single PoS section is displayed with relevant data panels."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' data panel.",
          "Expected Result": "The 'Unpaids' panel is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Verify the display when there are no defaults recorded for the current year, last 6 months, and last 12 months.",
          "Expected Result": "The 'Unpaids' panel displays zero (0) for all periods, or an appropriate message indicating no defaults."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and Single PoS data.\n2. No defaults recorded in the system for the current year, last 6 months, or last 12 months.\n3. Zenit system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Single PoS access; test PoS with no defaults in any period.",
      "Expected Result": "The dashboard displays zero (0) or an appropriate message for all 'Unpaids' periods when no defaults exist.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers the scenario where no defaults exist for any period.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "Unpaids-XPS-350_BoundaryDate_Display_Dashboard_TEST_Desktop",
      "ID": "TC-341",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to Single PoS data.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS section of the dashboard.",
          "Expected Result": "Single PoS section is displayed with relevant data panels."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Unpaids' data panel.",
          "Expected Result": "The 'Unpaids' panel is visible on the dashboard."
        },
        {
          "Step": 4,
          "Step Description": "Verify the calculation of 'Unpaids' when a default is recorded exactly on the boundary date (e.g., January 1st for current year, or exactly 6/12 months ago for rolling periods).",
          "Expected Result": "The 'Unpaids' panel includes defaults recorded on the boundary date in the respective period's count."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and Single PoS data.\n2. At least one default recorded exactly on the boundary date for each period (e.g., Jan 1st, exactly 6 or 12 months ago).\n3. Zenit system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Unpaids Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with Single PoS access; test PoS with defaults on boundary dates.",
      "Expected Result": "The dashboard correctly includes defaults recorded on the boundary date in the respective period's count.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers boundary date inclusion for period calculations.",
      "_polarion": "XPS-ZENIT-350 - Dashboard - Single PoS - \"Unpaids\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_DisplayLastBorderoNumber_Dashboard_TEST_Desktop",
      "ID": "TC-342",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the field labeled 'Last Borderò Number'.",
          "Expected Result": "The field displays a numeric identifier corresponding to the most recent borderò (e.g., '1645')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and Single PoS Borderò section.\n2. At least one borderò record exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with appropriate access; at least one borderò record (e.g., Last Borderò Number: 1645).",
      "Expected Result": "The dashboard displays the correct Last Borderò Number as per the latest record in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_DisplayAccountingPeriod_Dashboard_TEST_Desktop",
      "ID": "TC-343",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the fields labeled 'Start of Accounting Period' and 'End of Accounting Period'.",
          "Expected Result": "The fields display the correct start and end dates for the accounting period of the last borderò."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and Single PoS Borderò section.\n2. At least one borderò record exists with valid accounting period dates.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; borderò record with known accounting period (e.g., Start: 01/01/2024, End: 31/01/2024).",
      "Expected Result": "The dashboard displays the correct start and end dates of the accounting period for the last borderò.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_DisplayLastBorderoAmount_Dashboard_TEST_Desktop",
      "ID": "TC-344",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the field labeled 'Last Borderò Amount'.",
          "Expected Result": "The field displays the total economic value of the last borderò (e.g., '1,000.00 €')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and Single PoS Borderò section.\n2. At least one borderò record exists with a valid amount.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; borderò record with known amount (e.g., 1,000.00 €).",
      "Expected Result": "The dashboard displays the correct Last Borderò Amount as per the latest record.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_DisplayAverageAmounts_Dashboard_TEST_Desktop",
      "ID": "TC-345",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the fields labeled 'Average Amount Current Year' and 'Average Amount Rolling 12 Months'.",
          "Expected Result": "The fields display the correct calculated averages based on the borderò records for the current year and the last 12 months, respectively."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and Single PoS Borderò section.\n2. Multiple borderò records exist spanning the current year and the last 12 months.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; borderò records with known amounts and dates for calculation.",
      "Expected Result": "The dashboard displays the correct average amounts for the current year and the rolling 12 months, calculated as per the requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_ArchiCONLinkVisibilityAndRedirection_Dashboard_TEST_Desktop",
      "ID": "TC-346",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with privileges to view the ArchiCON link.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify the presence of the ArchiCON link/button.",
          "Expected Result": "The ArchiCON link/button is visible to the user."
        },
        {
          "Step": 4,
          "Step Description": "Click the ArchiCON link/button.",
          "Expected Result": "User is redirected to the ArchiCON platform, and the Borderò associated with the specific PoS is displayed according to the user's permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application, ArchiCON Platform",
      "Preconditions": "1. User account with privileges to view the ArchiCON link.\n2. At least one borderò record exists for the PoS.\n3. ArchiCON platform is accessible and integrated.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - ArchiCON Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with ArchiCON access; PoS with associated borderò; ArchiCON platform URL.",
      "Expected Result": "The ArchiCON link/button is visible only to privileged users and redirects correctly to the ArchiCON platform, displaying the relevant Borderò data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_ArchiCONLinkNotVisibleForUnauthorized_Dashboard_TEST_Desktop",
      "ID": "TC-347",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user without privileges to view the ArchiCON link.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Verify the presence of the ArchiCON link/button.",
          "Expected Result": "The ArchiCON link/button is not visible to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account without privileges to view the ArchiCON link.\n2. At least one borderò record exists for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - ArchiCON Integration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials without ArchiCON access; PoS with associated borderò.",
      "Expected Result": "The ArchiCON link/button is not visible to users without the appropriate privileges.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "BorderoDashboard_XPS-355_BorderoDataDisplay_NoRecords_Dashboard_TEST_Desktop",
      "ID": "TC-348",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to the Single PoS Borderò section.",
          "Expected Result": "User is successfully logged in and the dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS Borderò section on the dashboard.",
          "Expected Result": "The Borderò section is visible on the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Observe the Borderò data fields when no borderò records exist for the PoS.",
          "Expected Result": "The fields display a message such as 'No data available' or remain empty, indicating the absence of borderò records."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to the Zenit dashboard and Single PoS Borderò section.\n2. No borderò records exist for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Borderò Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with no borderò records.",
      "Expected Result": "The dashboard gracefully handles the absence of borderò records by displaying an appropriate message or leaving the fields empty.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-355 - Dashboard - Single PoS - \"Borderò\""
    },
    {
      "Title": "ADIData-XPS360_001_AWPDataVisualization_StructuredBlocks_DESKTOP_TEST_Desktop",
      "ID": "TC-349",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section of the dashboard.",
          "Expected Result": "The 'ADI Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that AWP data is displayed in three distinct blocks: AWP Management, AWP AC Management, and AWP Third Parties.",
          "Expected Result": "Three separate blocks for AWP data are visible and clearly labeled."
        },
        {
          "Step": 4,
          "Step Description": "Within each block, check that AWP numbers are divided by type of collection (IAG and NOIAG) and that a total AWP value is shown for each block.",
          "Expected Result": "Each block displays AWP numbers split by IAG and NOIAG, and a total AWP value is present."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop WebApp",
      "Preconditions": "1. User account with access to the dashboard and ADI Data section.\n2. At least one AWP device registered in each management block.\n3. Test environment populated with sample AWP data for IAG and NOIAG collections.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample AWP data with IAG and NOIAG collections for each management block.",
      "Expected Result": "AWP data is displayed in three structured blocks, each showing IAG and NOIAG breakdowns and total AWP per block.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "ADIData-XPS360_002_AWPManagement_KeyAssociations_DESKTOP_TEST_Desktop",
      "ID": "TC-350",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section and locate the 'AWP Management' block.",
          "Expected Result": "The 'AWP Management' block is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that for each AWP in management, the key associations for Drawer, Counter, and Change Machine are displayed, including the responsible entity (e.g., 'ESERCENTE').",
          "Expected Result": "Key associations for Drawer, Counter, and Change Machine are visible and correctly labeled with the responsible entity for each AWP in management."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop WebApp",
      "Preconditions": "1. User account with access to the dashboard and ADI Data section.\n2. At least one AWP in management with key associations defined in the test data.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP in management with key associations for Drawer, Counter, and Change Machine (e.g., 'ESERCENTE').",
      "Expected Result": "For each AWP in management, the responsible entity for Drawer, Counter, and Change Machine keys is displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "ADIData-XPS360_003_TotalSummaryAWP_VLT_DESKTOP_TEST_Desktop",
      "ID": "TC-351",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section.",
          "Expected Result": "The 'ADI Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the overall summary section displays the following: Total AWP, Average number of AWP (YTD), Number of VLT, and Average number of VLT (YTD).",
          "Expected Result": "The summary section is present and displays all four required metrics with correct values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop WebApp",
      "Preconditions": "1. User account with access to the dashboard and ADI Data section.\n2. Test data includes AWP and VLT devices with YTD data available.",
      "Execution Mode": "Manual",
      "Functionality": "AWP/VLT Summary",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP and VLT device data with YTD values for both types.",
      "Expected Result": "The summary section accurately displays Total AWP, Average AWP (YTD), Number of VLT, and Average VLT (YTD).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "ADIData-XPS360_004_HopperDataVisualization_Breakdown_DESKTOP_TEST_Desktop",
      "ID": "TC-352",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section and locate the Hopper Data Visualization area.",
          "Expected Result": "The Hopper Data Visualization area is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following breakdowns are displayed: NOIAG (Hopper NOIAG), AWP IAG - End of Relationship, Change Machine IAG - End of Relationship, IAG for Recovery, and Total.",
          "Expected Result": "All required breakdowns are present and labeled correctly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop WebApp",
      "Preconditions": "1. User account with access to the dashboard and ADI Data section.\n2. Hopper data available for all breakdown categories in the test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Hopper Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Hopper data for NOIAG, AWP IAG - End of Relationship, Change Machine IAG - End of Relationship, IAG for Recovery, and Total.",
      "Expected Result": "Hopper data is displayed with all required breakdowns and the total amount is correctly calculated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "ADIData-XPS360_005_AWPDataVisualization_InvalidDataHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-353",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the dashboard as a user with access to Single PoS ADI Data.",
          "Expected Result": "User is successfully logged in and navigated to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'ADI Data' section.",
          "Expected Result": "The 'ADI Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Simulate the presence of invalid or missing AWP data for one or more blocks (e.g., missing IAG or NOIAG values).",
          "Expected Result": "The interface handles the missing or invalid data gracefully, displaying a clear message or placeholder (e.g., 'Data not available') without breaking the layout."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows Desktop WebApp",
      "Preconditions": "1. User account with access to the dashboard and ADI Data section.\n2. Test environment configured to simulate missing or invalid AWP data for at least one block.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP data with missing or invalid IAG/NOIAG values for at least one block.",
      "Expected Result": "The dashboard displays a clear message or placeholder for missing/invalid data and maintains UI integrity.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-360 - Dashboard - Single PoS - \"ADI Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_DisplayOfAllRiskColumns_DESKTOP_TEST_Desktop",
      "ID": "TC-354",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application as a user with access to Single PoS details.",
          "Expected Result": "User is successfully logged in and the Dashboard main page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS section and select a specific Point of Sale.",
          "Expected Result": "The Single PoS detail page is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Risk Data' summary table within the Single PoS dashboard.",
          "Expected Result": "The 'Risk Data' table is visible on the page."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the table contains the following columns: RedList, Insolvent Rolling 6 months, General Reason, SIMP Management, SIMP Reason, Scoring, Risk Cluster, Activity Status.",
          "Expected Result": "All specified columns are present and correctly labeled in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with valid credentials and access to the Dashboard.\n2. At least one PoS with risk data available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Risk Data Table Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with complete risk data.",
      "Expected Result": "The 'Risk Data' table is displayed with all required columns for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_RedListColumnValues_DESKTOP_TEST_Desktop",
      "ID": "TC-355",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Dashboard application and navigate to the Single PoS 'Risk Data' table.",
          "Expected Result": "The 'Risk Data' table is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the 'RedList' column for the selected PoS.",
          "Expected Result": "The 'RedList' column is visible."
        },
        {
          "Step": 3,
          "Step Description": "Check the value displayed in the 'RedList' column.",
          "Expected Result": "The value is either 'Yes' or 'No'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User logged in with access to Single PoS.\n2. PoS with known RedList status in the database.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Indicator",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with RedList status set to 'Yes' and another with 'No'.",
      "Expected Result": "The 'RedList' column displays 'Yes' or 'No' according to the PoS risk data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_InsolventRolling6Months_BoundaryValues_DESKTOP_TEST_Desktop",
      "ID": "TC-356",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the Single PoS 'Risk Data' table.",
          "Expected Result": "The 'Risk Data' table is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the 'Insolvent Rolling 6 months' column for the selected PoS.",
          "Expected Result": "The column is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify the displayed value for a PoS with 0 insolvencies in the last 6 months.",
          "Expected Result": "The value is '0'."
        },
        {
          "Step": 4,
          "Step Description": "Verify the displayed value for a PoS with the maximum expected number of insolvencies (e.g., 99).",
          "Expected Result": "The value matches the maximum test data (e.g., '99')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User logged in.\n2. PoS records with 0 and maximum insolvency values available.",
      "Execution Mode": "Manual",
      "Functionality": "Insolvency Indicator",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 0 insolvencies; PoS with maximum insolvencies (e.g., 99).",
      "Expected Result": "The 'Insolvent Rolling 6 months' column displays correct boundary values as per the PoS data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_ScoringAndRiskClusterConsistency_DESKTOP_TEST_Desktop",
      "ID": "TC-357",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Single PoS 'Risk Data' table.",
          "Expected Result": "The 'Risk Data' table is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the 'Scoring' and 'Risk Cluster' columns for the selected PoS.",
          "Expected Result": "Both columns are visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Risk Cluster' value corresponds to the 'Scoring' value according to the business rules (e.g., Scoring 0-50 = High, 51-80 = Medium, 81-100 = Low).",
          "Expected Result": "The 'Risk Cluster' value matches the expected category based on the 'Scoring' value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User logged in.\n2. PoS records with known scoring and expected risk cluster mapping.",
      "Execution Mode": "Manual",
      "Functionality": "Scoring and Risk Cluster Mapping",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with scoring values at category boundaries (e.g., 50, 51, 80, 81).",
      "Expected Result": "The 'Risk Cluster' column displays the correct risk band for each scoring value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Assumes business rules for mapping scoring to risk cluster are defined.",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_ActivityStatusValues_DESKTOP_TEST_Desktop",
      "ID": "TC-358",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the Single PoS 'Risk Data' table.",
          "Expected Result": "The 'Risk Data' table is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the 'Activity Status' column for the selected PoS.",
          "Expected Result": "The column is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify the displayed value for a PoS with status 'ACTIVE'.",
          "Expected Result": "The value is 'ACTIVE'."
        },
        {
          "Step": 4,
          "Step Description": "Verify the displayed value for a PoS with status 'SUSPENDED'.",
          "Expected Result": "The value is 'SUSPENDED'."
        },
        {
          "Step": 5,
          "Step Description": "Verify the displayed value for a PoS with status 'CLOSED'.",
          "Expected Result": "The value is 'CLOSED'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User logged in.\n2. PoS records with each possible activity status available.",
      "Execution Mode": "Manual",
      "Functionality": "Activity Status Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with 'ACTIVE', 'SUSPENDED', and 'CLOSED' statuses.",
      "Expected Result": "The 'Activity Status' column displays the correct operational status for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_SIMPManagementAndReasonDisplay_DESKTOP_TEST_Desktop",
      "ID": "TC-359",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Single PoS 'Risk Data' table.",
          "Expected Result": "The 'Risk Data' table is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the 'SIMP Management' and 'SIMP Reason' columns for the selected PoS.",
          "Expected Result": "Both columns are visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'SIMP Management' column displays the correct status as per the PoS data.",
          "Expected Result": "The 'SIMP Management' value matches the expected status."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the 'SIMP Reason' column displays the correct detailed motivation as per the PoS data.",
          "Expected Result": "The 'SIMP Reason' value matches the expected detailed motivation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User logged in.\n2. PoS records with known SIMP Management and Reason values.",
      "Execution Mode": "Manual",
      "Functionality": "SIMP Management and Reason Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with various SIMP Management statuses and corresponding reasons.",
      "Expected Result": "The 'SIMP Management' and 'SIMP Reason' columns display the correct values for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "RiskData-XPS365_Dashboard_GeneralReasonDisplay_DESKTOP_TEST_Desktop",
      "ID": "TC-360",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and access the Single PoS 'Risk Data' table.",
          "Expected Result": "The 'Risk Data' table is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the 'General Reason' column for the selected PoS.",
          "Expected Result": "The column is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'General Reason' column displays the correct brief description as per the PoS data.",
          "Expected Result": "The 'General Reason' value matches the expected description (e.g., 'Customer at risk')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User logged in.\n2. PoS records with known General Reason values.",
      "Execution Mode": "Manual",
      "Functionality": "General Reason Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with various General Reason values.",
      "Expected Result": "The 'General Reason' column displays the correct brief description for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-365 - Dashboard - Single PoS - \"Risk Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_DisplayMonitoringCategories_Dashboard_TEST_Desktop",
      "ID": "TC-361",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user to the Dashboard application.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Winning Data' section for a single PoS.",
          "Expected Result": "'Winning Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the monitoring categories displayed on the screen.",
          "Expected Result": "Three sections are visible: 'Sport Ticket Payments in Other Agencies', 'Ticket Sports Not Paid', and 'Ticket VR Not Paid'."
        },
        {
          "Step": 4,
          "Step Description": "Verify that each section contains tables with headers, aggregated rows, and subtotals.",
          "Expected Result": "Each section displays a table with appropriate headers, aggregated rows, and subtotals."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials with appropriate authorization level.\n2. Dashboard application is accessible.\n3. Winning data is available for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; PoS with available winning data.",
      "Expected Result": "All three monitoring categories are displayed with correct tables, headers, aggregated rows, and subtotals.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_DetailedVisualizationOfWinnings_Dashboard_TEST_Desktop",
      "ID": "TC-362",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user to the Dashboard application.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Winning Data' section for a single PoS.",
          "Expected Result": "'Winning Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Expand a row in any of the three monitoring categories to view detailed data.",
          "Expected Result": "Detailed data for the selected win is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify the presence and format of the following fields: Seller Agency Code, Competence (event) Day, Cash day, Amount Bet, Amount Won.",
          "Expected Result": "All fields are present and correctly formatted. Seller Agency Code is a 6-character string left-padded with zeros, or for 'Corner' PoS, a 4-character zone prefix, hyphen, and 6-character SIMP code."
        },
        {
          "Step": 5,
          "Step Description": "For 'Sport Ticket Payments in Other Agencies', verify the presence of Winning payment Day, Agency Code Payment, and PoS Identifier of the payment.",
          "Expected Result": "Winning payment Day, Agency Code Payment (6-character left-padded with zeros), and PoS Identifier (e.g., 'MI0001') are present and correctly formatted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials with appropriate authorization level.\n2. Dashboard application is accessible.\n3. Winning data with detailed records is available for the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; PoS with detailed winning data including 'Corner' PoS and tickets paid at other agencies.",
      "Expected Result": "All required fields are displayed with correct values and formats in the detailed view for each win.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_ReferenceDayManagement_Dashboard_TEST_Desktop",
      "ID": "TC-363",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user to the Dashboard application.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Winning Data' section for a single PoS.",
          "Expected Result": "'Winning Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the default reference day displayed.",
          "Expected Result": "Reference day is automatically set to the most recent data upload date."
        },
        {
          "Step": 4,
          "Step Description": "Open the date selection control and select an alternative available date.",
          "Expected Result": "User can select from a list of available dates."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the selection and observe the data displayed.",
          "Expected Result": "Winning data updates to reflect the newly selected reference day."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials with appropriate authorization level.\n2. Dashboard application is accessible.\n3. Multiple data upload dates are available for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Day Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; PoS with multiple data upload dates.",
      "Expected Result": "Reference day is set automatically to the latest upload date and can be changed by the user, with data updating accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_ExpandCollapseRows_Dashboard_TEST_Desktop",
      "ID": "TC-364",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user to the Dashboard application.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Winning Data' section for a single PoS.",
          "Expected Result": "'Winning Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click the expand icon on an aggregated row in any monitoring category.",
          "Expected Result": "Detailed rows for the selected aggregation are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click the collapse icon on the same row.",
          "Expected Result": "Detailed rows are hidden, and only the aggregated row is visible."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Expand/Collapse All' button.",
          "Expected Result": "All rows in all categories are expanded or collapsed accordingly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials with appropriate authorization level.\n2. Dashboard application is accessible.\n3. Winning data with multiple aggregations is available for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Interactive Navigation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; PoS with multiple aggregated and detailed winning records.",
      "Expected Result": "Rows can be expanded/collapsed individually or globally using the 'Expand/Collapse All' button, with correct data display.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_AuthorizationLevelAccess_Dashboard_TEST_Desktop",
      "ID": "TC-365",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the 'Winning Data' section as a user with insufficient authorization.",
          "Expected Result": "Access to the 'Winning Data' section is denied or restricted."
        },
        {
          "Step": 2,
          "Step Description": "Log in as a user with sufficient authorization and access the 'Winning Data' section.",
          "Expected Result": "Access is granted and the section is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. At least two user accounts: one with sufficient authorization, one without.\n2. Dashboard application is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Authorization Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with different authorization levels.",
      "Expected Result": "Only authorized users can access the 'Winning Data' section; unauthorized users are denied access.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_DataAggregationAndSubtotals_Dashboard_TEST_Desktop",
      "ID": "TC-366",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user to the Dashboard application.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Winning Data' section for a single PoS.",
          "Expected Result": "'Winning Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Expand the 'Sport Ticket Payments in Other Agencies' section and observe the aggregation.",
          "Expected Result": "Aggregated data is organized by payment date, with correct subtotals for total winnings amount and number of winnings."
        },
        {
          "Step": 4,
          "Step Description": "Expand the 'Ticket Sports Not Paid' and 'Ticket VR Not Paid' sections and observe the aggregation.",
          "Expected Result": "Aggregated data is organized by competence (event) date, with correct subtotals for total winnings amount and number of winnings."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials with appropriate authorization level.\n2. Dashboard application is accessible.\n3. Winning data with multiple records and aggregation is available for the PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; PoS with multiple winning records for different dates and categories.",
      "Expected Result": "Aggregations and subtotals are displayed correctly for each section as per the requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "WinningData-XPS370_Requirement_InvalidDateSelection_Dashboard_TEST_Desktop",
      "ID": "TC-367",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as an authorized user to the Dashboard application.",
          "Expected Result": "User is successfully logged in and Dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Winning Data' section for a single PoS.",
          "Expected Result": "'Winning Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to select a date that is not available in the date selection control.",
          "Expected Result": "System prevents selection and displays an appropriate error or disables unavailable dates."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has valid credentials with appropriate authorization level.\n2. Dashboard application is accessible.\n3. Some dates are not available for selection.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Day Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized user credentials; PoS with limited available dates.",
      "Expected Result": "Unavailable dates cannot be selected and the user is informed appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-370 - Dashboard - Single PoS - \"Winning Data\""
    },
    {
      "Title": "BusinessData-XPS375_GNTN_WeeklyDataVisualization_TEST_Desktop",
      "ID": "TC-368",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS with GNTN data.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'GNTN amount collected' data visualization subsection.",
          "Expected Result": "The 'GNTN amount collected' subsection is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed: total media amount collected for GNTN YTD (weekly), upload date, reference week, and reference year.",
          "Expected Result": "All required fields are present and populated with data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS with GNTN data. 2. GNTN data imported via Massive Importer for at least one week in the current year. 3. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with GNTN data; GNTN data imported for current year.",
      "Expected Result": "The 'GNTN amount collected' subsection displays total media amount collected (YTD, weekly), upload date, reference week, and reference year for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_Corner_TableLayoutAndDataBlocks_TEST_Desktop",
      "ID": "TC-369",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization subsection.",
          "Expected Result": "The 'Corner' subsection is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the data is organized in a table layout with distinct data groups (Amount Collected, Revenue, Fee, etc.), each in separate blocks.",
          "Expected Result": "Data is presented in a clear table layout with visually distinct blocks for each data group."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS of type 'Corner'. 2. Business data imported via Massive Importer for the current year. 3. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; PoS of type 'Corner'; Business data imported for current year.",
      "Expected Result": "The 'Corner' data visualization is organized in a table layout with distinct, clearly separated data blocks for each category.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only layout and block separation, not data accuracy.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_Corner_AmountCollectedData_TEST_Desktop",
      "ID": "TC-370",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization subsection and the 'Amount Collected Data' block.",
          "Expected Result": "The 'Amount Collected Data' block is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed and populated: Sports Amount Collected (YTD), CPS Amount Collected (YTD), Horse-Racing Amount Collected (YTD), VR Amount Collected (YTD), Total Betting Amount Collected (YTD), AWP Amount Collected (YTD), GNTN Amount Collected (YTD), Total Amount Collected (YTD).",
          "Expected Result": "All specified fields are present and contain valid data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS of type 'Corner'. 2. Business data imported via Massive Importer for the current year. 3. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS of type 'Corner'; Business data imported for current year.",
      "Expected Result": "All 'Amount Collected Data' fields are displayed and populated with correct values for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'Amount Collected Data' fields.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_Corner_RevenueData_TEST_Desktop",
      "ID": "TC-371",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization subsection and the 'Revenue Data' block.",
          "Expected Result": "The 'Revenue Data' block is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed and populated: Sports Revenues (YTD), CPS Revenues (YTD), Horse-Racing Revenues (YTD), VR Revenues (YTD), Total Betting Revenues (YTD), AWP Revenues (YTD), GNTN Revenues (YTD), Total Products Revenues (YTD), PGI/PGS Fee (YTD), MySisal Fee (YTD), Total Revenues (YTD).",
          "Expected Result": "All specified fields are present and contain valid data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS of type 'Corner'. 2. Business data imported via Massive Importer for the current year. 3. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS of type 'Corner'; Business data imported for current year.",
      "Expected Result": "All 'Revenue Data' fields are displayed and populated with correct values for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'Revenue Data' fields.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_Corner_FeeDataAndCalculatedFields_TEST_Desktop",
      "ID": "TC-372",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS of type 'Corner'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Corner' data visualization subsection and the 'Fee Data' block.",
          "Expected Result": "The 'Fee Data' block is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed and populated: Fee Sport (YTD), Fee VR (YTD), Total Fee Betting (YTD), Fee AWP (YTD), Fee Lottery (YTD), Business Contribution (YTD), Online Revenues (YTD), Online Share Revenues (YTD), Online PT (YTD), Online Contribution (YTD), Post Online Business Contribution (YTD), BC Year Projection, Decile, Exposure Risk.",
          "Expected Result": "All specified fields are present and contain valid data, and calculated fields (BC Year Projection, Decile, Exposure Risk) are computed as per formulas."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS of type 'Corner'. 2. Business data imported via Massive Importer for the current year. 3. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS of type 'Corner'; Business data imported for current year.",
      "Expected Result": "All 'Fee Data' and calculated fields are displayed and populated with correct values for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers 'Fee Data' and calculated fields only.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_Shop_DataVisualization_TEST_Desktop",
      "ID": "TC-373",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS of type 'Shop'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Shop' data visualization subsection.",
          "Expected Result": "The 'Shop' subsection is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed and populated: Total Revenues, Business Contribution, Business Contribution Online, Business Contribution Post Online.",
          "Expected Result": "All specified fields are present and contain valid data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS of type 'Shop'. 2. Business data imported via Massive Importer for the current year. 3. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS of type 'Shop'; Business data imported for current year.",
      "Expected Result": "All 'Shop' data visualization fields are displayed and populated with correct values for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'Shop' data visualization fields.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_GamingHall_DataVisualization_TEST_Desktop",
      "ID": "TC-374",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS of type 'Gaming Hall'.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'Gaming Hall' data visualization subsection.",
          "Expected Result": "The 'Gaming Hall' subsection is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are displayed and populated: VLT Revenues, AWP Revenues, Business Contribution, Business Contribution Post Online.",
          "Expected Result": "All specified fields are present and contain valid data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS of type 'Gaming Hall'. 2. Business data imported via Massive Importer for the current year. 3. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS of type 'Gaming Hall'; Business data imported for current year.",
      "Expected Result": "All 'Gaming Hall' data visualization fields are displayed and populated with correct values for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'Gaming Hall' data visualization fields.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_NoDataAvailableForUnknownPoSType_TEST_Desktop",
      "ID": "TC-375",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS of an unknown or unsupported type (not Corner, Shop, or Gaming Hall).",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that either the section is not visible or a message 'no data available' is displayed.",
          "Expected Result": "The 'Business Data' section is hidden or a 'no data available' message is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS of an unsupported type. 2. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS of unsupported type.",
      "Expected Result": "For unsupported PoS types, the 'Business Data' section is not shown or displays 'no data available'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only unsupported PoS type scenario.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_BusinessDataUploadDateAndReference_TEST_Desktop",
      "ID": "TC-376",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to any PoS (Corner, Shop, or Gaming Hall).",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the upload date, reference month, and reference year are displayed in the relevant business data subsection.",
          "Expected Result": "Upload date, reference month, and reference year are present and populated with correct values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS with business data. 2. Business data imported via Massive Importer for the current year. 3. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with business data; Business data imported for current year.",
      "Expected Result": "Upload date, reference month, and reference year are displayed and populated for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only upload date and reference fields.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "BusinessData-XPS375_GNTNData_MissingOrCorruptedImport_TEST_Desktop",
      "ID": "TC-377",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit dashboard as a user with access to a PoS with missing or corrupted GNTN data import.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Business Data' section for the selected PoS.",
          "Expected Result": "The 'Business Data' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Locate the 'GNTN amount collected' data visualization subsection.",
          "Expected Result": "The 'GNTN amount collected' subsection is visible."
        },
        {
          "Step": 4,
          "Step Description": "Verify the system's behavior when GNTN data is missing or corrupted (e.g., fields are empty, error message is shown, or section is hidden).",
          "Expected Result": "System displays an appropriate message (e.g., 'no data available') or hides the subsection if data is missing or corrupted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User account with access to Zenit dashboard and at least one PoS with missing or corrupted GNTN data. 2. Browser access to Zenit dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Business Data Visualization",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with missing/corrupted GNTN data.",
      "Expected Result": "If GNTN data is missing or corrupted, the system displays 'no data available' or hides the subsection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only missing/corrupted GNTN data scenario.",
      "_polarion": "XPS-ZENIT-375 - Dashboard - Single PoS - \"Business Data\""
    },
    {
      "Title": "AccessDocuments_XPS-ZENIT-380_Dashboard_DocumentsSection_TEST_Desktop",
      "ID": "TC-378",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "The 'Documents' section is loaded."
        },
        {
          "Step": 3,
          "Step Description": "Observe the displayed list of documents.",
          "Expected Result": "A structured list of documents is shown, divided by source (Cerved and Arxivar). Each document displays at least its name and source."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is not logged in.\n3. Cerved and Arxivar systems are reachable and contain at least one document each.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; at least one document in both Cerved and Arxivar systems.",
      "Expected Result": "The user sees a structured list of documents divided by source (Cerved and Arxivar), with each document displaying its name and source.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "ViewDocument_XPS-ZENIT-380_Dashboard_DocumentView_TEST_Desktop",
      "ID": "TC-379",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "The 'Documents' section is loaded and documents are listed."
        },
        {
          "Step": 3,
          "Step Description": "Click on a document from the list (from either Cerved or Arxivar).",
          "Expected Result": "The selected document opens in the default user tool (e.g., PDF Viewer or similar)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is not logged in.\n3. Cerved and Arxivar systems are reachable and contain at least one document each.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; at least one document in both Cerved and Arxivar systems.",
      "Expected Result": "The selected document is opened in the default user tool (PDF Viewer or similar).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "CervedUnavailable_XPS-ZENIT-380_Dashboard_DocumentsSectionError_TEST_Desktop",
      "ID": "TC-380",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Cerved system unavailability (e.g., disconnect Cerved API endpoint or use invalid credentials).",
          "Expected Result": "Cerved system is unreachable from the ZENIT application."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "An error message is displayed indicating that the Cerved system is not available. Documents from Arxivar (if available) are still shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is not logged in.\n3. Cerved system is intentionally made unavailable; Arxivar system is reachable and contains at least one document.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; at least one document in Arxivar system; Cerved system unavailable.",
      "Expected Result": "An error message is shown for Cerved unavailability, and documents from Arxivar are displayed if available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "ArxivarUnavailable_XPS-ZENIT-380_Dashboard_DocumentsSectionError_TEST_Desktop",
      "ID": "TC-381",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate Arxivar system unavailability (e.g., disconnect Arxivar API endpoint or use invalid credentials).",
          "Expected Result": "Arxivar system is unreachable from the ZENIT application."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "An error message is displayed indicating that the Arxivar system is not available. Documents from Cerved (if available) are still shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is not logged in.\n3. Arxivar system is intentionally made unavailable; Cerved system is reachable and contains at least one document.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; at least one document in Cerved system; Arxivar system unavailable.",
      "Expected Result": "An error message is shown for Arxivar unavailability, and documents from Cerved are displayed if available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "NoDocuments_XPS-ZENIT-380_Dashboard_EmptyDocumentsList_TEST_Desktop",
      "ID": "TC-382",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure both Cerved and Arxivar systems have no documents available for the user.",
          "Expected Result": "Both systems return empty document lists."
        },
        {
          "Step": 2,
          "Step Description": "Log in to the ZENIT dashboard with a user account that has privileges to view Cerved and Arxivar documents.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Documents' section from the dashboard menu.",
          "Expected Result": "A message is displayed indicating that no documents are available from either source."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User account with privileges to view Cerved and Arxivar documents exists.\n2. User is not logged in.\n3. Both Cerved and Arxivar systems are reachable but contain no documents for the user.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Documents Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; no documents in both Cerved and Arxivar systems.",
      "Expected Result": "A clear message is shown indicating that no documents are available from either source.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-380 - Dashboard - Single PoS - \"Documents\""
    },
    {
      "Title": "NotesDisplay-XPSZENIT385_Dashboard_ViewNotes_TEST_Desktop",
      "ID": "TC-383",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user with permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS with existing notes.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Notes' section/tab.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the list of notes displayed.",
          "Expected Result": "All notes associated with the POS are displayed, sorted by date in descending order (most recent at the top)."
        },
        {
          "Step": 5,
          "Step Description": "Verify that each note displays the insert date, author, and text content.",
          "Expected Result": "Each note shows the correct insert date, author, and note content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with permission to view notes.\n2. User is logged into the ZENIT dashboard.\n3. POS selected has at least one note recorded.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with view permission; POS with existing notes.",
      "Expected Result": "Notes section displays all notes for the POS, sorted by most recent, each with date, author, and content.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesEmpty-XPSZENIT385_Dashboard_NoNotesPresent_TEST_Desktop",
      "ID": "TC-384",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user with permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS with no notes recorded.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Notes' section/tab.",
          "Expected Result": "Notes section is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with permission to view notes.\n2. User is logged into the ZENIT dashboard.\n3. POS selected has no notes recorded.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with view permission; POS with no notes.",
      "Expected Result": "A message 'No notes present for this POS' is displayed in the Notes section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesUnauthorized-XPSZENIT385_Dashboard_NotesPermissionDenied_TEST_Desktop",
      "ID": "TC-385",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user without permission to view notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for any POS.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access the 'Notes' section/tab.",
          "Expected Result": "Notes section is hidden or disabled. A message such as 'Unauthorized access to the POS note' is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists without permission to view notes.\n2. User is logged into the ZENIT dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment Permissions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials without view permission.",
      "Expected Result": "Notes section is inaccessible and an unauthorized access message is shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesAdd-XPSZENIT385_Dashboard_AddNote_TEST_Desktop",
      "ID": "TC-386",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user with permission to add notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Notes' section/tab.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Enter text into the editable note field.",
          "Expected Result": "Text is entered into the note field."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Save' button.",
          "Expected Result": "Note is saved, appears at the top of the notes list with correct metadata (date, author, content)."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the operation is logged in the system logs (user, date/time, operation, note content).",
          "Expected Result": "System log contains an entry for the note addition with all required details."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with permission to add notes.\n2. User is logged into the ZENIT dashboard.\n3. POS selected is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment Add",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with add permission; sample note text.",
      "Expected Result": "New note is added, displayed at the top of the list, and operation is logged with all required metadata.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "NotesAddCancel-XPSZENIT385_Dashboard_CancelAddNote_TEST_Desktop",
      "ID": "TC-387",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT dashboard as a user with permission to add notes.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Single PoS dashboard for a POS.",
          "Expected Result": "Single PoS dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Notes' section/tab.",
          "Expected Result": "Notes section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Enter text into the editable note field.",
          "Expected Result": "Text is entered into the note field."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Cancel' button.",
          "Expected Result": "Note is not saved, and the note field is cleared or closed. No new note appears in the list."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User account exists with permission to add notes.\n2. User is logged into the ZENIT dashboard.\n3. POS selected is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Notes/Comment Add",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with add permission; sample note text.",
      "Expected Result": "No new note is added when the operation is cancelled.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-385 - Dashboard - Single PoS - \"Notes/Comment\""
    },
    {
      "Title": "RelatedPoS-XPSZENIT390_Dashboard_AccessAndAutoSearch_DESKTOP_TEST_Desktop",
      "ID": "TC-388",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section within the dashboard.",
          "Expected Result": "The system automatically initiates a search for related PoS, excluding closed PoS by default."
        },
        {
          "Step": 4,
          "Step Description": "Observe the results area.",
          "Expected Result": "A table or list is displayed with related PoS, each row representing a single PoS, including columns for PoS data and relationship info. If no results, a notification is shown and no table is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User account with 'view Related PoS' privileges exists.\n2. User is logged into the ZENIT system.\n3. At least one PoS is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with appropriate privileges; at least one PoS with related PoS in the database.",
      "Expected Result": "Upon accessing the 'Related PoS' section, the system automatically searches and displays a table of related PoS (excluding closed PoS by default), or a notification if none are found.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPSZENIT390_Dashboard_IncludeClosedPoS_DESKTOP_TEST_Desktop",
      "ID": "TC-389",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section.",
          "Expected Result": "The 'Related PoS' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Select the checkbox 'Include closed PoS'.",
          "Expected Result": "The system re-initiates the search, now including closed PoS in the comparison."
        },
        {
          "Step": 5,
          "Step Description": "Observe the results area.",
          "Expected Result": "The table or list now includes related PoS that are closed, if any exist. Each row represents a single PoS, with relationship info."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User account with 'view Related PoS' privileges exists.\n2. User is logged into the ZENIT system.\n3. At least one PoS is available in the system.\n4. There are closed PoS in the database related to the selected PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with related closed PoS in the database.",
      "Expected Result": "When the 'Include closed PoS' checkbox is selected, the system includes closed PoS in the results table if any match the criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPSZENIT390_Dashboard_NoResultsScenario_DESKTOP_TEST_Desktop",
      "ID": "TC-390",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with no related PoS in the system.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section.",
          "Expected Result": "The system automatically initiates a search for related PoS."
        },
        {
          "Step": 4,
          "Step Description": "Observe the results area.",
          "Expected Result": "A notification is displayed indicating that no results were found. No table is displayed. The 'Export to Excel' button is disabled or not visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User account with 'view Related PoS' privileges exists.\n2. User is logged into the ZENIT system.\n3. At least one PoS exists with no related PoS in the database.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with no related PoS in the database.",
      "Expected Result": "If no related PoS are found, a notification is shown, no table is displayed, and the 'Export to Excel' button is disabled or hidden.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPSZENIT390_Dashboard_ExportToExcel_DESKTOP_TEST_Desktop",
      "ID": "TC-391",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with related PoS in the system.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section.",
          "Expected Result": "The system displays a table of related PoS."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "The system generates and downloads an Excel file containing the displayed related PoS data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User account with 'view Related PoS' privileges exists.\n2. User is logged into the ZENIT system.\n3. At least one PoS exists with related PoS in the database.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with related PoS in the database.",
      "Expected Result": "When related PoS results are displayed, clicking 'Export to Excel' downloads an Excel file with the same data as shown in the table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPSZENIT390_Dashboard_SelectPoSDetails_DESKTOP_TEST_Desktop",
      "ID": "TC-392",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS with related PoS in the system.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section and wait for the results table to appear.",
          "Expected Result": "A table of related PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click the edit icon next to a related PoS in the table.",
          "Expected Result": "The system retrieves and displays the details of the selected PoS on the 'Single PoS' screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User account with 'view Related PoS' privileges exists.\n2. User is logged into the ZENIT system.\n3. At least one PoS exists with related PoS in the database.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; PoS with related PoS in the database.",
      "Expected Result": "Clicking the edit icon for a related PoS displays its details in the 'Single PoS' view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "RelatedPoS-XPSZENIT390_Dashboard_DatabaseError_DESKTOP_TEST_Desktop",
      "ID": "TC-393",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a ZENIT user with privileges to view Related PoS.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Single PoS' dashboard and select a PoS.",
          "Expected Result": "The 'Single PoS' dashboard for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Access the 'Related PoS' section.",
          "Expected Result": "The system attempts to retrieve related PoS data."
        },
        {
          "Step": 4,
          "Step Description": "Simulate a database connection error or timeout (e.g., disconnect the database or use a test environment with forced error).",
          "Expected Result": "The system displays an error message to the user: 'Error retrieving data'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application (ZENIT)",
      "Preconditions": "1. User account with 'view Related PoS' privileges exists.\n2. User is logged into the ZENIT system.\n3. At least one PoS exists in the system.\n4. Test environment allows simulation of database errors.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard - Related PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; ability to simulate database error.",
      "Expected Result": "If a database connection error or timeout occurs, the system displays an error message: 'Error retrieving data'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-390 - Dashboard - Related PoS"
    },
    {
      "Title": "MassiveImporter_proj1_InformationalMessageOnIntegrationAttempt_TEST_Desktop",
      "ID": "TC-394",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the integration with the data owner's system is active in Zenit.",
          "Expected Result": "Integration status is active."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Massive Importer section in Zenit.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to initiate a new data import using the Massive Importer.",
          "Expected Result": "An informational message is displayed, notifying the user that the integration is active and the Massive Importer should only be used as a backup."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid credentials and is logged into Zenit.\n2. Integration with the data owner's system is active.\n3. User has access to the Massive Importer feature.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Integration Notification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "When the user attempts to use the Massive Importer while integration is active, an informational message is displayed, and the user is advised to use the importer only as a backup.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the informational message display when integration is active.",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_ExcelTemplateStructureValidation_TEST_Desktop",
      "ID": "TC-395",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain the official Excel template for a specific data type from Zenit.",
          "Expected Result": "Official template is downloaded and available."
        },
        {
          "Step": 2,
          "Step Description": "Prepare an Excel file by copying data into the template, ensuring no changes to structure, format, or cell types.",
          "Expected Result": "Excel file matches the template structure exactly."
        },
        {
          "Step": 3,
          "Step Description": "Upload the prepared Excel file via the Massive Importer interface.",
          "Expected Result": "File is accepted for import without errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User is logged into Zenit with import permissions.\n2. Official Excel template is available.\n3. Data to import is available and matches the template requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Template Structure Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Official Excel template, valid data set matching template structure.",
      "Expected Result": "The system accepts the Excel file for import only if its structure and format exactly match the provided template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the positive scenario for template structure validation.",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_RejectNonXLSXFormatFiles_TEST_Desktop",
      "ID": "TC-396",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an Excel file in .xls format (not .xlsx) using the correct template structure.",
          "Expected Result": "File is ready in .xls format."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to upload the .xls file via the Massive Importer interface.",
          "Expected Result": "System rejects the file and displays an error message indicating only .xlsx files are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Repeat steps 1-2 with a .csv file and a file in another unsupported format (e.g., .ods).",
          "Expected Result": "System rejects each file and displays an appropriate error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User is logged into Zenit with import permissions.\n2. Official template is available.\n3. Files in .xls, .csv, and .ods formats are prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - File Format Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel files in .xls, .csv, and .ods formats with valid data.",
      "Expected Result": "The system rejects any file that is not in .xlsx format and provides a clear error message to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenarios for file format validation.",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_RejectFilesWithStructuralDeviations_TEST_Desktop",
      "ID": "TC-397",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an Excel file based on the template but introduce one or more structural deviations (e.g., extra columns, missing columns, reordered columns, merged cells, or additional worksheets).",
          "Expected Result": "File contains intentional structural deviations."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to upload the structurally altered file via the Massive Importer interface.",
          "Expected Result": "System rejects the file and displays an error message indicating the structure does not match the template."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User is logged into Zenit with import permissions.\n2. Official template is available.\n3. Structurally altered Excel file is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Structural Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with structural deviations (e.g., extra/missing columns, merged cells, extra worksheet).",
      "Expected Result": "The system rejects any Excel file that does not exactly match the template structure and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenarios for template structure validation.",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_RejectFilesWithFormulas_TEST_Desktop",
      "ID": "TC-398",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an Excel file using the official template but leave formulas in one or more cells instead of static values.",
          "Expected Result": "Excel file contains formulas in some cells."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to upload the file with formulas via the Massive Importer interface.",
          "Expected Result": "System rejects the file and displays an error message indicating that only static values are allowed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User is logged into Zenit with import permissions.\n2. Official template is available.\n3. Excel file with formulas is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Formula Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with formulas in one or more cells.",
      "Expected Result": "The system rejects any Excel file containing formulas and provides a clear error message to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for formula validation.",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_RejectFilesWithEmptyRowsOrMultipleWorksheets_TEST_Desktop",
      "ID": "TC-399",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare an Excel file using the official template but insert empty rows within the data block.",
          "Expected Result": "Excel file contains empty rows within the data block."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to upload the file via the Massive Importer interface.",
          "Expected Result": "System rejects the file and displays an error message indicating empty rows are not allowed."
        },
        {
          "Step": 3,
          "Step Description": "Prepare another Excel file with more than one worksheet.",
          "Expected Result": "Excel file contains multiple worksheets."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload the multi-worksheet file via the Massive Importer interface.",
          "Expected Result": "System rejects the file and displays an error message indicating only one worksheet is allowed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User is logged into Zenit with import permissions.\n2. Official template is available.\n3. Excel files with empty rows and multiple worksheets are prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Data Block and Worksheet Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel files with empty rows and multiple worksheets.",
      "Expected Result": "The system rejects Excel files containing empty rows within the data block or multiple worksheets, providing clear error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenarios for empty rows and worksheet count validation.",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_FileSizeLimitationAndDoubleSubmission_TEST_Desktop",
      "ID": "TC-400",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Prepare a valid Excel file using the official template with a file size just below the maximum allowed limit (e.g., 14.5 MB).",
          "Expected Result": "Excel file is ready and within the size limit."
        },
        {
          "Step": 2,
          "Step Description": "Upload the file via the Massive Importer interface.",
          "Expected Result": "File is accepted for import."
        },
        {
          "Step": 3,
          "Step Description": "Prepare another valid Excel file exceeding the maximum allowed size (e.g., 16 MB).",
          "Expected Result": "Excel file exceeds the size limit."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload the oversized file via the Massive Importer interface.",
          "Expected Result": "System rejects the file and displays an error message indicating the file size exceeds the allowed limit."
        },
        {
          "Step": 5,
          "Step Description": "Split the oversized data into two separate files, each within the allowed size limit, and upload them sequentially.",
          "Expected Result": "Both files are accepted for import, provided they adhere to the template structure and size guidelines."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User is logged into Zenit with import permissions.\n2. Official template is available.\n3. Excel files of varying sizes are prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - File Size Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel files: one just below the size limit, one above the limit, and two split files within the limit.",
      "Expected Result": "The system accepts files within the size limit and rejects those exceeding it, allowing double submission for oversized data as per guidelines.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers file size validation and double submission scenario.",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_proj1_ImportDataManualVsIntegration_TEST_Desktop",
      "ID": "TC-401",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Refer to the 'ZENIT - Elenco Dati' file to identify data types marked as 'Manual', 'Integration', or 'Both'.",
          "Expected Result": "Data types and their import modes are identified."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to import data marked as 'Manual' using the Massive Importer.",
          "Expected Result": "System allows the import process to proceed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to import data marked as 'Integration' using the Massive Importer.",
          "Expected Result": "System prevents the import and displays an appropriate message."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to import data marked as 'Both' using the Massive Importer.",
          "Expected Result": "System allows the import process to proceed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User is logged into Zenit with import permissions.\n2. 'ZENIT - Elenco Dati' file is available.\n3. Data files for each import mode are prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Massive Importer - Import Mode Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "'ZENIT - Elenco Dati' file, Excel files for each import mode.",
      "Expected Result": "The system enforces import mode restrictions as specified in the 'ZENIT - Elenco Dati' file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers validation of import modes (Manual, Integration, Both).",
      "_polarion": "Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-ZENIT-500_Requirement_FileUploadAndTemplateSelection_Desktop_TEST_Desktop",
      "ID": "TC-402",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section in the application.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a specific type of massive importer (e.g., Import RedList Data).",
          "Expected Result": "Importer type is selected and relevant options are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Choose to download the template file for the selected importer type.",
          "Expected Result": "Template file is downloaded successfully."
        },
        {
          "Step": 4,
          "Step Description": "Open the template file and fill in valid data for all required fields.",
          "Expected Result": "Template file is filled with valid data."
        },
        {
          "Step": 5,
          "Step Description": "Upload the completed template file using the import functionality.",
          "Expected Result": "File is uploaded and accepted for processing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section. 2. The system is online and operational. 3. User has permissions to perform imports.",
      "Execution Mode": "Manual",
      "Functionality": "File Upload & Template Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid template file with all required fields filled (e.g., PoS ID, Credit Line, etc.).",
      "Expected Result": "User can successfully download the template, fill it with valid data, and upload it for processing without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-ZENIT-500_Requirement_StructuralValidation_Desktop_TEST_Desktop",
      "ID": "TC-403",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section and select an importer type.",
          "Expected Result": "Importer type is selected."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to upload a file with missing mandatory columns (e.g., missing PoS ID).",
          "Expected Result": "System rejects the file and displays an error indicating missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section. 2. The system is online and operational. 3. User has permissions to perform imports.",
      "Execution Mode": "Manual",
      "Functionality": "File Structural Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Template file with one or more mandatory columns intentionally left blank or removed.",
      "Expected Result": "System must not accept files missing mandatory fields and must provide a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-ZENIT-500_Requirement_DataValidation_Desktop_TEST_Desktop",
      "ID": "TC-404",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section and select an importer type.",
          "Expected Result": "Importer type is selected."
        },
        {
          "Step": 2,
          "Step Description": "Upload a file with invalid data in one or more fields (e.g., text in a numeric field, invalid PoS ID format).",
          "Expected Result": "System performs data validation and identifies the invalid entries."
        },
        {
          "Step": 3,
          "Step Description": "Review the summary of validation errors presented by the system.",
          "Expected Result": "System displays a summary indicating which rows/fields failed validation and the reason for each error."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section. 2. The system is online and operational. 3. User has permissions to perform imports.",
      "Execution Mode": "Manual",
      "Functionality": "Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Template file with at least one row containing invalid data (e.g., PoS ID as 'ABC123' instead of numeric).",
      "Expected Result": "System must reject invalid data and provide detailed error messages for each failed validation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-ZENIT-500_Requirement_SuccessfulImportAndSummary_Desktop_TEST_Desktop",
      "ID": "TC-405",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section and select an importer type.",
          "Expected Result": "Importer type is selected."
        },
        {
          "Step": 2,
          "Step Description": "Upload a valid file with correct structure and data.",
          "Expected Result": "File is accepted and processed."
        },
        {
          "Step": 3,
          "Step Description": "Start the massive import process.",
          "Expected Result": "System processes the file and displays a summary of the updates to be made (e.g., number of PoS to be updated)."
        },
        {
          "Step": 4,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System completes the import and displays evidence of successful and/or unsuccessful updates."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section. 2. The system is online and operational. 3. User has permissions to perform imports. 4. Valid file is prepared for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Execution & Summary",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid template file with multiple rows of correct data.",
      "Expected Result": "System processes the file, updates the records, and provides a summary of successful and unsuccessful updates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-ZENIT-500_Requirement_HistorySectionAndOutputFile_Desktop_TEST_Desktop",
      "ID": "TC-406",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section and perform a file import (successful or with errors).",
          "Expected Result": "Import operation is completed and result is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Access the history section below the import form.",
          "Expected Result": "History section displays a list of previous imports with file names and outcome summaries."
        },
        {
          "Step": 3,
          "Step Description": "Download the output file for an import that had errors.",
          "Expected Result": "Output file is downloaded successfully."
        },
        {
          "Step": 4,
          "Step Description": "Open the output file and verify the presence of the ERROR DESC column with appropriate error descriptions for failed rows (e.g., 'PoS unavailable on DB').",
          "Expected Result": "ERROR DESC column is present and contains correct error messages for each failed row."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section. 2. At least one import operation (with errors) has been performed.",
      "Execution Mode": "Manual",
      "Functionality": "History & Output File Verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Output file from a previous import with known errors.",
      "Expected Result": "History section correctly lists previous imports and downloadable output files contain accurate error descriptions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "MassiveImporter_XPS-ZENIT-500_Requirement_ImportTypeCoverage_Desktop_TEST_Desktop",
      "ID": "TC-407",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Massive Importer section.",
          "Expected Result": "Massive Importer interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all listed import types (e.g., RedList Data, Contract Types Corner - PGS, etc.) are available for selection.",
          "Expected Result": "All specified import types are present and selectable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated and has access to the Massive Importer section.",
      "Execution Mode": "Manual",
      "Functionality": "Import Type Availability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "All required import types are available for user selection as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-500 - Massive Importer"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadValidRedListFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-408",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select a valid RedList Excel file named 'REDLIST_M06_2024.xlsx' containing the 'DATABASE' sheet with valid data.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to import the file.",
          "Expected Result": "System processes the file and confirms successful import with a success message."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Risk Data' tab for a known PoS present in the uploaded file.",
          "Expected Result": "Imported RedList data for the selected PoS is displayed correctly in the 'Risk Data' tab."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT application.\n2. The RedList Excel file ('REDLIST_M06_2024.xlsx') is available and contains the 'DATABASE' sheet with valid data for at least one PoS.\n3. No ongoing system maintenance or downtime.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid RedList Excel file ('REDLIST_M06_2024.xlsx') with 'DATABASE' sheet and PoS data.",
      "Expected Result": "The RedList Excel file is successfully imported, and the data is visible for each PoS in the 'Risk Data' tab of the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadInvalidFileFormat_MassiveImporter_TEST_Desktop",
      "ID": "TC-409",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select an invalid file (e.g., 'REDLIST_M06_2024.csv' or 'image.png').",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to attempt importing the invalid file.",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT application.\n2. An invalid file (not an Excel .xlsx file) is available for upload.\n3. No ongoing system maintenance or downtime.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid file (e.g., 'REDLIST_M06_2024.csv', 'image.png').",
      "Expected Result": "The system prevents uploading of files that are not in the correct Excel format and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadFileMissingDatabaseSheet_MassiveImporter_TEST_Desktop",
      "ID": "TC-410",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select an Excel file named 'REDLIST_M06_2024.xlsx' that does NOT contain the 'DATABASE' sheet.",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to attempt importing the file.",
          "Expected Result": "System rejects the file and displays an error message indicating the required 'DATABASE' sheet is missing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT application.\n2. An Excel file named 'REDLIST_M06_2024.xlsx' without the 'DATABASE' sheet is available for upload.\n3. No ongoing system maintenance or downtime.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file 'REDLIST_M06_2024.xlsx' without 'DATABASE' sheet.",
      "Expected Result": "The system prevents uploading of RedList files that do not contain the required 'DATABASE' sheet and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadFileWithInvalidNamingConvention_MassiveImporter_TEST_Desktop",
      "ID": "TC-411",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RedList' option.",
          "Expected Result": "'Import RedList' upload interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select an Excel file named 'REDLIST_JUNE_2024.xlsx' (incorrect naming convention).",
          "Expected Result": "File is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to attempt importing the file.",
          "Expected Result": "System rejects the file and displays an error message indicating invalid file naming convention."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT application.\n2. An Excel file named 'REDLIST_JUNE_2024.xlsx' (incorrect naming) is available for upload.\n3. No ongoing system maintenance or downtime.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file 'REDLIST_JUNE_2024.xlsx' (incorrect naming).",
      "Expected Result": "The system prevents uploading of RedList files that do not follow the required naming convention and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_ViewImportedDataInDashboard_MassiveImporter_TEST_Desktop",
      "ID": "TC-412",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Risk Data' tab for a PoS present in the most recently imported RedList file.",
          "Expected Result": "'Risk Data' tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the displayed data and verify it matches the corresponding data from the 'DATABASE' sheet of the imported RedList Excel file.",
          "Expected Result": "Displayed data in the 'Risk Data' tab matches the imported RedList data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT application.\n2. A valid RedList Excel file has already been successfully imported.\n3. The PoS to be checked exists in the imported file.\n4. No ongoing system maintenance or downtime.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS identifier present in the imported RedList file; Reference RedList Excel file for data comparison.",
      "Expected Result": "Imported RedList data is accurately displayed for each PoS in the 'Risk Data' tab of the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportRedList_XPS-ZENIT-501_UploadRedListFileDuringSystemMaintenance_MassiveImporter_TEST_Desktop",
      "ID": "TC-413",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT application with valid user credentials during a scheduled system maintenance window.",
          "Expected Result": "User is able to access the application or receives a maintenance notification."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import RedList'.",
          "Expected Result": "If accessible, the 'Import RedList' upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload a valid RedList Excel file.",
          "Expected Result": "System prevents the upload and displays a message indicating that the import functionality is unavailable during maintenance."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT application.\n2. System is under scheduled maintenance.\n3. Valid RedList Excel file is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "RedList Import",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Valid user credentials; Valid RedList Excel file; System in maintenance mode.",
      "Expected Result": "The system does not allow RedList file uploads during maintenance and informs the user accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-501 - Import Red List"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_PGSFileUpload_Validation_DESKTOP_TEST_Desktop",
      "ID": "TC-414",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGS'.",
          "Expected Result": "The file upload interface for PGS contract import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select a valid PGS Excel file prepared using the system-provided template.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system validates the file structure and content."
        },
        {
          "Step": 6,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "A success message is displayed indicating that the PGS contract data has been imported successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has received the original BOA file and extracted PGS data into the system-provided template.\n3. The PGS Excel file is correctly formatted according to the template.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid PGS Excel file (template-compliant), valid user credentials.",
      "Expected Result": "PGS contract data is imported successfully, and a confirmation message is displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_PGIFileUpload_Validation_DESKTOP_TEST_Desktop",
      "ID": "TC-415",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGI'.",
          "Expected Result": "The file upload interface for PGI contract import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select a valid PGI Excel file prepared using the system-provided template.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system validates the file structure and content."
        },
        {
          "Step": 6,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "A success message is displayed indicating that the PGI contract data has been imported successfully."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has received the original BOA file and extracted PGI data into the system-provided template.\n3. The PGI Excel file is correctly formatted according to the template.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid PGI Excel file (template-compliant), valid user credentials.",
      "Expected Result": "PGI contract data is imported successfully, and a confirmation message is displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_InvalidTemplateFile_ErrorHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-416",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGS'.",
          "Expected Result": "The file upload interface for PGS contract import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select an Excel file that does NOT comply with the required template (e.g., missing columns, extra columns, wrong format).",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system validates the file structure and content."
        },
        {
          "Step": 6,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "An error message is displayed indicating that the file format is invalid and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has an Excel file that does not comply with the required template.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid PGS Excel file (not template-compliant), valid user credentials.",
      "Expected Result": "The system rejects the invalid file and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_MissingMandatoryFields_ErrorHandling_DESKTOP_TEST_Desktop",
      "ID": "TC-417",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGI'.",
          "Expected Result": "The file upload interface for PGI contract import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select a PGI Excel file with missing mandatory fields (e.g., missing ZONA RICE or contract number).",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system validates the file structure and content."
        },
        {
          "Step": 6,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "An error message is displayed indicating which mandatory fields are missing and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has a PGI Excel file with missing mandatory fields.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PGI Excel file with missing mandatory fields, valid user credentials.",
      "Expected Result": "The system rejects the file and displays an error message specifying the missing fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_ViewImportedData_DashboardVerification_DESKTOP_TEST_Desktop",
      "ID": "TC-418",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab.",
          "Expected Result": "The contracts tab for a specific PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a PoS that was included in the most recent successful import (PGS or PGI).",
          "Expected Result": "The PoS is found and its details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Review the contract information displayed for the selected PoS.",
          "Expected Result": "The contract information matches the data imported from the Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. At least one successful import of PGS or PGI contract data has been performed.\n2. User has valid credentials and access to the ZENIT system.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Imported contract data, valid user credentials.",
      "Expected Result": "Imported contract data is correctly displayed in the Dashboard for the relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesCorner_XPS-ZENIT-502_UploadOriginalBOAFile_Rejection_DESKTOP_TEST_Desktop",
      "ID": "TC-419",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Contract Types Corner - PGS'.",
          "Expected Result": "The file upload interface for PGS contract import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Choose File' button and select the original BOA file ('REV Rete Attiva <ddmmyyyy>') with both PGI and PGS sheets.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system validates the file structure and content."
        },
        {
          "Step": 6,
          "Step Description": "Wait for the import process to complete.",
          "Expected Result": "An error message is displayed indicating that the file format is not supported and the import is aborted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has the original BOA file ('REV Rete Attiva <ddmmyyyy>') with both PGI and PGS sheets.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Original BOA Excel file, valid user credentials.",
      "Expected Result": "The system rejects the original BOA file and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-502 - Import Contract Types Corner"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_UploadValidAWPExcelFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-420",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the standard AWP template (e.g., 'AWP_Import_Template.xlsx') containing correct and complete contract data.",
          "Expected Result": "The file is uploaded and passes initial format validation."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file, validates the data, and displays a success message indicating that the contractual information has been updated for each PoS."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS included in the import file.",
          "Expected Result": "The contractual information for the selected PoS reflects the data imported from the Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has received the standard AWP Excel template from the system.\n3. User has prepared a valid Excel file with correct data for AWP contracts, following the template structure.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid AWP Excel import file (AWP_Import_Template.xlsx) with at least one PoS and correct data.",
      "Expected Result": "AWP contract data is successfully imported and visible in the Contracts tab for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_UploadInvalidAWPExcelFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-421",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that does not conform to the required AWP template structure (e.g., missing columns, incorrect headers, or invalid data types).",
          "Expected Result": "The system rejects the file and displays a clear error message indicating the reason for the validation failure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has an invalid Excel file (e.g., missing required columns or incorrect format).",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid AWP Excel import file (e.g., missing required columns or incorrect headers).",
      "Expected Result": "System prevents import and displays a descriptive error message for the invalid file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_UploadAWPExcelFileWithDuplicateZONARICE_MassiveImporter_TEST_Desktop",
      "ID": "TC-422",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that contains duplicate ZONA RICE values for different contract entries.",
          "Expected Result": "The system detects the duplicate ZONA RICE entries and displays an error message indicating the duplication issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has prepared an Excel file with duplicate ZONA RICE values.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; AWP Excel import file with duplicate ZONA RICE values.",
      "Expected Result": "System rejects the import and provides a clear error message about duplicate ZONA RICE entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_ViewImportedAWPContractsInDashboard_MassiveImporter_TEST_Desktop",
      "ID": "TC-423",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS that was included in a previous successful AWP contract import.",
          "Expected Result": "The 'Contracts' tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the contractual information displayed for the PoS.",
          "Expected Result": "The contractual information matches the data imported from the AWP Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful AWP contract import has been performed for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with imported AWP contract data.",
      "Expected Result": "Imported AWP contract data is correctly displayed in the Contracts tab for the relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypesAWP_proj504_UploadAWPExcelFileWithMissingMandatoryFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-424",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - AWP' option.",
          "Expected Result": "The import interface for AWP contract types is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that is missing one or more mandatory fields (e.g., ZONA RICE or contract type).",
          "Expected Result": "The system rejects the file and displays an error message specifying the missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has prepared an Excel file missing mandatory fields.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types - AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; AWP Excel import file missing mandatory fields.",
      "Expected Result": "System prevents import and displays a descriptive error message for missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-504 - Import Contract Types - AWP"
    },
    {
      "Title": "ImportContractTypes_XPS-505_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-425",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file prepared using the system's standard template, containing only Betting and VLT contract types with correct structure and data.",
          "Expected Result": "The file is uploaded and the system begins validation."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the validation process to complete.",
          "Expected Result": "Validation completes successfully with a confirmation message indicating that the contractual information has been updated for each PoS."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS included in the import.",
          "Expected Result": "The updated contract information for the selected PoS is visible and matches the imported data."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The system's standard Excel template for Contract Types - Specializzati is available.\n3. The Excel file is correctly filled with Betting and VLT contract data, following the template structure.\n4. At least one PoS with ZONA RICE key exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel file with Betting and VLT contract types; Existing PoS with ZONA RICE key.",
      "Expected Result": "The system successfully imports the contract types, updates the contractual information for each PoS, and displays the updated data in the dashboard.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-505_InvalidTemplateStructure_MassiveImporter_TEST_Desktop",
      "ID": "TC-426",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that does not conform to the required template structure (e.g., missing columns, extra sheets, or incorrect headers).",
          "Expected Result": "The system rejects the file and displays a clear error message indicating the template structure is invalid."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with invalid structure (not matching the system's template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid template structure.",
      "Expected Result": "The system prevents import and displays an error message about the invalid template structure.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-505_NonBettingVLTData_MassiveImporter_TEST_Desktop",
      "ID": "TC-427",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that contains contract types other than Betting and VLT (e.g., Lottery, Retail).",
          "Expected Result": "The system rejects the file and displays an error message indicating only Betting and VLT contract types are allowed."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file containing non-Betting/VLT contract types is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with non-Betting/VLT contract types.",
      "Expected Result": "The system prevents import and displays an error message about invalid contract types.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-505_MissingZONARICEKey_MassiveImporter_TEST_Desktop",
      "ID": "TC-428",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file where one or more rows are missing the ZONA RICE key.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the ZONA RICE key is required for all entries."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with missing ZONA RICE key in one or more rows is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with missing ZONA RICE key.",
      "Expected Result": "The system prevents import and displays an error message about missing ZONA RICE key.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-505_ViewImportedData_DashboardContracts_TEST_Desktop",
      "ID": "TC-429",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Contracts' tab for a PoS included in a previous successful import.",
          "Expected Result": "The 'Contracts' tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Review the contract information displayed for the PoS.",
          "Expected Result": "The contract information matches the data imported from the Excel file."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful import of contract types has been performed for a PoS.\n3. The PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with imported contract data.",
      "Expected Result": "The dashboard displays the correct, updated contract information for the PoS as per the imported data.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportContractTypes_XPS-505_OriginalFileDirectImportAttempt_MassiveImporter_TEST_Desktop",
      "ID": "TC-430",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Contract Types - Specializzati' option.",
          "Expected Result": "The import interface for Contract Types - Specializzati is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select the original file 'ELENCO CONTRATTI PV SPECIALIZZATI.xlsx' without extracting and transcribing the data into the system template.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the file format is not supported."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The original file 'ELENCO CONTRATTI PV SPECIALIZZATI.xlsx' is available and has not been transcribed into the system template.",
      "Execution Mode": "Manual",
      "Functionality": "Import Contract Types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original Excel file without template adaptation.",
      "Expected Result": "The system prevents import and displays an error message about unsupported file format.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-505 - Import Contract Types - Specializzati"
    },
    {
      "Title": "ImportRetina_XPS-510_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-431",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "The RETINA import interface is displayed, allowing file selection."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file filled according to the RETINA template, including correct week number and year.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system processes the file and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' section and select a PoS included in the import.",
          "Expected Result": "The imported data, including week number and year, is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel template is available and correctly filled with valid PoS data, week number, and year.\n3. At least one PoS in the file matches an existing PoS in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; Valid RETINA Excel template with PoS data, week number, and year.",
      "Expected Result": "The RETINA data is successfully imported, and the dashboard displays the correct information for each PoS, including week number and year.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRetina_XPS-510_InvalidTemplateStructure_MassiveImporter_TEST_Desktop",
      "ID": "TC-432",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "The RETINA import interface is displayed, allowing file selection."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file that does not conform to the RETINA template structure (e.g., missing required columns or sheets).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system rejects the file and displays an error message indicating the template structure is invalid."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. An Excel file with an invalid structure (not matching the RETINA template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; Invalid RETINA Excel file (wrong structure).",
      "Expected Result": "The system prevents import and displays a clear error message about the invalid template structure.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRetina_XPS-510_MissingWeekOrYear_MassiveImporter_TEST_Desktop",
      "ID": "TC-433",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "The RETINA import interface is displayed, allowing file selection."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a RETINA Excel file missing the week number and/or year fields.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the week number and/or year is missing."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file missing week number and/or year is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; RETINA Excel file missing week number/year.",
      "Expected Result": "The system prevents import and displays a clear error message about missing week number and/or year.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRetina_XPS-510_DuplicatePoS_MassiveImporter_TEST_Desktop",
      "ID": "TC-434",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "The RETINA import interface is displayed, allowing file selection."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a RETINA Excel file containing duplicate PoS entries (same IDRICE and ZonaRice).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system detects duplicate PoS entries and displays an error or warning message, preventing import."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file with duplicate PoS entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; RETINA Excel file with duplicate PoS entries.",
      "Expected Result": "The system prevents import and displays a clear error or warning about duplicate PoS entries.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRetina_XPS-510_InvalidPoSReference_MassiveImporter_TEST_Desktop",
      "ID": "TC-435",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "The RETINA import interface is displayed, allowing file selection."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a RETINA Excel file containing PoS entries with non-existent IDRICE or ZonaRice values.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system rejects the file and displays an error message indicating invalid PoS reference keys."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file with invalid PoS reference keys is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; RETINA Excel file with invalid IDRICE/ZonaRice.",
      "Expected Result": "The system prevents import and displays a clear error message about invalid PoS reference keys.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRetina_XPS-510_ImportWithNewOpeningsAndClosures_MassiveImporter_TEST_Desktop",
      "ID": "TC-436",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "The RETINA import interface is displayed, allowing file selection."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a RETINA Excel file that includes new PoS openings and closures for the week.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system processes the file, updates the PoS data accordingly, and displays a success message."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' section and verify that new openings are present and closures are not displayed.",
          "Expected Result": "The dashboard reflects the new openings and closures as per the imported data."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. RETINA Excel file with new PoS openings and closures is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; RETINA Excel file with new openings and closures.",
      "Expected Result": "The system updates PoS data to reflect new openings and closures, and the dashboard displays the correct status.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportRetina_XPS-510_ImportWithCorruptedFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-437",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import RETINA' option.",
          "Expected Result": "The RETINA import interface is displayed, allowing file selection."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a corrupted or unreadable Excel file.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to start the import process.",
          "Expected Result": "The system rejects the file and displays an error message indicating the file is corrupted or unreadable."
        }
      ],
      "Test Group": "desktop",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Low",
      "Test Stage": "test",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. Corrupted or unreadable Excel file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import RETINA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid ZENIT user credentials; Corrupted Excel file.",
      "Expected Result": "The system prevents import and displays a clear error message about the corrupted or unreadable file.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-510 - Import RETINA"
    },
    {
      "Title": "ImportProfitLossShops_XPS-ZENIT-511_ValidExcelImport_Functional/Desktop_TEST_Desktop",
      "ID": "TC-438",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Shops' option.",
          "Expected Result": "The import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the provided template, including correct month and year of reference.",
          "Expected Result": "The file is uploaded and passes initial format validation."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message indicating that the data has been imported."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the Dashboard - Single PoS - 'Business Data' and 'ADI Data' tabs for a PoS included in the import.",
          "Expected Result": "Imported Collection, Revenues, and Fees data for the selected PoS are displayed, with the correct month and year of reference."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The Excel template for P&L Shops Data is available and correctly filled with valid data, including month and year.\n3. At least one PoS (Zona Rice) exists in the system matching the data in the Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct structure, valid PoS data, correct month and year.",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the correct information in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPS-ZENIT-511_InvalidTemplateStructure_Functional/Desktop_TEST_Desktop",
      "ID": "TC-439",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Shops' option.",
          "Expected Result": "The import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that does not conform to the required template structure (e.g., missing columns, extra sheets, incorrect headers).",
          "Expected Result": "The system rejects the file and displays an error message indicating the template structure is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with invalid structure is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required columns or incorrect structure.",
      "Expected Result": "The system prevents import and informs the user of the template structure error.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPS-ZENIT-511_MissingMonthYear_Functional/Desktop_TEST_Desktop",
      "ID": "TC-440",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Shops' option.",
          "Expected Result": "The import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file that is missing the month and/or year of reference.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the month and year of reference are required."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file missing the month and/or year of reference is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing month and/or year fields.",
      "Expected Result": "The system prevents import and informs the user that month and year are mandatory.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPS-ZENIT-511_InvalidPoSReference_Functional/Desktop_TEST_Desktop",
      "ID": "TC-441",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Shops' option.",
          "Expected Result": "The import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file containing PoS records with Zona Rice values not present in the system.",
          "Expected Result": "The system rejects the file or the specific records and displays an error message indicating invalid or unknown PoS reference."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with at least one PoS record referencing a non-existent Zona Rice is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with invalid Zona Rice references.",
      "Expected Result": "The system prevents import of records with invalid PoS references and notifies the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPS-ZENIT-511_DuplicatePoSRecords_Functional/Desktop_TEST_Desktop",
      "ID": "TC-442",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Shops' option.",
          "Expected Result": "The import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select an Excel file containing duplicate PoS (Zona Rice) records for the same month and year.",
          "Expected Result": "The system rejects the file or the duplicate records and displays an error message indicating duplicate entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with duplicate PoS records for the same period is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate Zona Rice records for the same month and year.",
      "Expected Result": "The system prevents import of duplicate records and notifies the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPS-ZENIT-511_OriginalCdGFileRejected_Functional/Desktop_TEST_Desktop",
      "ID": "TC-443",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Shops' option.",
          "Expected Result": "The import interface for Profit and Loss - Shops is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select the original file received from CdG (not transcribed into the system template).",
          "Expected Result": "The system rejects the file and displays an error message indicating that only the system template is accepted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The original CdG file (not in the required template) is available for upload.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Original CdG file (not in system template).",
      "Expected Result": "The system rejects the original CdG file and informs the user that only the system template is accepted.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossShops_XPS-ZENIT-511_DashboardDataDisplay_Functional/Desktop_TEST_Desktop",
      "ID": "TC-444",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS - 'Business Data' and 'ADI Data' tabs for a PoS with recently imported data.",
          "Expected Result": "Dashboard tabs are displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the imported Collection, Revenues, and Fees data are displayed for the correct month and year of reference.",
          "Expected Result": "The dashboard displays the correct imported data, including the month and year of reference, for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful import of valid data has been performed for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Previously imported valid data for a PoS.",
      "Expected Result": "The dashboard displays the correct imported data, including month and year, for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-511 - Import Profit and Loss - Shops"
    },
    {
      "Title": "ImportProfitLossGamingHall_XPS-ZENIT-512_UploadValidTemplateData_Desktop_TEST_Desktop",
      "ID": "TC-445",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface for 'Profit and Loss - Gaming Hall' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select a valid Excel template file containing correct Collection, Revenues, Fees, Zona Rice, and month/year reference data.",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System validates the file successfully and displays a confirmation message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. User has received the original CdG file and transcribed the required data into the official Excel template.\n3. The Excel template is filled with valid data, including month and year reference.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel template file with correct data for at least one PoS, including month/year reference.",
      "Expected Result": "The system accepts the file, updates the data for each PoS using Zona Rice as the key, and confirms successful import.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGamingHall_XPS-ZENIT-512_UploadInvalidTemplateStructure_Desktop_TEST_Desktop",
      "ID": "TC-446",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface for 'Profit and Loss - Gaming Hall' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel file that does not conform to the required template structure (e.g., missing columns, extra sheets, or incorrect headers).",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System rejects the file and displays a clear error message indicating the structural issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. User has an Excel file with an invalid structure (not matching the official template).",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing required columns or incorrect sheet names/headers.",
      "Expected Result": "The system rejects the file and provides a descriptive error message about the template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGamingHall_XPS-ZENIT-512_MissingMonthYearReference_Desktop_TEST_Desktop",
      "ID": "TC-447",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface for 'Profit and Loss - Gaming Hall' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel template file missing the month and/or year reference data.",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System rejects the file and displays an error message indicating that the month and year reference are required."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. User has an Excel template file missing the month and/or year reference.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel template file with valid PoS data but missing month/year reference.",
      "Expected Result": "The system rejects the file and provides a clear error message about the missing month/year reference.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGamingHall_XPS-ZENIT-512_DashboardDataVerification_Desktop_TEST_Desktop",
      "ID": "TC-448",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and successfully import a valid Excel template file for a specific month and year.",
          "Expected Result": "File is imported successfully and confirmation message is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Business Data' tab for a PoS included in the import.",
          "Expected Result": "Dashboard displays updated Collection, Revenues, and Fees data for the selected PoS, matching the imported values."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for the same PoS.",
          "Expected Result": "Dashboard displays updated data for the selected PoS, matching the imported values."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the month and year of reference are displayed correctly on the dashboard.",
          "Expected Result": "Dashboard shows the correct month and year reference as per the imported file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. A valid Excel template file has been imported for a specific PoS, month, and year.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel template file with known data for a specific PoS, month, and year.",
      "Expected Result": "Dashboard displays the imported data and the correct month/year reference for each PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossGamingHall_XPS-ZENIT-512_UploadFileWithInvalidZonaRice_Desktop_TEST_Desktop",
      "ID": "TC-449",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged into the ZENIT system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Gaming Hall' import option.",
          "Expected Result": "Import interface for 'Profit and Loss - Gaming Hall' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel template file containing a PoS with an invalid or non-existent Zona Rice value.",
          "Expected Result": "File is uploaded and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the system to process and validate the file.",
          "Expected Result": "System rejects the file and displays an error message indicating the invalid Zona Rice reference."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. User has an Excel template file with at least one PoS entry containing an invalid Zona Rice value.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel template file with at least one PoS entry having an invalid Zona Rice value.",
      "Expected Result": "The system rejects the file and provides a clear error message about the invalid Zona Rice reference.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-512 - Import Profit and Loss - Gaming Hall"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-450",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "The import interface for Profit and Loss - Corner is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the option to upload an Excel file.",
          "Expected Result": "File selection dialog is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Select a valid Excel file that follows the required template, including correct month and year, and all mandatory fields populated.",
          "Expected Result": "The file is uploaded and ready for validation."
        },
        {
          "Step": 6,
          "Step Description": "Submit the file for import.",
          "Expected Result": "System validates the file and displays a success message indicating the data has been imported."
        },
        {
          "Step": 7,
          "Step Description": "Navigate to the Dashboard - Single PoS - 'Business Data' and 'ADI Data' tabs for a PoS included in the import.",
          "Expected Result": "Imported Collection, Revenues, and Fees data for the selected PoS are displayed, with the correct month and year of reference."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The Excel template for P&L Corner Data is available and correctly filled with valid data, including month and year.\n3. At least one PoS (Zona Rice) exists in the system matching the data in the Excel file.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with correct template, month, year, and PoS data.",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the correct information in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_InvalidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-451",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "The import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not follow the required template (e.g., missing columns, incorrect sheet names, or structure).",
          "Expected Result": "The system rejects the file and displays an error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An invalid Excel file (not matching the required template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with incorrect template structure.",
      "Expected Result": "The system prevents import and displays a clear error message about the invalid template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_MissingMonthYear_MassiveImporter_TEST_Desktop",
      "ID": "TC-452",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "The import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file that is valid in structure but missing the month and/or year of reference.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the month and year are required."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. Excel file with correct structure but missing month and/or year is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing month and/or year fields.",
      "Expected Result": "The system prevents import and displays an error message about missing month/year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_InvalidPoSReference_MassiveImporter_TEST_Desktop",
      "ID": "TC-453",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "The import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with a PoS (Zona Rice) reference that does not exist in the system.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the PoS reference is invalid or not found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. Excel file with a non-existent PoS reference is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with invalid/non-existent PoS reference.",
      "Expected Result": "The system prevents import and displays an error message about the invalid PoS reference.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_DuplicateImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-454",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Profit and Loss - Corner' option.",
          "Expected Result": "The import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload and import a valid Excel file for a specific month, year, and PoS.",
          "Expected Result": "The system successfully imports the data."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to import the same file again (duplicate import for the same month, year, and PoS).",
          "Expected Result": "The system detects the duplicate and displays a warning or error message indicating that the data for this period and PoS already exists."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. Valid Excel file for a specific month, year, and PoS is available.\n3. The data has not yet been imported for the given period and PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file for a specific month, year, and PoS.",
      "Expected Result": "The system prevents duplicate import and notifies the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportProfitLossCorner_XPS-ZENIT-513_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-455",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Dashboard - Single PoS - 'Business Data' tab for a PoS included in a previous successful import.",
          "Expected Result": "The 'Business Data' tab is displayed for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the imported Collection, Revenues, and Fees data are displayed for the correct month and year.",
          "Expected Result": "The dashboard displays the correct imported data for the selected PoS, month, and year."
        },
        {
          "Step": 4,
          "Step Description": "Switch to the 'ADI Data' tab for the same PoS.",
          "Expected Result": "The 'ADI Data' tab is displayed with the correct imported data for the selected PoS, month, and year."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful import has been performed for a PoS.\n3. The imported data includes Collection, Revenues, Fees, month, and year.",
      "Execution Mode": "Manual",
      "Functionality": "Import Profit and Loss - Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Previously imported data for a PoS, month, and year.",
      "Expected Result": "The dashboard displays the correct imported data for the selected PoS, month, and year in both tabs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-513 - Import Profit and Loss - Corner"
    },
    {
      "Title": "ImportQRCorner_XPSZENIT514_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-456",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel file structured according to the system's PoS Master Data template, containing correct data for multiple PoS entries.",
          "Expected Result": "File is accepted and validation process starts."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation if prompted.",
          "Expected Result": "System processes the file and displays a success message indicating that the data has been imported."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Master Data' tab for one of the imported PoS.",
          "Expected Result": "Imported 'Date Activated' data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has received the original 'QR_Corner_<month> <yyyy>' file from Network Distribution.\n3. User has transcribed the relevant PoS data into the official PoS Master Data Excel template as required by the system.\n4. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid PoS Master Data Excel file with at least two PoS entries and correct 'Zona Rice' reference keys.",
      "Expected Result": "The system successfully imports the data, updates the PoS records, and displays the correct 'Date Activated' for each PoS in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner_XPSZENIT514_InvalidTemplateUpload_MassiveImporter_TEST_Desktop",
      "ID": "TC-457",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload the original 'QR_Corner_<month> <yyyy>' file received from Network Distribution (not transcribed into the system template).",
          "Expected Result": "System rejects the file and displays an error message indicating invalid template or structure."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has received the original 'QR_Corner_<month> <yyyy>' file from Network Distribution.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Original 'QR_Corner_<month> <yyyy>' Excel file with multiple sheets, not in system template format.",
      "Expected Result": "The system rejects the upload and displays a clear error message about the invalid file structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner_XPSZENIT514_MissingRequiredFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-458",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file in the correct template but with missing required fields (e.g., missing 'Zona Rice' or 'Date Activated').",
          "Expected Result": "System rejects the file and displays an error message specifying the missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has a PoS Master Data Excel template with missing required fields.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS Master Data Excel file missing 'Zona Rice' or 'Date Activated' for at least one PoS entry.",
      "Expected Result": "The system rejects the upload and provides a clear error message about the missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner_XPSZENIT514_DuplicatePoSEntries_MassiveImporter_TEST_Desktop",
      "ID": "TC-459",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file in the correct template containing duplicate PoS entries (same 'Zona Rice' key).",
          "Expected Result": "System rejects the file and displays an error message indicating duplicate entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has a PoS Master Data Excel template with duplicate 'Zona Rice' entries.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS Master Data Excel file with at least two entries sharing the same 'Zona Rice' value.",
      "Expected Result": "The system rejects the upload and provides a clear error message about duplicate PoS entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner_XPSZENIT514_ViewImportedData_DashboardSinglePoS_TEST_Desktop",
      "ID": "TC-460",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Master Data' tab for a PoS that was updated via a successful QR Corner import.",
          "Expected Result": "'Master Data' tab for the selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the 'Date Activated' field reflects the value imported from the last successful QR Corner import.",
          "Expected Result": "'Date Activated' field displays the correct imported value for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. At least one successful QR Corner import has been performed for the PoS.\n2. User has valid credentials and access to the ZENIT system.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS Master Data with known imported 'Date Activated' values.",
      "Expected Result": "The dashboard displays the correct 'Date Activated' value for the PoS as per the last import.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportQRCorner_XPSZENIT514_UploadCorruptedFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-461",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import \"QR Corner\"'.",
          "Expected Result": "File upload dialog for 'QR Corner' import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a corrupted or unreadable Excel file (e.g., file with invalid format or broken structure).",
          "Expected Result": "System rejects the file and displays an error message indicating the file is corrupted or unreadable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has a corrupted or unreadable Excel file.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "QR Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Corrupted or unreadable Excel file (e.g., incomplete file, wrong extension, or intentionally damaged).",
      "Expected Result": "The system rejects the upload and displays a clear error message about the corrupted file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-514 - Import QR Corner"
    },
    {
      "Title": "ImportOfflinePoSDataStorage_XPS-ZENIT-520_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-462",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface for Offline PoS Data Storage is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file (PoS_Offline) containing historical PoS data not present in MDM, with all required fields filled correctly.",
          "Expected Result": "File is uploaded and passes initial validation checks."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "System processes the file and displays a success message indicating that the data has been imported."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for one of the imported PoS using its ID Rice and Zona Rice.",
          "Expected Result": "Imported PoS data is visible and matches the data from the uploaded file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials. 2. User has access to the 'Massive Importer' section. 3. The Excel template (PoS_Offline) is available and filled with valid data for at least one PoS not present in MDM. 4. No system maintenance is ongoing.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file (PoS_Offline) with at least one historical PoS entry (including ID Rice, Zona Rice, and all required fields).",
      "Expected Result": "All valid PoS records from the Excel file are imported and visible in the Dashboard - Single PoS, with data matching the uploaded file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage_XPS-ZENIT-520_InvalidExcelFormat_MassiveImporter_TEST_Desktop",
      "ID": "TC-463",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template (e.g., missing columns, incorrect headers, or wrong file format).",
          "Expected Result": "System rejects the file and displays an error message indicating the format issue."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials. 2. User has access to the 'Massive Importer' section. 3. An invalid Excel file (wrong format or missing required columns) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid Excel file (e.g., missing required columns or incorrect headers).",
      "Expected Result": "System prevents import and provides a clear error message about the file format issue.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage_XPS-ZENIT-520_DuplicatePoSHandling_MassiveImporter_TEST_Desktop",
      "ID": "TC-464",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing duplicate PoS entries (same ID Rice and Zona Rice).",
          "Expected Result": "System detects duplicate entries and displays an appropriate error or warning message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials. 2. User has access to the 'Massive Importer' section. 3. Excel file with duplicate PoS entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with at least two rows having the same ID Rice and Zona Rice.",
      "Expected Result": "System identifies duplicate PoS entries and prevents import, displaying a clear error or warning message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage_XPS-ZENIT-520_UpdateExistingPoS_MassiveImporter_TEST_Desktop",
      "ID": "TC-465",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing an existing PoS (same ID Rice and Zona Rice) with updated data (e.g., updated legal status or loss transition).",
          "Expected Result": "System processes the file and updates the existing PoS record with the new data."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to 'Dashboard - Single PoS' and search for the updated PoS.",
          "Expected Result": "PoS data reflects the updates from the imported file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials. 2. At least one PoS already exists in Zenit with known ID Rice and Zona Rice. 3. Excel file with updated data for the existing PoS is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with updated data for an existing PoS (matching ID Rice and Zona Rice).",
      "Expected Result": "Existing PoS record is updated with new data from the imported file, visible in the Dashboard - Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage_XPS-ZENIT-520_WriteOffFlagPersistence_MassiveImporter_TEST_Desktop",
      "ID": "TC-466",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing PoS data with the 'Write-off applied Flag' set for at least one PoS.",
          "Expected Result": "System processes the file and imports the data."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the database or use an admin tool to verify that the 'Write-off applied Flag' value is stored for the imported PoS, even though it is not visible on the Dashboard.",
          "Expected Result": "'Write-off applied Flag' value is correctly stored in the backend for the imported PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials. 2. Access to backend or admin tool to verify database values. 3. Excel file with 'Write-off applied Flag' set for at least one PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Excel file with 'Write-off applied Flag' set for at least one PoS.",
      "Expected Result": "'Write-off applied Flag' is stored in the backend for the imported PoS, even if not visible on the Dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage_XPS-ZENIT-520_RejectAutomaticAcquisition_MassiveImporter_TEST_Desktop",
      "ID": "TC-467",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with PoS data, leaving some personal data fields blank to test if the system attempts to auto-fill from other systems (MDM).",
          "Expected Result": "System does not auto-acquire missing personal data from other systems; only data present in the uploaded file is imported."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials. 2. Excel file with some personal data fields intentionally left blank for PoS not present in MDM.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Excel file with missing personal data fields for PoS not present in MDM.",
      "Expected Result": "System does not auto-acquire missing personal data from other systems; only data present in the uploaded file is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportOfflinePoSDataStorage_XPS-ZENIT-520_ClosedPoSStatus_MassiveImporter_TEST_Desktop",
      "ID": "TC-468",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the Zenit application with valid credentials.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Offline PoS Data Storage' option.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file with PoS data for historical PoS not present in MDM.",
          "Expected Result": "System processes the file and imports the PoS data."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to 'Dashboard - Single PoS' and search for the imported PoS.",
          "Expected Result": "Imported PoS is displayed with status 'Closed' or equivalent, as per system conventions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Zenit Web Application",
      "Preconditions": "1. User has valid Zenit credentials. 2. Excel file with historical PoS data not present in MDM is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Offline PoS Data Storage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with historical PoS data not present in MDM.",
      "Expected Result": "Imported PoS records are treated as 'Closed' in the system and displayed as such in the Dashboard - Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-520 - Import Offline PoS Data Storage"
    },
    {
      "Title": "ImportTrackingWinnings-XPS530_Requirement_UploadTicketsPaidOtherAgencies_DESKTOP_TEST_Desktop",
      "ID": "TC-469",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Tickets paid at other agencies'.",
          "Expected Result": "File upload interface for 'Tickets paid at other agencies' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file prepared using the provided template for 'Tickets paid at other agencies'.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to submit the file.",
          "Expected Result": "System processes the file and displays a success message if validation passes."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Winning Data' tab for a PoS included in the import.",
          "Expected Result": "Imported tracking winnings data for the selected PoS is updated and visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. The Excel template for 'Tickets paid at other agencies' is correctly filled and available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file for 'Tickets paid at other agencies' with at least one record for a known PoS.",
      "Expected Result": "The system successfully imports the file, updates the tracking winnings for each PoS, and the data is visible in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings-XPS530_Requirement_UploadUnpaidWinningSportTickets_DESKTOP_TEST_Desktop",
      "ID": "TC-470",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning SPORT tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning SPORT tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file prepared using the provided template for 'Unpaid winning SPORT tickets'.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to submit the file.",
          "Expected Result": "System processes the file and displays a success message if validation passes."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Winning Data' tab for a PoS included in the import.",
          "Expected Result": "Imported unpaid winning SPORT tickets data for the selected PoS is updated and visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. The Excel template for 'Unpaid winning SPORT tickets' is correctly filled and available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file for 'Unpaid winning SPORT tickets' with at least one record for a known PoS.",
      "Expected Result": "The system successfully imports the file, updates the unpaid winning SPORT tickets for each PoS, and the data is visible in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings-XPS530_Requirement_UploadUnpaidWinningVRTickets_DESKTOP_TEST_Desktop",
      "ID": "TC-471",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning VR tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning VR tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file prepared using the provided template for 'Unpaid winning VR tickets'.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to submit the file.",
          "Expected Result": "System processes the file and displays a success message if validation passes."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Winning Data' tab for a PoS included in the import.",
          "Expected Result": "Imported unpaid winning VR tickets data for the selected PoS is updated and visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. The Excel template for 'Unpaid winning VR tickets' is correctly filled and available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file for 'Unpaid winning VR tickets' with at least one record for a known PoS.",
      "Expected Result": "The system successfully imports the file, updates the unpaid winning VR tickets for each PoS, and the data is visible in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings-XPS530_Requirement_InvalidTemplateUpload_DESKTOP_TEST_Desktop",
      "ID": "TC-472",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Tickets paid at other agencies'.",
          "Expected Result": "File upload interface for 'Tickets paid at other agencies' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file that does not conform to the required template (e.g., missing columns, extra columns, wrong format).",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to submit the file.",
          "Expected Result": "System rejects the file and displays a clear error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An invalid Excel file (not matching the required template) is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing or extra columns, or incorrect format.",
      "Expected Result": "The system does not import the file and provides a clear error message about the template issue.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for template validation.",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings-XPS530_Requirement_MissingMandatoryFields_DESKTOP_TEST_Desktop",
      "ID": "TC-473",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning SPORT tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning SPORT tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file prepared with the correct template but with one or more mandatory fields left blank.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to submit the file.",
          "Expected Result": "System rejects the file and displays an error message indicating missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. Excel file with correct template but missing mandatory fields is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with at least one mandatory field (e.g., Seller PoS identifier) left blank.",
      "Expected Result": "The system does not import the file and provides a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for missing required data.",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings-XPS530_Requirement_DuplicatePoSIdentifiers_DESKTOP_TEST_Desktop",
      "ID": "TC-474",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Unpaid winning VR tickets'.",
          "Expected Result": "File upload interface for 'Unpaid winning VR tickets' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select an Excel file with duplicate Seller PoS identifiers in the data rows.",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to submit the file.",
          "Expected Result": "System processes the file and either merges the data for duplicate PoS identifiers as per business rules or rejects the file with an appropriate error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. Excel file with duplicate Seller PoS identifiers is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with two or more rows containing the same Seller PoS identifier.",
      "Expected Result": "System handles duplicate PoS identifiers according to business rules (merge or reject with error).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers edge case for duplicate identifiers.",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings-XPS530_Requirement_UploadLargeFile_DESKTOP_TEST_Desktop",
      "ID": "TC-475",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed with import options."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import Tracking Winnings - Tickets paid at other agencies'.",
          "Expected Result": "File upload interface for 'Tickets paid at other agencies' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Choose File' and select a valid Excel file with a large number of records (e.g., 10,000+ rows).",
          "Expected Result": "The selected file is attached and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' button to submit the file.",
          "Expected Result": "System processes the large file successfully and displays a success message if validation passes."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. Large Excel file (10,000+ rows) is available on the local machine.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "performance",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Large Excel file with valid data for 'Tickets paid at other agencies'.",
      "Expected Result": "System successfully imports the large file without performance degradation or errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers performance and scalability for large imports.",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportTrackingWinnings-XPS530_Requirement_ViewImportedDataDashboard_DESKTOP_TEST_Desktop",
      "ID": "TC-476",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Winning Data' tab.",
          "Expected Result": "Dashboard for single PoS is displayed with winning data section."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS for which data was recently imported via the 'Massive Importer'.",
          "Expected Result": "Winning data for the selected PoS is displayed, including the newly imported tracking winnings information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. At least one successful import has been performed for a PoS.\n3. User has access to the dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Import Tracking Winnings",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier for which data was imported in a previous test.",
      "Expected Result": "Dashboard displays the imported tracking winnings data for the selected PoS accurately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers post-import data visibility.",
      "_polarion": "XPS-ZENIT-530 - Import Tracking Winnings"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-477",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "The import interface for 'AWP - Altro Concessionario' is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the provided template, containing correct AWP data for multiple PoS (with 'Zona Rice' identifiers).",
          "Expected Result": "The file is uploaded and passes initial format validation."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the import operation.",
          "Expected Result": "The system processes the file, validates the data, and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab for a PoS included in the import.",
          "Expected Result": "The imported AWP data is correctly displayed for the selected PoS, reflecting the number of AWPs as per the imported file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The Excel template for 'AWP - Altro Concessionario' is available and correctly filled with valid data.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with multiple PoS and AWP records, using correct 'Zona Rice' identifiers.",
      "Expected Result": "AWP data is successfully imported and visible in the dashboard for each PoS, with correct calculation of 'Number AWP AC'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_InvalidTemplateFormat_MassiveImporter_TEST_Desktop",
      "ID": "TC-478",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "The import interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template (e.g., missing columns, extra columns, incorrect sheet name).",
          "Expected Result": "The system rejects the file and displays an error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An invalid Excel file (wrong template structure) is available.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with incorrect structure (e.g., missing required columns, wrong sheet name).",
      "Expected Result": "System prevents import and displays a clear error message about the template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_MissingRequiredFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-479",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "The import interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file that is missing required fields (e.g., missing 'Zona Rice' values for some records).",
          "Expected Result": "The system rejects the file and displays an error message indicating missing required fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file missing required fields (e.g., 'Zona Rice') is available.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing 'Zona Rice' values in some rows.",
      "Expected Result": "System prevents import and displays a clear error message about missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_DuplicateRecords_MassiveImporter_TEST_Desktop",
      "ID": "TC-480",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "The import interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel file containing duplicate records for the same 'Zona Rice' and AWP.",
          "Expected Result": "The system processes the file and either merges duplicates or displays an error/warning about duplicate records, according to business rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with duplicate records for the same 'Zona Rice' is available.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Import",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Excel file with duplicate 'Zona Rice' and AWP records.",
      "Expected Result": "System handles duplicates according to business rules (either merges or rejects with a clear message).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Assumes business rules for duplicates are defined.",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-481",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - ADI Data' tab.",
          "Expected Result": "The dashboard for a single PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS that was included in a previous successful import.",
          "Expected Result": "The ADI Data tab displays the imported AWP data for the selected PoS, including the correct 'Number AWP AC' value."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful import of AWP data has been performed for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Previously imported valid AWP data for at least one PoS.",
      "Expected Result": "Imported AWP data is visible and accurate in the dashboard for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportAWPAC_XPS-ZENIT-533_InvalidFileType_MassiveImporter_TEST_Desktop",
      "ID": "TC-482",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import AWP - Altro Concessionario' option.",
          "Expected Result": "The import interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload a file that is not an Excel file (e.g., .csv, .txt, .pdf).",
          "Expected Result": "The system rejects the file and displays an error message indicating only Excel files are accepted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. A non-Excel file (e.g., .csv, .txt, .pdf) is available.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Altro Concessionario Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-Excel file (e.g., .csv, .txt, .pdf).",
      "Expected Result": "System prevents import and displays a clear error message about invalid file type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-533 - Import AWP - Altro Concessionario"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_UploadValidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-483",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "'Import DATABASE RETE' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select a valid Excel file filled according to the standard template with correct data for Unpaid winning VR tickets.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' or 'Import' button to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for a PoS included in the imported file.",
          "Expected Result": "The updated data for the selected PoS is visible and matches the imported information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions.\n2. The standard Excel template for DATABASE RETE is available and filled with valid data.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid DATABASE RETE Excel template with correct data for at least one PoS.",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and the imported data is visible in the Dashboard - Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_UploadInvalidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-484",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "'Import DATABASE RETE' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select an Excel file that does not conform to the standard template (e.g., missing required columns, extra sheets, or incorrect format).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' or 'Import' button to start the import process.",
          "Expected Result": "System displays an error message indicating the file format is invalid and the import is rejected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions.\n2. An invalid Excel file (not matching the required template) is available.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (e.g., missing columns, extra sheets, or wrong format).",
      "Expected Result": "The system rejects the invalid file and displays an appropriate error message without updating any data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_UploadEmptyTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-485",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "'Import DATABASE RETE' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select a standard template Excel file that is empty (no data rows).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' or 'Import' button to start the import process.",
          "Expected Result": "System displays a warning or error message indicating that the file contains no data and the import is not performed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions.\n2. An empty standard template Excel file is available.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Empty DATABASE RETE Excel template.",
      "Expected Result": "The system does not import any data and displays a message indicating the file is empty or contains no data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_UploadNonExcelFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-486",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "'Import DATABASE RETE' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select a non-Excel file (e.g., .txt, .csv, .pdf).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' or 'Import' button to start the import process.",
          "Expected Result": "System displays an error message indicating that only Excel files are accepted and the import is not performed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions.\n2. A non-Excel file is available for upload.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Non-Excel file (e.g., .txt, .csv, .pdf).",
      "Expected Result": "The system rejects the non-Excel file and displays an appropriate error message without updating any data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_ValidatePoSUpdateAfterImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-487",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "'Import DATABASE RETE' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select a valid Excel file filled according to the standard template with updated data for a specific PoS (using correct ID Rice and Zona Rice).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' or 'Import' button to start the import process.",
          "Expected Result": "System processes the file and displays a success message indicating the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for the PoS (using ID Rice and Zona Rice) included in the imported file.",
          "Expected Result": "The updated data for the selected PoS is visible and matches the imported information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions.\n2. The standard Excel template for DATABASE RETE is available and filled with updated data for a specific PoS.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid DATABASE RETE Excel template with updated data for a specific PoS (ID Rice and Zona Rice).",
      "Expected Result": "The system updates the PoS data as per the imported file and the changes are visible in the Dashboard - Single PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDatabaseRete_XPS-ZENIT-534_UploadTemplateWithDuplicateKeys_MassiveImporter_TEST_Desktop",
      "ID": "TC-488",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DATABASE RETE' option.",
          "Expected Result": "'Import DATABASE RETE' upload interface is shown."
        },
        {
          "Step": 4,
          "Step Description": "Click on the file upload button and select a valid Excel file filled according to the standard template but containing duplicate entries for the same ID Rice and Zona Rice.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click the 'Upload' or 'Import' button to start the import process.",
          "Expected Result": "System displays an error or warning message indicating duplicate keys are present and the import is not performed or only the first/last entry is considered as per business rules."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions.\n2. The standard Excel template for DATABASE RETE is available and filled with duplicate entries for the same ID Rice and Zona Rice.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Database Rete Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; DATABASE RETE Excel template with duplicate ID Rice and Zona Rice entries.",
      "Expected Result": "The system detects duplicate keys and handles them according to business rules (error, warning, or specific entry selection).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-534 - Import DATABASE RETE"
    },
    {
      "Title": "ImportDBCorner-XPS535_Requirement_ValidExcelImport_DESKTOP_TEST_Desktop",
      "ID": "TC-489",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import DB Corner' option.",
          "Expected Result": "'Import DB Corner' import interface is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the 'Upload' button and select a valid Excel file structured according to the system's standard template, containing valid data for Unpaid winning VR tickets.",
          "Expected Result": "The file is uploaded and displayed in the import interface."
        },
        {
          "Step": 5,
          "Step Description": "Click on the 'Import' button to start the import process.",
          "Expected Result": "System validates the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for a PoS included in the imported file.",
          "Expected Result": "The imported data for the selected PoS is correctly displayed in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system with appropriate permissions.\n2. The standard Excel template for DB Corner import is available.\n3. The Excel file is correctly filled with valid data for Unpaid winning VR tickets.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel template file with sample data for at least one PoS.",
      "Expected Result": "The system successfully imports the data and updates the Dashboard - Single PoS for each PoS included in the file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS535_Requirement_InvalidTemplateFormat_DESKTOP_TEST_Desktop",
      "ID": "TC-490",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section and select 'Import DB Corner'.",
          "Expected Result": "'Import DB Corner' import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template (e.g., missing columns, extra sheets, or incorrect sheet names).",
          "Expected Result": "System rejects the file and displays an error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. An Excel file with an invalid structure is available.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid Excel file (e.g., missing required columns or incorrect sheet name).",
      "Expected Result": "System prevents import and displays a clear error message about the template format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS535_Requirement_MissingMandatoryFields_DESKTOP_TEST_Desktop",
      "ID": "TC-491",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' > 'Import DB Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file using the correct template but with missing mandatory fields (e.g., missing ID Rice or Zona Rice).",
          "Expected Result": "System validates the file and displays an error message indicating which mandatory fields are missing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. Excel template file with missing mandatory fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with missing ID Rice or Zona Rice fields.",
      "Expected Result": "System rejects the import and provides a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS535_Requirement_DuplicateEntries_DESKTOP_TEST_Desktop",
      "ID": "TC-492",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' > 'Import DB Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an Excel file with duplicate entries for the same ID Rice and Zona Rice.",
          "Expected Result": "System validates the file and displays an error message or warning about duplicate entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. Excel template file with duplicate entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with duplicate rows for the same ID Rice and Zona Rice.",
      "Expected Result": "System prevents import and displays a message about duplicate entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS535_Requirement_EmptyFile_DESKTOP_TEST_Desktop",
      "ID": "TC-493",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' > 'Import DB Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload an empty Excel file (no data rows, only headers).",
          "Expected Result": "System validates the file and displays an error message indicating that no data is present for import."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. Empty Excel template file is available.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Empty Excel template file (only headers, no data rows).",
      "Expected Result": "System rejects the import and displays a message about missing data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportDBCorner-XPS535_Requirement_ViewImportedData_DESKTOP_TEST_Desktop",
      "ID": "TC-494",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to 'Massive Importer' > 'Import DB Corner'.",
          "Expected Result": "Import interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Upload and import a valid Excel file as per the standard template.",
          "Expected Result": "System imports the file successfully and displays a success message."
        },
        {
          "Step": 4,
          "Step Description": "Navigate to 'Dashboard - Single PoS' and search for a PoS included in the import.",
          "Expected Result": "Imported data for the selected PoS is displayed correctly in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to the ZENIT system.\n2. Valid Excel template file with data for at least one PoS is available.",
      "Execution Mode": "Manual",
      "Functionality": "DB Corner Import",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel template file with sample data for at least one PoS.",
      "Expected Result": "Imported data is visible and accurate in the Dashboard - Single PoS for each PoS included in the file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-535 - Import DB Corner"
    },
    {
      "Title": "ImportGNTNCreditSituation_proj536_ValidImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-495",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a valid Excel file filled according to the provided template, containing correct GNTN Credit Situation data.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file for import.",
          "Expected Result": "The system processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' section and select a PoS included in the import.",
          "Expected Result": "The imported GNTN Credit Situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The Excel template for GNTN Credit Situation import is available.\n3. The Excel file is correctly filled with valid data as per the template.\n4. At least one PoS in the file exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid Excel file with GNTN Credit Situation data for existing PoS (Zona Code and Rice Number).",
      "Expected Result": "The system successfully imports the data, updates the relevant PoS records, and displays the new data in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation_proj536_InvalidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-496",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file that does not conform to the required template (e.g., missing columns, extra columns, or incorrect headers).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file for import.",
          "Expected Result": "The system rejects the file and displays an error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file that does not match the required template is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with incorrect structure (e.g., missing required columns or incorrect headers).",
      "Expected Result": "The system rejects the file and provides a clear error message about the template mismatch.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation_proj536_MissingMandatoryFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-497",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with missing mandatory fields (e.g., missing Zona Code or Rice Number for some rows).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file for import.",
          "Expected Result": "The system rejects the file and displays an error message indicating missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with missing mandatory fields is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file missing Zona Code or Rice Number in one or more rows.",
      "Expected Result": "The system rejects the file and provides a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation_proj536_DuplicateEntries_MassiveImporter_TEST_Desktop",
      "ID": "TC-498",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file containing duplicate entries for the same Zona Code and Rice Number.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file for import.",
          "Expected Result": "The system rejects the file and displays an error message indicating duplicate entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with duplicate Zona Code and Rice Number entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with two or more rows having the same Zona Code and Rice Number.",
      "Expected Result": "The system rejects the file and provides a clear error message about duplicate entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation_proj536_NonExistingPoS_MassiveImporter_TEST_Desktop",
      "ID": "TC-499",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import GNTN Credit Situation' option.",
          "Expected Result": "The file upload interface for GNTN Credit Situation is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file containing Zona Code and Rice Number values that do not exist in the system.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file for import.",
          "Expected Result": "The system processes the file and displays an error message for each non-existing PoS, indicating that the record was not found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with Zona Code and Rice Number not present in the system is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import GNTN Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Excel file with Zona Code and Rice Number not present in the system.",
      "Expected Result": "The system rejects the records for non-existing PoS and provides a clear error message for each.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportGNTNCreditSituation_proj536_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-500",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' section.",
          "Expected Result": "The dashboard for single PoS credit management is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS for which GNTN Credit Situation data was recently imported.",
          "Expected Result": "The PoS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Review the displayed credit situation data for the selected PoS.",
          "Expected Result": "The imported GNTN Credit Situation data is correctly shown for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful GNTN Credit Situation import has been performed for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Credit Management Dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with recently imported GNTN Credit Situation data.",
      "Expected Result": "The dashboard displays the correct and updated GNTN Credit Situation data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-536 - Import GNTN Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation_XPS-ZENIT-537_ValidTemplateUpload_MassiveImporter_TEST_Desktop",
      "ID": "TC-501",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Corner Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select a valid Excel file that follows the required GEO Credit Management template, containing correct Corner Credit Situation data.",
          "Expected Result": "The file is uploaded and the system starts the validation process."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the validation to complete.",
          "Expected Result": "A success message is displayed indicating that the import was successful."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has access to the standard Excel template for GEO Credit Management.\n3. The Excel file is correctly filled with valid Corner Credit Situation data.\n4. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Excel template file with correct data for at least one PoS (including Zona Code and Rice Number).",
      "Expected Result": "The system successfully imports the data, updates the information for each PoS using Zona Code and Rice Number, and displays a confirmation message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation_XPS-ZENIT-537_InvalidTemplateUpload_MassiveImporter_TEST_Desktop",
      "ID": "TC-502",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Corner Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel file that does NOT follow the required GEO Credit Management template (e.g., missing columns, wrong format).",
          "Expected Result": "The file is uploaded and the system starts the validation process."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the validation to complete.",
          "Expected Result": "An error message is displayed indicating that the file format is invalid and the import is rejected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has an Excel file that does not conform to the required template (e.g., missing required columns).\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (e.g., missing Zona Code column).",
      "Expected Result": "The system rejects the file and displays a clear error message about the invalid format. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation_XPS-ZENIT-537_MissingRequiredFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-503",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Corner Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel file that follows the template but has missing required fields (e.g., empty Zona Code or Rice Number for some rows).",
          "Expected Result": "The file is uploaded and the system starts the validation process."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the validation to complete.",
          "Expected Result": "An error message is displayed indicating which required fields are missing or empty. The import is rejected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has an Excel file following the template but with missing required fields.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template file with missing Zona Code or Rice Number in some rows.",
      "Expected Result": "The system rejects the file and displays a clear error message specifying the missing required fields. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation_XPS-ZENIT-537_ViewImportedData_DashboardSinglePoS_TEST_Desktop",
      "ID": "TC-504",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' section.",
          "Expected Result": "The dashboard for a single PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a PoS that was included in a previously successful import (using Zona Code and Rice Number).",
          "Expected Result": "The PoS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the imported Corner Credit Situation data is correctly displayed for the selected PoS.",
          "Expected Result": "The imported data matches the data from the uploaded Excel file."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful import of Corner Credit Situation data has been performed.\n3. The PoS to be checked exists in the imported data.\n4. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS identifiers (Zona Code and Rice Number) from a successful import.",
      "Expected Result": "The dashboard displays the correct imported Corner Credit Situation data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportCornerCreditSituation_XPS-ZENIT-537_DuplicateEntriesInFile_MassiveImporter_TEST_Desktop",
      "ID": "TC-505",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Corner Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Corner Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select an Excel file that contains duplicate entries for the same Zona Code and Rice Number.",
          "Expected Result": "The file is uploaded and the system starts the validation process."
        },
        {
          "Step": 5,
          "Step Description": "Wait for the validation to complete.",
          "Expected Result": "An error message is displayed indicating the presence of duplicate entries. The import is rejected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. User has an Excel file with duplicate Zona Code and Rice Number entries.\n3. The system is online and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Import Corner Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template file with duplicate Zona Code and Rice Number rows.",
      "Expected Result": "The system rejects the file and displays a clear error message about duplicate entries. No data is imported.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-537 - Import Corner Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_proj538_ValidExcelImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-506",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click on 'Download Template' to obtain the standard Excel template.",
          "Expected Result": "The standard Excel template is downloaded successfully."
        },
        {
          "Step": 5,
          "Step Description": "Fill the template with valid 'Conti Gioco' Credit Situation data, ensuring all required fields (including Zona Code and Rice Number) are populated as per the template structure.",
          "Expected Result": "Excel template is correctly filled with valid data."
        },
        {
          "Step": 6,
          "Step Description": "Upload the completed Excel template using the provided upload interface.",
          "Expected Result": "The file is uploaded and the system begins validation."
        },
        {
          "Step": 7,
          "Step Description": "Wait for the system to complete validation and processing.",
          "Expected Result": "A success message is displayed indicating that the import was successful and data has been updated."
        },
        {
          "Step": 8,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' section and select a PoS included in the import.",
          "Expected Result": "The imported credit situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The standard Excel template is available for download.\n3. The user has access to valid 'Conti Gioco' Credit Situation data to populate the template.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid 'Conti Gioco' Credit Situation data; Standard Excel template.",
      "Expected Result": "The system successfully imports the provided Excel file, updates the credit situation for each PoS, and displays the correct data in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_proj538_InvalidTemplateStructure_MassiveImporter_TEST_Desktop",
      "ID": "TC-507",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required template structure (e.g., missing columns, extra columns, or incorrect headers).",
          "Expected Result": "The system rejects the file and displays an error message indicating that the template structure is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel file with an invalid structure is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with invalid structure (e.g., missing required columns).",
      "Expected Result": "The system prevents the import and displays a clear error message about the invalid template structure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_proj538_MissingMandatoryFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-508",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel template with one or more mandatory fields (e.g., Zona Code or Rice Number) left blank.",
          "Expected Result": "The system rejects the file and displays an error message indicating which mandatory fields are missing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel template with missing mandatory fields is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template with missing mandatory fields (e.g., empty Zona Code or Rice Number).",
      "Expected Result": "The system prevents the import and displays a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_proj538_DuplicateEntries_MassiveImporter_TEST_Desktop",
      "ID": "TC-509",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Upload an Excel template containing duplicate entries for the same Zona Code and Rice Number.",
          "Expected Result": "The system rejects the file and displays an error message indicating the presence of duplicate entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. An Excel template with duplicate entries is prepared.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template with duplicate Zona Code and Rice Number entries.",
      "Expected Result": "The system prevents the import and displays a clear error message about duplicate entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_proj538_OriginalBOFileRejected_MassiveImporter_TEST_Desktop",
      "ID": "TC-510",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section from the main menu.",
          "Expected Result": "'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Conti Gioco Credit Situation' option.",
          "Expected Result": "The file upload interface for 'Import Conti Gioco Credit Situation' is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload the original file produced by BO through ANAFIDIWEB (GEO) without transcribing it into the standard template.",
          "Expected Result": "The system rejects the file and displays an error message indicating that the file format is not supported."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. The original BO file (not in the required template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original BO file (SITUAZIONE_FIDI_Conti_Gioco_<yyyyymmdd_hhmmss>.xlsx).",
      "Expected Result": "The system prevents the import and displays a clear error message about unsupported file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportContiGiocoCreditSituation_proj538_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-511",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' section.",
          "Expected Result": "The dashboard for single PoS credit management is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS for which data was imported in a previous successful import operation.",
          "Expected Result": "The credit situation data for the selected PoS is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the displayed data matches the data imported via the Excel template.",
          "Expected Result": "The displayed data is accurate and consistent with the imported values."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has valid credentials and access to the ZENIT system.\n2. At least one successful import operation has been completed for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Import Conti Gioco Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with previously imported credit situation data.",
      "Expected Result": "The dashboard displays the correct and updated credit situation data for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-538 - Import Conti Gioco Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj539_ValidImport_MassiveImporter_TEST_Desktop",
      "ID": "TC-512",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import SIMP Credit Situation'.",
          "Expected Result": "The file upload interface for SIMP Credit Situation import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a valid Excel file structured according to the SIMP Credit Management template, containing correct data for multiple PoS.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file.",
          "Expected Result": "The system processes the file and displays a success message indicating that the import was successful."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab for one of the imported PoS.",
          "Expected Result": "The imported SIMP Credit Situation data is correctly displayed for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. The SIMP Credit Management Excel template is correctly filled with valid data for at least one PoS.\n4. The system is online and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid SIMP Credit Management Excel file with correct structure and data.",
      "Expected Result": "The SIMP Credit Situation data is successfully imported and visible in the dashboard for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj539_InvalidTemplate_MassiveImporter_TEST_Desktop",
      "ID": "TC-513",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import SIMP Credit Situation'.",
          "Expected Result": "The file upload interface for SIMP Credit Situation import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file that does not conform to the required SIMP Credit Management template (e.g., missing columns, incorrect headers).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file.",
          "Expected Result": "The system rejects the file and displays an error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An Excel file with an invalid structure is available for testing.\n4. The system is online and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (wrong template structure).",
      "Expected Result": "The system prevents import and displays a clear error message about the invalid template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj539_MissingMandatoryFields_MassiveImporter_TEST_Desktop",
      "ID": "TC-514",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import SIMP Credit Situation'.",
          "Expected Result": "The file upload interface for SIMP Credit Situation import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file with missing mandatory fields (e.g., missing IdRice or Zona Rice for some rows).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file.",
          "Expected Result": "The system rejects the file and displays an error message indicating missing mandatory fields."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An Excel file with missing mandatory fields is available for testing.\n4. The system is online and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file missing mandatory fields (e.g., IdRice or Zona Rice).",
      "Expected Result": "The system prevents import and displays a clear error message about missing mandatory fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj539_DuplicatePoS_MassiveImporter_TEST_Desktop",
      "ID": "TC-515",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import SIMP Credit Situation'.",
          "Expected Result": "The file upload interface for SIMP Credit Situation import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select an Excel file containing duplicate entries for the same PoS (same IdRice and Zona Rice).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file.",
          "Expected Result": "The system rejects the file and displays an error message indicating duplicate PoS entries."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. An Excel file with duplicate PoS entries is available for testing.\n4. The system is online and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel file with duplicate IdRice and Zona Rice entries.",
      "Expected Result": "The system prevents import and displays a clear error message about duplicate PoS entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj539_InvalidFileFormat_MassiveImporter_TEST_Desktop",
      "ID": "TC-516",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option 'Import SIMP Credit Situation'.",
          "Expected Result": "The file upload interface for SIMP Credit Situation import is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Click 'Browse' and select a file that is not an Excel file (e.g., .csv, .txt, .pdf).",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Click 'Upload' to submit the file.",
          "Expected Result": "The system rejects the file and displays an error message indicating invalid file format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. User has access to the 'Massive Importer' section.\n3. A non-Excel file is available for testing.\n4. The system is online and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Non-Excel file (e.g., .csv, .txt, .pdf).",
      "Expected Result": "The system prevents import and displays a clear error message about invalid file format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportSIMP-proj539_ViewImportedData_Dashboard_TEST_Desktop",
      "ID": "TC-517",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS - Credit Management' tab.",
          "Expected Result": "The Credit Management tab for a selected PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the SIMP Credit Situation data imported in the last successful import is visible and matches the uploaded file.",
          "Expected Result": "The displayed data matches the imported data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has valid ZENIT credentials.\n2. At least one successful SIMP Credit Situation import has been performed for a PoS.\n3. The system is online and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Import SIMP Credit Situation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Reference to previously imported data for verification.",
      "Expected Result": "The imported SIMP Credit Situation data is correctly displayed in the dashboard for each relevant PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-539 - Import SIMP Credit Situation"
    },
    {
      "Title": "ImportCervedData-XPSZENIT540_ValidTemplateUpload_MassiveImporter_TEST_Desktop",
      "ID": "TC-518",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in and redirected to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section of the application.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "The import interface for Cerved Data is shown, with an option to upload an Excel file."
        },
        {
          "Step": 4,
          "Step Description": "Click on the upload button and select a valid Excel file filled according to the provided Cerved Data template.",
          "Expected Result": "The file is selected and ready for upload."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "The system validates the file and, if successful, imports the data, displaying a confirmation message."
        },
        {
          "Step": 6,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' and search for a PoS included in the imported file.",
          "Expected Result": "The imported Cerved Data is visible and correctly updated for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to ZENIT system with appropriate permissions. 2. The Cerved Data Excel template is correctly filled with valid data. 3. At least one PoS in the system matches the VAT number or Tax Code in the import file.",
      "Execution Mode": "Manual",
      "Functionality": "Import Cerved Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Valid Cerved Data Excel template with at least one PoS entry.",
      "Expected Result": "Cerved Data is successfully imported and visible for each PoS in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-XPSZENIT540_InvalidTemplateStructure_MassiveImporter_TEST_Desktop",
      "ID": "TC-519",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "The import interface for Cerved Data is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload an Excel file that does not conform to the required Cerved Data template structure (e.g., missing columns, extra columns, incorrect headers).",
          "Expected Result": "The system rejects the file and displays an error message indicating the template is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to ZENIT system. 2. An invalid Excel file (not matching the template) is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Cerved Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Invalid Excel file (wrong structure).",
      "Expected Result": "System prevents import and displays a clear error message about the invalid template.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-XPSZENIT540_MissingReferenceKey_MassiveImporter_TEST_Desktop",
      "ID": "TC-520",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "The import interface for Cerved Data is shown."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel template where one or more rows are missing the VAT number or Tax Code.",
          "Expected Result": "The system validates the file and identifies rows with missing reference keys."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "The system rejects the affected rows and displays an error message specifying the missing reference key(s)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to ZENIT system. 2. Excel template with at least one row missing VAT number or Tax Code is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Cerved Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template with missing VAT number/Tax Code in some rows.",
      "Expected Result": "System rejects rows with missing reference keys and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-XPSZENIT540_DuplicateEntries_MassiveImporter_TEST_Desktop",
      "ID": "TC-521",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "The import interface for Cerved Data is shown."
        },
        {
          "Step": 4,
          "Step Description": "Upload a valid Excel template containing duplicate entries for the same VAT number or Tax Code.",
          "Expected Result": "The system validates the file and detects duplicate entries."
        },
        {
          "Step": 5,
          "Step Description": "Submit the file for import.",
          "Expected Result": "The system rejects or flags duplicate entries and displays an appropriate error or warning message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to ZENIT system. 2. Excel template with duplicate VAT number/Tax Code entries is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Cerved Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Excel template with duplicate entries.",
      "Expected Result": "System identifies and rejects or flags duplicate entries, providing a clear message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-XPSZENIT540_OriginalCervedFileRejected_MassiveImporter_TEST_Desktop",
      "ID": "TC-522",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Massive Importer' section.",
          "Expected Result": "The 'Massive Importer' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Import Cerved Data' option.",
          "Expected Result": "The import interface for Cerved Data is shown."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to upload the original 'CERVED PER RED LIST.xlsx' file produced by Cerved (not transcribed into the system template).",
          "Expected Result": "The system rejects the file and displays an error message indicating that the file format is not supported."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to ZENIT system. 2. The original 'CERVED PER RED LIST.xlsx' file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Import Cerved Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; Original Cerved file.",
      "Expected Result": "System rejects the original Cerved file and provides a clear error message about unsupported format.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "ImportCervedData-XPSZENIT540_ViewImportedData_DashboardSinglePoS_TEST_Desktop",
      "ID": "TC-523",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system with valid user credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Dashboard - Single PoS' section.",
          "Expected Result": "The dashboard for individual PoS is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a PoS that was included in a recent successful Cerved Data import.",
          "Expected Result": "The PoS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the imported Cerved Data is present and correctly displayed for the selected PoS.",
          "Expected Result": "All imported Cerved Data fields are visible and accurate for the PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, ZENIT Web Application",
      "Preconditions": "1. User has access to ZENIT system. 2. At least one successful Cerved Data import has been performed for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Import Cerved Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with imported Cerved Data.",
      "Expected Result": "Imported Cerved Data is visible and accurate in the dashboard for the selected PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-540 - Import Cerved Data"
    },
    {
      "Title": "VerifyExecution_proj_001_Back-End_Procedure_TEST_Backend",
      "ID": "TC-524",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the back-end system with valid administrator credentials.",
          "Expected Result": "Access to the back-end system is granted."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section where the back-end procedure can be executed.",
          "Expected Result": "The correct section for executing the back-end procedure is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the back-end procedure using the provided interface or API call.",
          "Expected Result": "The back-end procedure starts execution without errors."
        },
        {
          "Step": 4,
          "Step Description": "Monitor the execution status until completion.",
          "Expected Result": "The procedure completes successfully and the system returns a success status."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Linux/Back-End Application",
      "Preconditions": "1. The back-end system is up and running.\n2. Administrator credentials are available.\n3. The procedure to be tested is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Execution",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid administrator credentials; Procedure identifier or endpoint.",
      "Expected Result": "The back-end procedure executes successfully and returns a success status.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers normal execution path for the back-end procedure.",
      "_polarion": "Back-End Procedure"
    },
    {
      "Title": "InvalidInput_proj_001_Back-End_Procedure_TEST_Backend",
      "ID": "TC-525",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the back-end system with valid administrator credentials.",
          "Expected Result": "Access to the back-end system is granted."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section for executing the back-end procedure.",
          "Expected Result": "The correct section for executing the back-end procedure is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to execute the back-end procedure with invalid or malformed input parameters.",
          "Expected Result": "The system rejects the input and displays an appropriate error message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux/Back-End Application",
      "Preconditions": "1. The back-end system is up and running.\n2. Administrator credentials are available.\n3. The procedure to be tested is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Input Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid administrator credentials; Invalid input parameters (e.g., missing required fields, incorrect data types).",
      "Expected Result": "The system prevents execution of the procedure and returns a clear error message for invalid input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for input validation.",
      "_polarion": "Back-End Procedure"
    },
    {
      "Title": "ConcurrentExecution_proj_001_Back-End_Procedure_TEST_Backend",
      "ID": "TC-526",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the back-end system with valid administrator credentials from two separate sessions.",
          "Expected Result": "Both sessions are authenticated and active."
        },
        {
          "Step": 2,
          "Step Description": "In session one, initiate the back-end procedure.",
          "Expected Result": "The procedure starts execution in session one."
        },
        {
          "Step": 3,
          "Step Description": "While the procedure is still running in session one, attempt to initiate the same procedure in session two.",
          "Expected Result": "The system handles concurrent execution according to design (e.g., allows, queues, or rejects the second request with an appropriate message)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux/Back-End Application",
      "Preconditions": "1. The back-end system is up and running.\n2. Two sets of valid administrator credentials or two sessions are available.\n3. The procedure to be tested is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Concurrency Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Two sets of valid administrator credentials; Procedure identifier.",
      "Expected Result": "The system handles concurrent execution attempts as per design (e.g., allows, queues, or rejects with a clear message).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers concurrency and multi-session behavior.",
      "_polarion": "Back-End Procedure"
    },
    {
      "Title": "AuditLog_proj_001_Back-End_Procedure_TEST_Backend",
      "ID": "TC-527",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the back-end system with valid administrator credentials.",
          "Expected Result": "Access to the back-end system is granted."
        },
        {
          "Step": 2,
          "Step Description": "Execute the back-end procedure.",
          "Expected Result": "The procedure executes successfully."
        },
        {
          "Step": 3,
          "Step Description": "Access the audit log or system log section.",
          "Expected Result": "Audit logs are accessible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the execution of the back-end procedure is recorded in the audit log with correct details (timestamp, user, procedure name, status).",
          "Expected Result": "Audit log contains a complete and accurate record of the procedure execution."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Server",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Linux/Back-End Application",
      "Preconditions": "1. The back-end system is up and running.\n2. Administrator credentials are available.\n3. Audit logging is enabled.\n4. The procedure to be tested is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Back-End Procedure Audit Logging",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid administrator credentials; Procedure identifier.",
      "Expected Result": "The execution of the back-end procedure is correctly logged in the audit system with all relevant details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers audit logging for procedure execution.",
      "_polarion": "Back-End Procedure"
    },
    {
      "Title": "DailyArchiving-XPSZENIT600_DailySnapshotExecution_Backend_TEST_Desktop",
      "ID": "TC-528",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system date is set to a day when the daily snapshot should run.",
          "Expected Result": "System is ready for daily snapshot execution."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled nightly snapshot process to execute.",
          "Expected Result": "Snapshot process starts at the scheduled time."
        },
        {
          "Step": 3,
          "Step Description": "Verify that a new data snapshot is created and stored with the correct date and time label.",
          "Expected Result": "A new snapshot file/folder is present, labeled with the current date and time."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System clock is synchronized and correct.\n2. Daily snapshot schedule is configured and enabled.\n3. Sufficient storage space is available.",
      "Execution Mode": "Manual",
      "Functionality": "Daily Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "System with historical data; snapshot schedule enabled.",
      "Expected Result": "A daily snapshot is created and labeled with the correct date and time, confirming uninterrupted daily archiving.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-XPSZENIT600_PrivacyCompliantPoSDeletion_Backend_TEST_Desktop",
      "ID": "TC-529",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify PoS records that have been closed and inactive for more than the configured retention period (e.g., 10 years), excluding those under legal management or with recent loss transitions.",
          "Expected Result": "List of PoS eligible for deletion is generated."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data deletion process for eligible PoS records.",
          "Expected Result": "Deletion process executes for the identified PoS records."
        },
        {
          "Step": 3,
          "Step Description": "Verify that only eligible PoS records are deleted and that records under legal management or with recent loss transitions are retained.",
          "Expected Result": "Only PoS records meeting deletion criteria are removed; exceptions are preserved."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System contains PoS records with various statuses, including closed, under legal management, and with loss transitions.\n2. Retention period is configured (e.g., 10 years).\n3. Data deletion process is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Data Retention & Deletion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test database with PoS records of varying statuses and closure dates.",
      "Expected Result": "PoS records closed and inactive beyond the retention period are deleted, except those under legal management or with recent loss transitions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-XPSZENIT600_TemporaryLogicalClosureHandling_Backend_TEST_Desktop",
      "ID": "TC-530",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS record eligible for temporary logical closure (e.g., recently closed but pending verification).",
          "Expected Result": "PoS record is selected for logical closure."
        },
        {
          "Step": 2,
          "Step Description": "Configure the system to apply a temporary logical closure for a defined period (e.g., 30 days).",
          "Expected Result": "Logical closure is set for the PoS record."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to display the logically closed PoS in the user interface or reporting tools.",
          "Expected Result": "PoS is not displayed to users during the logical closure period."
        },
        {
          "Step": 4,
          "Step Description": "After the logical closure period expires, verify that the PoS is eligible for permanent deletion.",
          "Expected Result": "PoS becomes eligible for permanent deletion after the logical closure period."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System contains PoS records eligible for logical closure.\n2. Logical closure period is configurable.\n3. User interface or reporting tools are available for PoS display verification.",
      "Execution Mode": "Manual",
      "Functionality": "Logical Closure Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with closure dates and pending issues.",
      "Expected Result": "PoS records under logical closure are hidden from display and become eligible for deletion after the closure period.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-XPSZENIT600_ContinuousHistoricalSequenceVerification_Backend_TEST_Desktop",
      "ID": "TC-531",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the archive of daily snapshots from the project start date to the current date.",
          "Expected Result": "Archive contains a sequence of daily snapshots."
        },
        {
          "Step": 2,
          "Step Description": "Verify that there are no missing days in the historical sequence of stored data.",
          "Expected Result": "Each day from project start to current date has a corresponding snapshot."
        },
        {
          "Step": 3,
          "Step Description": "Check that each snapshot is labeled with the correct date and time.",
          "Expected Result": "All snapshots are correctly labeled and ordered chronologically."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System has been running and archiving data daily since project start.\n2. Access to the archive storage location is available.",
      "Execution Mode": "Manual",
      "Functionality": "Historical Data Integrity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Archive containing daily snapshots from project start to present.",
      "Expected Result": "Historical data is complete, continuous, and correctly labeled for each day.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-XPSZENIT600_ArchiveRetrievalAndAnalysis_Backend_TEST_Desktop",
      "ID": "TC-532",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system's historical data retrieval interface or API.",
          "Expected Result": "Historical data retrieval interface/API is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Request retrieval of data for a specific date (e.g., 7 days ago).",
          "Expected Result": "System returns the archived data for the specified date."
        },
        {
          "Step": 3,
          "Step Description": "Perform analysis or display of the retrieved daily storage data.",
          "Expected Result": "Data is displayed or analyzed as requested, matching the archived snapshot."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. Historical data retrieval interface/API is implemented and accessible.\n2. Archive contains data for the requested date.",
      "Execution Mode": "Manual",
      "Functionality": "Historical Data Retrieval & Analysis",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Archived data for multiple dates; access credentials for retrieval interface/API.",
      "Expected Result": "System retrieves and displays/analyzes historical data for any given day as stored in the archive.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-XPSZENIT600_ArchivingEfficiencyAndPerformance_Backend_TEST_Desktop",
      "ID": "TC-533",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate the daily archiving process with a large dataset (simulate high data volume).",
          "Expected Result": "Archiving process starts with large data volume."
        },
        {
          "Step": 2,
          "Step Description": "Measure the time taken to complete the archiving process.",
          "Expected Result": "Archiving completes within acceptable performance thresholds."
        },
        {
          "Step": 3,
          "Step Description": "Monitor system resource usage (CPU, memory, disk I/O) during the process.",
          "Expected Result": "Resource usage remains within acceptable limits; no system failures or slowdowns."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. System is configured for performance monitoring.\n2. Large test dataset is available for archiving.\n3. Performance thresholds are defined.",
      "Execution Mode": "Manual",
      "Functionality": "Archiving Performance",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Large volume of test data; performance monitoring tools enabled.",
      "Expected Result": "Archiving process completes efficiently and within defined performance parameters, even with large data volumes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-XPSZENIT600_ScalabilityOfHistoricalDataRetrieval_Backend_TEST_Desktop",
      "ID": "TC-534",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate the archive with a large number of daily snapshots (simulate several years of data).",
          "Expected Result": "Archive contains a high volume of daily snapshots."
        },
        {
          "Step": 2,
          "Step Description": "Request retrieval of data for multiple random dates across the archive's timespan.",
          "Expected Result": "System retrieves data for each requested date without delay."
        },
        {
          "Step": 3,
          "Step Description": "Monitor system response time and resource usage during retrieval operations.",
          "Expected Result": "Retrieval operations complete within acceptable response times and resource usage remains stable."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. Archive is populated with a large number of daily snapshots.\n2. System is configured for scalability and performance monitoring.\n3. Retrieval interface/API is available.",
      "Execution Mode": "Manual",
      "Functionality": "Scalability & Data Retrieval",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Archive with several years of daily snapshots; performance monitoring tools enabled.",
      "Expected Result": "System efficiently retrieves historical data regardless of archive size, demonstrating scalability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "DailyArchiving-XPSZENIT600_ArchiveDataCompletenessAgainstSpecification_Backend_TEST_Desktop",
      "ID": "TC-535",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Obtain the external file 'ZENIT - Elenco Dati V04.1.xlsx' specifying required data points and archiving frequency.",
          "Expected Result": "Specification file is available and reviewed."
        },
        {
          "Step": 2,
          "Step Description": "Compare archived data for a selected day against the specification to verify all required data points are present and archived at the correct frequency (daily, weekly, monthly).",
          "Expected Result": "Archived data matches the specification in content and frequency."
        },
        {
          "Step": 3,
          "Step Description": "Repeat the check for multiple days and data points as defined in the specification.",
          "Expected Result": "All required data points are consistently archived as per the specification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows/Linux, Backend Application",
      "Preconditions": "1. Access to 'ZENIT - Elenco Dati V04.1.xlsx'.\n2. Archive contains data for the days and data points to be checked.\n3. Knowledge of archiving frequencies for each data point.",
      "Execution Mode": "Manual",
      "Functionality": "Data Completeness & Specification Compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Specification file; archived data for multiple days; mapping of data points to archiving frequency.",
      "Expected Result": "Archived data fully complies with the external specification in terms of content and frequency.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "XPS-ZENIT-600 - Daily historical archiving"
    },
    {
      "Title": "IntegrationCheck-proj_001_MDM_PoSMasterData_WebService_TEST_Desktop",
      "ID": "TC-536",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the MDM system is operational and accessible via the designated Web Service endpoint.",
          "Expected Result": "MDM Web Service endpoint is reachable and responsive."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a PoS Master Data update event in the MDM system.",
          "Expected Result": "PoS Master Data update event is generated in MDM."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the receiving application for the PoS Master Data update in near real time.",
          "Expected Result": "Receiving application receives and processes the updated PoS Master Data within the expected near real time window."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, MDM Web Service",
      "Preconditions": "1. MDM system is up and running.\n2. Web Service endpoint for PoS Master Data is configured and accessible.\n3. Receiving application is operational and configured to consume PoS Master Data.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - PoS Master Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS Master Data update payload.",
      "Expected Result": "PoS Master Data is successfully transmitted from MDM to the receiving application via Web Service in near real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the near real time data flow from MDM to the receiving application.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "IntegrationCheck-proj_001_CERVED_DailyReport_WebService_TEST_Desktop",
      "ID": "TC-537",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the CERVED system and its Web Service endpoint are operational.",
          "Expected Result": "CERVED Web Service endpoint is reachable."
        },
        {
          "Step": 2,
          "Step Description": "Schedule or trigger a daily/on-demand request for Cerved Data and Report.",
          "Expected Result": "CERVED system receives the request for data/report."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the receiving application obtains the Cerved Data and Report as per the request.",
          "Expected Result": "Receiving application receives the correct Cerved Data and Report."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, CERVED Web Service",
      "Preconditions": "1. CERVED system is operational.\n2. Web Service endpoint for Cerved Data and Report is configured.\n3. Receiving application is set up to request and receive Cerved Data and Report.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - Cerved Data and Report",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Cerved Data and Report request parameters.",
      "Expected Result": "Cerved Data and Report are successfully retrieved by the receiving application via Web Service on a daily or on-demand basis.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers daily and on-demand data retrieval from CERVED.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "IntegrationCheck-proj_001_GEO_CreditLinesSituation_Database_TEST_Desktop",
      "ID": "TC-538",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the GEO database is operational and accessible.",
          "Expected Result": "GEO database is reachable and responsive."
        },
        {
          "Step": 2,
          "Step Description": "Insert or update a Credit Lines Situation record in the GEO database.",
          "Expected Result": "Credit Lines Situation record is updated in the GEO database."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the consuming application retrieves the updated Credit Lines Situation in near real time.",
          "Expected Result": "Consuming application receives the updated Credit Lines Situation data promptly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, GEO Database",
      "Preconditions": "1. GEO database is up and running.\n2. Database credentials and access rights are configured.\n3. Consuming application is configured to read from GEO database.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - Credit Lines Situation (GEO)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Credit Lines Situation record.",
      "Expected Result": "Credit Lines Situation data is updated in GEO and promptly available to the consuming application.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers near real time data update and retrieval from GEO database.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "IntegrationCheck-proj_001_SAP_UnpaidsData_WebService_TEST_Desktop",
      "ID": "TC-539",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the SAP system and its Web Service endpoint for 'Unpaids' Data are operational.",
          "Expected Result": "SAP Web Service endpoint for 'Unpaids' Data is reachable."
        },
        {
          "Step": 2,
          "Step Description": "Trigger an 'Unpaids' Data update in the SAP system.",
          "Expected Result": "'Unpaids' Data update event is generated in SAP."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the receiving application receives the 'Unpaids' Data in near real time.",
          "Expected Result": "Receiving application receives and processes the 'Unpaids' Data update promptly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, SAP Web Service",
      "Preconditions": "1. SAP system is operational.\n2. Web Service endpoint for 'Unpaids' Data is configured and accessible.\n3. Receiving application is set up to consume 'Unpaids' Data.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - SAP 'Unpaids' Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample 'Unpaids' Data update payload.",
      "Expected Result": "'Unpaids' Data is successfully transmitted from SAP to the receiving application via Web Service in near real time.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers near real time data flow for 'Unpaids' Data from SAP.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "IntegrationCheck-proj_001_VALORIZZATORE_BorderoData_WebService_TEST_Desktop",
      "ID": "TC-540",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the VALORIZZATORE system and its Web Service endpoint for Borderò Data are operational.",
          "Expected Result": "VALORIZZATORE Web Service endpoint is reachable."
        },
        {
          "Step": 2,
          "Step Description": "Trigger a weekly or bi-weekly Borderò Data update in the VALORIZZATORE system.",
          "Expected Result": "Borderò Data update event is generated in VALORIZZATORE."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the receiving application receives the Borderò Data as per the scheduled frequency.",
          "Expected Result": "Receiving application receives and processes the Borderò Data update as scheduled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, VALORIZZATORE Web Service",
      "Preconditions": "1. VALORIZZATORE system is operational.\n2. Web Service endpoint for Borderò Data is configured and accessible.\n3. Receiving application is set up to consume Borderò Data.",
      "Execution Mode": "Manual",
      "Functionality": "Integration - Borderò Data (VALORIZZATORE)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Borderò Data update payload.",
      "Expected Result": "Borderò Data is successfully transmitted from VALORIZZATORE to the receiving application via Web Service on a weekly or bi-weekly basis.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers scheduled data flow for Borderò Data from VALORIZZATORE.",
      "_polarion": "DESCRIPTION OF INTEGRATIONS WITH SERVICES AND APPLICATIONS"
    },
    {
      "Title": "ReferenceDocuments-proj1_accessibility_reference_documents_TEST_Desktop",
      "ID": "TC-541",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser on a desktop computer.",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the provided ZENIT project documentation URL: https://sisalprod.service-now.com/now/nav/ui/classic/params/target/pm_project.do%3Fsys_id%3Dee7e798a3b6b1e10221283d964e45a95%26sysparm_view%3Dtext_search",
          "Expected Result": "The ZENIT project documentation page loads without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all referenced documentation for ZENIT - Phase 1 is accessible and can be viewed or downloaded as appropriate.",
          "Expected Result": "All documentation is accessible and can be viewed or downloaded without access or permission errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge/Firefox)",
      "Preconditions": "1. User has a valid network connection.\n2. User has access permissions to the ServiceNow portal.\n3. User is using a supported web browser on a desktop computer.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documents Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT project documentation URL, valid user credentials if required.",
      "Expected Result": "User can access and view all documentation related to ZENIT - Phase 1 via the provided URL without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only desktop web access to documentation; does not include mobile or app access.",
      "_polarion": "REFERENCE DOCUMENTS"
    },
    {
      "Title": "ReferenceDocuments-proj1_accessibility_reference_documents_TEST_Mobile",
      "ID": "TC-542",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser on a mobile device (Android or iOS).",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the provided ZENIT project documentation URL: https://sisalprod.service-now.com/now/nav/ui/classic/params/target/pm_project.do%3Fsys_id%3Dee7e798a3b6b1e10221283d964e45a95%26sysparm_view%3Dtext_search",
          "Expected Result": "The ZENIT project documentation page loads without errors."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all referenced documentation for ZENIT - Phase 1 is accessible and can be viewed or downloaded as appropriate on the mobile device.",
          "Expected Result": "All documentation is accessible and can be viewed or downloaded without access or permission errors on the mobile device."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "Web",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android/iOS, Mobile Web Browser (Chrome/Safari)",
      "Preconditions": "1. User has a valid network connection.\n2. User has access permissions to the ServiceNow portal.\n3. User is using a supported web browser on a mobile device.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documents Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT project documentation URL, valid user credentials if required.",
      "Expected Result": "User can access and view all documentation related to ZENIT - Phase 1 via the provided URL on a mobile device without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only mobile web access to documentation; does not include desktop or app access.",
      "_polarion": "REFERENCE DOCUMENTS"
    },
    {
      "Title": "ReferenceDocuments-proj1_access_control_reference_documents_TEST_Desktop",
      "ID": "TC-543",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser on a desktop computer.",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the ZENIT project documentation URL without logging in.",
          "Expected Result": "The system prompts for authentication or displays an access denied message."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access documentation after logging in with valid credentials.",
          "Expected Result": "The documentation becomes accessible after successful authentication."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge/Firefox)",
      "Preconditions": "1. User has a valid network connection.\n2. User does not have an active session on the ServiceNow portal.\n3. User has valid credentials for the ServiceNow portal.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documents Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "ZENIT project documentation URL, valid and invalid user credentials.",
      "Expected Result": "Access to documentation is restricted to authenticated users only; unauthenticated users are denied access.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control for desktop web access only.",
      "_polarion": "REFERENCE DOCUMENTS"
    },
    {
      "Title": "ReferenceDocuments-proj1_invalid_url_reference_documents_TEST_Desktop",
      "ID": "TC-544",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open a supported web browser on a desktop computer.",
          "Expected Result": "Web browser is launched successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to an invalid or malformed ZENIT project documentation URL.",
          "Expected Result": "The system displays an error message indicating the page cannot be found or the URL is invalid."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Browser (Chrome/Edge/Firefox)",
      "Preconditions": "1. User has a valid network connection.\n2. User is using a supported web browser on a desktop computer.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Documents Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Malformed or incorrect ZENIT project documentation URL.",
      "Expected Result": "System displays an appropriate error message when an invalid documentation URL is accessed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for invalid URLs only.",
      "_polarion": "REFERENCE DOCUMENTS"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Reference_Files_Availability/Desktop_TEST_Desktop",
      "ID": "TC-545",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the appendix section of the documentation.",
          "Expected Result": "Appendix section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all five reference file links are present: (1) List of data to be predicted, (2) Dashboard mockups, (3) User profiles and features, (4) Excel files mapping, (5) Data collection mapping.",
          "Expected Result": "All five reference file links are visible and correctly labeled."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions to view the appendix section.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Files Availability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "All reference file links are present and accessible in the appendix section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the presence and labeling of reference file links.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Reference_Files_Accessibility/Desktop_TEST_Desktop",
      "ID": "TC-546",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the appendix section of the documentation.",
          "Expected Result": "Appendix section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click on each reference file link one by one.",
          "Expected Result": "Each link opens the corresponding file in a new browser tab or downloads the file as appropriate."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has access to the documentation platform.\n2. User is authenticated with appropriate permissions to access the appendix section and reference files.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Files Accessibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Each reference file link in the appendix is accessible and opens/downloads the correct file without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the accessibility of the reference files via provided links.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Reference_Files_Correctness/Desktop_TEST_Desktop",
      "ID": "TC-547",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access each reference file via the appendix links.",
          "Expected Result": "Each file is opened or downloaded successfully."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the content of each file matches its description (e.g., the 'List of data to be predicted' file contains the expected data list, the 'Dashboard mockups' file contains dashboard mockups, etc.).",
          "Expected Result": "The content of each file matches its description and is not corrupted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User has access to the documentation platform and reference files.\n2. User is authenticated with appropriate permissions.\n3. Reference files are available and not corrupted.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Files Content Verification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Reference files as linked in the appendix.",
      "Expected Result": "Each reference file contains the correct, uncorrupted content as described in the appendix.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the correctness and integrity of the reference file contents.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Reference_Files_Permission_Negative/Desktop_TEST_Desktop",
      "ID": "TC-548",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user without permission to access the reference files.",
          "Expected Result": "User is authenticated with limited permissions."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the appendix section and attempt to access each reference file link.",
          "Expected Result": "Access to each reference file is denied, and an appropriate error message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. User account exists with restricted permissions (no access to reference files).\n2. Reference files are present in the appendix.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Files Permission Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with restricted permissions.",
      "Expected Result": "Users without appropriate permissions cannot access the reference files and receive a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers negative scenario for permission handling on reference files.",
      "_polarion": "APPENDIX"
    },
    {
      "Title": "Appendix-proj_001_Requirement_Reference_Files_Broken_Link_Negative/Desktop_TEST_Desktop",
      "ID": "TC-549",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the appendix section of the documentation.",
          "Expected Result": "Appendix section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify a reference file link that is intentionally broken or points to a non-existent file (simulate by removing or renaming the target file).",
          "Expected Result": "Broken link is present in the appendix."
        },
        {
          "Step": 3,
          "Step Description": "Click on the broken reference file link.",
          "Expected Result": "An error message is displayed indicating the file is not found or unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows/Web",
      "Preconditions": "1. At least one reference file link in the appendix is broken (simulate by removing or renaming the file).\n2. User is authenticated with access to the appendix section.",
      "Execution Mode": "Manual",
      "Functionality": "Reference Files Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "When a reference file link is broken, the user receives a clear error message indicating the file is unavailable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for broken or missing reference file links.",
      "_polarion": "APPENDIX"
    }
  ],
  "total_count": 549
}