{
  "test_cases": [
    {
      "Title": "Verify SGP Generator Full Responsiveness on Desktop",
      "ID": "TC-001",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the SGP Generator application in a desktop web browser (e.g., Chrome, Firefox, Edge).",
          "Expected Result": "SGP Generator loads successfully without layout issues."
        },
        {
          "Step": 2,
          "Step Description": "Resize the browser window to various widths (e.g., 1920px, 1366px, 1024px, 800px).",
          "Expected Result": "SGP Generator layout adapts smoothly to each width, maintaining usability and readability."
        },
        {
          "Step": 3,
          "Step Description": "Interact with all main features (e.g., add selections, remove selections, generate SGP) at each width.",
          "Expected Result": "All features remain accessible and functional at all tested widths."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to a desktop computer with a modern web browser.\n2. SGP Generator application is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; use default SGP Generator interface.",
      "Expected Result": "SGP Generator is fully usable and visually correct at all common desktop resolutions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only desktop browser responsiveness.",
      "_polarion": "== first line =="
    },
    {
      "Title": "Verify SGP Generator Full Responsiveness on Mobile Devices",
      "ID": "TC-002",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the SGP Generator application on a mobile device (e.g., iPhone, Android phone) using a mobile browser.",
          "Expected Result": "SGP Generator loads successfully without layout issues."
        },
        {
          "Step": 2,
          "Step Description": "Rotate the device between portrait and landscape orientations.",
          "Expected Result": "SGP Generator layout adapts smoothly to both orientations, maintaining usability and readability."
        },
        {
          "Step": 3,
          "Step Description": "Interact with all main features (e.g., add selections, remove selections, generate SGP) in both orientations.",
          "Expected Result": "All features remain accessible and functional in both orientations."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "Web",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS 17, Android 13, Web",
      "Preconditions": "1. User has access to a modern smartphone with a supported mobile browser.\n2. SGP Generator application is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; use default SGP Generator interface.",
      "Expected Result": "SGP Generator is fully usable and visually correct in both portrait and landscape modes on mobile devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only mobile browser responsiveness.",
      "_polarion": "== first line =="
    },
    {
      "Title": "Verify SGP Generator Full Responsiveness on Tablet Devices",
      "ID": "TC-003",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the SGP Generator application on a tablet device (e.g., iPad, Android tablet) using a mobile browser.",
          "Expected Result": "SGP Generator loads successfully without layout issues."
        },
        {
          "Step": 2,
          "Step Description": "Rotate the device between portrait and landscape orientations.",
          "Expected Result": "SGP Generator layout adapts smoothly to both orientations, maintaining usability and readability."
        },
        {
          "Step": 3,
          "Step Description": "Interact with all main features (e.g., add selections, remove selections, generate SGP) in both orientations.",
          "Expected Result": "All features remain accessible and functional in both orientations."
        }
      ],
      "Test Group": "Tablet",
      "Channel": "Web",
      "Device": "Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iPadOS 17, Android 13, Web",
      "Preconditions": "1. User has access to a modern tablet with a supported mobile browser.\n2. SGP Generator application is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; use default SGP Generator interface.",
      "Expected Result": "SGP Generator is fully usable and visually correct in both portrait and landscape modes on tablet devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only tablet browser responsiveness.",
      "_polarion": "== first line =="
    },
    {
      "Title": "Verify SGP Generator Layout and Functionality on Edge Case Resolutions",
      "ID": "TC-004",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the SGP Generator application in a browser or emulator set to an uncommon screen resolution (e.g., 320x480, 2560x1440).",
          "Expected Result": "SGP Generator loads successfully without layout issues."
        },
        {
          "Step": 2,
          "Step Description": "Interact with all main features (e.g., add selections, remove selections, generate SGP) at each tested resolution.",
          "Expected Result": "All features remain accessible and functional at all tested resolutions."
        }
      ],
      "Test Group": "Desktop/Mobile/Tablet",
      "Channel": "Web",
      "Device": "Computer/Smartphone/Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, iOS 17, Android 13, Web",
      "Preconditions": "1. User has access to device or emulator capable of setting custom resolutions.\n2. SGP Generator application is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; use default SGP Generator interface.",
      "Expected Result": "SGP Generator is fully usable and visually correct at edge case resolutions.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers edge case resolutions for responsiveness.",
      "_polarion": "== first line =="
    },
    {
      "Title": "Verify SGP Generator Accessibility of All Features Across Devices",
      "ID": "TC-005",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the SGP Generator application on desktop, mobile, and tablet devices.",
          "Expected Result": "SGP Generator loads successfully on all devices."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access and use all main features (e.g., add selections, remove selections, generate SGP) on each device type.",
          "Expected Result": "All features are accessible and functional on all device types."
        }
      ],
      "Test Group": "Desktop/Mobile/Tablet",
      "Channel": "Web",
      "Device": "Computer/Smartphone/Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, iOS 17, Android 13, Web",
      "Preconditions": "1. User has access to desktop, mobile, and tablet devices with supported browsers.\n2. SGP Generator application is deployed and accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No specific data required; use default SGP Generator interface.",
      "Expected Result": "All SGP Generator features are accessible and functional on all supported device types.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers feature accessibility across device types.",
      "_polarion": "== first line =="
    },
    {
      "Title": "Verify Carousel Display Conditions on Home Page",
      "ID": "TC-006",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Home Page of the application.",
          "Expected Result": "The Home Page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Observe the carousel section on the Home Page.",
          "Expected Result": "The carousel is displayed only if the display conditions are met (e.g., there are available cards to show)."
        },
        {
          "Step": 3,
          "Step Description": "Check the scenario where no cards are available for the carousel.",
          "Expected Result": "The carousel section is not displayed on the Home Page."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is not logged in (for anonymous scenario). 2. Application is running in a supported environment. 3. Home Page content is available.",
      "Execution Mode": "Manual",
      "Functionality": "Home Page Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The carousel is displayed only when the display conditions are satisfied; otherwise, it is hidden.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only display conditions, not card structure or caching.",
      "_polarion": "Sommario"
    },
    {
      "Title": "Verify Structure of a Single Precompiled Card in Home Page Carousel",
      "ID": "TC-007",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Home Page with carousel enabled and at least one precompiled card available.",
          "Expected Result": "The carousel is visible with at least one card."
        },
        {
          "Step": 2,
          "Step Description": "Inspect the structure of the first card in the carousel.",
          "Expected Result": "The card displays all required elements (e.g., image, title, description, call-to-action button) as per design specifications."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. At least one precompiled card is configured and available for display. 2. Application is running in a supported environment.",
      "Execution Mode": "Manual",
      "Functionality": "Home Page Carousel Card Structure",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample precompiled card data (image, title, description, CTA).",
      "Expected Result": "Each card in the carousel adheres to the specified structure and displays all required elements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on card structure, not carousel behavior or caching.",
      "_polarion": "Sommario"
    },
    {
      "Title": "Verify Caching of Precompiled Cards in Home Page Carousel",
      "ID": "TC-008",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Home Page with carousel enabled and precompiled cards available.",
          "Expected Result": "The carousel and its cards are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Reload the Home Page without clearing the cache.",
          "Expected Result": "The carousel loads quickly, and the same precompiled cards are displayed from cache."
        },
        {
          "Step": 3,
          "Step Description": "Clear the application/browser cache and reload the Home Page.",
          "Expected Result": "The carousel fetches fresh precompiled cards from the server and displays them."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. Precompiled cards are available for the carousel. 2. Application supports caching mechanism. 3. User has access to clear cache (browser or app).",
      "Execution Mode": "Manual",
      "Functionality": "Home Page Carousel Caching",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled card data; cache enabled/disabled scenarios.",
      "Expected Result": "Precompiled cards are cached and loaded quickly unless the cache is cleared, in which case fresh data is fetched.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers caching only for Home Page carousel, not for event detail.",
      "_polarion": "Sommario"
    },
    {
      "Title": "Verify Skeleton Loader Display on Home Page During Carousel Data Fetch",
      "ID": "TC-009",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate slow network conditions or delay the carousel data response.",
          "Expected Result": "The Home Page loads, but carousel data is not immediately available."
        },
        {
          "Step": 2,
          "Step Description": "Observe the carousel section while data is loading.",
          "Expected Result": "A skeleton loader (placeholder UI) is displayed in the carousel area until the data is fully loaded."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the carousel data to finish loading.",
          "Expected Result": "The skeleton loader is replaced by the actual carousel cards once data is available."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. Application supports skeleton loader for carousel. 2. Network throttling or delay can be simulated.",
      "Execution Mode": "Manual",
      "Functionality": "Home Page Skeleton Loader",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (simulate slow network or delayed API response).",
      "Expected Result": "Skeleton loader is shown during data fetch and replaced by carousel cards upon data availability.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only skeleton loader behavior, not carousel content.",
      "_polarion": "Sommario"
    },
    {
      "Title": "Verify Carousel Display Conditions in Event Detail (Bet Builder Tab)",
      "ID": "TC-010",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Event Detail page and select the Bet Builder tab.",
          "Expected Result": "The Bet Builder tab loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Observe the carousel section within the Bet Builder tab.",
          "Expected Result": "The carousel is displayed only if the display conditions are met (e.g., relevant cards are available for the event)."
        },
        {
          "Step": 3,
          "Step Description": "Check the scenario where no cards are available for the event.",
          "Expected Result": "The carousel section is not displayed in the Bet Builder tab."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. Event Detail page is accessible. 2. Bet Builder tab is enabled for the event. 3. Relevant cards are configured for the event.",
      "Execution Mode": "Manual",
      "Functionality": "Event Detail Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with and without relevant carousel cards.",
      "Expected Result": "The carousel is displayed in the Bet Builder tab only when display conditions are satisfied; otherwise, it is hidden.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only display conditions for event detail carousel.",
      "_polarion": "Sommario"
    },
    {
      "Title": "Verify Structure of a Precompiled Card in Event Detail Carousel (Bet Builder Tab)",
      "ID": "TC-011",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Event Detail page with carousel enabled in the Bet Builder tab and at least one precompiled card available.",
          "Expected Result": "The carousel is visible with at least one card in the Bet Builder tab."
        },
        {
          "Step": 2,
          "Step Description": "Inspect the structure of the first card in the carousel within the Bet Builder tab.",
          "Expected Result": "The card displays all required elements (e.g., image, title, description, call-to-action button) as per design specifications."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. At least one precompiled card is configured for the event. 2. Bet Builder tab is enabled. 3. Application is running in a supported environment.",
      "Execution Mode": "Manual",
      "Functionality": "Event Detail Carousel Card Structure",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample precompiled card data for event (image, title, description, CTA).",
      "Expected Result": "Each card in the event detail carousel adheres to the specified structure and displays all required elements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on card structure in event detail, not carousel behavior or caching.",
      "_polarion": "Sommario"
    },
    {
      "Title": "Verify Caching of Precompiled Cards in Event Detail Carousel (Bet Builder Tab)",
      "ID": "TC-012",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Event Detail page with carousel enabled in the Bet Builder tab and precompiled cards available.",
          "Expected Result": "The carousel and its cards are displayed in the Bet Builder tab."
        },
        {
          "Step": 2,
          "Step Description": "Reload the Event Detail page without clearing the cache.",
          "Expected Result": "The carousel loads quickly, and the same precompiled cards are displayed from cache."
        },
        {
          "Step": 3,
          "Step Description": "Clear the application/browser cache and reload the Event Detail page.",
          "Expected Result": "The carousel fetches fresh precompiled cards from the server and displays them."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. Precompiled cards are available for the event. 2. Application supports caching mechanism. 3. User has access to clear cache (browser or app).",
      "Execution Mode": "Manual",
      "Functionality": "Event Detail Carousel Caching",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled card data for event; cache enabled/disabled scenarios.",
      "Expected Result": "Precompiled cards are cached and loaded quickly unless the cache is cleared, in which case fresh data is fetched.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers caching only for event detail carousel, not for Home Page.",
      "_polarion": "Sommario"
    },
    {
      "Title": "Display of Randomly Generated Same Game Parlay (SGP) Precompiled Bets on Full Responsive Frontend (Italy)",
      "ID": "TC-013",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Betting Full Responsive frontend (Italy version) via a supported browser on desktop.",
          "Expected Result": "The homepage loads successfully, displaying betting options."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a sports event eligible for Same Game Parlay bets.",
          "Expected Result": "The event page loads, showing available betting markets."
        },
        {
          "Step": 3,
          "Step Description": "Locate the section for precompiled SGP bets generated by the SGP Generator.",
          "Expected Result": "A section labeled for precompiled SGP bets is visible on the event page."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the displayed SGP bets are generated randomly and differ upon page refresh or event change.",
          "Expected Result": "Each page refresh or event change results in a new set of randomly generated SGP bets."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to the Betting Full Responsive frontend (Italy version).\n2. SGP Generator is operational and integrated.\n3. At least one eligible sports event is available.",
      "Execution Mode": "Manual",
      "Functionality": "Same Game Parlay Precompiled Bets Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses live event data and SGP Generator output)",
      "Expected Result": "Randomly generated SGP precompiled bets are displayed correctly on the event page for Italy, and change upon refresh or event change.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Introduzione"
    },
    {
      "Title": "Display of Randomly Generated Same Game Parlay (SGP) Precompiled Bets on Full Responsive Frontend (Morocco)",
      "ID": "TC-014",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Betting Full Responsive frontend (Morocco version) via a supported browser on desktop.",
          "Expected Result": "The homepage loads successfully, displaying betting options."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a sports event eligible for Same Game Parlay bets.",
          "Expected Result": "The event page loads, showing available betting markets."
        },
        {
          "Step": 3,
          "Step Description": "Locate the section for precompiled SGP bets generated by the SGP Generator.",
          "Expected Result": "A section labeled for precompiled SGP bets is visible on the event page."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the displayed SGP bets are generated randomly and differ upon page refresh or event change.",
          "Expected Result": "Each page refresh or event change results in a new set of randomly generated SGP bets."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to the Betting Full Responsive frontend (Morocco version).\n2. SGP Generator is operational and integrated.\n3. At least one eligible sports event is available.",
      "Execution Mode": "Manual",
      "Functionality": "Same Game Parlay Precompiled Bets Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses live event data and SGP Generator output)",
      "Expected Result": "Randomly generated SGP precompiled bets are displayed correctly on the event page for Morocco, and change upon refresh or event change.",
      "Country": "Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Introduzione"
    },
    {
      "Title": "Display of SGP Precompiled Bets on Mobile Devices (Italy and Morocco)",
      "ID": "TC-015",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Betting Full Responsive frontend (Italy or Morocco version) via a supported browser on a mobile device (iOS or Android).",
          "Expected Result": "The homepage loads successfully, displaying betting options in a mobile-optimized layout."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a sports event eligible for Same Game Parlay bets.",
          "Expected Result": "The event page loads, showing available betting markets in a responsive format."
        },
        {
          "Step": 3,
          "Step Description": "Locate the section for precompiled SGP bets generated by the SGP Generator.",
          "Expected Result": "A section labeled for precompiled SGP bets is visible and formatted correctly for mobile screens."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the displayed SGP bets are generated randomly and differ upon page refresh or event change.",
          "Expected Result": "Each page refresh or event change results in a new set of randomly generated SGP bets."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "Web",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS 16, Android 13, Web",
      "Preconditions": "1. User has access to the Betting Full Responsive frontend (Italy or Morocco version).\n2. SGP Generator is operational and integrated.\n3. At least one eligible sports event is available.\n4. Mobile device with supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Same Game Parlay Precompiled Bets Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses live event data and SGP Generator output)",
      "Expected Result": "Randomly generated SGP precompiled bets are displayed correctly and responsively on mobile devices for both Italy and Morocco versions.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Introduzione"
    },
    {
      "Title": "Display of SGP Precompiled Bets on Retail Terminal Devices (Italy and Morocco)",
      "ID": "TC-016",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Betting Full Responsive frontend (Italy or Morocco version) via a supported browser on a retail terminal device.",
          "Expected Result": "The homepage loads successfully, displaying betting options in a terminal-optimized layout."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a sports event eligible for Same Game Parlay bets.",
          "Expected Result": "The event page loads, showing available betting markets."
        },
        {
          "Step": 3,
          "Step Description": "Locate the section for precompiled SGP bets generated by the SGP Generator.",
          "Expected Result": "A section labeled for precompiled SGP bets is visible and formatted correctly for terminal screens."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the displayed SGP bets are generated randomly and differ upon page refresh or event change.",
          "Expected Result": "Each page refresh or event change results in a new set of randomly generated SGP bets."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Web",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows Embedded, Web",
      "Preconditions": "1. User has access to the Betting Full Responsive frontend (Italy or Morocco version).\n2. SGP Generator is operational and integrated.\n3. At least one eligible sports event is available.\n4. Retail terminal device with supported browser.",
      "Execution Mode": "Manual",
      "Functionality": "Same Game Parlay Precompiled Bets Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses live event data and SGP Generator output)",
      "Expected Result": "Randomly generated SGP precompiled bets are displayed correctly and responsively on retail terminal devices for both Italy and Morocco versions.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Introduzione"
    },
    {
      "Title": "Error Handling: SGP Generator Unavailable",
      "ID": "TC-017",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate SGP Generator service unavailability (e.g., by disconnecting the service or using a mock failure).",
          "Expected Result": "The Betting Full Responsive frontend detects the unavailability of the SGP Generator."
        },
        {
          "Step": 2,
          "Step Description": "Access the event page where SGP precompiled bets would normally be displayed.",
          "Expected Result": "The SGP precompiled bets section is either hidden or displays an appropriate error message (e.g., 'SGP bets currently unavailable')."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. SGP Generator service is intentionally made unavailable.\n2. User has access to the Betting Full Responsive frontend.",
      "Execution Mode": "Manual",
      "Functionality": "Same Game Parlay Precompiled Bets Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (service is unavailable)",
      "Expected Result": "The frontend gracefully handles SGP Generator unavailability by hiding the SGP section or displaying an appropriate error message.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Introduzione"
    },
    {
      "Title": "Responsiveness of SGP Precompiled Bets Section Across Devices and Screen Sizes",
      "ID": "TC-018",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Betting Full Responsive frontend (Italy or Morocco version) on desktop, mobile, and terminal devices.",
          "Expected Result": "The homepage loads successfully on each device type."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to a sports event eligible for Same Game Parlay bets.",
          "Expected Result": "The event page loads, showing available betting markets."
        },
        {
          "Step": 3,
          "Step Description": "Locate the section for precompiled SGP bets generated by the SGP Generator.",
          "Expected Result": "The SGP section is visible and formatted appropriately for the device and screen size."
        },
        {
          "Step": 4,
          "Step Description": "Resize the browser window or rotate the device (where applicable) to various screen sizes and orientations.",
          "Expected Result": "The SGP section adapts responsively, maintaining usability and readability across all tested screen sizes and orientations."
        }
      ],
      "Test Group": "Desktop, Mobile, Terminale",
      "Channel": "Web",
      "Device": "Computer, Smartphone, Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, iOS 16, Android 13, Windows Embedded, Web",
      "Preconditions": "1. User has access to the Betting Full Responsive frontend (Italy or Morocco version).\n2. SGP Generator is operational and integrated.\n3. At least one eligible sports event is available.\n4. Devices with different screen sizes and orientations are available.",
      "Execution Mode": "Manual",
      "Functionality": "Same Game Parlay Precompiled Bets Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses live event data and SGP Generator output)",
      "Expected Result": "The SGP precompiled bets section is fully responsive and maintains usability across all supported devices and screen sizes.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Introduzione"
    },
    {
      "Title": "Verify Requirements Section Presence and Accessibility",
      "ID": "TC-019",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application main page or documentation portal.",
          "Expected Result": "The main page or documentation portal loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the section labeled 'Requisiti' or '# Requisiti'.",
          "Expected Result": "The 'Requisiti' or '# Requisiti' section is visible and accessible on the page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application or documentation portal.\n2. User is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Documentation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'Requisiti' or '# Requisiti' section is present and accessible to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the presence and accessibility of the requirements section.",
      "_polarion": "Requisiti"
    },
    {
      "Title": "Verify Requirements Section Content is Not Empty",
      "ID": "TC-020",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Requisiti' or '# Requisiti' section of the application or documentation.",
          "Expected Result": "The section is displayed to the user."
        },
        {
          "Step": 2,
          "Step Description": "Check that the section contains at least one requirement or descriptive content.",
          "Expected Result": "The section is not empty and contains requirement details or descriptions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User has access to the application or documentation portal.\n2. The 'Requisiti' or '# Requisiti' section is present.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Documentation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The 'Requisiti' or '# Requisiti' section contains requirement details or descriptions and is not empty.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the presence of content within the requirements section.",
      "_polarion": "Requisiti"
    },
    {
      "Title": "Verify Requirements Section is Displayed Correctly on Mobile Devices",
      "ID": "TC-021",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the application or documentation portal on a mobile device.",
          "Expected Result": "The application or portal loads successfully on the mobile device."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Requisiti' or '# Requisiti' section.",
          "Expected Result": "The section is visible and accessible on the mobile device."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the section content is readable and properly formatted for mobile view.",
          "Expected Result": "The requirements section content is displayed correctly and is readable without layout issues."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "Web",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Android 12, Mobile Web Browser",
      "Preconditions": "1. User has a compatible mobile device.\n2. User has access to the application or documentation portal.\n3. The 'Requisiti' or '# Requisiti' section is present.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Documentation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The 'Requisiti' or '# Requisiti' section is displayed correctly and is readable on mobile devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the mobile display and formatting of the requirements section.",
      "_polarion": "Requisiti"
    },
    {
      "Title": "Verify Error Handling When Requirements Section is Missing",
      "ID": "TC-022",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the application or documentation portal where the 'Requisiti' or '# Requisiti' section is intentionally removed or unavailable.",
          "Expected Result": "The application or portal loads without the requirements section."
        },
        {
          "Step": 2,
          "Step Description": "Observe the application's behavior and any error messages displayed.",
          "Expected Result": "The application displays a user-friendly message indicating the requirements section is unavailable, or handles the absence gracefully without crashing."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. The 'Requisiti' or '# Requisiti' section is intentionally removed or not present in the application or documentation portal.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Documentation",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The application handles the missing requirements section gracefully and informs the user appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the application's behavior when the requirements section is missing.",
      "_polarion": "Requisiti"
    },
    {
      "Title": "Verify Carosello Display and Title on Home Page (Full Responsive Online & Retail)",
      "ID": "TC-023",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Home Page on Full Responsive Online.",
          "Expected Result": "The Home Page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Observe the top section of the Home Page.",
          "Expected Result": "A carousel titled 'Bet Builder in evidenza / Bet Builder en vedette' is visible."
        },
        {
          "Step": 3,
          "Step Description": "Scroll below the carousel.",
          "Expected Result": "Two items labeled 'Calcio / Football' and 'Basket' are displayed below the carousel."
        },
        {
          "Step": 4,
          "Step Description": "Repeat steps 1-3 on Full Responsive Retail.",
          "Expected Result": "The same carousel and items are visible on Full Responsive Retail Home Page."
        }
      ],
      "Test Group": "Desktop, Terminale, Mobile",
      "Channel": "Web",
      "Device": "Computer, Terminale, Smartphone, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive Online & Retail)",
      "Preconditions": "1. User is not logged in (anonymous session).\n2. System is configured to display the carousel on both Full Responsive Online and Retail.\n3. SGP cards are available from BE engine.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello Home Page Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The carousel with the correct title and the two items ('Calcio / Football' and 'Basket') are displayed on the Home Page for both Full Responsive Online and Retail.",
      "Country": "Italy, France",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Home Page"
    },
    {
      "Title": "Verify Carosello Content Changes Based on Selected Item (Calcio/Football or Basket)",
      "ID": "TC-024",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Home Page with the carousel visible.",
          "Expected Result": "Carousel and items 'Calcio / Football' and 'Basket' are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select the 'Calcio / Football' item below the carousel.",
          "Expected Result": "The carousel updates to display SGP cards dedicated to Calcio (Football) bets."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'Basket' item below the carousel.",
          "Expected Result": "The carousel updates to display SGP cards dedicated to Basket bets."
        }
      ],
      "Test Group": "Desktop, Terminale, Mobile",
      "Channel": "Web",
      "Device": "Computer, Terminale, Smartphone, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive Online & Retail)",
      "Preconditions": "1. Carousel is enabled and visible on the Home Page.\n2. SGP cards for both Calcio and Basket are available from BE engine.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello Dynamic Content",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "SGP cards for Calcio and Basket preloaded in BE engine.",
      "Expected Result": "Selecting 'Calcio / Football' displays Calcio SGP cards; selecting 'Basket' displays Basket SGP cards in the carousel.",
      "Country": "Italy, France",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Home Page"
    },
    {
      "Title": "Verify Carousel Visibility Toggle on Full Responsive Retail (Hot Configuration)",
      "ID": "TC-025",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the configuration panel for Full Responsive Retail.",
          "Expected Result": "Configuration panel is accessible without system release."
        },
        {
          "Step": 2,
          "Step Description": "Set the carousel visibility to 'disabled' and save changes.",
          "Expected Result": "Configuration is saved successfully."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the Home Page on Full Responsive Retail.",
          "Expected Result": "The carousel is not displayed on the Home Page."
        },
        {
          "Step": 4,
          "Step Description": "Return to the configuration panel and set the carousel visibility to 'enabled'.",
          "Expected Result": "Configuration is saved successfully."
        },
        {
          "Step": 5,
          "Step Description": "Refresh the Home Page on Full Responsive Retail.",
          "Expected Result": "The carousel is now displayed on the Home Page."
        }
      ],
      "Test Group": "Terminale, Desktop",
      "Channel": "Web",
      "Device": "Terminale, Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive Retail)",
      "Preconditions": "1. User has access to the configuration panel for Full Responsive Retail.\n2. System supports hot configuration changes (no release required).\n3. Carousel is initially enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello Configuration Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "Carousel visibility can be toggled on/off via configuration panel on Full Responsive Retail without requiring a release, and changes are reflected immediately on the Home Page.",
      "Country": "Italy, France",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Home Page"
    },
    {
      "Title": "Verify Carousel Not Displayed When Disabled via Configuration (Retail Only)",
      "ID": "TC-026",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure carousel is disabled in the Full Responsive Retail configuration panel.",
          "Expected Result": "Carousel is set to 'disabled' in configuration."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Home Page on Full Responsive Retail.",
          "Expected Result": "The carousel is not displayed on the Home Page."
        }
      ],
      "Test Group": "Terminale, Desktop",
      "Channel": "Web",
      "Device": "Terminale, Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive Retail)",
      "Preconditions": "1. Carousel is disabled in the configuration panel for Full Responsive Retail.\n2. User is on the Home Page.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello Configuration Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "When the carousel is disabled via configuration, it is not visible on the Full Responsive Retail Home Page.",
      "Country": "Italy, France",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Home Page"
    },
    {
      "Title": "Verify Carousel is Displayed on All Supported Devices (Responsiveness)",
      "ID": "TC-027",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the Home Page on a desktop browser (Full Responsive Online).",
          "Expected Result": "Carousel is displayed correctly."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Home Page on a tablet device (Full Responsive Online).",
          "Expected Result": "Carousel is displayed correctly and adapts to tablet screen size."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the Home Page on a smartphone device (Full Responsive Online).",
          "Expected Result": "Carousel is displayed correctly and adapts to smartphone screen size."
        },
        {
          "Step": 4,
          "Step Description": "Repeat steps 1-3 on Full Responsive Retail.",
          "Expected Result": "Carousel is displayed and responsive on all device types for Retail (if enabled)."
        }
      ],
      "Test Group": "Desktop, Terminale, Mobile, Tablet",
      "Channel": "Web",
      "Device": "Computer, Terminale, Smartphone, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive Online & Retail)",
      "Preconditions": "1. Carousel is enabled in configuration (for Retail).\n2. SGP cards are available from BE engine.\n3. Supported devices are available for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Carousel is displayed and adapts correctly to all supported device types and screen sizes on both Full Responsive Online and Retail (if enabled).",
      "Country": "Italy, France",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Home Page"
    },
    {
      "Title": "Verify Error Handling When SGP Cards Are Not Available from BE Engine",
      "ID": "TC-028",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where the BE engine does not provide SGP cards for Calcio or Basket.",
          "Expected Result": "System recognizes that SGP cards are unavailable."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Home Page with the carousel enabled.",
          "Expected Result": "Carousel is displayed with a message indicating no SGP cards are available, or the carousel is hidden according to business rules."
        }
      ],
      "Test Group": "Desktop, Terminale, Mobile",
      "Channel": "Web",
      "Device": "Computer, Terminale, Smartphone, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive Online & Retail)",
      "Preconditions": "1. Carousel is enabled in configuration.\n2. BE engine is configured to return no SGP cards for both Calcio and Basket.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "No SGP cards available from BE engine.",
      "Expected Result": "If SGP cards are unavailable, the carousel displays an appropriate message or is hidden, as per business rules.",
      "Country": "Italy, France",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Home Page"
    },
    {
      "Title": "Carosello HP not displayed when no precompiled data is received from backend",
      "ID": "TC-029",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the backend is configured to return no precompiled data (neither Calcio nor Basket) for the Home Page request.",
          "Expected Result": "Backend returns an empty response for precompiled data."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Home Page of the application.",
          "Expected Result": "Home Page loads successfully."
        },
        {
          "Step": 3,
          "Step Description": "Observe the presence of the Carosello HP component on the Home Page.",
          "Expected Result": "Carosello HP is not displayed on the Home Page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User is not logged in (or as required by the application).\n2. Backend is configured to return no precompiled data for both Calcio and Basket.\n3. Application cache is cleared to avoid stale data.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP Display Logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No precompiled data for Calcio and Basket in backend response.",
      "Expected Result": "Carosello HP is not visible when no precompiled data is received from backend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Condizioni di visualizzazione"
    },
    {
      "Title": "Carosello HP displays only Calcio when Basket precompiled data is missing",
      "ID": "TC-030",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the backend is configured to return precompiled data only for Calcio and not for Basket.",
          "Expected Result": "Backend returns precompiled data for Calcio only."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Home Page of the application.",
          "Expected Result": "Home Page loads successfully."
        },
        {
          "Step": 3,
          "Step Description": "Observe the items displayed in the Carosello HP component.",
          "Expected Result": "Carosello HP is displayed with only the Calcio item visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User is not logged in (or as required by the application).\n2. Backend is configured to return precompiled data for Calcio only.\n3. Application cache is cleared to avoid stale data.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP Display Logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled data for Calcio only in backend response.",
      "Expected Result": "Carosello HP is displayed with only the Calcio item when Basket precompiled data is missing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Condizioni di visualizzazione"
    },
    {
      "Title": "Carosello HP displays only Basket when Calcio precompiled data is missing",
      "ID": "TC-031",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the backend is configured to return precompiled data only for Basket and not for Calcio.",
          "Expected Result": "Backend returns precompiled data for Basket only."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Home Page of the application.",
          "Expected Result": "Home Page loads successfully."
        },
        {
          "Step": 3,
          "Step Description": "Observe the items displayed in the Carosello HP component.",
          "Expected Result": "Carosello HP is displayed with only the Basket item visible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User is not logged in (or as required by the application).\n2. Backend is configured to return precompiled data for Basket only.\n3. Application cache is cleared to avoid stale data.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP Display Logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled data for Basket only in backend response.",
      "Expected Result": "Carosello HP is displayed with only the Basket item when Calcio precompiled data is missing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Condizioni di visualizzazione"
    },
    {
      "Title": "Display of Event Names for Both Teams in Single Card",
      "ID": "TC-032",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the event card and locate the fields for team names.",
          "Expected Result": "Two separate strings are displayed, each representing the name of one team."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, App",
      "Preconditions": "1. SGP Generator backend is operational and provides valid event data.\n2. At least one event with two teams is available in the carousel.\n3. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with two teams: Team A and Team B.",
      "Expected Result": "Each SGP card displays the names of both teams in two separate strings as provided by the backend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Team Icons from Redax Configuration",
      "ID": "TC-033",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the event card and locate the icons for both teams.",
          "Expected Result": "Icons for both teams are displayed as per the Redax configuration."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Android, App",
      "Preconditions": "1. SGP Generator backend is operational and provides valid event data.\n2. Team icons are configured in Redax for the teams in the event.\n3. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with Team A and Team B, both having icons set in Redax.",
      "Expected Result": "Each SGP card displays the correct icons for both teams as configured in Redax.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Event Date and Time in Card",
      "ID": "TC-034",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the event card and locate the date and time fields.",
          "Expected Result": "Date and time of the event are displayed in the correct format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, Web",
      "Preconditions": "1. SGP Generator backend is operational and provides valid event data with date and time.\n2. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with a valid date and time (e.g., 2024-07-01 20:45).",
      "Expected Result": "Each SGP card displays the event date and time as provided by the backend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Discipline Icon in Event Card",
      "ID": "TC-035",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the event card and locate the discipline icon.",
          "Expected Result": "The discipline icon is displayed as provided by the backend."
        }
      ],
      "Test Group": "Desktop Mac",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "macOS, Web",
      "Preconditions": "1. SGP Generator backend is operational and provides valid event data with discipline icon.\n2. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with a discipline icon (e.g., football).",
      "Expected Result": "Each SGP card displays the correct discipline icon as provided by the backend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Event Manifestation Name in Card",
      "ID": "TC-036",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the event card and locate the manifestation name field.",
          "Expected Result": "The manifestation name is displayed as provided by the backend."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, Web",
      "Preconditions": "1. SGP Generator backend is operational and provides valid event data with manifestation name.\n2. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with a manifestation name (e.g., 'Serie A').",
      "Expected Result": "Each SGP card displays the manifestation name as provided by the backend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Pronostici Descriptions in Italian for Full Responsive Italy",
      "ID": "TC-037",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set the application to Full Responsive Italy mode.",
          "Expected Result": "Application is in Full Responsive Italy mode."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 3,
          "Step Description": "Identify the event card and locate the pronostici section.",
          "Expected Result": "Each pronostico is displayed with two strings: the first in bold (top), the second in grey (below), both in Italian as per business mapping."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows, Web",
      "Preconditions": "1. SGP Generator backend is operational and provides pronostici with Italian mapping.\n2. Application is set to Full Responsive Italy mode.\n3. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with pronostici descriptions mapped in Italian.",
      "Expected Result": "Each SGP card in Full Responsive Italy mode displays pronostici descriptions in Italian, with correct formatting (bold and grey).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Pronostici Descriptions in French for Full Responsive Morocco",
      "ID": "TC-038",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set the application to Full Responsive Morocco mode.",
          "Expected Result": "Application is in Full Responsive Morocco mode."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 3,
          "Step Description": "Identify the event card and locate the pronostici section.",
          "Expected Result": "Each pronostico is displayed with two strings: the first in bold (top), the second in grey (below), both in French as per business mapping."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows, Web",
      "Preconditions": "1. SGP Generator backend is operational and provides pronostici with French mapping.\n2. Application is set to Full Responsive Morocco mode.\n3. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with pronostici descriptions mapped in French.",
      "Expected Result": "Each SGP card in Full Responsive Morocco mode displays pronostici descriptions in French, with correct formatting (bold and grey).",
      "Country": "Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Quota Button with Correct Total Odds Including Bonus",
      "ID": "TC-039",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the event card and locate the Quota button.",
          "Expected Result": "Quota button is visible on the card."
        },
        {
          "Step": 3,
          "Step Description": "Verify the value displayed on the Quota button matches the product of the individual odds, including any applicable bonus.",
          "Expected Result": "Quota button displays the correct total odds as calculated."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, App",
      "Preconditions": "1. SGP Generator backend is operational and provides valid odds and bonus data.\n2. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with individual odds (e.g., 1.5, 2.0) and bonus (e.g., 10%).",
      "Expected Result": "Quota button displays the correct total odds, including any bonus, as per backend calculation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Number of Additional Markets (+n) for SGP Cards on App",
      "ID": "TC-040",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards on the mobile app.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the event card and locate the additional markets indicator (+n).",
          "Expected Result": "The number of additional markets not shown in the card is displayed as '+n'."
        }
      ],
      "Test Group": "Mobile Android",
      "Channel": "App Android",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Android, App",
      "Preconditions": "1. SGP Generator backend is operational and provides the number of additional markets for the event.\n2. User is logged in or has access to the homepage carousel on the app.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with additional markets count (e.g., 5).",
      "Expected Result": "Each SGP card on the app displays the correct number of additional markets as '+n'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Display of Live Streaming Indicator for SGP Cards on App",
      "ID": "TC-041",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards on the mobile app.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 2,
          "Step Description": "Identify the event card and check for the live streaming indicator (if the event is live and streaming is available).",
          "Expected Result": "A live streaming indicator is displayed on the card if the event is live and streaming is available."
        }
      ],
      "Test Group": "Mobile IOS",
      "Channel": "App IOS",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, App",
      "Preconditions": "1. SGP Generator backend is operational and provides live streaming information for the event.\n2. The event is live and streaming is available.\n3. User is logged in or has access to the homepage carousel on the app.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with live streaming flag set to true.",
      "Expected Result": "Each SGP card on the app displays a live streaming indicator when applicable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Negative Test: Missing Team Icon Fallback Handling",
      "ID": "TC-042",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure an event in the backend with one or both team icons missing in Redax.",
          "Expected Result": "Event data is available with missing team icon(s)."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 3,
          "Step Description": "Identify the event card and check the team icon fields.",
          "Expected Result": "A default or placeholder icon is displayed for any missing team icon."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, Web",
      "Preconditions": "1. SGP Generator backend is operational and provides event data with missing team icon(s).\n2. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with missing team icon(s).",
      "Expected Result": "If a team icon is missing, the card displays a default or placeholder icon instead.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Negative Test: Pronostici Mapping Fallback for Unsupported Locale",
      "ID": "TC-043",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Set the application to a locale other than Italian or French (e.g., English).",
          "Expected Result": "Application is in the unsupported locale mode."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the homepage carousel displaying SGP Generator cards.",
          "Expected Result": "The carousel is visible with at least one SGP card displayed."
        },
        {
          "Step": 3,
          "Step Description": "Identify the event card and locate the pronostici section.",
          "Expected Result": "Pronostici descriptions are displayed in a default language (e.g., Italian) or a fallback message is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows, Web",
      "Preconditions": "1. SGP Generator backend is operational and provides pronostici mapping in Italian and French only.\n2. Application is set to an unsupported locale.\n3. User is logged in or has access to the homepage carousel.",
      "Execution Mode": "Manual",
      "Functionality": "Carosello HP - Card Structure",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event data with pronostici mapping in Italian and French only.",
      "Expected Result": "If the locale is unsupported, pronostici descriptions default to Italian or display a fallback message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello HP - Struttura singola card/precompilata"
    },
    {
      "Title": "Add all precompilata outcomes to cart via quota button (empty cart)",
      "ID": "TC-044",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the cart is empty.",
          "Expected Result": "Cart contains no outcomes."
        },
        {
          "Step": 2,
          "Step Description": "Identify a precompilata card with 4 outcomes.",
          "Expected Result": "Precompilata card with 4 outcomes is visible."
        },
        {
          "Step": 3,
          "Step Description": "Tap the quota button on the precompilata card.",
          "Expected Result": "Quota button is graphically selected."
        },
        {
          "Step": 4,
          "Step Description": "Check the cart contents.",
          "Expected Result": "All 4 outcomes from the precompilata are added to the cart."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "App, Web",
      "Device": "Smartphone, Computer, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "User is logged in. Cart is empty. Precompilata card with 4 outcomes is available.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button - Add Outcomes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, precompilata card with 4 outcomes.",
      "Expected Result": "All outcomes from the precompilata are added to the cart and the quota button is graphically selected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Pulsante quota"
    },
    {
      "Title": "Add precompilata outcomes to cart when cart already contains outcomes (including system mode)",
      "ID": "TC-045",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the cart contains 2 outcomes from previous selections.",
          "Expected Result": "Cart contains 2 outcomes."
        },
        {
          "Step": 2,
          "Step Description": "Identify a precompilata card with 3 outcomes (none of which are in the cart).",
          "Expected Result": "Precompilata card with 3 outcomes is visible."
        },
        {
          "Step": 3,
          "Step Description": "Tap the quota button on the precompilata card.",
          "Expected Result": "Quota button is graphically selected."
        },
        {
          "Step": 4,
          "Step Description": "Check the cart contents and ticket mode.",
          "Expected Result": "All 3 outcomes from the precompilata are added to the cart (total 5). If this triggers system mode, ticket is in system mode."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "App, Web",
      "Device": "Smartphone, Computer, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "User is logged in. Cart contains 2 outcomes. Precompilata card with 3 different outcomes is available.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button - Add Outcomes with Existing Cart",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, cart with 2 outcomes, precompilata card with 3 outcomes.",
      "Expected Result": "All outcomes from the precompilata are added to the cart, even if the cart already contains outcomes. Ticket mode updates if necessary.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Pulsante quota"
    },
    {
      "Title": "Quota button is graphically selected if all precompilata outcomes are already in cart",
      "ID": "TC-046",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the cart contains all outcomes from a specific precompilata card (added manually or via quota button).",
          "Expected Result": "Cart contains all outcomes from the precompilata."
        },
        {
          "Step": 2,
          "Step Description": "Locate the corresponding precompilata card.",
          "Expected Result": "Precompilata card is visible."
        },
        {
          "Step": 3,
          "Step Description": "Observe the quota button on the precompilata card.",
          "Expected Result": "Quota button is graphically selected."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "App, Web",
      "Device": "Smartphone, Computer, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "User is logged in. Cart contains all outcomes from a precompilata card.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button - Visual State",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, cart with all outcomes from a precompilata card.",
      "Expected Result": "Quota button is graphically selected if all precompilata outcomes are in the cart.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Pulsante quota"
    },
    {
      "Title": "Quota button is disabled if only some precompilata outcomes are in cart",
      "ID": "TC-047",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the cart contains only 3 out of 4 outcomes from a specific precompilata card.",
          "Expected Result": "Cart contains 3 of 4 outcomes from the precompilata."
        },
        {
          "Step": 2,
          "Step Description": "Locate the corresponding precompilata card.",
          "Expected Result": "Precompilata card is visible."
        },
        {
          "Step": 3,
          "Step Description": "Observe the quota button on the precompilata card.",
          "Expected Result": "Quota button is disabled (not tappable/clickable)."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "App, Web",
      "Device": "Smartphone, Computer, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "User is logged in. Cart contains only a subset of outcomes from a precompilata card.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button - Disabled State",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, cart with 3 of 4 outcomes from a precompilata card.",
      "Expected Result": "Quota button is disabled if only some precompilata outcomes are in the cart.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Pulsante quota"
    },
    {
      "Title": "Remove precompilata outcomes from cart by tapping selected quota button",
      "ID": "TC-048",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the cart contains all outcomes from a specific precompilata card (added via quota button).",
          "Expected Result": "Cart contains all outcomes from the precompilata."
        },
        {
          "Step": 2,
          "Step Description": "Locate the corresponding precompilata card with quota button graphically selected.",
          "Expected Result": "Quota button is graphically selected."
        },
        {
          "Step": 3,
          "Step Description": "Tap the selected quota button.",
          "Expected Result": "Quota button is graphically deselected."
        },
        {
          "Step": 4,
          "Step Description": "Check the cart contents.",
          "Expected Result": "All outcomes from the precompilata are removed from the cart."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "App, Web",
      "Device": "Smartphone, Computer, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "User is logged in. Cart contains all outcomes from a precompilata card. Quota button is selected.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button - Remove Outcomes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, cart with all outcomes from a precompilata card.",
      "Expected Result": "All outcomes from the precompilata are removed from the cart and the quota button is deselected.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Pulsante quota"
    },
    {
      "Title": "Error when adding precompilata outcomes exceeds leg max constraint (system mode)",
      "ID": "TC-049",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the cart contains 3 outcomes, one of which has a leg max=5 constraint.",
          "Expected Result": "Cart contains 3 outcomes, including one with leg max=5."
        },
        {
          "Step": 2,
          "Step Description": "Identify a precompilata card with 5 outcomes.",
          "Expected Result": "Precompilata card with 5 outcomes is visible."
        },
        {
          "Step": 3,
          "Step Description": "Tap the quota button on the precompilata card.",
          "Expected Result": "No outcomes from the precompilata are added to the cart. An error message is displayed indicating the constraint violation."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "App, Web",
      "Device": "Smartphone, Computer, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "User is logged in. Cart contains 3 outcomes, one with leg max=5. Precompilata card with 5 outcomes is available.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button - Constraint Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, cart with 3 outcomes (one with leg max=5), precompilata card with 5 outcomes.",
      "Expected Result": "No outcomes are added to the cart and an appropriate error message is displayed if the leg max constraint is violated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Pulsante quota"
    },
    {
      "Title": "Error when adding precompilata outcomes exceeds maximum events/outcomes allowed",
      "ID": "TC-050",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the cart contains 28 events in multipla mode.",
          "Expected Result": "Cart contains 28 events."
        },
        {
          "Step": 2,
          "Step Description": "Identify a precompilata card with 5 outcomes.",
          "Expected Result": "Precompilata card with 5 outcomes is visible."
        },
        {
          "Step": 3,
          "Step Description": "Tap the quota button on the precompilata card.",
          "Expected Result": "No outcomes from the precompilata are added to the cart. An error message is displayed indicating the maximum number of events/outcomes has been reached."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "App, Web",
      "Device": "Smartphone, Computer, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "User is logged in. Cart contains 28 events in multipla mode. Precompilata card with 5 outcomes is available.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button - Max Events Constraint",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, cart with 28 events, precompilata card with 5 outcomes.",
      "Expected Result": "No outcomes are added to the cart and an error message is displayed if the maximum number of events/outcomes is exceeded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Pulsante quota"
    },
    {
      "Title": "Verify precompiled cards are cached and persist for X minutes on homepage revisit",
      "ID": "TC-051",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the website and land on the homepage (HP) at time T0.",
          "Expected Result": "Homepage loads and precompiled cards are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Note the content and order of the precompiled cards displayed.",
          "Expected Result": "Content and order of precompiled cards are recorded for later comparison."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the homepage to another section of the website.",
          "Expected Result": "User is successfully navigated to a different section; homepage is no longer visible."
        },
        {
          "Step": 4,
          "Step Description": "Wait for a period less than X minutes (e.g., X-1 minutes).",
          "Expected Result": "Elapsed time is less than the configured cache duration X."
        },
        {
          "Step": 5,
          "Step Description": "Return to the homepage within X minutes from the initial visit.",
          "Expected Result": "Homepage reloads."
        },
        {
          "Step": 6,
          "Step Description": "Observe the precompiled cards displayed on the homepage.",
          "Expected Result": "The same precompiled cards (content and order) as seen at T0 are displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Web - Windows 10/11, Chrome/Edge/Firefox",
      "Preconditions": "1. Cache duration X is configured as per business requirements. 2. Website is accessible. 3. User is not logged in (if applicable). 4. Browser cache is cleared before starting the test.",
      "Execution Mode": "Manual",
      "Functionality": "Homepage Precompiled Cards Caching",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses default homepage precompiled cards)",
      "Expected Result": "Upon returning to the homepage within X minutes, the user sees the exact same precompiled cards as initially displayed at T0.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Memorizzazione in cache delle precompilate"
    },
    {
      "Title": "Verify precompiled cards are refreshed after cache expiration (X minutes)",
      "ID": "TC-052",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the website and land on the homepage (HP) at time T0.",
          "Expected Result": "Homepage loads and precompiled cards are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Note the content and order of the precompiled cards displayed.",
          "Expected Result": "Content and order of precompiled cards are recorded for later comparison."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the homepage to another section of the website.",
          "Expected Result": "User is successfully navigated to a different section; homepage is no longer visible."
        },
        {
          "Step": 4,
          "Step Description": "Wait for a period greater than X minutes (e.g., X+1 minutes).",
          "Expected Result": "Elapsed time exceeds the configured cache duration X."
        },
        {
          "Step": 5,
          "Step Description": "Return to the homepage after X minutes have passed since the initial visit.",
          "Expected Result": "Homepage reloads."
        },
        {
          "Step": 6,
          "Step Description": "Observe the precompiled cards displayed on the homepage.",
          "Expected Result": "Precompiled cards are refreshed and may differ in content and/or order from those seen at T0."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Web - Windows 10/11, Chrome/Edge/Firefox",
      "Preconditions": "1. Cache duration X is configured as per business requirements. 2. Website is accessible. 3. User is not logged in (if applicable). 4. Browser cache is cleared before starting the test.",
      "Execution Mode": "Manual",
      "Functionality": "Homepage Precompiled Cards Caching",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses default homepage precompiled cards)",
      "Expected Result": "Upon returning to the homepage after X minutes, the precompiled cards are refreshed and may differ from those initially displayed at T0.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Memorizzazione in cache delle precompilate"
    },
    {
      "Title": "Verify cache duration X is only changeable via release and not runtime",
      "ID": "TC-053",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system configuration for cache duration X.",
          "Expected Result": "Configuration interface or file for cache duration is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to change the value of X during runtime (without a release/deployment).",
          "Expected Result": "System does not allow changing cache duration X at runtime."
        },
        {
          "Step": 3,
          "Step Description": "Perform a system release/deployment with a new value for X.",
          "Expected Result": "System accepts the new value for X after release/deployment."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the new cache duration X is in effect after the release.",
          "Expected Result": "Cache duration for precompiled cards matches the newly configured value."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "N/A",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web Backend - Windows/Linux",
      "Preconditions": "1. Access to system configuration and deployment tools. 2. Sufficient permissions to perform release/deployment. 3. Knowledge of current and new values for X.",
      "Execution Mode": "Manual",
      "Functionality": "Cache Configuration Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Current and new values for X (e.g., X=5, X=10)",
      "Expected Result": "Cache duration X can only be changed via a release/deployment, not at runtime.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers configuration management, not user-facing cache behavior.",
      "_polarion": "Memorizzazione in cache delle precompilate"
    },
    {
      "Title": "Verify precompiled cards caching works for different browsers and devices",
      "ID": "TC-054",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the website homepage on Browser A (e.g., Chrome) at time T0.",
          "Expected Result": "Homepage loads and precompiled cards are displayed."
        },
        {
          "Step": 2,
          "Step Description": "Note the content and order of the precompiled cards displayed.",
          "Expected Result": "Content and order of precompiled cards are recorded for later comparison."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the homepage and return within X minutes.",
          "Expected Result": "Homepage reloads."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the same precompiled cards are displayed as at T0.",
          "Expected Result": "Precompiled cards match those seen at T0."
        },
        {
          "Step": 5,
          "Step Description": "Repeat steps 1-4 on Browser B (e.g., Firefox) and on a mobile device (e.g., iOS/Android).",
          "Expected Result": "Precompiled cards caching works consistently across browsers and devices."
        }
      ],
      "Test Group": "Desktop, Mobile",
      "Channel": "Web",
      "Device": "Computer, Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web - Windows 10/11, macOS, iOS, Android, Chrome/Edge/Firefox/Safari",
      "Preconditions": "1. Cache duration X is configured as per business requirements. 2. Website is accessible on all target browsers/devices. 3. Browser cache is cleared before starting the test on each device.",
      "Execution Mode": "Manual",
      "Functionality": "Homepage Precompiled Cards Caching",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (uses default homepage precompiled cards)",
      "Expected Result": "Precompiled cards caching works consistently across supported browsers and devices within the configured cache duration X.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers cross-browser and cross-device compatibility.",
      "_polarion": "Memorizzazione in cache delle precompilate"
    },
    {
      "Title": "Verify that cache is user/session-specific and not shared across users",
      "ID": "TC-055",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User A opens the website homepage at time T0 and notes the precompiled cards displayed.",
          "Expected Result": "User A sees a set of precompiled cards and records their content/order."
        },
        {
          "Step": 2,
          "Step Description": "User B opens the website homepage at time T0 on a different device or browser.",
          "Expected Result": "User B sees a set of precompiled cards (may differ from User A's cards) and records their content/order."
        },
        {
          "Step": 3,
          "Step Description": "User A navigates away from and returns to the homepage within X minutes.",
          "Expected Result": "User A sees the same precompiled cards as initially displayed."
        },
        {
          "Step": 4,
          "Step Description": "User B navigates away from and returns to the homepage within X minutes.",
          "Expected Result": "User B sees the same precompiled cards as initially displayed to User B."
        },
        {
          "Step": 5,
          "Step Description": "Compare the precompiled cards seen by User A and User B.",
          "Expected Result": "Cache is user/session-specific; User A and User B do not see each other's cached cards."
        }
      ],
      "Test Group": "Desktop, Mobile",
      "Channel": "Web",
      "Device": "Computer, Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web - Windows 10/11, macOS, iOS, Android, Chrome/Edge/Firefox/Safari",
      "Preconditions": "1. Cache duration X is configured as per business requirements. 2. Two separate user sessions (different browsers/devices or incognito mode). 3. Website is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Homepage Precompiled Cards Caching",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A (uses default homepage precompiled cards)",
      "Expected Result": "Cache of precompiled cards is user/session-specific and not shared across users.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers session/user isolation for cache.",
      "_polarion": "Memorizzazione in cache delle precompilate"
    },
    {
      "Title": "Display Only Non-Expired Events in Carousel Cards",
      "ID": "TC-056",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application and navigate to the Home Page (HP).",
          "Expected Result": "User is successfully logged in and the HP is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Verify the carousel displays event cards fetched from the backend engine (SGP).",
          "Expected Result": "Carousel displays event cards as provided by the backend."
        },
        {
          "Step": 3,
          "Step Description": "Check the start date and time of each event displayed in the carousel.",
          "Expected Result": "All displayed events have a start date and time that is in the future (i.e., not yet passed)."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "App IOS, App Android, Desktop",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User has a valid account and is logged in.\n2. Backend engine (SGP) provides a mix of events, some with start date/time in the past and some in the future.\n3. Cache is valid (not expired, within X minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Event Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; Event data with mixed start times (past and future).",
      "Expected Result": "Only event cards with a start date and time in the future are displayed in the carousel. Expired events are not shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover cache expiration or backend refresh scenarios.",
      "_polarion": "Eventi da visualizzare nelle card"
    },
    {
      "Title": "Expired Events Are Removed from Carousel Upon Return to Home Page Within Cache Validity",
      "ID": "TC-057",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the Home Page (HP).",
          "Expected Result": "User is on the HP and carousel displays event cards."
        },
        {
          "Step": 2,
          "Step Description": "Note the list of events displayed in the carousel, including their start date and time.",
          "Expected Result": "List of events with their start times is recorded."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the HP (e.g., to another section of the app).",
          "Expected Result": "User leaves the HP."
        },
        {
          "Step": 4,
          "Step Description": "Wait until the start date and time of one or more displayed events has passed, but remain within the cache validity period (X minutes).",
          "Expected Result": "Some events have now expired, but cache is still valid."
        },
        {
          "Step": 5,
          "Step Description": "Return to the HP.",
          "Expected Result": "Carousel updates to remove expired events; only non-expired events are displayed."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "App IOS, App Android, Desktop",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is logged in.\n2. Carousel initially displays events with start times both before and after the current time.\n3. Cache is valid (within X minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Event Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; Event data with start times close to current time.",
      "Expected Result": "Upon returning to HP, only non-expired events are shown in the carousel. Expired events are no longer visible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover scenario where all events expire.",
      "_polarion": "Eventi da visualizzare nelle card"
    },
    {
      "Title": "Frontend Requests New Events When All Cached Events Are Expired",
      "ID": "TC-058",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the Home Page (HP).",
          "Expected Result": "User is on the HP and carousel displays event cards."
        },
        {
          "Step": 2,
          "Step Description": "Note the list of events displayed in the carousel, all with start date and time close to the current time.",
          "Expected Result": "All events are about to expire."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the HP (e.g., to another section of the app).",
          "Expected Result": "User leaves the HP."
        },
        {
          "Step": 4,
          "Step Description": "Wait until all events' start date and time have passed, but remain within the cache validity period (X minutes).",
          "Expected Result": "All events are now expired, but cache is still valid."
        },
        {
          "Step": 5,
          "Step Description": "Return to the HP.",
          "Expected Result": "Frontend detects all events are expired, triggers a new backend call, and displays new event cards. Cache timer is reset."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "App IOS, App Android, Desktop",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is logged in.\n2. Carousel initially displays only events with start times about to expire.\n3. Cache is valid (within X minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Event Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; Event data with start times about to expire.",
      "Expected Result": "If all cached events are expired upon return to HP, the frontend requests new events from the backend and displays them. Cache timer is reset.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the scenario where all events expire within cache validity.",
      "_polarion": "Eventi da visualizzare nelle card"
    },
    {
      "Title": "No Backend Call When At Least One Event Is Still Valid in Cache",
      "ID": "TC-059",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the Home Page (HP).",
          "Expected Result": "User is on the HP and carousel displays event cards."
        },
        {
          "Step": 2,
          "Step Description": "Note the list of events displayed, ensuring at least one event has a start date/time in the future and others are about to expire.",
          "Expected Result": "At least one event is still valid."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the HP.",
          "Expected Result": "User leaves the HP."
        },
        {
          "Step": 4,
          "Step Description": "Wait until all but one event have expired, but remain within the cache validity period (X minutes).",
          "Expected Result": "Only one event remains valid."
        },
        {
          "Step": 5,
          "Step Description": "Return to the HP.",
          "Expected Result": "Frontend does not make a new backend call; carousel displays only the remaining valid event(s)."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "App IOS, App Android, Desktop",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is logged in.\n2. Carousel displays multiple events, at least one with a start time in the future.\n3. Cache is valid (within X minutes).",
      "Execution Mode": "Manual",
      "Functionality": "Event Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; Event data with staggered start times.",
      "Expected Result": "If at least one event is still valid, the frontend does not request new events from the backend and displays only the valid event(s).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover cache expiration or all events expired scenarios.",
      "_polarion": "Eventi da visualizzare nelle card"
    },
    {
      "Title": "Expired Events Are Not Displayed After Cache Expiry and New Backend Call",
      "ID": "TC-060",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in and navigate to the Home Page (HP).",
          "Expected Result": "User is on the HP and carousel displays event cards."
        },
        {
          "Step": 2,
          "Step Description": "Navigate away from the HP.",
          "Expected Result": "User leaves the HP."
        },
        {
          "Step": 3,
          "Step Description": "Wait until the cache expires (after X minutes).",
          "Expected Result": "Cache is now invalid."
        },
        {
          "Step": 4,
          "Step Description": "Return to the HP.",
          "Expected Result": "Frontend makes a new backend call and displays only non-expired events in the carousel."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, Desktop",
      "Channel": "App IOS, App Android, Desktop",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is logged in.\n2. Carousel displays events with start times in the near future.\n3. Cache is valid at first, then expires during the test.",
      "Execution Mode": "Manual",
      "Functionality": "Event Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials; Event data with start times in the near future.",
      "Expected Result": "After cache expiry and backend refresh, only non-expired events are displayed in the carousel.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on cache expiration and backend refresh.",
      "_polarion": "Eventi da visualizzare nelle card"
    },
    {
      "Title": "Verify Skeleton Home Page Updates with Carousel Presence",
      "ID": "TC-061",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Home Page FR when the carousel is configured as visible.",
          "Expected Result": "The skeleton layout on the Home Page FR displays the carousel placeholder in the expected position."
        },
        {
          "Step": 2,
          "Step Description": "Observe the overall skeleton structure and placement of the carousel element.",
          "Expected Result": "The carousel element is present and the skeleton layout is updated accordingly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User is authenticated (if required) and has access to the Home Page FR.\n2. The carousel feature is enabled in the configuration.",
      "Execution Mode": "Manual",
      "Functionality": "Skeleton Home Page Layout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The skeleton Home Page FR displays the carousel element when it is configured as visible, and the layout is updated accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Skeleton Home Page"
    },
    {
      "Title": "Verify Skeleton Home Page Updates When Carousel is Hidden",
      "ID": "TC-062",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Home Page FR when the carousel is configured as hidden (e.g., during summer/off-season).",
          "Expected Result": "The skeleton layout on the Home Page FR does not display the carousel placeholder."
        },
        {
          "Step": 2,
          "Step Description": "Observe the overall skeleton structure and confirm absence of the carousel element.",
          "Expected Result": "The carousel element is not present and the skeleton layout is updated accordingly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User is authenticated (if required) and has access to the Home Page FR.\n2. The carousel feature is disabled in the configuration.",
      "Execution Mode": "Manual",
      "Functionality": "Skeleton Home Page Layout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The skeleton Home Page FR does not display the carousel element when it is configured as hidden, and the layout is updated accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Skeleton Home Page"
    },
    {
      "Title": "Verify Hot Configuration Change for Carousel Visibility Without Release",
      "ID": "TC-063",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the configuration panel for the Home Page FR skeleton.",
          "Expected Result": "Configuration panel is accessible and displays the carousel visibility option."
        },
        {
          "Step": 2,
          "Step Description": "Change the carousel visibility setting from 'hidden' to 'visible' (or vice versa) and save the configuration.",
          "Expected Result": "Configuration is saved successfully without requiring a system release or deployment."
        },
        {
          "Step": 3,
          "Step Description": "Refresh the Home Page FR.",
          "Expected Result": "The skeleton layout updates immediately to reflect the new carousel visibility setting."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has admin/configuration privileges.\n2. Home Page FR is accessible.\n3. Carousel feature is present in the configuration panel.",
      "Execution Mode": "Manual",
      "Functionality": "Skeleton Home Page Layout Configuration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin credentials for configuration access.",
      "Expected Result": "Carousel visibility can be toggled on the Home Page FR skeleton via configuration without requiring a release, and the change is reflected immediately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Skeleton Home Page"
    },
    {
      "Title": "Verify Skeleton Home Page Layout on Mobile Devices with Carousel Visible",
      "ID": "TC-064",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Home Page FR on a mobile device when the carousel is configured as visible.",
          "Expected Result": "The skeleton layout on the mobile Home Page FR displays the carousel placeholder in the expected position."
        },
        {
          "Step": 2,
          "Step Description": "Observe the overall skeleton structure and placement of the carousel element on the mobile device.",
          "Expected Result": "The carousel element is present and the skeleton layout is updated accordingly for mobile view."
        }
      ],
      "Test Group": "Mobile",
      "Channel": "Web",
      "Device": "Smartphone",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Android 12, Web",
      "Preconditions": "1. User is authenticated (if required) and has access to the Home Page FR on a mobile device.\n2. The carousel feature is enabled in the configuration.",
      "Execution Mode": "Manual",
      "Functionality": "Skeleton Home Page Layout",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The skeleton Home Page FR on mobile displays the carousel element when configured as visible, with correct layout adaptation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers mobile-specific layout adaptation.",
      "_polarion": "Skeleton Home Page"
    },
    {
      "Title": "Verify Error Handling When Carousel Configuration is Invalid",
      "ID": "TC-065",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the configuration panel for the Home Page FR skeleton.",
          "Expected Result": "Configuration panel is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Set the carousel visibility configuration to an invalid value (e.g., unsupported string or null).",
          "Expected Result": "System accepts the input and attempts to save."
        },
        {
          "Step": 3,
          "Step Description": "Refresh the Home Page FR.",
          "Expected Result": "The skeleton layout handles the invalid configuration gracefully, either by defaulting to a safe state (e.g., carousel hidden) or displaying an appropriate error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has admin/configuration privileges.\n2. Home Page FR is accessible.\n3. Carousel feature is present in the configuration panel.",
      "Execution Mode": "Manual",
      "Functionality": "Skeleton Home Page Layout Configuration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Admin credentials; invalid configuration value (e.g., 'invalid_value').",
      "Expected Result": "The system handles invalid carousel configuration values gracefully without breaking the Home Page FR skeleton layout.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for configuration.",
      "_polarion": "Skeleton Home Page"
    },
    {
      "Title": "Verify presence and correct title of Bet Builder carousel in event detail (Italy, Morocco, Full Responsive)",
      "ID": "TC-066",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the online Full Responsive version of the platform from a supported browser.",
          "Expected Result": "The Full Responsive version loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the event detail page of a prematch event that supports Bet Builder functionality.",
          "Expected Result": "The event detail page is displayed with the Bet Builder tab visible."
        },
        {
          "Step": 3,
          "Step Description": "Select the Bet Builder tab within the event detail page.",
          "Expected Result": "The Bet Builder tab content is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the area above the SGP Experience section within the Bet Builder tab.",
          "Expected Result": "A carousel is displayed above the SGP Experience area."
        },
        {
          "Step": 5,
          "Step Description": "Check the title of the carousel.",
          "Expected Result": "The carousel title is 'Bet Builder in evidenza' (Italy) or 'Bet Builder en vedette' (Morocco), depending on the selected country."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive) - Windows/macOS/Linux",
      "Preconditions": "1. User is located in Italy or Morocco.\n2. User is accessing the Full Responsive online version (not retail).\n3. The selected event supports Bet Builder and has SGP Precompiled bets available.",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event with Bet Builder enabled and SGP Precompiled bets available; user location set to Italy or Morocco.",
      "Expected Result": "The carousel with the correct localized title is displayed above the SGP Experience area in the Bet Builder tab for eligible events.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello in Dettaglio Avvenimento (Tab Bet Builder)"
    },
    {
      "Title": "Verify SGP Precompiled bets are displayed in the Bet Builder carousel (Full Responsive, Italy/Morocco)",
      "ID": "TC-067",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the online Full Responsive version of the platform from a supported browser.",
          "Expected Result": "The Full Responsive version loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the event detail page of a prematch event with Bet Builder and SGP Precompiled bets available.",
          "Expected Result": "The event detail page is displayed with the Bet Builder tab visible."
        },
        {
          "Step": 3,
          "Step Description": "Select the Bet Builder tab within the event detail page.",
          "Expected Result": "The Bet Builder tab content is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Locate the carousel above the SGP Experience area.",
          "Expected Result": "The carousel is visible above the SGP Experience area."
        },
        {
          "Step": 5,
          "Step Description": "Check the content of the carousel for SGP Precompiled bets.",
          "Expected Result": "The carousel displays SGP Precompiled bets dedicated to the specific event, as provided by the backend SGP Generator."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive) - Windows/macOS/Linux",
      "Preconditions": "1. User is located in Italy or Morocco.\n2. User is accessing the Full Responsive online version (not retail).\n3. The selected event supports Bet Builder and has SGP Precompiled bets available from the backend SGP Generator.",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Content",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event with Bet Builder enabled and SGP Precompiled bets available from backend; user location set to Italy or Morocco.",
      "Expected Result": "The carousel displays SGP Precompiled bets for the specific event as provided by the backend SGP Generator.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello in Dettaglio Avvenimento (Tab Bet Builder)"
    },
    {
      "Title": "Verify carousel is not displayed in Bet Builder tab for events without SGP Precompiled bets",
      "ID": "TC-068",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the online Full Responsive version of the platform from a supported browser.",
          "Expected Result": "The Full Responsive version loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the event detail page of a prematch event that supports Bet Builder but does NOT have SGP Precompiled bets available from the backend.",
          "Expected Result": "The event detail page is displayed with the Bet Builder tab visible."
        },
        {
          "Step": 3,
          "Step Description": "Select the Bet Builder tab within the event detail page.",
          "Expected Result": "The Bet Builder tab content is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the area above the SGP Experience section within the Bet Builder tab.",
          "Expected Result": "No carousel is displayed above the SGP Experience area."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive) - Windows/macOS/Linux",
      "Preconditions": "1. User is located in Italy or Morocco.\n2. User is accessing the Full Responsive online version (not retail).\n3. The selected event supports Bet Builder but has no SGP Precompiled bets available from the backend.",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Conditional Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event with Bet Builder enabled but no SGP Precompiled bets available from backend; user location set to Italy or Morocco.",
      "Expected Result": "No carousel is displayed above the SGP Experience area in the Bet Builder tab for events without SGP Precompiled bets.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello in Dettaglio Avvenimento (Tab Bet Builder)"
    },
    {
      "Title": "Verify carousel is not displayed in retail versions (Prenotatore, Self)",
      "ID": "TC-069",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the retail version of the platform (Prenotatore or Self) from a supported device.",
          "Expected Result": "The retail version loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the event detail page of a prematch event that supports Bet Builder and has SGP Precompiled bets available.",
          "Expected Result": "The event detail page is displayed with the Bet Builder tab visible."
        },
        {
          "Step": 3,
          "Step Description": "Select the Bet Builder tab within the event detail page.",
          "Expected Result": "The Bet Builder tab content is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Observe the area above the SGP Experience section within the Bet Builder tab.",
          "Expected Result": "No carousel is displayed above the SGP Experience area."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Terminale",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Retail (Prenotatore, Self) - Terminale",
      "Preconditions": "1. User is accessing the retail version (Prenotatore or Self).\n2. The selected event supports Bet Builder and has SGP Precompiled bets available.",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Exclusion (Retail)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event with Bet Builder enabled and SGP Precompiled bets available; access via retail terminal.",
      "Expected Result": "No carousel is displayed above the SGP Experience area in the Bet Builder tab on retail versions.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello in Dettaglio Avvenimento (Tab Bet Builder)"
    },
    {
      "Title": "Verify carousel adapts correctly on different screen sizes (Full Responsive)",
      "ID": "TC-070",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the online Full Responsive version of the platform from a supported browser on a desktop device.",
          "Expected Result": "The Full Responsive version loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the event detail page of a prematch event with Bet Builder and SGP Precompiled bets available.",
          "Expected Result": "The event detail page is displayed with the Bet Builder tab visible."
        },
        {
          "Step": 3,
          "Step Description": "Select the Bet Builder tab within the event detail page.",
          "Expected Result": "The Bet Builder tab content is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Resize the browser window to simulate different screen sizes (desktop, tablet, mobile).",
          "Expected Result": "The carousel remains visible and adapts its layout appropriately for each screen size."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Web (Full Responsive) - Windows/macOS/Linux",
      "Preconditions": "1. User is located in Italy or Morocco.\n2. User is accessing the Full Responsive online version (not retail).\n3. The selected event supports Bet Builder and has SGP Precompiled bets available.",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Prematch event with Bet Builder enabled and SGP Precompiled bets available; user location set to Italy or Morocco.",
      "Expected Result": "The carousel is responsive and displays correctly on all supported screen sizes in the Full Responsive version.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello in Dettaglio Avvenimento (Tab Bet Builder)"
    },
    {
      "Title": "Display of Bet Builder Carousel when SGP Precompiled Bets are Enabled and Available",
      "ID": "TC-071",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the event detail page for an event belonging to a competition where SGP precompiled bets have been enabled in the SGP Generator section of Redax.",
          "Expected Result": "The event detail page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that the backend engine provides precompiled SGP bets for the selected event (i.e., there are SGP markets with odds available).",
          "Expected Result": "Precompiled SGP bets are received by the frontend for this event."
        },
        {
          "Step": 3,
          "Step Description": "Observe the area above the SGP Experience section on the event detail page.",
          "Expected Result": "The Bet Builder carousel is displayed above the SGP Experience area, showing the precompiled SGP bets for the event."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is logged in (if required by the platform).\n2. SGP precompiled bets are enabled for the event's competition in Redax (SGP Generator section).\n3. Backend engine is configured to provide precompiled SGP bets for the event (SGP markets with odds are available).",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with SGP precompiled bets enabled and available (e.g., Football Match A in Competition X).",
      "Expected Result": "The Bet Builder carousel is visible above the SGP Experience area only when SGP precompiled bets are enabled and available for the event.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Condizioni di visualizzazione"
    },
    {
      "Title": "Absence of Bet Builder Carousel when SGP Precompiled Bets are Disabled in Redax",
      "ID": "TC-072",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the event detail page for an event belonging to a competition where SGP precompiled bets have NOT been enabled in the SGP Generator section of Redax.",
          "Expected Result": "The event detail page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Observe the area above the SGP Experience section on the event detail page.",
          "Expected Result": "The Bet Builder carousel is NOT displayed above the SGP Experience area."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is logged in (if required by the platform).\n2. SGP precompiled bets are NOT enabled for the event's competition in Redax (SGP Generator section).",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with SGP precompiled bets disabled (e.g., Football Match B in Competition Y).",
      "Expected Result": "The Bet Builder carousel is not visible above the SGP Experience area when SGP precompiled bets are not enabled for the event's competition.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Condizioni di visualizzazione"
    },
    {
      "Title": "Absence of Bet Builder Carousel when Backend Does Not Provide Precompiled SGP Bets",
      "ID": "TC-073",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the event detail page for an event belonging to a competition where SGP precompiled bets have been enabled in Redax (SGP Generator section).",
          "Expected Result": "The event detail page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that the backend engine does NOT provide precompiled SGP bets for the selected event (e.g., due to lack of SGP markets with odds at this time).",
          "Expected Result": "No precompiled SGP bets are received by the frontend for this event."
        },
        {
          "Step": 3,
          "Step Description": "Observe the area above the SGP Experience section on the event detail page.",
          "Expected Result": "The Bet Builder carousel is NOT displayed above the SGP Experience area."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is logged in (if required by the platform).\n2. SGP precompiled bets are enabled for the event's competition in Redax (SGP Generator section).\n3. Backend engine is NOT providing precompiled SGP bets for the event (no SGP markets with odds available).",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event with SGP precompiled bets enabled but not available (e.g., Football Match C in Competition X, but no SGP markets currently quoted).",
      "Expected Result": "The Bet Builder carousel is not visible above the SGP Experience area when the backend does not provide precompiled SGP bets for the event.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Condizioni di visualizzazione"
    },
    {
      "Title": "Bet Builder Carousel Not Displayed on Non-Event Detail Pages",
      "ID": "TC-074",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to a page that is NOT an event detail page (e.g., homepage, competition overview, or results page).",
          "Expected Result": "The selected non-event detail page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Observe the area where the Bet Builder carousel would normally appear on an event detail page.",
          "Expected Result": "The Bet Builder carousel is NOT displayed on non-event detail pages."
        }
      ],
      "Test Group": "Mobile IOS, Mobile Android, App IOS, App Android, Desktop",
      "Channel": "Web, App",
      "Device": "Smartphone, Laptop, Tablet",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "iOS, Android, Web",
      "Preconditions": "1. User is logged in (if required by the platform).",
      "Execution Mode": "Manual",
      "Functionality": "Bet Builder Carousel Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Any non-event detail page (e.g., homepage, competition overview).",
      "Expected Result": "The Bet Builder carousel is not displayed on any page other than the event detail page.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Condizioni di visualizzazione"
    },
    {
      "Title": "Verify Pronostico Descriptions Displayed in Correct Language (Italy)",
      "ID": "TC-075",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Full Responsive Italia version of the application.",
          "Expected Result": "The application loads in Italian localization."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Carosello Dett Avv section and locate a precompiled card for a specific event.",
          "Expected Result": "A precompiled card is displayed with a list of pronostici."
        },
        {
          "Step": 3,
          "Step Description": "For each pronostico, verify that the description is displayed as two strings: String 1 (top, bold), String 2 (below, grey).",
          "Expected Result": "Each pronostico shows String 1 in bold at the top and String 2 in grey below."
        },
        {
          "Step": 4,
          "Step Description": "Check that both strings are displayed in Italian, as per business mapping.",
          "Expected Result": "Both strings for each pronostico are in Italian."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to the Full Responsive Italia version.\n2. At least one precompiled card is available for a specific event.",
      "Execution Mode": "Manual",
      "Functionality": "Pronostico Description Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled card data with mapped Italian pronostico descriptions.",
      "Expected Result": "All pronostici on the precompiled card display two strings in Italian, with correct formatting (bold and grey) as per specifications.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Struttura Card Precompilata"
    },
    {
      "Title": "Verify Pronostico Descriptions Displayed in Correct Language (Morocco)",
      "ID": "TC-076",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Full Responsive Marocco version of the application.",
          "Expected Result": "The application loads in French localization."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Carosello Dett Avv section and locate a precompiled card for a specific event.",
          "Expected Result": "A precompiled card is displayed with a list of pronostici."
        },
        {
          "Step": 3,
          "Step Description": "For each pronostico, verify that the description is displayed as two strings: String 1 (top, bold), String 2 (below, grey).",
          "Expected Result": "Each pronostico shows String 1 in bold at the top and String 2 in grey below."
        },
        {
          "Step": 4,
          "Step Description": "Check that both strings are displayed in French, as per business mapping.",
          "Expected Result": "Both strings for each pronostico are in French."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to the Full Responsive Marocco version.\n2. At least one precompiled card is available for a specific event.",
      "Execution Mode": "Manual",
      "Functionality": "Pronostico Description Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled card data with mapped French pronostico descriptions.",
      "Expected Result": "All pronostici on the precompiled card display two strings in French, with correct formatting (bold and grey) as per specifications.",
      "Country": "Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Struttura Card Precompilata"
    },
    {
      "Title": "Verify Pronostico Description Formatting (Bold and Grey)",
      "ID": "TC-077",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Full Responsive Italia or Marocco version of the application.",
          "Expected Result": "The application loads in the selected localization."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Carosello Dett Avv section and locate a precompiled card for a specific event.",
          "Expected Result": "A precompiled card is displayed with a list of pronostici."
        },
        {
          "Step": 3,
          "Step Description": "For each pronostico, verify that String 1 is displayed at the top in bold font.",
          "Expected Result": "String 1 is at the top and rendered in bold."
        },
        {
          "Step": 4,
          "Step Description": "Verify that String 2 is displayed below String 1 in a grey font.",
          "Expected Result": "String 2 is below String 1 and rendered in grey."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to the Full Responsive Italia or Marocco version.\n2. At least one precompiled card is available for a specific event.",
      "Execution Mode": "Manual",
      "Functionality": "Pronostico Description Formatting",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled card data with mapped pronostico descriptions.",
      "Expected Result": "All pronostici display String 1 in bold at the top and String 2 in grey below, as per design specifications.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Struttura Card Precompilata"
    },
    {
      "Title": "Verify Quota Button Displays Correct Total Odds Including Bonus",
      "ID": "TC-078",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Full Responsive Italia or Marocco version of the application.",
          "Expected Result": "The application loads in the selected localization."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Carosello Dett Avv section and locate a precompiled card for a specific event.",
          "Expected Result": "A precompiled card is displayed with a Quota button."
        },
        {
          "Step": 3,
          "Step Description": "Obtain the individual odds for each pronostico outcome and any applicable bonus.",
          "Expected Result": "Individual odds and bonus information are available."
        },
        {
          "Step": 4,
          "Step Description": "Calculate the expected total odds as the product of the individual odds, including the bonus if applicable.",
          "Expected Result": "Expected total odds value is determined."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the Quota button displays the calculated total odds value.",
          "Expected Result": "Quota button displays the correct total odds, including any bonus."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to the Full Responsive Italia or Marocco version.\n2. At least one precompiled card with multiple pronostici and a bonus is available.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button Calculation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled card data with individual odds and bonus values.",
      "Expected Result": "Quota button displays the correct total odds, calculated as the product of individual odds and including any applicable bonus.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Struttura Card Precompilata"
    },
    {
      "Title": "Verify Quota Button Interaction as per Norms (par 2.1.2.1)",
      "ID": "TC-079",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Full Responsive Italia or Marocco version of the application.",
          "Expected Result": "The application loads in the selected localization."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Carosello Dett Avv section and locate a precompiled card for a specific event.",
          "Expected Result": "A precompiled card is displayed with a Quota button."
        },
        {
          "Step": 3,
          "Step Description": "Click on the Quota button.",
          "Expected Result": "The system responds as specified in paragraph 2.1.2.1 (e.g., adds the bet to the betslip, shows confirmation, etc.)."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the interaction is consistent with the requirements in par 2.1.2.1.",
          "Expected Result": "Quota button interaction matches the specified behavior (refer to par 2.1.2.1 for details)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to the Full Responsive Italia or Marocco version.\n2. At least one precompiled card is available for a specific event.\n3. Reference to par 2.1.2.1 is available for validation.",
      "Execution Mode": "Manual",
      "Functionality": "Quota Button Interaction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled card data; reference to par 2.1.2.1 for expected interaction.",
      "Expected Result": "Quota button interaction behaves as specified in par 2.1.2.1 (e.g., adds bet to betslip, shows confirmation, etc.).",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Struttura Card Precompilata"
    },
    {
      "Title": "Verify Handling of Missing or Invalid Pronostico Data",
      "ID": "TC-080",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Full Responsive Italia or Marocco version of the application.",
          "Expected Result": "The application loads in the selected localization."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the Carosello Dett Avv section and locate a precompiled card with missing or invalid pronostico data (e.g., missing String 1 or String 2).",
          "Expected Result": "A precompiled card is displayed with incomplete pronostico data."
        },
        {
          "Step": 3,
          "Step Description": "Observe the display and behavior of the pronostico list.",
          "Expected Result": "The application handles missing or invalid data gracefully (e.g., displays a placeholder, hides the pronostico, or shows an error message as per design)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web",
      "Preconditions": "1. User has access to the Full Responsive Italia or Marocco version.\n2. At least one precompiled card with missing or invalid pronostico data is available.",
      "Execution Mode": "Manual",
      "Functionality": "Pronostico Data Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled card data with missing or invalid pronostico strings.",
      "Expected Result": "The application handles missing or invalid pronostico data gracefully, without breaking the UI or causing errors.",
      "Country": "Italy, Morocco",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Carosello Dett Avv – Struttura Card Precompilata"
    },
    {
      "Title": "Verify precompiled cards are cached and persist for X minutes after first event detail access",
      "ID": "TC-081",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the event listing page and select a specific event to view its detail page (T0).",
          "Expected Result": "The event detail page loads and displays the precompiled cards."
        },
        {
          "Step": 2,
          "Step Description": "Note the content and data of the precompiled cards displayed at T0.",
          "Expected Result": "Precompiled cards are visible and their content is recorded."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the event detail page to another section of the site (e.g., homepage or another event).",
          "Expected Result": "User is redirected to the selected section; event detail page is no longer visible."
        },
        {
          "Step": 4,
          "Step Description": "Return to the same event detail page within X minutes from T0.",
          "Expected Result": "Event detail page reloads."
        },
        {
          "Step": 5,
          "Step Description": "Observe the precompiled cards displayed upon return.",
          "Expected Result": "The precompiled cards are identical to those seen at T0 (no changes in content or data)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated (if required).\n2. Event with precompiled cards is available.\n3. Cache duration X is known and configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Event Detail Cache",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event ID, User credentials (if login required), Cache duration X (e.g., 10 minutes)",
      "Expected Result": "Upon returning to the event detail page within X minutes, the precompiled cards are exactly the same as initially displayed at T0.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Memorizzazione in cache delle precompilate su avvenimento"
    },
    {
      "Title": "Verify cache expiration: precompiled cards are refreshed after X minutes",
      "ID": "TC-082",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the event listing page and select a specific event to view its detail page (T0).",
          "Expected Result": "The event detail page loads and displays the precompiled cards."
        },
        {
          "Step": 2,
          "Step Description": "Note the content and data of the precompiled cards displayed at T0.",
          "Expected Result": "Precompiled cards are visible and their content is recorded."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the event detail page to another section of the site.",
          "Expected Result": "User is redirected to the selected section."
        },
        {
          "Step": 4,
          "Step Description": "Wait for more than X minutes (e.g., X+1 minutes) after T0.",
          "Expected Result": "Elapsed time exceeds the cache duration."
        },
        {
          "Step": 5,
          "Step Description": "Return to the same event detail page after X minutes have passed.",
          "Expected Result": "Event detail page reloads."
        },
        {
          "Step": 6,
          "Step Description": "Observe the precompiled cards displayed upon return.",
          "Expected Result": "The precompiled cards are refreshed and may differ from those seen at T0 (if data has changed)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated (if required).\n2. Event with precompiled cards is available.\n3. Cache duration X is known and configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Event Detail Cache",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event ID, User credentials (if login required), Cache duration X (e.g., 10 minutes)",
      "Expected Result": "After X minutes have passed, the precompiled cards are refreshed and may reflect updated data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Memorizzazione in cache delle precompilate su avvenimento"
    },
    {
      "Title": "Verify cache isolation between different events: precompiled cards are not shared across events",
      "ID": "TC-083",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the event listing page and select Event A to view its detail page (T0A).",
          "Expected Result": "Event A detail page loads and displays its precompiled cards."
        },
        {
          "Step": 2,
          "Step Description": "Note the content of Event A's precompiled cards.",
          "Expected Result": "Event A's precompiled cards are visible and content is recorded."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to Event B's detail page (T0B).",
          "Expected Result": "Event B detail page loads and displays its precompiled cards."
        },
        {
          "Step": 4,
          "Step Description": "Note the content of Event B's precompiled cards.",
          "Expected Result": "Event B's precompiled cards are visible and content is recorded."
        },
        {
          "Step": 5,
          "Step Description": "Navigate away from Event B and return to Event A's detail page within X minutes from T0A.",
          "Expected Result": "Event A detail page reloads."
        },
        {
          "Step": 6,
          "Step Description": "Observe the precompiled cards for Event A.",
          "Expected Result": "Event A's precompiled cards are the same as initially displayed at T0A and are not affected by Event B's cards."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated (if required).\n2. At least two events with precompiled cards are available.\n3. Cache duration X is known and configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Event Detail Cache",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Event A ID, Event B ID, User credentials (if login required), Cache duration X (e.g., 10 minutes)",
      "Expected Result": "Precompiled cards are cached per event and not shared between different events.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "Memorizzazione in cache delle precompilate su avvenimento"
    },
    {
      "Title": "Verify cache is user-specific: precompiled cards are not shared across different users",
      "ID": "TC-084",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "User 1 logs in and accesses the event detail page for a specific event (T0).",
          "Expected Result": "Event detail page loads and displays precompiled cards for User 1."
        },
        {
          "Step": 2,
          "Step Description": "User 1 notes the content of the precompiled cards.",
          "Expected Result": "User 1's precompiled cards are visible and content is recorded."
        },
        {
          "Step": 3,
          "Step Description": "User 2 logs in (on a different browser or incognito window) and accesses the same event detail page.",
          "Expected Result": "Event detail page loads and displays precompiled cards for User 2."
        },
        {
          "Step": 4,
          "Step Description": "User 2 notes the content of the precompiled cards.",
          "Expected Result": "User 2's precompiled cards are visible and content is recorded."
        },
        {
          "Step": 5,
          "Step Description": "Compare the precompiled cards displayed to User 1 and User 2.",
          "Expected Result": "Precompiled cards are not shared between users; each user sees their own cards (if cards are user-specific)."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. Two valid user accounts are available.\n2. Event with precompiled cards is available.\n3. Cache duration X is known and configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Event Detail Cache",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User 1 credentials, User 2 credentials, Event ID, Cache duration X (e.g., 10 minutes)",
      "Expected Result": "Precompiled cards are cached per user and not shared across different users.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Assumes precompiled cards are user-specific; if not, this test may be skipped.",
      "_polarion": "Memorizzazione in cache delle precompilate su avvenimento"
    },
    {
      "Title": "Verify cache is cleared when browser cache is cleared",
      "ID": "TC-085",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the event detail page for a specific event (T0).",
          "Expected Result": "Event detail page loads and displays precompiled cards."
        },
        {
          "Step": 2,
          "Step Description": "Note the content of the precompiled cards.",
          "Expected Result": "Precompiled cards are visible and content is recorded."
        },
        {
          "Step": 3,
          "Step Description": "Navigate away from the event detail page.",
          "Expected Result": "User is redirected to another section."
        },
        {
          "Step": 4,
          "Step Description": "Clear the browser cache (all site data).",
          "Expected Result": "Browser cache is cleared."
        },
        {
          "Step": 5,
          "Step Description": "Return to the same event detail page within X minutes from T0.",
          "Expected Result": "Event detail page reloads."
        },
        {
          "Step": 6,
          "Step Description": "Observe the precompiled cards displayed upon return.",
          "Expected Result": "Precompiled cards are refreshed (not loaded from previous cache); may differ from those seen at T0 if data has changed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Windows 10, Web Application",
      "Preconditions": "1. User is authenticated (if required).\n2. Event with precompiled cards is available.\n3. Cache duration X is known and configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Event Detail Cache",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "Event ID, User credentials (if login required), Cache duration X (e.g., 10 minutes)",
      "Expected Result": "After clearing browser cache, precompiled cards are not loaded from previous cache and may be refreshed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers browser cache interaction; may not apply if caching is server-side only.",
      "_polarion": "Memorizzazione in cache delle precompilate su avvenimento"
    },
    {
      "Title": "Verify DWH Tracking for Plays from Precompiled SGP Cards",
      "ID": "TC-086",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system and ensure the DWH tracking module is active.",
          "Expected Result": "DWH tracking module is available and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a play using a precompiled SGP Card as per the DWH_SGP Generator specification.",
          "Expected Result": "The play is successfully processed by the system."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the play event is logged in the DWH according to the format and fields specified in the DWH_SGP Generator document.",
          "Expected Result": "A corresponding entry for the play is present in the DWH with all required fields populated as per specification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Windows, DWH Application",
      "Preconditions": "1. DWH tracking module deployed and configured.\n2. Precompiled SGP Card available for testing.\n3. Access to DWH database for verification.\n4. Tester has necessary permissions to execute plays and query DWH.",
      "Execution Mode": "Manual",
      "Functionality": "DWH Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled SGP Card data as per DWH_SGP Generator (SN: PRJ0011767) specification.",
      "Expected Result": "Plays from precompiled SGP Cards are correctly tracked and stored in the DWH as per the DWH_SGP Generator specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "DWH"
    },
    {
      "Title": "Verify Error Handling for Invalid Precompiled SGP Card in DWH Tracking",
      "ID": "TC-087",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system and ensure the DWH tracking module is active.",
          "Expected Result": "DWH tracking module is available and operational."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to initiate a play using an invalid or corrupted precompiled SGP Card.",
          "Expected Result": "The system rejects the play and logs an error event."
        },
        {
          "Step": 3,
          "Step Description": "Verify that no invalid play entry is created in the DWH, but an error log is present as per DWH_SGP Generator specification.",
          "Expected Result": "No play entry is created in the DWH for the invalid card; an error log is present as specified."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, DWH Application",
      "Preconditions": "1. DWH tracking module deployed and configured.\n2. Invalid or corrupted precompiled SGP Card available for testing.\n3. Access to DWH database and error logs for verification.\n4. Tester has necessary permissions to execute plays and query DWH.",
      "Execution Mode": "Manual",
      "Functionality": "DWH Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid or corrupted precompiled SGP Card data as per DWH_SGP Generator (SN: PRJ0011767) specification.",
      "Expected Result": "Invalid plays from precompiled SGP Cards are not tracked in the DWH, and appropriate error logs are generated as per specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "DWH"
    },
    {
      "Title": "Verify DWH Tracking for Boundary Values in Precompiled SGP Card Plays",
      "ID": "TC-088",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system and ensure the DWH tracking module is active.",
          "Expected Result": "DWH tracking module is available and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate plays using precompiled SGP Cards with boundary values (e.g., minimum and maximum allowed bet amounts, edge-case card data) as per DWH_SGP Generator specification.",
          "Expected Result": "The plays are successfully processed by the system."
        },
        {
          "Step": 3,
          "Step Description": "Verify that each play event is logged in the DWH with correct boundary values as per the DWH_SGP Generator document.",
          "Expected Result": "Corresponding entries for each play are present in the DWH with boundary values correctly recorded as per specification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Windows, DWH Application",
      "Preconditions": "1. DWH tracking module deployed and configured.\n2. Precompiled SGP Cards with boundary values available for testing.\n3. Access to DWH database for verification.\n4. Tester has necessary permissions to execute plays and query DWH.",
      "Execution Mode": "Manual",
      "Functionality": "DWH Tracking",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Precompiled SGP Card data with boundary values as per DWH_SGP Generator (SN: PRJ0011767) specification.",
      "Expected Result": "Plays from precompiled SGP Cards with boundary values are correctly tracked and stored in the DWH as per the DWH_SGP Generator specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "DWH"
    }
  ],
  "total_count": 88
}