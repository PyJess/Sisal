{
  "test_cases": [
    {
      "Title": "Verify Project Documentation Metadata Integrity",
      "ID": "TC-001",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the project documentation for 'ZENIT -- GESTIONE FIDO CENTRALIZZATO -- FASE 1'.",
          "Expected Result": "The documentation is accessible and displays the project title and phase."
        },
        {
          "Step": 2,
          "Step Description": "Locate the section containing the emission cycle, acronyms, dates, and signatures.",
          "Expected Result": "The section is present and contains fields for emission cycle, acronyms, date, and signature."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the documentation lists the author, verifier(s), and approver with corresponding dates.",
          "Expected Result": "The documentation displays 'Redatto da', 'Verificato da', and 'Approvato da' with correct names and dates."
        },
        {
          "Step": 4,
          "Step Description": "Check the revision history table for completeness and chronological order.",
          "Expected Result": "The revision history table lists all revisions with numbers, descriptions, and dates in chronological order."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Project Documentation",
      "Preconditions": "The latest version of the project documentation is available for review.",
      "Execution Mode": "Manual",
      "Functionality": "Documentation Metadata Management",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Project documentation file (PDF, DOCX, or similar)",
      "Expected Result": "The project documentation contains all required metadata fields, revision history, and is up-to-date and accurate.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only documentation metadata, not functional requirements.",
      "_polarion": "RU-Doc-Metadata"
    },
    {
      "Title": "Verify Revision History Update on Documentation Change",
      "ID": "TC-002",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the project documentation and review the latest revision entry in the revision history table.",
          "Expected Result": "The latest revision entry is present with a unique revision number, description, and date."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a documentation update (e.g., add a new requirement or modify an existing one).",
          "Expected Result": "A change is made to the documentation."
        },
        {
          "Step": 3,
          "Step Description": "Save the updated documentation and add a new entry to the revision history table with the new revision number, description of the change, and current date.",
          "Expected Result": "A new revision entry is added to the revision history table."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the revision history table now includes the new entry in the correct chronological order.",
          "Expected Result": "The new revision entry appears at the top or in the correct order, and all previous entries remain unchanged."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Project Documentation",
      "Preconditions": "User has edit access to the documentation and knowledge of the revision process.",
      "Execution Mode": "Manual",
      "Functionality": "Revision History Management",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Editable project documentation file",
      "Expected Result": "Each documentation update is reflected in the revision history table with accurate details and correct ordering.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Focuses on revision history update, not on content validation.",
      "_polarion": "RU-Doc-Revision"
    },
    {
      "Title": "Verify User Signature and Approval Workflow in Documentation",
      "ID": "TC-003",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the project documentation and navigate to the signature section.",
          "Expected Result": "The signature section is present and clearly labeled."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the documentation lists the names and roles of the author, verifier(s), and approver.",
          "Expected Result": "Names and roles for 'Redatto da', 'Verificato da', and 'Approvato da' are present."
        },
        {
          "Step": 3,
          "Step Description": "Check that each listed person has a corresponding date next to their name.",
          "Expected Result": "Each name is associated with a date indicating when the action was performed."
        },
        {
          "Step": 4,
          "Step Description": "Ensure that the approval workflow follows the correct sequence: authoring, verification, then approval.",
          "Expected Result": "The workflow sequence is correct and no steps are missing or out of order."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Project Documentation",
      "Preconditions": "The documentation has completed the authoring, verification, and approval process.",
      "Execution Mode": "Manual",
      "Functionality": "Signature and Approval Workflow",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Project documentation with completed signature section",
      "Expected Result": "The documentation accurately reflects the signature and approval workflow with correct names, roles, and dates.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Does not cover digital signature validation, only presence and correctness of data.",
      "_polarion": "RU-Doc-Signature"
    },
    {
      "Title": "Verify Data Collection from SAP System",
      "ID": "TC-004",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system with valid credentials and appropriate permissions.",
          "Expected Result": "User is successfully logged in and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate data collection from SAP by selecting the SAP data source and starting the process.",
          "Expected Result": "System starts the data collection process from SAP."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the process to complete and check the status message.",
          "Expected Result": "System displays a success message indicating data collection from SAP is complete."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the collected SAP data is visible and correctly populated in the system.",
          "Expected Result": "SAP data is present, accurate, and matches the expected format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Collection Module",
      "Preconditions": "User has valid credentials and access rights. SAP system is available and contains test data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test SAP credentials and sample SAP data records.",
      "Expected Result": "System successfully collects and displays SAP data without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Dashboard Access for Full Access Profile",
      "ID": "TC-005",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system using a user account with 'Full Access' profile.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Verify that all dashboard features (data visualization, reports, management tools) are accessible.",
          "Expected Result": "All dashboard features are visible and accessible to the user."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access restricted or admin-only features.",
          "Expected Result": "User can access all features without restriction."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Dashboard",
      "Preconditions": "User account with 'Full Access' profile exists.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Full Access user credentials.",
      "Expected Result": "User with 'Full Access' profile can access all dashboard features.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Data Archiving Functionality",
      "ID": "TC-006",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data archiving section.",
          "Expected Result": "Data archiving section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the data archiving process for a specific data set.",
          "Expected Result": "System starts the data archiving process."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the process to complete and observe the status message.",
          "Expected Result": "System displays a success message indicating data has been archived."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the archived data is no longer available in the active data set but is retrievable from the archive.",
          "Expected Result": "Archived data is not present in the active set but can be accessed from the archive."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Archiving",
      "Preconditions": "User has access to data archiving functionality. Data set available for archiving.",
      "Execution Mode": "Manual",
      "Functionality": "Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data set for archiving.",
      "Expected Result": "Data is successfully archived and retrievable from the archive section.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Login and Logout Functionality",
      "ID": "TC-007",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password and click 'Login'.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 3,
          "Step Description": "Click on the 'Logout' button.",
          "Expected Result": "User is logged out and redirected to the login page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Authentication Module",
      "Preconditions": "User account exists with valid credentials.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "User can successfully login and logout of the application.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify Data Collection Failure Handling for Unavailable Data Source",
      "ID": "TC-008",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data collection module.",
          "Expected Result": "Data collection module is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to initiate data collection from a data source that is currently unavailable (e.g., SAP is offline).",
          "Expected Result": "System attempts to connect to the data source and fails."
        },
        {
          "Step": 4,
          "Step Description": "Observe the error message displayed to the user.",
          "Expected Result": "System displays a clear and informative error message indicating the data source is unavailable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Collection Module",
      "Preconditions": "Data source (e.g., SAP) is intentionally made unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Error Handling in Data Collection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; data source offline.",
      "Expected Result": "System gracefully handles data source unavailability and informs the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Dashboard Access for Consultatore Profile",
      "ID": "TC-009",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system using a user account with 'Consultatore' profile.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Verify that only consultation features are accessible and management features are restricted.",
          "Expected Result": "Consultation features are accessible; management features are not visible or accessible."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Dashboard",
      "Preconditions": "User account with 'Consultatore' profile exists.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials.",
      "Expected Result": "User with 'Consultatore' profile can access only consultation features.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Verify Data Archiving for POS Out of Network",
      "ID": "TC-010",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system with valid credentials.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data archiving section.",
          "Expected Result": "POS data archiving section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the archiving process for POS devices marked as 'out of network'.",
          "Expected Result": "System starts the archiving process for selected POS devices."
        },
        {
          "Step": 4,
          "Step Description": "Wait for the process to complete and observe the status message.",
          "Expected Result": "System displays a success message indicating POS data has been archived."
        },
        {
          "Step": 5,
          "Step Description": "Verify that archived POS data is retrievable from the archive section.",
          "Expected Result": "Archived POS data is accessible from the archive section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "POS Data Archiving",
      "Preconditions": "User has access to POS data archiving. POS devices marked as 'out of network' exist.",
      "Execution Mode": "Manual",
      "Functionality": "POS Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS devices marked as 'out of network'.",
      "Expected Result": "POS data for out-of-network devices is archived and retrievable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Verify Automated Data Collection from Multiple Systems",
      "ID": "TC-011",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the automated data collection process from the dashboard.",
          "Expected Result": "System starts collecting data from all integrated external systems."
        },
        {
          "Step": 3,
          "Step Description": "Wait for the data aggregation process to complete.",
          "Expected Result": "Dashboard displays a notification or status indicating data collection is complete."
        },
        {
          "Step": 4,
          "Step Description": "Review the aggregated data for a specific customer/pos.",
          "Expected Result": "All required data fields for the customer/pos, as specified in the annex, are present and populated."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "User has valid credentials and access rights. External systems are reachable and contain test data. Dashboard is configured to connect to all required systems.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test customer/pos data present in all integrated systems.",
      "Expected Result": "Dashboard successfully collects and aggregates all required data fields for each customer/pos from all integrated systems.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Manual and Automated POS Management Actions from Dashboard",
      "ID": "TC-012",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Select a POS terminal from the list.",
          "Expected Result": "POS terminal details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Perform a credit limit increase operation for the selected POS.",
          "Expected Result": "System processes the request and updates the credit limit."
        },
        {
          "Step": 4,
          "Step Description": "Verify that a CRM ticket is automatically created for the credit limit update.",
          "Expected Result": "A new CRM ticket is generated and linked to the POS update action."
        },
        {
          "Step": 5,
          "Step Description": "Perform a terminal suspension operation from the dashboard.",
          "Expected Result": "System processes the suspension and updates the POS status."
        },
        {
          "Step": 6,
          "Step Description": "Verify that a CRM ticket is automatically created for the suspension action.",
          "Expected Result": "A new CRM ticket is generated and linked to the suspension action."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "User has valid credentials and access rights. POS terminals are available in the system. CRM integration is active.",
      "Execution Mode": "Manual",
      "Functionality": "POS management and CRM ticket creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test POS terminals and CRM system with test accounts.",
      "Expected Result": "Dashboard allows authorized users to manage POS terminals (credit limit changes, suspension) and automatically creates corresponding CRM tickets for each action.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Verify Automated Actions Triggered by Parameter Detection",
      "ID": "TC-013",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Simulate or configure a parameter threshold breach for a POS (e.g., credit limit exceeded).",
          "Expected Result": "System detects the parameter breach."
        },
        {
          "Step": 3,
          "Step Description": "Observe the dashboard and system logs for automated actions triggered by the parameter detection.",
          "Expected Result": "Dashboard initiates the predefined automated management action (e.g., automatic suspension or credit adjustment) and logs the event."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "User has valid credentials. Automated management rules are configured in the dashboard. Test POS terminals are available.",
      "Execution Mode": "Manual",
      "Functionality": "Automated management actions based on parameter detection",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test POS terminals with configurable parameters.",
      "Expected Result": "Dashboard automatically triggers the correct management action when specified parameters are detected, and logs the event appropriately.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Verify Data Analysis and Alert/Proposal Generation in Predictive Phase",
      "ID": "TC-014",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Ensure that historical and current data for customers/POS are available in the system.",
          "Expected Result": "Dashboard displays up-to-date data for analysis."
        },
        {
          "Step": 3,
          "Step Description": "Simulate or input data that meets or exceeds predefined indices/parameters for alert/proposal generation.",
          "Expected Result": "System processes the data and identifies the threshold breach."
        },
        {
          "Step": 4,
          "Step Description": "Observe the dashboard for generated alerts or proposals.",
          "Expected Result": "Dashboard displays alerts or proposals to the user as per the defined rules."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "User has valid credentials. Predictive analysis rules and thresholds are configured. Sufficient data is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Predictive analysis and alert/proposal generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data sets with values near and above threshold indices/parameters.",
      "Expected Result": "Dashboard analyzes data and generates alerts or proposals when specified indices/parameters are reached.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Verify Dashboard Handles Missing or Incomplete Data Gracefully",
      "ID": "TC-015",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the dashboard as an authorized user.",
          "Expected Result": "Dashboard loads successfully and user is authenticated."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a scenario where one or more external systems fail to provide data for a customer/POS.",
          "Expected Result": "Dashboard attempts to collect data and detects missing/incomplete information."
        },
        {
          "Step": 3,
          "Step Description": "Observe the dashboard's handling of missing data (e.g., error messages, warnings, or placeholders).",
          "Expected Result": "Dashboard displays a clear warning or error message indicating which data is missing or incomplete, without crashing or displaying incorrect information."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Centralized Credit Management Dashboard",
      "Preconditions": "User has valid credentials. At least one external system is intentionally unavailable or returns incomplete data.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for missing/incomplete data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test customer/POS with partial data in external systems.",
      "Expected Result": "Dashboard clearly indicates missing or incomplete data for customers/POS and continues to function without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Verify extraction of historical daily and weekly credit usage for a POS",
      "ID": "TC-016",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS management or search section.",
          "Expected Result": "POS management/search interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a specific POS using its unique identifier (e.g., ID RICE).",
          "Expected Result": "POS details are displayed, including available actions."
        },
        {
          "Step": 4,
          "Step Description": "Select the option to view historical credit usage.",
          "Expected Result": "System displays daily and weekly credit usage data for the selected POS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the data includes both current and historical records for each category (e.g., betting, VR).",
          "Expected Result": "Historical and current credit usage data is visible and accurate for each category."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT POS Management",
      "Preconditions": "User has valid credentials and access rights. POS with historical data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Historical credit usage tracking and display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID with historical credit usage data (e.g., ID RICE: 123456)",
      "Expected Result": "System displays accurate daily and weekly historical credit usage for the selected POS and all relevant categories.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-001"
    },
    {
      "Title": "Verify extraction of Excel report for POS usage recap",
      "ID": "TC-017",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS management or search section.",
          "Expected Result": "POS management/search interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a specific POS using its unique identifier.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Select the option to generate a recap report for the POS.",
          "Expected Result": "System prompts for report parameters (e.g., time period, categories)."
        },
        {
          "Step": 5,
          "Step Description": "Enter a specific week or custom period and select relevant categories (e.g., betting, VR).",
          "Expected Result": "Parameters are accepted by the system."
        },
        {
          "Step": 6,
          "Step Description": "Click on the 'Export to Excel' button.",
          "Expected Result": "System generates and downloads an Excel file named 'ZENIT - Elenco Dati' containing the requested recap data."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT POS Management",
      "Preconditions": "User has valid credentials and access rights. POS with usage data exists.",
      "Execution Mode": "Manual",
      "Functionality": "Excel report extraction for POS usage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID, report period (e.g., week 12/2024), categories (betting, VR)",
      "Expected Result": "Excel report 'ZENIT - Elenco Dati' is generated with accurate recap data for the selected POS and period.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-002"
    },
    {
      "Title": "Verify retrieval of all POS data for a single owner (by VAT or tax code)",
      "ID": "TC-018",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS search section.",
          "Expected Result": "POS search interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Search for a POS using its ID RICE.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system also retrieves data for all other POS with the same VAT number or tax code as the selected POS.",
          "Expected Result": "Data for all POS belonging to the same owner (same VAT/tax code) is displayed."
        },
        {
          "Step": 5,
          "Step Description": "If applicable, verify that data for linked subjects is also retrieved.",
          "Expected Result": "Data for linked subjects is displayed if available."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT POS Management",
      "Preconditions": "User has valid credentials. Multiple POS exist with the same VAT/tax code.",
      "Execution Mode": "Manual",
      "Functionality": "Retrieval of all POS data for a single owner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID (e.g., 123456), VAT/tax code (e.g., 98765432101)",
      "Expected Result": "System displays all POS data for the owner and any linked subjects.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-003"
    },
    {
      "Title": "Verify real-time update of POS usage data",
      "ID": "TC-019",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS management section and select a POS.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Perform a transaction that affects the POS credit usage (e.g., place a bet or VR transaction).",
          "Expected Result": "Transaction is processed successfully."
        },
        {
          "Step": 4,
          "Step Description": "Immediately refresh or re-query the POS usage data.",
          "Expected Result": "Updated usage data is displayed, reflecting the recent transaction in near real-time."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT POS Management",
      "Preconditions": "User has valid credentials. POS is active and can process transactions.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time update of POS usage data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID, transaction details (e.g., bet amount, VR amount)",
      "Expected Result": "POS usage data is updated in near real-time after a transaction.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-004"
    },
    {
      "Title": "Verify logging of access and data modification activities (SOX compliance)",
      "ID": "TC-020",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS management section and select a POS.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Modify a data field for the POS (e.g., change credit limit).",
          "Expected Result": "System processes the modification and displays a confirmation alert."
        },
        {
          "Step": 4,
          "Step Description": "Access the system logs as an auditor or admin user.",
          "Expected Result": "System logs are accessible."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the log contains an entry for the data modification, including user, timestamp, and details of the change.",
          "Expected Result": "Log entry is present and contains all required information for SOX compliance."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT POS Management",
      "Preconditions": "User has valid credentials. POS exists. Auditor/admin access to logs is available.",
      "Execution Mode": "Manual",
      "Functionality": "Access and modification logging (SOX)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID, user credentials, modification details",
      "Expected Result": "All access and data modification activities are logged with required SOX-compliant details.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-005"
    },
    {
      "Title": "Verify alert on data modification confirmation",
      "ID": "TC-021",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS management section and select a POS.",
          "Expected Result": "POS details are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Modify a data field for the POS (e.g., change credit limit).",
          "Expected Result": "System processes the modification."
        },
        {
          "Step": 4,
          "Step Description": "Observe the system response after data modification.",
          "Expected Result": "System displays an alert confirming the successful data modification."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT POS Management",
      "Preconditions": "User has valid credentials. POS exists.",
      "Execution Mode": "Manual",
      "Functionality": "Alert on data modification confirmation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID, modification details",
      "Expected Result": "System displays a confirmation alert after data modification.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-006"
    },
    {
      "Title": "Verify workflow for opening/suspending collection for all products",
      "ID": "TC-022",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the client management section.",
          "Expected Result": "Client management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a client and initiate the process to open or suspend collection for all products.",
          "Expected Result": "System displays options for opening/suspending collection for each product."
        },
        {
          "Step": 4,
          "Step Description": "Select the desired action (open or suspend) for all products and confirm.",
          "Expected Result": "System processes the request and updates the collection status for all products."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the status is updated and, if applicable, notifications are sent to relevant teams or systems.",
          "Expected Result": "Collection status is updated and notifications are sent as required."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Client Management",
      "Preconditions": "User has valid credentials. Client exists with multiple products.",
      "Execution Mode": "Manual",
      "Functionality": "Opening/suspending collection workflow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Client ID, product list",
      "Expected Result": "Collection status for all products is updated as requested and notifications are sent if required.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-007"
    },
    {
      "Title": "Verify workflow for credit limit extension/reduction",
      "ID": "TC-023",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the credit management section.",
          "Expected Result": "Credit management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a client or POS and initiate the process to extend or reduce the credit limit.",
          "Expected Result": "System displays options for credit limit modification."
        },
        {
          "Step": 4,
          "Step Description": "Enter the new credit limit and confirm the change.",
          "Expected Result": "System processes the request and updates the credit limit."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the new credit limit is reflected in the POS/client data and, if applicable, notifications are sent.",
          "Expected Result": "Credit limit is updated and notifications are sent as required."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Credit Management",
      "Preconditions": "User has valid credentials. Client/POS exists.",
      "Execution Mode": "Manual",
      "Functionality": "Credit limit extension/reduction workflow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Client/POS ID, new credit limit value",
      "Expected Result": "Credit limit is updated as requested and notifications are sent if required.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-008"
    },
    {
      "Title": "Verify initial credit assignment based on policy and Cerved scoring",
      "ID": "TC-024",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the client onboarding section.",
          "Expected Result": "Client onboarding interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the process to assign initial credit to a new client.",
          "Expected Result": "System prompts for required client information and Cerved scoring data."
        },
        {
          "Step": 4,
          "Step Description": "Enter client details and Cerved scoring information.",
          "Expected Result": "System processes the data and calculates the initial credit limit based on policy and scoring."
        },
        {
          "Step": 5,
          "Step Description": "Confirm the assignment and verify that the initial credit limit is set correctly.",
          "Expected Result": "Initial credit limit is assigned according to policy and scoring, and is visible in the client data."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Client Onboarding",
      "Preconditions": "User has valid credentials. New client data and Cerved scoring are available.",
      "Execution Mode": "Manual",
      "Functionality": "Initial credit assignment workflow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "New client details, Cerved scoring data",
      "Expected Result": "Initial credit limit is assigned based on policy and Cerved scoring.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-009"
    },
    {
      "Title": "Verify alert generation for anomalous POS activity (AI-driven)",
      "ID": "TC-025",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS monitoring section.",
          "Expected Result": "POS monitoring interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Simulate or identify a POS with a sudden increase in collection without historical precedent.",
          "Expected Result": "System processes the data and detects the anomaly."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the system generates an alert for the anomalous activity and notifies the Credit team.",
          "Expected Result": "Alert is generated and notification is sent to the Credit team."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "uat",
      "Reference System": "ZENIT POS Monitoring",
      "Preconditions": "User has valid credentials. AI anomaly detection is enabled. Test POS with simulated anomalous data exists.",
      "Execution Mode": "Manual",
      "Functionality": "AI-driven alert for anomalous POS activity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS ID, simulated anomalous collection data",
      "Expected Result": "System generates an alert for anomalous POS activity and notifies the Credit team.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-010"
    },
    {
      "Title": "Verify integration of POS data for all Italian companies (Sisal, Snai, etc.)",
      "ID": "TC-026",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT system as an authorized user.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the POS data integration section.",
          "Expected Result": "POS data integration interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select or search for POS data from different companies (e.g., Sisal Spa, Sisal Italia, Sisal Gaming, Snai).",
          "Expected Result": "System displays POS data from all selected companies."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the data is integrated and provides a complete view of each POS across all companies.",
          "Expected Result": "Integrated POS data is displayed, showing a unified view for each POS."
        }
      ],
      "Test Group": "backend",
      "Channel": "backend",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "uat",
      "Reference System": "ZENIT Data Integration",
      "Preconditions": "User has valid credentials. POS data from all companies is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Integration of POS data across companies",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS IDs from Sisal Spa, Sisal Italia, Sisal Gaming, Snai",
      "Expected Result": "System displays integrated POS data for all Italian companies, providing a complete view.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-ZENIT-011"
    },
    {
      "Title": "Fido Assignment at PoS Activation Based on Cerved Rating and Terminal Type",
      "ID": "TC-027",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate activation process for a new PoS with a specific terminal type (e.g., Galileo, Microlot, Leonardo, Best, Self, Selfy, Aio, Wave).",
          "Expected Result": "Activation process starts and terminal type is recorded."
        },
        {
          "Step": 2,
          "Step Description": "Obtain Cerved rating for the PoS (e.g., N/D, 20, 40, 60, 80, 100).",
          "Expected Result": "Cerved rating is available and associated with the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Refer to the Credit Policy table to determine the initial fido amount based on the Cerved rating and terminal type.",
          "Expected Result": "Correct initial fido amount is identified as per policy."
        },
        {
          "Step": 4,
          "Step Description": "Assign the calculated fido to the PoS during activation.",
          "Expected Result": "PoS is activated with the correct fido amount assigned."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management - Assignment",
      "Preconditions": "PoS is not yet activated. Cerved rating is available. Terminal type is known. Credit Policy table is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Assignment at Activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS data, Cerved ratings (N/D, 20, 40, 60, 80, 100), terminal types (Galileo, Microlot, Leonardo, Best, Self, Selfy, Aio, Wave).",
      "Expected Result": "PoS is activated with the correct fido assigned according to Cerved rating and terminal type as per Credit Policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-ASSIGN-001"
    },
    {
      "Title": "Fido Extension Request and Approval Workflow (SIMP and GEO)",
      "ID": "TC-028",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate fido exhaustion or near-exhaustion for a PoS (SIMP or GEO).",
          "Expected Result": "System detects fido is exhausted or near exhaustion."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a fido extension request from one of the allowed sources (FV, PoS, Gestione Crediti, or automatic alert for SIMP).",
          "Expected Result": "Extension request is received by Gestione Crediti."
        },
        {
          "Step": 3,
          "Step Description": "For SIMP: Check if extension parameters (red-list, +50%, +1k, KO) are applied. For GEO: Check if scoring, payments, and red-list are considered.",
          "Expected Result": "Extension amount is calculated according to rules."
        },
        {
          "Step": 4,
          "Step Description": "Route approval to the correct authority based on extension amount (Credit Coordinator Albania, CM, Director, CFO).",
          "Expected Result": "Approval is routed and processed as per policy."
        },
        {
          "Step": 5,
          "Step Description": "If approved, notify the relevant team (SIMP: Customer Care B2B; GEO: Back Office Albania) and update the fido.",
          "Expected Result": "Fido is extended and teams are notified."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management - Extension",
      "Preconditions": "PoS is active with fido near exhaustion. Extension rules and approval hierarchy are defined. Red-list and scoring data are available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Extension Workflow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with low fido, red-list status, scoring data, extension request data.",
      "Expected Result": "Fido extension is processed according to business rules, with correct approval and notification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-EXTEND-002"
    },
    {
      "Title": "Fido Reduction Due to Risk or Insolvency (SIMP and GEO)",
      "ID": "TC-029",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with risk factors (e.g., client at risk, insolvency, decreasing scoring, guarantee reset).",
          "Expected Result": "PoS is flagged for fido reduction."
        },
        {
          "Step": 2,
          "Step Description": "Gestione Crediti decides to reduce the fido and communicates the reduction to the relevant team (SIMP: Customer Care B2B; GEO: Back Office Albania).",
          "Expected Result": "Reduction request is received by the appropriate team."
        },
        {
          "Step": 3,
          "Step Description": "For SIMP: Set fido to 100€ symbolic (not zero). For GEO: Set fido to zero if required.",
          "Expected Result": "Fido is reduced as per system rules (100€ for SIMP, zero for GEO)."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the PoS cannot operate beyond the new fido limit.",
          "Expected Result": "PoS operations are restricted according to the reduced fido."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management - Reduction",
      "Preconditions": "PoS is active. Risk factors are present. Teams are available to process reduction.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Reduction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS flagged for risk, insolvency, or scoring drop.",
      "Expected Result": "Fido is reduced according to policy and PoS operations are limited accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-REDUCE-003"
    },
    {
      "Title": "Fido Zeroing for Legal/Collection Cases (SIMP and GEO)",
      "ID": "TC-030",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS in legal/collection/diffida status.",
          "Expected Result": "PoS is flagged for fido zeroing."
        },
        {
          "Step": 2,
          "Step Description": "Gestione Crediti initiates fido zeroing and notifies the relevant team (SIMP: Customer Care B2B; GEO: Back Office Albania).",
          "Expected Result": "Zeroing request is received by the appropriate team."
        },
        {
          "Step": 3,
          "Step Description": "For SIMP: Set fido to 100€ symbolic. For GEO: Set fido to zero.",
          "Expected Result": "Fido is set to 100€ (SIMP) or zero (GEO) as per policy."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the PoS cannot operate beyond the new fido limit.",
          "Expected Result": "PoS operations are restricted according to the zeroed fido."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management - Zeroing",
      "Preconditions": "PoS is in legal/collection/diffida status. Teams are available to process zeroing.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Zeroing",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS in legal/collection/diffida status.",
      "Expected Result": "Fido is zeroed (or set to 100€ for SIMP) and PoS operations are limited accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-ZERO-004"
    },
    {
      "Title": "Fido Restoration After Collection/Legal Resolution (SIMP and GEO)",
      "ID": "TC-031",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS previously zeroed due to collection/legal status, now with resolved status (e.g., recovered insolvency, positive closure).",
          "Expected Result": "PoS is eligible for fido restoration."
        },
        {
          "Step": 2,
          "Step Description": "Gestione Crediti reviews the PoS scoring and/or receives feedback from CM.",
          "Expected Result": "Restoration eligibility and amount are determined."
        },
        {
          "Step": 3,
          "Step Description": "Gestione Crediti notifies the relevant team (SIMP: Customer Care B2B; GEO: Back Office Albania) to restore fido.",
          "Expected Result": "Restoration request is received by the appropriate team."
        },
        {
          "Step": 4,
          "Step Description": "Restore fido to the appropriate amount based on scoring or CM feedback.",
          "Expected Result": "Fido is restored and PoS can operate within the new limit."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management - Restoration",
      "Preconditions": "PoS previously zeroed and now eligible for restoration. Scoring and feedback data available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Restoration",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with resolved collection/legal status, scoring data, CM feedback.",
      "Expected Result": "Fido is restored according to policy and PoS operations resume within the new limit.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-RESTORE-005"
    },
    {
      "Title": "Daily and Weekly Fido Recharge Logic for SIMP and GEO",
      "ID": "TC-032",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "For a SIMP-managed PoS, set up both daily and weekly fido types with initial values.",
          "Expected Result": "PoS is configured with both daily and weekly fido."
        },
        {
          "Step": 2,
          "Step Description": "Simulate daily operations and verify that the daily fido is recharged every day to the initial value.",
          "Expected Result": "Daily fido is reset to the initial value each day."
        },
        {
          "Step": 3,
          "Step Description": "Simulate weekly operations and verify that the weekly fido is recharged every 7 days based on the consumption of the 7th previous day (rolling logic).",
          "Expected Result": "Weekly fido is recharged according to rolling logic."
        },
        {
          "Step": 4,
          "Step Description": "For GEO-managed PoS, verify that only weekly fido is present and it is recharged every Monday to the base value set at activation.",
          "Expected Result": "Weekly fido is reset to the base value every Monday."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management - Recharge Logic",
      "Preconditions": "PoS is active and configured for SIMP or GEO. Initial fido values are set.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Recharge Logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with SIMP and GEO configurations, initial fido values, simulated daily/weekly operations.",
      "Expected Result": "Fido is recharged daily/weekly as per system logic for SIMP and GEO.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-RECHARGE-006"
    },
    {
      "Title": "Fido Calculation on 'Cassa' for SIMP and on 'Raccolta' for VR on TG BEST and GEO",
      "ID": "TC-033",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "For a SIMP-managed PoS, perform a series of plays and record winnings to calculate 'cassa' (plays minus winnings).",
          "Expected Result": "'Cassa' value is calculated correctly."
        },
        {
          "Step": 2,
          "Step Description": "Verify that fido is managed based on 'cassa' for all products except VR on TG BEST.",
          "Expected Result": "Fido is updated according to 'cassa' for applicable products."
        },
        {
          "Step": 3,
          "Step Description": "For VR on TG BEST and GEO, perform plays and verify that fido is managed based on 'raccolta' only (total plays, not considering winnings).",
          "Expected Result": "Fido is updated according to 'raccolta' for VR on TG BEST and GEO."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management - Calculation Logic",
      "Preconditions": "PoS is active with SIMP or GEO management. Plays and winnings data are available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido Calculation Logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with SIMP and GEO, plays and winnings data, VR on TG BEST.",
      "Expected Result": "Fido is calculated and updated according to 'cassa' or 'raccolta' as per product and platform rules.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-CALC-007"
    },
    {
      "Title": "No Fido Management for AWP (IAG and NO IAG)",
      "ID": "TC-034",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with AWP IAG and NO IAG terminals (with both 'chiavi gestore' and 'chiavi esercente').",
          "Expected Result": "PoS is configured with AWP terminals."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to set or modify fido for AWP IAG and NO IAG terminals.",
          "Expected Result": "System does not allow fido management for these terminals."
        },
        {
          "Step": 3,
          "Step Description": "Perform collection operations on AWP terminals and verify there are no fido limits applied.",
          "Expected Result": "No fido limit is enforced; collection is unlimited."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Fido Management - AWP Terminals",
      "Preconditions": "PoS with AWP IAG and NO IAG terminals is available.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Fido Exclusion",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with AWP IAG and NO IAG terminals.",
      "Expected Result": "No fido management is possible or enforced for AWP terminals, regardless of key type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-AWP-008"
    },
    {
      "Title": "Association of Fido to PoS during Activation for GNTN and ONLINE Products",
      "ID": "TC-035",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate PoS activation process for a new terminal (Galileo, Microlot, or Leonardo) with GNTN product.",
          "Expected Result": "System prompts for fido association based on product type."
        },
        {
          "Step": 2,
          "Step Description": "Complete activation process and confirm fido association.",
          "Expected Result": "Fido is associated to the PoS and visible in the system."
        },
        {
          "Step": 3,
          "Step Description": "Repeat activation for ONLINE product with a different terminal type.",
          "Expected Result": "Fido is associated to the PoS for ONLINE product as well."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS terminals (Galileo, Microlot, Leonardo) are available for activation. User has necessary permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Fido association during PoS activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS IDs, product types (GNTN, ONLINE), terminal types.",
      "Expected Result": "Fido is correctly associated to the PoS during activation for both GNTN and ONLINE products.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-001"
    },
    {
      "Title": "Weekly Fido Recharge on GEO Management System",
      "ID": "TC-036",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Verify current fido balance for a PoS on Sunday evening.",
          "Expected Result": "Fido balance reflects the current week's usage."
        },
        {
          "Step": 2,
          "Step Description": "Wait until Monday (system scheduled recharge time).",
          "Expected Result": "System triggers weekly fido recharge process."
        },
        {
          "Step": 3,
          "Step Description": "Check fido balance after recharge on Monday.",
          "Expected Result": "Fido balance is reset to the base value as configured."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS with active fido on GEO system. Base fido value configured.",
      "Execution Mode": "Manual",
      "Functionality": "Weekly fido recharge",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known fido base value.",
      "Expected Result": "Fido is recharged to the base value every Monday as per configuration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-002"
    },
    {
      "Title": "Default Fido Assignment for Precaricato Generalist PoS",
      "ID": "TC-037",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate activation of a new PoS as Generalista Precaricato (awaiting SDD alignment).",
          "Expected Result": "System recognizes PoS as Precaricato and skips credit management authorization."
        },
        {
          "Step": 2,
          "Step Description": "Complete activation process.",
          "Expected Result": "PoS is activated with a default fido of 300 €."
        },
        {
          "Step": 3,
          "Step Description": "Verify fido value assigned to the PoS.",
          "Expected Result": "Fido value is exactly 300 €."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS eligible for Precaricato status. SDD alignment pending.",
      "Execution Mode": "Manual",
      "Functionality": "Default fido assignment for Precaricato",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS to be activated as Precaricato.",
      "Expected Result": "Precaricato PoS is assigned a default fido of 300 € without credit management authorization.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-003"
    },
    {
      "Title": "Fido Assignment Based on Cerved Rating for Standard Generalist PoS",
      "ID": "TC-038",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate activation of a new PoS as Generalista Standard with a specific Cerved rating (e.g., 80).",
          "Expected Result": "System retrieves Cerved rating and determines fido value according to policy table."
        },
        {
          "Step": 2,
          "Step Description": "Complete activation process.",
          "Expected Result": "PoS is activated with fido corresponding to the Cerved rating."
        },
        {
          "Step": 3,
          "Step Description": "Verify assigned fido value matches policy for the given rating.",
          "Expected Result": "Fido value is as per Credit Policy table for rating 80."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "Cerved rating available for PoS. Policy table accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Fido assignment based on rating",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with Cerved ratings: N/D, 60, 80, 100.",
      "Expected Result": "Fido is assigned according to the Cerved rating as per Credit Policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-004"
    },
    {
      "Title": "Fido Transfer and Reset During PoS Voltura (Change of Ownership)",
      "ID": "TC-039",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an existing PoS with active fido and initiate voltura process (change of ownership/ID).",
          "Expected Result": "System prepares to transfer PoS to new ID."
        },
        {
          "Step": 2,
          "Step Description": "Complete voltura process.",
          "Expected Result": "Fido on old PoS ID is reset to zero."
        },
        {
          "Step": 3,
          "Step Description": "Verify fido is associated with new PoS ID as per activation rules.",
          "Expected Result": "New PoS ID has fido assigned according to activation policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS eligible for voltura. Both old and new IDs available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido transfer/reset on voltura",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with existing fido, new PoS ID for transfer.",
      "Expected Result": "Fido is reset on old ID and correctly associated with new ID during voltura.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-005"
    },
    {
      "Title": "Modification of Fido Based on Rating, Volume, Payment Regularity, Guarantees, or FV Report",
      "ID": "TC-040",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request fido modification due to change in Cerved rating for a PoS.",
          "Expected Result": "System processes rating change and recalculates fido as per policy."
        },
        {
          "Step": 2,
          "Step Description": "Request fido modification due to change in gaming volume.",
          "Expected Result": "System evaluates new volume and updates fido accordingly."
        },
        {
          "Step": 3,
          "Step Description": "Request fido modification due to payment irregularities (number of unpaid items).",
          "Expected Result": "System reviews payment history and adjusts fido if necessary."
        },
        {
          "Step": 4,
          "Step Description": "Request fido modification due to new guarantees provided.",
          "Expected Result": "System considers guarantees and updates fido as per policy."
        },
        {
          "Step": 5,
          "Step Description": "Request fido modification due to FV report.",
          "Expected Result": "System processes FV report and updates fido if required."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS with modifiable fido. Access to all modification triggers.",
      "Execution Mode": "Manual",
      "Functionality": "Fido modification",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with various triggers for fido modification.",
      "Expected Result": "Fido is modified correctly based on the specified parameter changes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-006"
    },
    {
      "Title": "Temporary Fido Increase After 18:00 or During Weekend with Red List Check",
      "ID": "TC-041",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Request a fido increase for a PoS after 18:00 or during the weekend.",
          "Expected Result": "System checks if the PoS is present in the Red List."
        },
        {
          "Step": 2,
          "Step Description": "If PoS is not in Red List, approve temporary fido increase.",
          "Expected Result": "Temporary fido increase is applied to the PoS."
        },
        {
          "Step": 3,
          "Step Description": "If PoS is in Red List, deny temporary fido increase.",
          "Expected Result": "System denies the temporary fido increase request."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "PoS eligible for temporary fido increase. Red List status known.",
      "Execution Mode": "Manual",
      "Functionality": "Temporary fido increase with Red List check",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS in and out of Red List, time of request (after 18:00, weekend).",
      "Expected Result": "Temporary fido increase is only allowed if PoS is not in Red List and request is after 18:00 or during weekend.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-007"
    },
    {
      "Title": "Fido Reset for ONLINE PoS Blocked Due to Insoluti and Restoration After Payment",
      "ID": "TC-042",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an ONLINE PoS with active fido and simulate an insoluti event causing a block.",
          "Expected Result": "System blocks the PoS and resets fido to zero."
        },
        {
          "Step": 2,
          "Step Description": "Simulate payment of the outstanding amount (ripristino).",
          "Expected Result": "System restores fido to the PoS as per previous configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "ONLINE PoS with active fido. Ability to simulate insoluti and payment events.",
      "Execution Mode": "Manual",
      "Functionality": "Fido reset and restoration for ONLINE PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "ONLINE PoS, insoluti event, payment event.",
      "Expected Result": "Fido is reset to zero upon block for insoluti and restored after payment for ONLINE PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-008"
    },
    {
      "Title": "No Fido Reduction for GNTN PoS in Case of Insoluti (Block Inhibits Collection)",
      "ID": "TC-043",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a GNTN PoS with active fido and simulate an insoluti event causing a block.",
          "Expected Result": "System blocks the PoS but does not reduce the fido value."
        },
        {
          "Step": 2,
          "Step Description": "Verify that collection is inhibited for the blocked PoS.",
          "Expected Result": "PoS cannot collect, but fido remains unchanged."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "GNTN PoS with active fido. Ability to simulate insoluti event.",
      "Execution Mode": "Manual",
      "Functionality": "No fido reduction for GNTN on insoluti",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "GNTN PoS, insoluti event.",
      "Expected Result": "Fido is not reduced for GNTN PoS in case of insoluti; collection is inhibited instead.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-009"
    },
    {
      "Title": "No Fido Management for AWP IAG and Non-IAG Devices",
      "ID": "TC-044",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to assign or modify fido for an AWP IAG device.",
          "Expected Result": "System does not allow fido management for AWP IAG; no limits are set."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to assign or modify fido for an AWP non-IAG device (both gestore and esercente keys).",
          "Expected Result": "System does not allow fido management for AWP non-IAG; no limits are set."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Terminale",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Fido Management",
      "Preconditions": "AWP IAG and non-IAG devices available in system.",
      "Execution Mode": "Manual",
      "Functionality": "No fido management for AWP devices",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP IAG and non-IAG device IDs.",
      "Expected Result": "No fido management is possible for AWP IAG and non-IAG devices; no collection limits are enforced.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-010"
    },
    {
      "Title": "Fido Assignment on PoS Activation Based on Product and Rating",
      "ID": "TC-045",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate PoS activation for a new terminal (e.g., Galileo) with product type GNTN and gestionale GEO.",
          "Expected Result": "System prompts for Cerved rating input."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid Cerved rating (e.g., 80).",
          "Expected Result": "System calculates and displays the initial fido amount according to the Credit Policy table."
        },
        {
          "Step": 3,
          "Step Description": "Complete the activation process.",
          "Expected Result": "PoS is activated with the assigned fido value. Fido is associated with the PoS and visible in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Cerved rating table and Credit Policy are configured in the system. PoS terminal is available for activation.",
      "Execution Mode": "Manual",
      "Functionality": "Fido assignment during PoS activation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS terminal data, Cerved ratings (e.g., 80, 60, N/D)",
      "Expected Result": "PoS is assigned a fido value based on product type and Cerved rating, as per Credit Policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-ASSIGN-001"
    },
    {
      "Title": "Fido Type Assignment Based on Gestionale (SIMP vs GEO)",
      "ID": "TC-046",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Activate a PoS with gestionale SIMP and product SPORT.",
          "Expected Result": "System assigns both daily and weekly fido types to the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Activate a PoS with gestionale GEO and product GNTN.",
          "Expected Result": "System assigns only weekly fido type to the PoS, with weekly reset on Monday."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Gestionale types SIMP and GEO are configured. Products SPORT and GNTN are available.",
      "Execution Mode": "Manual",
      "Functionality": "Fido type assignment logic",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS data for SIMP/SPORT and GEO/GNTN combinations",
      "Expected Result": "Fido types are assigned according to gestionale: SIMP (daily and weekly), GEO (weekly only, reset on Monday).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-TYPE-002"
    },
    {
      "Title": "Fido Modification Based on Rating Change",
      "ID": "TC-047",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an active PoS with an existing fido and Cerved rating (e.g., 60).",
          "Expected Result": "PoS displays current fido and rating."
        },
        {
          "Step": 2,
          "Step Description": "Update the Cerved rating to a new value (e.g., from 60 to 80).",
          "Expected Result": "System recalculates the fido according to the new rating and Credit Policy."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the updated fido is reflected in the PoS details.",
          "Expected Result": "PoS shows the new fido value corresponding to the updated rating."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS with existing fido and rating. Credit Policy table is up to date.",
      "Execution Mode": "Manual",
      "Functionality": "Fido modification on rating change",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with initial rating 60, updated to 80",
      "Expected Result": "Fido is updated according to the new rating as per Credit Policy.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-MODIFY-003"
    },
    {
      "Title": "Automatic Fido Extension at 90% Consumption for SIMP Products",
      "ID": "TC-048",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with gestionale SIMP and a set fido (e.g., 1000 EUR).",
          "Expected Result": "PoS displays current fido and consumption."
        },
        {
          "Step": 2,
          "Step Description": "Simulate transactions to reach 90% of the fido consumption (e.g., 900 EUR consumed).",
          "Expected Result": "System detects 90% threshold reached."
        },
        {
          "Step": 3,
          "Step Description": "Verify if the system automatically extends the fido by 50% (e.g., new fido is 1500 EUR).",
          "Expected Result": "Fido is extended by 50% automatically, unless PoS is in red list."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS with gestionale SIMP, not in red list. Fido and consumption tracking enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic fido extension",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with SIMP, fido 1000 EUR, simulate consumption to 900 EUR",
      "Expected Result": "Fido is automatically extended by 50% when 90% consumption is reached, except for red list PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-EXTEND-004"
    },
    {
      "Title": "Fido Reset on Agency Voltura (Transfer)",
      "ID": "TC-049",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify an agency with an active PoS and assigned fido.",
          "Expected Result": "Agency and PoS display current fido."
        },
        {
          "Step": 2,
          "Step Description": "Initiate agency voltura (transfer) process, assigning a new agency ID to the PoS.",
          "Expected Result": "System prompts for fido reassignment."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fido on the old agency ID is reset to zero.",
          "Expected Result": "Old agency ID shows fido as zero."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the fido is associated with the new agency ID as per communicated parameters.",
          "Expected Result": "New agency ID displays the correct fido value."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "Agency with active PoS and fido. Voltura process enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Fido reset and reassignment on agency transfer",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Agency with PoS and fido, new agency ID for transfer",
      "Expected Result": "Fido is reset on old agency ID and reassigned to new agency ID during voltura.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-VOLTURA-005"
    },
    {
      "Title": "Fido Zeroing for ONLINE Product on Insolvency Block",
      "ID": "TC-050",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with ONLINE product and active fido.",
          "Expected Result": "PoS displays current fido."
        },
        {
          "Step": 2,
          "Step Description": "Simulate an insolvency event that triggers a block on the PoS.",
          "Expected Result": "System blocks the PoS for transactions."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the fido is set to zero for the blocked PoS.",
          "Expected Result": "PoS fido is zeroed in the system."
        },
        {
          "Step": 4,
          "Step Description": "Simulate payment of the outstanding amount.",
          "Expected Result": "System allows restoration of the fido as per policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "PoS with ONLINE product and active fido. Insolvency event simulation possible.",
      "Execution Mode": "Manual",
      "Functionality": "Fido zeroing and restoration on insolvency block",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with ONLINE, simulate insolvency and payment",
      "Expected Result": "Fido is zeroed on insolvency block and restored upon payment for ONLINE products.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-ZERO-006"
    },
    {
      "Title": "No Fido Management for AWP IAG and NO IAG Terminals",
      "ID": "TC-051",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify AWP IAG and NO IAG terminals in the system.",
          "Expected Result": "Terminals are listed with their types."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to assign or modify a fido for these terminals.",
          "Expected Result": "System does not allow fido assignment or modification for AWP IAG and NO IAG terminals."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "AWP IAG and NO IAG terminals exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Fido management exclusion for AWP terminals",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP IAG and NO IAG terminal data",
      "Expected Result": "No fido can be assigned or managed for AWP IAG and NO IAG terminals.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-AWP-007"
    },
    {
      "Title": "VLT IAG/NO IAG: Alert Generation When Collection Exceeds Triple 90-Day Average",
      "ID": "TC-052",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a VLT IAG or NO IAG terminal with collection data for the last 90 days.",
          "Expected Result": "System displays 90-day rolling average collection."
        },
        {
          "Step": 2,
          "Step Description": "Simulate a collection event that exceeds three times the 90-day average.",
          "Expected Result": "System detects the threshold breach."
        },
        {
          "Step": 3,
          "Step Description": "Verify that an ALERT is generated and sent to FV as per process.",
          "Expected Result": "ALERT is generated and notification is sent to FV."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Fido Management Module",
      "Preconditions": "VLT IAG or NO IAG terminal with 90 days of collection data. Alerting mechanism configured.",
      "Execution Mode": "Manual",
      "Functionality": "Alerting on excessive collection for VLT terminals",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "VLT terminal with 90-day collection data, simulate high collection event",
      "Expected Result": "ALERT is generated when collection exceeds triple the 90-day average for VLT IAG/NO IAG terminals.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-FIDO-VLT-008"
    },
    {
      "Title": "Verify presence and correctness of all abbreviations in the Definitions and Abbreviations table",
      "ID": "TC-053",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section of the document or application.",
          "Expected Result": "The section is displayed to the user."
        },
        {
          "Step": 2,
          "Step Description": "Locate the table listing all abbreviations and their definitions.",
          "Expected Result": "A table with abbreviations and corresponding definitions is visible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the following abbreviations are present: BOA, BO, POS, GIC, CM, TCI, TCA, FV.",
          "Expected Result": "All listed abbreviations are present in the table."
        },
        {
          "Step": 4,
          "Step Description": "Check that each abbreviation matches the correct definition as specified in the requirements.",
          "Expected Result": "Each abbreviation is paired with its correct definition."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Content Management / Documentation",
      "Preconditions": "User has access to the document or application containing the Definitions and Abbreviations section.",
      "Execution Mode": "Manual",
      "Functionality": "Display and accuracy of abbreviation definitions",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "All required abbreviations are present and correctly defined in the table as per the requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify that no undefined abbreviations are present in the Definitions and Abbreviations table",
      "ID": "TC-054",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section of the document or application.",
          "Expected Result": "The section is displayed to the user."
        },
        {
          "Step": 2,
          "Step Description": "Review the table for any abbreviations not listed in the requirements (BOA, BO, POS, GIC, CM, TCI, TCA, FV).",
          "Expected Result": "No extra or undefined abbreviations are present in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Content Management / Documentation",
      "Preconditions": "User has access to the document or application containing the Definitions and Abbreviations section.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of abbreviation list integrity",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The table contains only the abbreviations specified in the requirements, with no extraneous entries.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify formatting and alignment of the Definitions and Abbreviations table",
      "ID": "TC-055",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the 'Definizioni e Abbreviazioni' section of the document or application.",
          "Expected Result": "The section is displayed to the user."
        },
        {
          "Step": 2,
          "Step Description": "Check that the table columns for abbreviations and definitions are properly aligned and readable.",
          "Expected Result": "Table columns are clearly separated and content is easily readable."
        },
        {
          "Step": 3,
          "Step Description": "Verify that there are no formatting errors such as misaligned text, missing borders, or inconsistent spacing.",
          "Expected Result": "Table formatting is consistent and professional throughout."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Content Management / Documentation",
      "Preconditions": "User has access to the document or application containing the Definitions and Abbreviations section.",
      "Execution Mode": "Manual",
      "Functionality": "Table formatting and presentation",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The table is well-formatted, with clear alignment and no visual defects.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify that each abbreviation is used consistently throughout the document",
      "ID": "TC-056",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify all occurrences of each abbreviation (BOA, BO, POS, GIC, CM, TCI, TCA, FV) in the document.",
          "Expected Result": "All instances of the abbreviations are found."
        },
        {
          "Step": 2,
          "Step Description": "Check that each abbreviation is used according to its definition and not in any other context.",
          "Expected Result": "Each abbreviation is used consistently and only as defined in the table."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Content Management / Documentation",
      "Preconditions": "User has access to the full document containing the Definitions and Abbreviations section.",
      "Execution Mode": "Manual",
      "Functionality": "Consistency of abbreviation usage",
      "Test Type": "content",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "All abbreviations are used consistently and only as defined throughout the document.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify system behavior when an abbreviation is missing from the Definitions and Abbreviations table",
      "ID": "TC-057",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Remove one abbreviation (e.g., 'POS') from the Definitions and Abbreviations table in a test environment.",
          "Expected Result": "The table is missing the selected abbreviation."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to use the document or application as normal.",
          "Expected Result": "System or reviewer should flag the missing abbreviation or indicate incomplete definitions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Content Management / Documentation",
      "Preconditions": "Test environment where the table can be edited or simulated with missing data.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for incomplete abbreviation lists",
      "Test Type": "content",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The system or reviewer identifies and flags the missing abbreviation, ensuring completeness of the table.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for missing data.",
      "_polarion": "REQ-DEF-ABBR-001"
    },
    {
      "Title": "Verify Requirement Description Display",
      "ID": "TC-058",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the requirements documentation section of the application.",
          "Expected Result": "The requirements documentation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate the section titled 'Descrizione delle esigenze'.",
          "Expected Result": "The section 'Descrizione delle esigenze' is visible to the user."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the section contains a header labeled '# Descrizione delle esigenze'.",
          "Expected Result": "The header '# Descrizione delle esigenze' is present and correctly formatted."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Requirements Documentation",
      "Preconditions": "User has access to the application and is authenticated if required.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Documentation Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "The section 'Descrizione delle esigenze' with the header '# Descrizione delle esigenze' is correctly displayed in the requirements documentation.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the display and presence of the requirements description section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Verify Handling of Missing Requirements Description Section",
      "ID": "TC-059",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the requirements documentation section where the 'Descrizione delle esigenze' section is expected.",
          "Expected Result": "The requirements documentation section is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Check if the 'Descrizione delle esigenze' section is missing or not rendered.",
          "Expected Result": "The application should display a user-friendly message or handle the missing section gracefully without errors."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Requirements Documentation",
      "Preconditions": "User has access to the application and is authenticated if required. The requirements description section is intentionally removed or not present.",
      "Execution Mode": "Manual",
      "Functionality": "Requirements Documentation Error Handling",
      "Test Type": "functional",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "N/A",
      "Expected Result": "The application handles the absence of the 'Descrizione delle esigenze' section gracefully, displaying an appropriate message or fallback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing requirements description section.",
      "_polarion": "requirement"
    },
    {
      "Title": "Automated Data Collection from MDM System (POS Anagrafica)",
      "ID": "TC-060",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the automated data collection process for the MDM system.",
          "Expected Result": "The system initiates a connection to the MDM system."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve the complete POS anagrafica data for a given POS ID, including sales force association.",
          "Expected Result": "All required anagrafica fields and sales force associations are retrieved for the specified POS ID."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the retrieved data is aggregated and displayed in the central management dashboard.",
          "Expected Result": "The dashboard displays the complete POS anagrafica data as per the latest collection."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "MDM Data Integration",
      "Preconditions": "MDM system is online and accessible; valid POS ID exists; integration endpoints are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from MDM system.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS IDs with known anagrafica data in MDM.",
      "Expected Result": "The system successfully collects, aggregates, and displays complete POS anagrafica data from MDM, including sales force association, in the central dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Automated Data Collection from INVENTORY System (Terminal Types and Counts)",
      "ID": "TC-061",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate the automated data collection process for the INVENTORY system.",
          "Expected Result": "The system connects to the INVENTORY system successfully."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve terminal types and counts for a specified POS.",
          "Expected Result": "Terminal types and their respective counts are retrieved for the POS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the terminal details are aggregated and displayed in the central dashboard.",
          "Expected Result": "The dashboard displays terminal types and counts for the POS as per the latest data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "INVENTORY Data Integration",
      "Preconditions": "INVENTORY system is online; POS with terminals exists; integration endpoints are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from INVENTORY system.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS with known terminal types and counts in INVENTORY.",
      "Expected Result": "The system collects and displays terminal types and counts for each POS from the INVENTORY system in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-002"
    },
    {
      "Title": "Automated Data Collection from COMMA 6 System (AWP Status and Coin In)",
      "ID": "TC-062",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Start the automated data collection for the COMMA 6 system.",
          "Expected Result": "The system establishes a connection to the COMMA 6 system."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve AWP status, number of AWPs, and average Coin In (monthly and yearly) for a given POS.",
          "Expected Result": "AWP status, count, and Coin In averages are retrieved for the POS."
        },
        {
          "Step": 3,
          "Step Description": "Verify aggregation and display of these data points in the dashboard.",
          "Expected Result": "Dashboard shows AWP status, number, and Coin In averages for the POS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "COMMA 6 Data Integration",
      "Preconditions": "COMMA 6 system is online; POS with AWP data exists; integration endpoints are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and aggregation from COMMA 6 system.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS with AWP data in COMMA 6.",
      "Expected Result": "AWP status, number, and Coin In averages are collected and displayed for each POS from COMMA 6.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-003"
    },
    {
      "Title": "Automated Data Collection from CERVED System (Scoring and Commercial Info)",
      "ID": "TC-063",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate automated data collection from the CERVED system.",
          "Expected Result": "System connects to CERVED system."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve scoring and commercial information for a specified entity.",
          "Expected Result": "Scoring and commercial info are retrieved for the entity."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the data is aggregated and displayed in the dashboard, and check for risk alerts if the score worsens.",
          "Expected Result": "Dashboard displays scoring and commercial info; alert is triggered if risk has worsened."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "CERVED system is online; entity with scoring data exists; integration endpoints are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and risk alert from CERVED system.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample entities with scoring and commercial info in CERVED.",
      "Expected Result": "Scoring and commercial info are collected and displayed; risk alert is triggered if applicable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-004"
    },
    {
      "Title": "Manual Data Entry and Aggregation from DWH (GNTN Average and Decile)",
      "ID": "TC-064",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the data collection process for DWH.",
          "Expected Result": "System connects to DWH."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve GNTN average data for the relevant period.",
          "Expected Result": "GNTN average is retrieved."
        },
        {
          "Step": 3,
          "Step Description": "Manually enter the decile value as provided by the designated user.",
          "Expected Result": "Decile value is entered and accepted by the system."
        },
        {
          "Step": 4,
          "Step Description": "Verify that both GNTN average and decile are aggregated and displayed in the dashboard.",
          "Expected Result": "Dashboard displays GNTN average and decile for the period."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "DWH Data Integration",
      "Preconditions": "DWH system is online; user with permission to enter decile value is available.",
      "Execution Mode": "Manual",
      "Functionality": "Automated and manual data collection from DWH, including manual decile entry.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Sample GNTN data in DWH; decile value from user.",
      "Expected Result": "GNTN average is collected and decile is manually entered, both displayed in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-005"
    },
    {
      "Title": "Automated Data Collection from SAP (Financial and Guarantee Data)",
      "ID": "TC-065",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate automated data collection from SAP.",
          "Expected Result": "System connects to SAP."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve financial data: outstanding payments, average BC, ageing, payments, expired, guarantees, etc., for a POS.",
          "Expected Result": "All required financial and guarantee data are retrieved for the POS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that guarantee deposit amount and timing to reach target are displayed.",
          "Expected Result": "Dashboard displays guarantee deposit and timing information."
        },
        {
          "Step": 4,
          "Step Description": "Check that the expiry date for sureties is indicated.",
          "Expected Result": "Expiry date for sureties is displayed in the dashboard."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "SAP system is online; POS with financial and guarantee data exists; integration endpoints are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and display of financial and guarantee data from SAP.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS with financial and guarantee data in SAP.",
      "Expected Result": "Financial and guarantee data are collected and displayed, including guarantee deposit, timing, and surety expiry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-006"
    },
    {
      "Title": "Automated Data Collection from SIMP System (Credit Utilization and Alerts)",
      "ID": "TC-066",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate automated data collection from SIMP system.",
          "Expected Result": "System connects to SIMP."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve all credit entries (amount, % utilization, collection, number of extensions, winnings paid/unpaid) for the year for a POS.",
          "Expected Result": "All required credit data are retrieved for the POS."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system analyzes historical collection and utilization trends.",
          "Expected Result": "Historical trends are analyzed and displayed."
        },
        {
          "Step": 4,
          "Step Description": "Simulate approaching a specific utilization threshold to trigger an alert.",
          "Expected Result": "System sends a specific alert when the threshold is approached."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SIMP Data Integration",
      "Preconditions": "SIMP system is online; POS with credit data exists; alert thresholds are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection, trend analysis, and alerting from SIMP system.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS with credit data in SIMP; configured alert threshold.",
      "Expected Result": "Credit data are collected, trends analyzed, and alert is triggered when utilization threshold is approached.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-007"
    },
    {
      "Title": "Automated Data Collection from ARXIVAR (NEXT) System (Contract Links)",
      "ID": "TC-067",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Initiate automated data collection from ARXIVAR (NEXT) system.",
          "Expected Result": "System connects to ARXIVAR (NEXT)."
        },
        {
          "Step": 2,
          "Step Description": "Retrieve contract links for a specified POS or entity.",
          "Expected Result": "Contract links are retrieved for the POS/entity."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the contract links are displayed in the dashboard and accessible.",
          "Expected Result": "Dashboard displays contract links, and links are accessible."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ARXIVAR (NEXT) Data Integration",
      "Preconditions": "ARXIVAR (NEXT) system is online; POS/entity with contracts exists; integration endpoints are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Automated data collection and display of contract links from ARXIVAR (NEXT).",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample POS/entity with contracts in ARXIVAR (NEXT).",
      "Expected Result": "Contract links are collected and displayed in the dashboard, and are accessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-008"
    },
    {
      "Title": "Negative Test: Data Collection Fails Due to System Unavailability",
      "ID": "TC-068",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate unavailability of a connected system (e.g., shut down MDM).",
          "Expected Result": "System cannot connect to the unavailable system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the automated data collection process for the unavailable system.",
          "Expected Result": "System logs an error and displays a notification of the failure."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the dashboard does not display outdated or partial data from the unavailable system.",
          "Expected Result": "Dashboard does not show stale or incomplete data; error is clearly indicated."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Integration Error Handling",
      "Preconditions": "At least one connected system is intentionally made unavailable; integration endpoints are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for failed data collection due to system unavailability.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Unavailable system (e.g., MDM offline).",
      "Expected Result": "System handles the error gracefully, logs it, notifies the user, and prevents display of outdated/partial data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-009"
    },
    {
      "Title": "Negative Test: Data Collection with Invalid or Corrupted Data",
      "ID": "TC-069",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure a connected system (e.g., INVENTORY) to return invalid or corrupted data during collection.",
          "Expected Result": "System receives invalid/corrupted data from the source."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the automated data collection process for the affected system.",
          "Expected Result": "System detects the invalid/corrupted data."
        },
        {
          "Step": 3,
          "Step Description": "Verify that the system logs the error, notifies the user, and does not aggregate or display the invalid data.",
          "Expected Result": "Error is logged, user is notified, and invalid data is not shown in the dashboard."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Validation and Error Handling",
      "Preconditions": "Connected system is configured to return invalid/corrupted data; integration endpoints are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Validation and error handling for invalid/corrupted data during collection.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid/corrupted data from source system (e.g., INVENTORY).",
      "Expected Result": "System detects and handles invalid/corrupted data, logs the error, notifies the user, and prevents display of such data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-010"
    },
    {
      "Title": "Verify Dashboard Data Aggregation and Display for Individual PoS",
      "ID": "TC-070",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed with data for all PoS as per requirement 3.1."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific PoS from the dashboard view.",
          "Expected Result": "Dashboard updates to show detailed data for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. At least one PoS with data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard data aggregation and display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one PoS with associated data.",
      "Expected Result": "Dashboard displays accurate and complete data for the selected PoS as per requirement 3.1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Data Aggregation and Filtering by Nature",
      "ID": "TC-071",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed with data for all PoS."
        },
        {
          "Step": 3,
          "Step Description": "Apply a filter to aggregate PoS data by a specific nature (e.g., region, type).",
          "Expected Result": "Dashboard updates to show aggregated data according to the selected nature."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. Multiple PoS with different natures exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard data aggregation and filtering",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with various natures (e.g., region, type).",
      "Expected Result": "Dashboard displays aggregated data correctly according to the selected nature.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Search Functionality within Dashboard",
      "ID": "TC-072",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid PoS identifier or name in the search bar and initiate the search.",
          "Expected Result": "Dashboard displays results matching the search criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard search functionality",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; existing PoS identifiers/names.",
      "Expected Result": "Dashboard returns accurate search results based on the entered criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify PoS Management from Dashboard",
      "ID": "TC-073",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS and choose the management option (e.g., edit, disable, or delete).",
          "Expected Result": "PoS management options are available and functional."
        },
        {
          "Step": 4,
          "Step Description": "Perform a management action (e.g., edit PoS details).",
          "Expected Result": "PoS details are updated and reflected in the dashboard."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "PoS management from dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with editable details.",
      "Expected Result": "PoS management actions (edit, disable, delete) are executed successfully and changes are reflected in the dashboard.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Report Request Functionality from Dashboard",
      "ID": "TC-074",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select the option to request a report for a specific PoS or aggregated data.",
          "Expected Result": "Report request dialog or form is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Submit the report request with valid parameters.",
          "Expected Result": "System processes the request and confirms report generation."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. At least one PoS exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Report request from dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with reportable data.",
      "Expected Result": "Report request is processed and confirmation is provided to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Alert Reception in Dashboard",
      "ID": "TC-075",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Trigger a condition that should generate an alert (e.g., PoS offline, threshold exceeded).",
          "Expected Result": "Dashboard displays the corresponding alert notification."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. System is configured to generate alerts for specific conditions.",
      "Execution Mode": "Manual",
      "Functionality": "Alert reception in dashboard",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS with alert-triggering conditions.",
      "Expected Result": "Dashboard displays alerts in real-time or near real-time when conditions are met.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Search with Invalid Criteria",
      "ID": "TC-076",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section.",
          "Expected Result": "Dashboard is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid or non-existent PoS identifier in the search bar and initiate the search.",
          "Expected Result": "Dashboard displays a message indicating no results found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. No PoS matches the invalid search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard search error handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; invalid/non-existent PoS identifier.",
      "Expected Result": "Dashboard handles invalid search gracefully and informs the user that no results were found.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify Dashboard Accessibility and Responsiveness",
      "ID": "TC-077",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application with valid credentials on different devices (desktop, tablet, mobile).",
          "Expected Result": "User is successfully logged in and redirected to the dashboard on each device."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the dashboard section on each device.",
          "Expected Result": "Dashboard is displayed correctly and is responsive to the device screen size."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer, Tablet, Mobile",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User has valid credentials. Application is accessible from multiple device types.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard accessibility and responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; access to desktop, tablet, and mobile devices.",
      "Expected Result": "Dashboard is accessible and displays correctly on all supported devices.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-3.1"
    },
    {
      "Title": "Verify daily and weekly credit usage history is stored correctly",
      "ID": "TC-078",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with active credit usage.",
          "Expected Result": "User is successfully logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Perform a transaction that utilizes part of the daily credit limit.",
          "Expected Result": "Transaction is completed and daily credit usage is updated."
        },
        {
          "Step": 3,
          "Step Description": "Navigate to the 'Credit Usage History' section of the application.",
          "Expected Result": "'Credit Usage History' section is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Review the displayed daily and weekly credit usage records.",
          "Expected Result": "The transaction performed in Step 2 is present in the daily and weekly usage history with correct date, amount, and remaining limit."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "User account exists with credit feature enabled. At least one transaction has been performed today and this week.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data storage for daily and weekly credit usage",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, transaction details (amount, date, type)",
      "Expected Result": "The system accurately stores and displays historical daily and weekly credit usage data for the user.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify historical data retention after multiple transactions over several weeks",
      "ID": "TC-079",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user with credit usage history spanning several weeks.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Usage History' section.",
          "Expected Result": "'Credit Usage History' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a previous week from the available history.",
          "Expected Result": "Historical data for the selected week is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Verify that all transactions for the selected week are present and accurate.",
          "Expected Result": "All transactions for the selected week are listed with correct details (date, amount, type, remaining limit)."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Medium",
      "Test Stage": "test",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "User account with at least 3 weeks of credit usage history.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data retention and retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with multi-week transaction history",
      "Expected Result": "The system retains and accurately displays historical credit usage data for multiple weeks.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify system behavior when no historical credit usage data is present",
      "ID": "TC-080",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a new user with no credit usage history.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Usage History' section.",
          "Expected Result": "'Credit Usage History' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the displayed information for historical credit usage.",
          "Expected Result": "A message indicating 'No historical data available' or similar is displayed. No erroneous or placeholder data is shown."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "Low",
      "Test Stage": "test",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "User account exists with no credit usage history.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of empty historical data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "New user credentials",
      "Expected Result": "The system gracefully handles the absence of historical data and informs the user appropriately.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify historical data integrity after system update or migration",
      "ID": "TC-081",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in as a user with existing historical credit usage data before the system update/migration.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Credit Usage History' section and record current data.",
          "Expected Result": "Historical data is displayed and recorded for comparison."
        },
        {
          "Step": 3,
          "Step Description": "Simulate or perform a system update or data migration.",
          "Expected Result": "System update/migration completes successfully."
        },
        {
          "Step": 4,
          "Step Description": "Log in again as the same user after the update/migration.",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the 'Credit Usage History' section and compare data with the record from Step 2.",
          "Expected Result": "All historical data remains intact and unchanged after the update/migration."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "User account with historical data exists. System update/migration is planned or can be simulated in test environment.",
      "Execution Mode": "Manual",
      "Functionality": "Historical data integrity after system changes",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "User credentials, pre-update historical data snapshot",
      "Expected Result": "Historical credit usage data is preserved and unaltered after system updates or migrations.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify access control for historical credit usage data",
      "ID": "TC-082",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the 'Credit Usage History' section as an unauthorized user (e.g., without proper permissions).",
          "Expected Result": "Access is denied and an appropriate error message is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Log in as an authorized user and access the 'Credit Usage History' section.",
          "Expected Result": "Authorized user can access and view historical credit usage data."
        }
      ],
      "Test Group": "backend",
      "Channel": "desktop",
      "Device": "computer",
      "Priority": "High",
      "Test Stage": "test",
      "Reference System": "Credit Usage History Module",
      "Preconditions": "Both authorized and unauthorized user accounts exist.",
      "Execution Mode": "Manual",
      "Functionality": "Access control for historical data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Authorized and unauthorized user credentials",
      "Expected Result": "Only authorized users can access historical credit usage data; unauthorized users are denied access.",
      "Country": "italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "REQ-001"
    },
    {
      "Title": "Verify Data Collection from SAP Source",
      "ID": "TC-083",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module as an authorized user.",
          "Expected Result": "User is authenticated and data collection module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate data collection from the SAP source system.",
          "Expected Result": "System initiates connection to SAP and starts data retrieval."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data collection process for completion.",
          "Expected Result": "Data is successfully collected from SAP without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the collected data is stored in the target repository.",
          "Expected Result": "All expected SAP data records are present and accurate in the repository."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection",
      "Preconditions": "User has valid credentials and access rights. SAP source system is available and contains test data.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test SAP data records available in source system.",
      "Expected Result": "Data from SAP is collected and stored accurately in the target repository without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Dashboard Login with Full Access Profile",
      "ID": "TC-084",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the dashboard login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid credentials for a user with Full Access profile.",
          "Expected Result": "Credentials are accepted."
        },
        {
          "Step": 3,
          "Step Description": "Click the login button.",
          "Expected Result": "User is authenticated and redirected to the dashboard main page with Full Access permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Authentication",
      "Preconditions": "Full Access user account exists and is active.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout/Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Full Access user credentials.",
      "Expected Result": "User with Full Access profile can successfully log in and access all dashboard features.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1; RU 4.2.2"
    },
    {
      "Title": "Verify Data Archiving Functionality",
      "ID": "TC-085",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data archiving module as an authorized user.",
          "Expected Result": "User is authenticated and data archiving module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the data archiving process for a specified data set.",
          "Expected Result": "System starts the archiving process."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the process until completion.",
          "Expected Result": "Data is archived without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the archived data is retrievable and intact.",
          "Expected Result": "Archived data can be retrieved and matches the original data set."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving",
      "Preconditions": "User has valid credentials and access rights. Data set to be archived is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data set for archiving.",
      "Expected Result": "Data is archived successfully and can be retrieved without loss or corruption.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Dashboard Login Failure with Invalid Credentials",
      "ID": "TC-086",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the dashboard login page.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid credentials (e.g., incorrect password).",
          "Expected Result": "System rejects credentials and displays an error message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard Authentication",
      "Preconditions": "User account exists.",
      "Execution Mode": "Manual",
      "Functionality": "Login/Logout/Profile Management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid user credentials.",
      "Expected Result": "Login attempt fails and an appropriate error message is shown.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify Data Collection Failure When Source Unavailable (SAP)",
      "ID": "TC-087",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module as an authorized user.",
          "Expected Result": "User is authenticated and data collection module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Simulate SAP source system being unavailable (e.g., disconnect network or stop SAP service).",
          "Expected Result": "SAP source is unreachable."
        },
        {
          "Step": 3,
          "Step Description": "Initiate data collection from SAP.",
          "Expected Result": "System fails to collect data and displays/logs an appropriate error message."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Collection",
      "Preconditions": "User has valid credentials. SAP source system is intentionally made unavailable.",
      "Execution Mode": "Manual",
      "Functionality": "Data Collection from SAP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A (SAP source offline).",
      "Expected Result": "System handles SAP source unavailability gracefully and provides a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Data Archiving for POS Out-of-Network",
      "ID": "TC-088",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the POS data archiving module as an authorized user.",
          "Expected Result": "User is authenticated and POS data archiving module is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Select POS devices that are currently out of network.",
          "Expected Result": "System lists available out-of-network POS devices."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the archiving process for selected POS devices.",
          "Expected Result": "System starts the archiving process for out-of-network POS data."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the data is archived and can be retrieved when the POS device reconnects.",
          "Expected Result": "Archived data is available and intact upon POS reconnection."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "POS Data Archiving",
      "Preconditions": "User has valid credentials. At least one POS device is out of network and has data to archive.",
      "Execution Mode": "Manual",
      "Functionality": "POS Data Archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "POS device(s) out of network with sample data.",
      "Expected Result": "Data from out-of-network POS devices is archived and retrievable upon reconnection.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Verify retrieval of unmodified store master data from MDM system",
      "ID": "TC-089",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module (FASE 1) as a user with appropriate permissions.",
          "Expected Result": "The data collection interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a store whose master data does not require modification (as per the latest 'ZENIT - Elenco dati' file).",
          "Expected Result": "The system identifies the store as not requiring data modification."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the data retrieval process for the selected store.",
          "Expected Result": "The system fetches the store's master data from the MDM system."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the retrieved data matches the records in the MDM system for the selected store.",
          "Expected Result": "All master data fields are consistent with the MDM source and no modification prompts are shown."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module (FASE 1)",
      "Preconditions": "User has access to the data collection module. The MDM system is available and contains up-to-date master data for stores. The 'ZENIT - Elenco dati' file is available and up to date.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval from MDM for unmodified store records",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store IDs with unmodified master data as per 'ZENIT - Elenco dati' and corresponding MDM records.",
      "Expected Result": "The system retrieves and displays unmodified store master data from the MDM system, matching the source records exactly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify system behavior when MDM is unavailable during data retrieval",
      "ID": "TC-090",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate MDM system unavailability (e.g., disconnect network or stop MDM service).",
          "Expected Result": "MDM system is unreachable from the data collection module."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to retrieve master data for a store that does not require modification.",
          "Expected Result": "The system attempts to connect to MDM and fails."
        },
        {
          "Step": 3,
          "Step Description": "Observe the error message or system response.",
          "Expected Result": "A clear, user-friendly error message is displayed indicating that the MDM system is unavailable and data cannot be retrieved at this time."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module (FASE 1)",
      "Preconditions": "User has access to the data collection module. The MDM system is intentionally made unavailable. The 'ZENIT - Elenco dati' file is available.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for MDM unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store IDs with unmodified master data as per 'ZENIT - Elenco dati'.",
      "Expected Result": "The system gracefully handles MDM unavailability and informs the user appropriately without crashing or displaying technical errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify that only required data fields are retrieved as per 'ZENIT - Elenco dati' frequency",
      "ID": "TC-091",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module (FASE 1).",
          "Expected Result": "The data collection interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a store whose master data does not require modification.",
          "Expected Result": "The system identifies the store as not requiring data modification."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the data retrieval process for the selected store.",
          "Expected Result": "The system fetches the store's master data from the MDM system."
        },
        {
          "Step": 4,
          "Step Description": "Compare the retrieved data fields with the list and frequency specified in the latest 'ZENIT - Elenco dati' file.",
          "Expected Result": "Only the required fields, as per the specified frequency, are retrieved and displayed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module (FASE 1)",
      "Preconditions": "User has access to the data collection module. The MDM system is available. The latest 'ZENIT - Elenco dati' file is available and specifies field frequencies.",
      "Execution Mode": "Manual",
      "Functionality": "Field-level data retrieval compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store IDs and expected field list as per 'ZENIT - Elenco dati'.",
      "Expected Result": "The system retrieves and displays only the required data fields for each store, in compliance with the 'ZENIT - Elenco dati' frequency specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify system does not allow modification of master data for stores marked as 'no modification required'",
      "ID": "TC-092",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data collection module (FASE 1).",
          "Expected Result": "The data collection interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a store whose master data does not require modification.",
          "Expected Result": "The system identifies the store as not requiring data modification."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to edit any of the master data fields for the selected store.",
          "Expected Result": "The system prevents editing and displays a message indicating that modification is not allowed for this store."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Collection Module (FASE 1)",
      "Preconditions": "User has access to the data collection module. The MDM system is available. The 'ZENIT - Elenco dati' file is available and up to date.",
      "Execution Mode": "Manual",
      "Functionality": "Edit restriction for unmodifiable store data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Store IDs marked as 'no modification required' in 'ZENIT - Elenco dati'.",
      "Expected Result": "The system does not allow modification of master data for stores marked as 'no modification required'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1"
    },
    {
      "Title": "Verify transmission of Insoluti flow data on PoS overdue change",
      "ID": "TC-093",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the overdue (insoluti) status for a specific PoS in SAP.",
          "Expected Result": "System detects the change in overdue status for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following data is retrieved from SAP for the affected PoS: IdRice, Numero Insoluti Totali, Numero Insoluti Anno Corrente, Numero Insoluti a 6 mesi Rolling, Numero Insoluti a 12 mesi Rolling.",
          "Expected Result": "All required data fields are correctly retrieved from SAP."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system sends the retrieved data as a flow to the designated recipient/system.",
          "Expected Result": "Data flow is sent containing all required fields with correct values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "PoS exists in SAP with at least one overdue record. System is connected to SAP and able to receive change notifications.",
      "Execution Mode": "Manual",
      "Functionality": "Insoluti flow data extraction and transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with overdue records and known values for all required fields.",
      "Expected Result": "Upon any change in PoS overdue status, the system retrieves and sends all required Insoluti data fields from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Garanzie flow data transmission on PoS guarantee change",
      "ID": "TC-094",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the guarantee (garanzia) status for a specific PoS in SAP (e.g., add or modify a guarantee).",
          "Expected Result": "System detects the change in guarantee status for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following data is retrieved from SAP: IdRice, Tipologia Garanzia, Importo Saldo Complessivo per tipologia Garanzie, Data Inizio Garanzia (if Fidejussioni), Data Scadenza Garanzia (if Fidejussioni).",
          "Expected Result": "All required data fields are correctly retrieved from SAP, with date fields present only for Fidejussioni."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system sends the retrieved data as a flow to the designated recipient/system.",
          "Expected Result": "Data flow is sent containing all required fields with correct values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "PoS exists in SAP with at least one guarantee record. System is connected to SAP and able to receive change notifications.",
      "Execution Mode": "Manual",
      "Functionality": "Garanzie flow data extraction and transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with different types of guarantees, including Fidejussioni with known start and end dates.",
      "Expected Result": "Upon any change in PoS guarantee status, the system retrieves and sends all required Garanzie data fields from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Blocco al Sollecito flow data transmission on status change",
      "ID": "TC-095",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the 'Blocco al Sollecito' status for a specific PoS in SAP (e.g., escalate from 'piano di rientro' to 'diffida').",
          "Expected Result": "System detects the change in Blocco al Sollecito status for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following data is retrieved from SAP: IdRice, Blocco al Sollecito (only the most severe block for the customer, regardless of company).",
          "Expected Result": "System retrieves only the most severe block according to the defined hierarchy."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system sends the retrieved data as a flow to the designated recipient/system.",
          "Expected Result": "Data flow is sent containing IdRice and the most severe Blocco al Sollecito value."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "PoS exists in SAP with at least one open item and a Blocco al Sollecito status. System is connected to SAP and able to receive change notifications.",
      "Execution Mode": "Manual",
      "Functionality": "Blocco al Sollecito flow data extraction and transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with multiple block statuses to test hierarchy (e.g., legal > diffida > piano di rientro).",
      "Expected Result": "Upon any change in Blocco al Sollecito status, the system retrieves and sends only the most severe block for the customer from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Crediti Aperti flow data transmission on open credit change",
      "ID": "TC-096",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the open credit (credito aperto) for a specific PoS in SAP (e.g., new open item or payment).",
          "Expected Result": "System detects the change in open credit for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following data is retrieved from SAP: IdRice, Importo Saldo Complessivo for each relevant COGE and company code as specified.",
          "Expected Result": "System retrieves balances for all specified COGE/company code combinations."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system sends the retrieved data as a flow to the designated recipient/system.",
          "Expected Result": "Data flow is sent containing IdRice and balances for all required accounts."
        },
        {
          "Step": 4,
          "Step Description": "If the open credit is of type 'IAG', verify that it remains open for a few hours after IAG event.",
          "Expected Result": "System continues to report IAG open credits for the expected duration after IAG."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "PoS exists in SAP with open credits in the specified accounts. System is connected to SAP and able to receive change notifications.",
      "Execution Mode": "Manual",
      "Functionality": "Crediti Aperti flow data extraction and transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with open credits in accounts 158001, 150005, 150001, 152001 for companies 3030 and 1012, including IAG credits.",
      "Expected Result": "Upon any change in open credits, the system retrieves and sends all required Crediti Aperti data fields from SAP, including correct handling of IAG credits.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify Hopper and Cambia Monete flow data transmission on amount change",
      "ID": "TC-097",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger a variation in the Hopper or Cambia Monete amount for a specific PoS in SAP (e.g., update Hopper IAG - Fine Rapporto).",
          "Expected Result": "System detects the change in Hopper or Cambia Monete amount for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the following data is retrieved from SAP: IdRice, Importo Saldo Hopper IAG - Fine Rapporto, Importo Saldo Hopper IAG - Recupero, Importo Saldo Cambia Monete.",
          "Expected Result": "All required data fields are correctly retrieved from SAP."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system sends the retrieved data as a flow to the designated recipient/system.",
          "Expected Result": "Data flow is sent containing all required Hopper and Cambia Monete fields with correct values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "PoS exists in SAP with Hopper and/or Cambia Monete records. System is connected to SAP and able to receive change notifications.",
      "Execution Mode": "Manual",
      "Functionality": "Hopper and Cambia Monete flow data extraction and transmission",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with known Hopper and Cambia Monete values for all required fields.",
      "Expected Result": "Upon any change in Hopper or Cambia Monete amounts, the system retrieves and sends all required data fields from SAP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify error handling when SAP data is unavailable during flow transmission",
      "ID": "TC-098",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a scenario where SAP is temporarily unavailable when a data variation occurs (e.g., network outage or SAP maintenance).",
          "Expected Result": "System attempts to retrieve data from SAP and fails due to unavailability."
        },
        {
          "Step": 2,
          "Step Description": "Verify that the system logs the error and does not send incomplete or incorrect data flows.",
          "Expected Result": "Error is logged and no data flow is sent."
        },
        {
          "Step": 3,
          "Step Description": "Check that the system retries data retrieval according to defined retry policy (if applicable).",
          "Expected Result": "System retries data retrieval as per configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "SAP Data Integration",
      "Preconditions": "System is configured to connect to SAP. SAP is made unavailable for the test duration.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for SAP data unavailability",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Any PoS with a data variation event during SAP downtime.",
      "Expected Result": "If SAP is unavailable, the system logs the error, does not send incomplete data, and retries as configured.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.1"
    },
    {
      "Title": "Verify daily data flow generation for all PoS with required fields",
      "ID": "TC-099",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or wait for the scheduled daily data flow generation process to execute.",
          "Expected Result": "The data flow process starts and completes without errors."
        },
        {
          "Step": 2,
          "Step Description": "Access the generated daily data file or data stream for the current day.",
          "Expected Result": "The daily data file/stream is available and accessible."
        },
        {
          "Step": 3,
          "Step Description": "For each PoS entry in the data, verify the presence of the following fields: IdRice, ZonaRice, Nr VLT, Nr VLT Medie YTD.",
          "Expected Result": "Each PoS entry contains all four required fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Generation",
      "Preconditions": "System is configured to generate daily data flows. At least one PoS is present in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation for PoS VLT information",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS with valid data for all required fields.",
      "Expected Result": "A daily data flow is generated containing, for each PoS, the fields: IdRice, ZonaRice, Nr VLT, Nr VLT Medie YTD.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify data accuracy for 'Nr VLT Medie YTD' field in daily data flow",
      "ID": "TC-100",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger or wait for the scheduled daily data flow generation process to execute.",
          "Expected Result": "The data flow process starts and completes without errors."
        },
        {
          "Step": 2,
          "Step Description": "Access the generated daily data file or data stream for the current day.",
          "Expected Result": "The daily data file/stream is available and accessible."
        },
        {
          "Step": 3,
          "Step Description": "For a selected PoS, retrieve the value of 'Nr VLT Medie YTD' from the data flow.",
          "Expected Result": "The 'Nr VLT Medie YTD' value is present for the PoS."
        },
        {
          "Step": 4,
          "Step Description": "Independently calculate the expected 'Nr VLT Medie YTD' for the PoS based on historical data.",
          "Expected Result": "The independently calculated value is available."
        },
        {
          "Step": 5,
          "Step Description": "Compare the value from the data flow with the independently calculated value.",
          "Expected Result": "The values match, confirming data accuracy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Generation",
      "Preconditions": "System is configured to generate daily data flows. Historical data for the selected PoS is available.",
      "Execution Mode": "Manual",
      "Functionality": "Calculation and reporting of 'Nr VLT Medie YTD' in daily data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Historical VLT data for at least one PoS.",
      "Expected Result": "The 'Nr VLT Medie YTD' field in the daily data flow matches the independently calculated value for the PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify handling of missing PoS data in daily data flow",
      "ID": "TC-101",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure there is a PoS in the system with missing or incomplete data for one or more required fields (e.g., missing ZonaRice).",
          "Expected Result": "A PoS with incomplete data exists in the system."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data flow generation process to execute.",
          "Expected Result": "The data flow process starts and completes without errors."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated daily data file or data stream for the current day.",
          "Expected Result": "The daily data file/stream is available and accessible."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the system represents the PoS with missing data in the output (e.g., field left blank, null, or error message).",
          "Expected Result": "The system handles missing data gracefully, according to specification (e.g., fields are null or blank, no system crash or data corruption)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Generation",
      "Preconditions": "At least one PoS with missing or incomplete data for a required field exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing or incomplete PoS data in daily data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing ZonaRice or other required field.",
      "Expected Result": "The daily data flow handles missing PoS data gracefully, without errors or data corruption, and represents missing fields as per specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify daily data flow generation when no PoS are present",
      "ID": "TC-102",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system contains no PoS records.",
          "Expected Result": "The PoS list is empty."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data flow generation process to execute.",
          "Expected Result": "The data flow process starts and completes without errors."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated daily data file or data stream for the current day.",
          "Expected Result": "The daily data file/stream is available and accessible."
        },
        {
          "Step": 4,
          "Step Description": "Verify the content of the data flow for the absence of PoS data.",
          "Expected Result": "The data flow contains no PoS entries, or an empty structure as per specification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Generation",
      "Preconditions": "No PoS records exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation with empty PoS list",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No PoS in the system.",
      "Expected Result": "The daily data flow is generated successfully and contains no PoS entries when no PoS are present in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.2"
    },
    {
      "Title": "Verify Data Flow Creation for All Required Fields per Product Type",
      "ID": "TC-103",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend responsible for data flow creation.",
          "Expected Result": "System backend is accessible."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for a specific product type (e.g., 'Prodotto A').",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required fields: Id Rice, Alias, Zona/Rice, Prodotto, Soglia Base, Estensione, Totale, Consumato, % consumata, Residuo.",
          "Expected Result": "All fields accept input and are populated."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request without errors."
        },
        {
          "Step": 5,
          "Step Description": "Retrieve and review the created data flow for the selected product type.",
          "Expected Result": "All required fields are present and contain the entered values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and permission to create data flows. At least one product type is configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for product information",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid product type, sample values for all required fields (e.g., Id Rice: 12345, Alias: 'TestAlias', etc.)",
      "Expected Result": "A data flow is created containing all specified fields with correct values for the selected product type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Data Flow Field Validation for Missing Required Fields",
      "ID": "TC-104",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation interface for a product type.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to submit the data flow creation form with one or more required fields left blank (e.g., omit 'Id Rice').",
          "Expected Result": "System displays a validation error indicating the missing required field(s)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and permission to create data flows.",
      "Execution Mode": "Manual",
      "Functionality": "Field validation during data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Product type, partial field input (e.g., missing 'Id Rice')",
      "Expected Result": "System prevents creation and displays appropriate validation errors for missing required fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Data Flow Calculation of % Consumed and Residual Values",
      "ID": "TC-105",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation interface for a product type.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter values for 'Totale' and 'Consumato' fields (e.g., Totale: 100, Consumato: 25).",
          "Expected Result": "Fields accept numeric input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request."
        },
        {
          "Step": 4,
          "Step Description": "Retrieve the created data flow and review the '% consumata' and 'Residuo' fields.",
          "Expected Result": "'% consumata' is correctly calculated as (Consumato/Totale)*100 (e.g., 25%), and 'Residuo' is correctly calculated as (Totale-Consumato) (e.g., 75)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and permission to create data flows.",
      "Execution Mode": "Manual",
      "Functionality": "Automatic calculation of percentage consumed and residual values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Totale: 100, Consumato: 25",
      "Expected Result": "'% consumata' and 'Residuo' are automatically and correctly calculated based on input values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Data Flow Creation with Boundary Values for Numeric Fields",
      "ID": "TC-106",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation interface for a product type.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter minimum and maximum allowed values for numeric fields (e.g., Soglia Base: 0, Totale: maximum supported value).",
          "Expected Result": "Fields accept boundary values."
        },
        {
          "Step": 3,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System processes the request without errors."
        },
        {
          "Step": 4,
          "Step Description": "Retrieve and review the created data flow for correctness of stored values.",
          "Expected Result": "Data flow contains the correct boundary values for all numeric fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and permission to create data flows.",
      "Execution Mode": "Manual",
      "Functionality": "Boundary value handling for numeric fields in data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Soglia Base: 0, Totale: system max value, Consumato: 0 or max value, etc.",
      "Expected Result": "System accepts and correctly stores boundary values for all numeric fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Data Flow Creation with Invalid Data Types",
      "ID": "TC-107",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation interface for a product type.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to enter invalid data types in numeric fields (e.g., letters in 'Totale' or 'Consumato').",
          "Expected Result": "System prevents entry or displays an error for invalid data types."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to submit the form with invalid data types present.",
          "Expected Result": "System displays a validation error and prevents data flow creation."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and permission to create data flows.",
      "Execution Mode": "Manual",
      "Functionality": "Input validation for data types in data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid data types (e.g., 'abc' in Totale)",
      "Expected Result": "System rejects invalid data types and displays appropriate error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.3 DATI SIMP"
    },
    {
      "Title": "Verify Data Flow Creation for VLT Contract Type",
      "ID": "TC-108",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for contract data management.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for a new contract.",
          "Expected Result": "System prompts for contract type selection."
        },
        {
          "Step": 3,
          "Step Description": "Select 'VLT' as the contract type from the available options.",
          "Expected Result": "'VLT' contract type is selected and accepted by the system."
        },
        {
          "Step": 4,
          "Step Description": "Enter all required contract details (e.g., contract ID, start date, end date, parties involved).",
          "Expected Result": "All required contract details are entered without validation errors."
        },
        {
          "Step": 5,
          "Step Description": "Submit the contract data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the data flow for VLT contract type."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new VLT contract data flow is present in the system and data is correctly stored.",
          "Expected Result": "VLT contract data flow is present and all details are accurately stored in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Contracts Data Management",
      "Preconditions": "User has valid backend access credentials. System is configured to allow contract data flow creation. No existing VLT contract with the same ID.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for VLT contract type",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid backend user credentials; sample VLT contract data (unique contract ID, valid dates, parties).",
      "Expected Result": "A new data flow for a VLT contract type is successfully created and stored in the system with all provided details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Data Flow Creation for Betting Contract Type",
      "ID": "TC-109",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for contract data management.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for a new contract.",
          "Expected Result": "System prompts for contract type selection."
        },
        {
          "Step": 3,
          "Step Description": "Select 'Betting' as the contract type from the available options.",
          "Expected Result": "'Betting' contract type is selected and accepted by the system."
        },
        {
          "Step": 4,
          "Step Description": "Enter all required contract details (e.g., contract ID, start date, end date, parties involved).",
          "Expected Result": "All required contract details are entered without validation errors."
        },
        {
          "Step": 5,
          "Step Description": "Submit the contract data flow creation request.",
          "Expected Result": "System processes the request and confirms successful creation of the data flow for Betting contract type."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new Betting contract data flow is present in the system and data is correctly stored.",
          "Expected Result": "Betting contract data flow is present and all details are accurately stored in the system."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Contracts Data Management",
      "Preconditions": "User has valid backend access credentials. System is configured to allow contract data flow creation. No existing Betting contract with the same ID.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Betting contract type",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid backend user credentials; sample Betting contract data (unique contract ID, valid dates, parties).",
      "Expected Result": "A new data flow for a Betting contract type is successfully created and stored in the system with all provided details.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Error Handling for Duplicate Contract ID in Data Flow Creation",
      "ID": "TC-110",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for contract data management.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for a new contract.",
          "Expected Result": "System prompts for contract type selection."
        },
        {
          "Step": 3,
          "Step Description": "Select either 'VLT' or 'Betting' as the contract type.",
          "Expected Result": "Contract type is selected and accepted by the system."
        },
        {
          "Step": 4,
          "Step Description": "Enter contract details using a contract ID that already exists in the system.",
          "Expected Result": "System detects the duplicate contract ID upon entry or submission."
        },
        {
          "Step": 5,
          "Step Description": "Submit the contract data flow creation request.",
          "Expected Result": "System displays an error message indicating that the contract ID already exists and prevents creation of the duplicate data flow."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Contracts Data Management",
      "Preconditions": "User has valid backend access credentials. At least one contract (VLT or Betting) with a known contract ID already exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Duplicate contract ID validation in data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid backend user credentials; existing contract ID for VLT or Betting contract.",
      "Expected Result": "System prevents creation of a new data flow with a duplicate contract ID and displays an appropriate error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Mandatory Field Validation During Data Flow Creation",
      "ID": "TC-111",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for contract data management.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for a new contract.",
          "Expected Result": "System prompts for contract type selection."
        },
        {
          "Step": 3,
          "Step Description": "Select 'VLT' or 'Betting' as the contract type.",
          "Expected Result": "Contract type is selected and accepted by the system."
        },
        {
          "Step": 4,
          "Step Description": "Leave one or more mandatory fields (e.g., contract ID, start date) empty or invalid.",
          "Expected Result": "System detects missing or invalid mandatory fields upon entry or submission."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to submit the contract data flow creation request.",
          "Expected Result": "System displays validation errors for missing or invalid mandatory fields and prevents submission."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Contracts Data Management",
      "Preconditions": "User has valid backend access credentials. System is configured to enforce mandatory field validation.",
      "Execution Mode": "Manual",
      "Functionality": "Mandatory field validation in data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid backend user credentials; incomplete or invalid contract data for VLT or Betting contract.",
      "Expected Result": "System prevents submission of contract data flow creation with missing or invalid mandatory fields and displays appropriate validation errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.4"
    },
    {
      "Title": "Verify Data Flow Creation for All Required Fields Not Acquired from MDM",
      "ID": "TC-112",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "Data flow creation interface is presented."
        },
        {
          "Step": 3,
          "Step Description": "Input a dataset where none of the required fields are present in MDM.",
          "Expected Result": "System prompts for all required fields to be entered."
        },
        {
          "Step": 4,
          "Step Description": "Enter valid values for each required field (Canale, Cluster, Codice SIMP MDM, ZnRice, etc.).",
          "Expected Result": "All fields accept the input and validate format where applicable."
        },
        {
          "Step": 5,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "Data flow is created successfully and all entered fields are included in the distribution."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated and has permissions to create data flows. MDM does not contain the required fields for the test dataset.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for network distribution when fields are not present in MDM.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Dataset with all required fields missing from MDM; valid example values for each field.",
      "Expected Result": "A new data flow is created containing all required fields, and the data is distributed as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify System Skips Data Flow Creation for Fields Already Acquired from MDM",
      "ID": "TC-113",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "Data flow creation interface is presented."
        },
        {
          "Step": 3,
          "Step Description": "Input a dataset where some required fields are already present in MDM.",
          "Expected Result": "System identifies fields already present in MDM."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to create the data flow.",
          "Expected Result": "System only prompts for fields not present in MDM and skips those already acquired."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated. MDM contains some of the required fields for the test dataset.",
      "Execution Mode": "Manual",
      "Functionality": "Conditional data flow creation based on MDM data presence.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Dataset with a subset of required fields already present in MDM.",
      "Expected Result": "Data flow is created only for fields not present in MDM; no duplication occurs.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Field Format and Data Validation for All Required Fields",
      "ID": "TC-114",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "Data flow creation interface is presented."
        },
        {
          "Step": 3,
          "Step Description": "Enter invalid data formats for each required field (e.g., letters in numeric fields, invalid email format, etc.).",
          "Expected Result": "System displays validation errors for each field with incorrect format."
        },
        {
          "Step": 4,
          "Step Description": "Correct the data to valid formats and resubmit.",
          "Expected Result": "System accepts the valid data and proceeds with data flow creation."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated. Data flow creation interface is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Field validation and format enforcement for required fields.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test values with invalid and valid formats for each required field.",
      "Expected Result": "System enforces correct data formats for all fields and prevents submission of invalid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Privacy Compliance for Phone Number Fields",
      "ID": "TC-115",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "Data flow creation interface is presented."
        },
        {
          "Step": 3,
          "Step Description": "Enter a personal phone number (not belonging to the PoS) in 'Telefono 1', 'Telefono 2', 'Cell Titolare', or 'Cell Titolare 2' fields.",
          "Expected Result": "System displays a warning or error indicating that only PoS phone numbers are allowed for privacy reasons."
        },
        {
          "Step": 4,
          "Step Description": "Replace with a valid PoS phone number and resubmit.",
          "Expected Result": "System accepts the PoS phone number and allows data flow creation."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated. Data flow creation interface is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Privacy validation for phone number fields.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Personal and PoS phone numbers for test fields.",
      "Expected Result": "System enforces that only PoS phone numbers are accepted for the specified fields, ensuring privacy compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Data Flow Creation with Missing Optional Fields",
      "ID": "TC-116",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data distribution system as an authorized user.",
          "Expected Result": "System dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for network distribution.",
          "Expected Result": "Data flow creation interface is presented."
        },
        {
          "Step": 3,
          "Step Description": "Leave one or more optional fields (e.g., Telefono 2, Cell Titolare 2) empty while filling all mandatory fields.",
          "Expected Result": "System allows submission without requiring optional fields."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "Data flow is created successfully with only the provided fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Network Data Distribution",
      "Preconditions": "User is authenticated. Data flow creation interface is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing optional fields during data flow creation.",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Dataset with some optional fields left empty.",
      "Expected Result": "System allows creation of data flow with missing optional fields and processes only the provided data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.5"
    },
    {
      "Title": "Verify Daily Data Flow Generation for All Required PoS Fields",
      "ID": "TC-117",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system date is set to a typical business day.",
          "Expected Result": "System is ready for daily data flow generation."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data flow process for all PoS.",
          "Expected Result": "Daily data flow process is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated daily data flow output for a sample PoS.",
          "Expected Result": "Daily data flow output is accessible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the following fields are present and populated: ZonaRice, Nr AWP altro concessionario, Crediti 'NOIAG', Hopper 'NOIAG', Chiavi Cassetto AWP, Chiavi Sportello AWP, Chiavi Cambia Monete AWP.",
          "Expected Result": "All required fields are present and contain valid data for the PoS."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "At least one PoS is configured in the system with all relevant data available.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation for PoS information",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample PoS with complete data for all required fields.",
      "Expected Result": "The daily data flow for each PoS contains all specified fields with valid data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Real-Time Retrieval of ZonaRice for a PoS",
      "ID": "TC-118",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Select a PoS for which real-time data retrieval is required.",
          "Expected Result": "PoS is selected."
        },
        {
          "Step": 2,
          "Step Description": "Request real-time retrieval of ZonaRice for the selected PoS via the appropriate interface (API, UI, etc.).",
          "Expected Result": "System processes the real-time data request."
        },
        {
          "Step": 3,
          "Step Description": "Observe the response returned by the system.",
          "Expected Result": "ZonaRice value is returned promptly and matches the expected value in the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "PoS exists with a valid ZonaRice value in the database.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time data retrieval for ZonaRice",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier with known ZonaRice value.",
      "Expected Result": "ZonaRice is retrieved in real-time and matches the stored value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Real-Time Retrieval of Crediti 'NOIAG' for a PoS",
      "ID": "TC-119",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Select a PoS for which real-time data retrieval is required.",
          "Expected Result": "PoS is selected."
        },
        {
          "Step": 2,
          "Step Description": "Request real-time retrieval of Crediti 'NOIAG' for the selected PoS via the appropriate interface.",
          "Expected Result": "System processes the real-time data request."
        },
        {
          "Step": 3,
          "Step Description": "Observe the response returned by the system.",
          "Expected Result": "Crediti 'NOIAG' value is returned promptly and matches the expected value in the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "PoS exists with a valid Crediti 'NOIAG' value in the database.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time data retrieval for Crediti 'NOIAG'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier with known Crediti 'NOIAG' value.",
      "Expected Result": "Crediti 'NOIAG' is retrieved in real-time and matches the stored value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Real-Time Retrieval of Hopper 'NOIAG' for a PoS",
      "ID": "TC-120",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Select a PoS for which real-time data retrieval is required.",
          "Expected Result": "PoS is selected."
        },
        {
          "Step": 2,
          "Step Description": "Request real-time retrieval of Hopper 'NOIAG' for the selected PoS via the appropriate interface.",
          "Expected Result": "System processes the real-time data request."
        },
        {
          "Step": 3,
          "Step Description": "Observe the response returned by the system.",
          "Expected Result": "Hopper 'NOIAG' value is returned promptly and matches the expected value in the database."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "PoS exists with a valid Hopper 'NOIAG' value in the database.",
      "Execution Mode": "Manual",
      "Functionality": "Real-time data retrieval for Hopper 'NOIAG'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS identifier with known Hopper 'NOIAG' value.",
      "Expected Result": "Hopper 'NOIAG' is retrieved in real-time and matches the stored value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Daily Data Flow Handles Missing or Null Values Gracefully",
      "ID": "TC-121",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure a PoS with one or more required fields (e.g., Crediti 'NOIAG', Hopper 'NOIAG') set to null or missing in the database.",
          "Expected Result": "PoS is configured with incomplete data."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the daily data flow process for all PoS.",
          "Expected Result": "Daily data flow process is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated daily data flow output for the PoS with missing data.",
          "Expected Result": "Daily data flow output is accessible."
        },
        {
          "Step": 4,
          "Step Description": "Verify how the system represents missing or null values in the output (e.g., empty string, null, default value, error message).",
          "Expected Result": "Missing or null values are handled according to system specification, without causing process failure."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "At least one PoS with missing or null values for required fields.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow error handling for missing values",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS with missing/null values for required fields.",
      "Expected Result": "Daily data flow completes successfully, and missing values are handled as specified.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Daily Data Flow Generation for Multiple PoS",
      "ID": "TC-122",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure multiple PoS are configured in the system with valid data for all required fields.",
          "Expected Result": "Multiple PoS are available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or wait for the scheduled daily data flow process.",
          "Expected Result": "Daily data flow process is initiated."
        },
        {
          "Step": 3,
          "Step Description": "Access the generated daily data flow output.",
          "Expected Result": "Daily data flow output is accessible."
        },
        {
          "Step": 4,
          "Step Description": "Verify that each PoS entry in the output contains all required fields and valid data.",
          "Expected Result": "All PoS entries are present and complete in the daily data flow output."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "Multiple PoS configured with valid data.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data flow generation for multiple PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Multiple PoS with valid data.",
      "Expected Result": "Daily data flow includes all configured PoS with complete data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify Real-Time Retrieval Fails Gracefully for Non-Existent PoS",
      "ID": "TC-123",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to retrieve real-time data (ZonaRice, Crediti 'NOIAG', Hopper 'NOIAG') for a PoS identifier that does not exist in the system.",
          "Expected Result": "System processes the request for a non-existent PoS."
        },
        {
          "Step": 2,
          "Step Description": "Observe the response returned by the system.",
          "Expected Result": "System returns an appropriate error message or code indicating the PoS does not exist."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Low",
      "Test Stage": "TEST",
      "Reference System": "Data Flow Management",
      "Preconditions": "No PoS exists with the specified identifier.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for real-time data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-existent PoS identifier.",
      "Expected Result": "System returns a clear error for non-existent PoS in real-time retrieval requests.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.6"
    },
    {
      "Title": "Verify correct data flow creation for GNTN product with all required GEO fields",
      "ID": "TC-124",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the system backend as a user with permissions to create data flows.",
          "Expected Result": "User is authenticated and can access the data flow creation interface."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for the GNTN product.",
          "Expected Result": "System displays the data flow creation form for GNTN."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid values for all required fields: SIGLA ZONA, NUM RICE, FIDO BASE, ESTENS. FIDO, FIDO TOTALE, FIDO CONS., PERC. FIDO CONS., FIDO RESIDUO.",
          "Expected Result": "All fields accept the input and display no validation errors."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation form.",
          "Expected Result": "System processes the request and confirms successful creation of the data flow."
        },
        {
          "Step": 5,
          "Step Description": "Query or view the created data flow details.",
          "Expected Result": "All entered GEO data fields are correctly stored and displayed for the GNTN product."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and permissions to create data flows. GNTN product is available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Creation for GNTN",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid sample values for all GEO fields (e.g., SIGLA ZONA: 'A1', NUM RICE: '12345', FIDO BASE: '1000', etc.)",
      "Expected Result": "A new data flow for GNTN is created with all required GEO fields correctly stored and retrievable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify mandatory GEO fields validation for CONTI GIOCO product",
      "ID": "TC-125",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow creation interface for CONTI GIOCO product.",
          "Expected Result": "Data flow creation form for CONTI GIOCO is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to submit the form with one or more required GEO fields left blank (e.g., omit FIDO BASE).",
          "Expected Result": "System displays validation errors indicating which fields are mandatory."
        },
        {
          "Step": 3,
          "Step Description": "Fill in all required fields and resubmit the form.",
          "Expected Result": "Form is accepted and data flow is created successfully."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access and permissions. CONTI GIOCO product is available.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Field Validation for CONTI GIOCO",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test with missing fields (e.g., FIDO BASE: blank) and then with all fields filled.",
      "Expected Result": "System enforces mandatory GEO fields for CONTI GIOCO and prevents submission if any are missing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify correct calculation of derived GEO fields (PERC. FIDO CONS.) for CORNER product",
      "ID": "TC-126",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation interface for CORNER product.",
          "Expected Result": "Data flow creation form for CORNER is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid values for FIDO CONS. and FIDO TOTALE (e.g., FIDO CONS.: 200, FIDO TOTALE: 1000).",
          "Expected Result": "Fields accept the input."
        },
        {
          "Step": 3,
          "Step Description": "Submit the form and view the created data flow details.",
          "Expected Result": "System calculates PERC. FIDO CONS. as (FIDO CONS. / FIDO TOTALE) * 100 and displays the correct percentage (e.g., 20%)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access. CORNER product is available.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Calculation for CORNER",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "FIDO CONS.: 200, FIDO TOTALE: 1000",
      "Expected Result": "PERC. FIDO CONS. is correctly calculated and displayed for CORNER product data flow.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify system behavior with invalid numeric input for GEO fields",
      "ID": "TC-127",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation interface for any supported product (e.g., GNTN).",
          "Expected Result": "Data flow creation form is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid (non-numeric or negative) values in numeric GEO fields (e.g., FIDO BASE: 'abc', FIDO CONS.: -100).",
          "Expected Result": "System displays validation errors for invalid input."
        },
        {
          "Step": 3,
          "Step Description": "Correct the input to valid numeric values and resubmit.",
          "Expected Result": "Form is accepted and data flow is created."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access. At least one product is available.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Input Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "FIDO BASE: 'abc', FIDO CONS.: -100, then valid values.",
      "Expected Result": "System rejects invalid numeric input for GEO fields and accepts only valid values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify data flow creation for all supported products (GNTN, CONTI GIOCO, CORNER)",
      "ID": "TC-128",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "For each product (GNTN, CONTI GIOCO, CORNER), access the data flow creation interface.",
          "Expected Result": "Data flow creation form is available for each product."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid values for all required GEO fields for each product.",
          "Expected Result": "Fields accept the input for each product."
        },
        {
          "Step": 3,
          "Step Description": "Submit the form for each product and verify creation success.",
          "Expected Result": "System confirms successful creation of data flow for each product."
        },
        {
          "Step": 4,
          "Step Description": "View the details of each created data flow.",
          "Expected Result": "All GEO fields are correctly stored and displayed for each product."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Flow Management",
      "Preconditions": "User has backend access. All products are available in the system.",
      "Execution Mode": "Manual",
      "Functionality": "GEO Data Flow Creation for All Products",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid sample values for each product's GEO fields.",
      "Expected Result": "Data flows for GNTN, CONTI GIOCO, and CORNER are created with all GEO fields correctly stored and displayed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.7 DATI GEO"
    },
    {
      "Title": "Verify DWH flow creation for tickets paid in other agencies with all required fields populated",
      "ID": "TC-129",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "System is accessible and ready for data input."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record marked as 'paid in other agency' with valid values for COD_AGENZIA, ZONA_RICE, COD_GIORNO_COMPETENZA, COD_GIORNO_CASSA, COD_GIORNO_PAGAMENTO, COD_AGENZIA_PAGAMENTO, ZONA_RICE_PAGAMENTO, IMP_GIOCATO, and IMP_VINCITA.",
          "Expected Result": "Ticket record is accepted by the system."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for the inserted ticket.",
          "Expected Result": "DWH flow is executed without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the DWH output contains all the required fields with correct values as per the input.",
          "Expected Result": "DWH output includes all specified fields with values matching the input ticket."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "System is configured for DWH flow creation. User has access to backend and necessary permissions. Test data for a ticket paid in another agency is available.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow creation for tickets paid in other agencies",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample ticket data with all required fields populated for 'paid in other agency' scenario.",
      "Expected Result": "DWH flow is created successfully and all required fields are present and correct in the output for tickets paid in other agencies.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify DWH flow creation for winning sports tickets not paid",
      "ID": "TC-130",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "System is accessible and ready for data input."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record marked as 'winning sports ticket not paid' with valid values for all required fields.",
          "Expected Result": "Ticket record is accepted by the system."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for the inserted ticket.",
          "Expected Result": "DWH flow is executed without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the DWH output contains all the required fields with correct values as per the input.",
          "Expected Result": "DWH output includes all specified fields with values matching the input ticket."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "System is configured for DWH flow creation. User has access to backend and necessary permissions. Test data for a winning sports ticket not paid is available.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow creation for winning sports tickets not paid",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample ticket data with all required fields populated for 'winning sports ticket not paid' scenario.",
      "Expected Result": "DWH flow is created successfully and all required fields are present and correct in the output for winning sports tickets not paid.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify DWH flow creation for winning VR tickets not paid",
      "ID": "TC-131",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "System is accessible and ready for data input."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record marked as 'winning VR ticket not paid' with valid values for all required fields.",
          "Expected Result": "Ticket record is accepted by the system."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for the inserted ticket.",
          "Expected Result": "DWH flow is executed without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the DWH output contains all the required fields with correct values as per the input.",
          "Expected Result": "DWH output includes all specified fields with values matching the input ticket."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "System is configured for DWH flow creation. User has access to backend and necessary permissions. Test data for a winning VR ticket not paid is available.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow creation for winning VR tickets not paid",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample ticket data with all required fields populated for 'winning VR ticket not paid' scenario.",
      "Expected Result": "DWH flow is created successfully and all required fields are present and correct in the output for winning VR tickets not paid.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify DWH flow rejects ticket with missing required fields",
      "ID": "TC-132",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "System is accessible and ready for data input."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record with one or more required fields (e.g., COD_AGENZIA or IMP_GIOCATO) left empty or null.",
          "Expected Result": "System validates the input and identifies missing required fields."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for the incomplete ticket.",
          "Expected Result": "DWH flow is not executed and an error or warning is returned indicating missing required fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "System is configured for DWH flow creation. User has access to backend and necessary permissions.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow input validation for required fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample ticket data with missing required fields (e.g., missing COD_AGENZIA, IMP_GIOCATO).",
      "Expected Result": "DWH flow does not process tickets with missing required fields and returns appropriate error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify DWH flow handles boundary values for numeric fields (IMP_GIOCATO, IMP_VINCITA)",
      "ID": "TC-133",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "System is accessible and ready for data input."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record with IMP_GIOCATO and IMP_VINCITA set to their minimum allowed values (e.g., 0 or 0.01 as per business rules).",
          "Expected Result": "Ticket record is accepted if values are within allowed range."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for the ticket.",
          "Expected Result": "DWH flow is executed without errors."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the DWH output contains the correct boundary values for IMP_GIOCATO and IMP_VINCITA.",
          "Expected Result": "DWH output includes IMP_GIOCATO and IMP_VINCITA with the correct minimum values."
        },
        {
          "Step": 5,
          "Step Description": "Repeat steps 2-4 with maximum allowed values for IMP_GIOCATO and IMP_VINCITA.",
          "Expected Result": "DWH output includes IMP_GIOCATO and IMP_VINCITA with the correct maximum values."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "System is configured for DWH flow creation. User has access to backend and necessary permissions. Knowledge of allowed value ranges for IMP_GIOCATO and IMP_VINCITA.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow handling of boundary values for numeric fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample ticket data with IMP_GIOCATO and IMP_VINCITA at minimum and maximum allowed values.",
      "Expected Result": "DWH flow processes tickets with boundary values for numeric fields correctly and outputs the correct values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify DWH flow rejects tickets with invalid data types for required fields",
      "ID": "TC-134",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for DWH flow creation.",
          "Expected Result": "System is accessible and ready for data input."
        },
        {
          "Step": 2,
          "Step Description": "Insert a ticket record with invalid data types for one or more required fields (e.g., alphabetic characters in IMP_GIOCATO or IMP_VINCITA).",
          "Expected Result": "System validates the input and identifies invalid data types."
        },
        {
          "Step": 3,
          "Step Description": "Trigger the DWH flow process for the invalid ticket.",
          "Expected Result": "DWH flow is not executed and an error or warning is returned indicating invalid data types."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "DWH Ticket Flow",
      "Preconditions": "System is configured for DWH flow creation. User has access to backend and necessary permissions.",
      "Execution Mode": "Manual",
      "Functionality": "DWH flow input validation for data types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample ticket data with invalid data types for required fields (e.g., 'abc' in IMP_GIOCATO).",
      "Expected Result": "DWH flow does not process tickets with invalid data types and returns appropriate error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.8"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp gestione IAG'",
      "ID": "TC-135",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow module for AWP data.",
          "Expected Result": "The backend module loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or request the generation of the 'Nr awp gestione IAG' data flow for the current reporting period.",
          "Expected Result": "The system processes the request without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data output for 'Nr awp gestione IAG'.",
          "Expected Result": "The output contains the correct number of AWP managed by IAG, matching the source data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test environment contains valid and up-to-date AWP management data for IAG.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP management records with IAG flag set to true.",
      "Expected Result": "The system correctly calculates and displays the number of AWP managed by IAG.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp gestione NO IAG'",
      "ID": "TC-136",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow module for AWP data.",
          "Expected Result": "The backend module loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or request the generation of the 'Nr awp gestione NO IAG' data flow for the current reporting period.",
          "Expected Result": "The system processes the request without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data output for 'Nr awp gestione NO IAG'.",
          "Expected Result": "The output contains the correct number of AWP managed by entities other than IAG, matching the source data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test environment contains valid and up-to-date AWP management data for non-IAG entities.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP management records with IAG flag set to false.",
      "Expected Result": "The system correctly calculates and displays the number of AWP managed by non-IAG entities.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp terze parti IAG'",
      "ID": "TC-137",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow module for AWP data.",
          "Expected Result": "The backend module loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or request the generation of the 'Nr awp terze parti IAG' data flow for the current reporting period.",
          "Expected Result": "The system processes the request without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data output for 'Nr awp terze parti IAG'.",
          "Expected Result": "The output contains the correct number of third-party AWP managed by IAG, matching the source data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test environment contains valid and up-to-date third-party AWP management data for IAG.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Third-party AWP management records with IAG flag set to true.",
      "Expected Result": "The system correctly calculates and displays the number of third-party AWP managed by IAG.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct calculation and display of 'Nr awp terze parti NO IAG'",
      "ID": "TC-138",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow module for AWP data.",
          "Expected Result": "The backend module loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or request the generation of the 'Nr awp terze parti NO IAG' data flow for the current reporting period.",
          "Expected Result": "The system processes the request without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data output for 'Nr awp terze parti NO IAG'.",
          "Expected Result": "The output contains the correct number of third-party AWP managed by non-IAG entities, matching the source data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test environment contains valid and up-to-date third-party AWP management data for non-IAG entities.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Third-party AWP management records with IAG flag set to false.",
      "Expected Result": "The system correctly calculates and displays the number of third-party AWP managed by non-IAG entities.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify calculation of 'Nr AWP medie YTD' (Year-To-Date Average)",
      "ID": "TC-139",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow module for AWP data.",
          "Expected Result": "The backend module loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or request the calculation of 'Nr AWP medie YTD' for the current year.",
          "Expected Result": "The system processes the request without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data output for 'Nr AWP medie YTD'.",
          "Expected Result": "The output contains the correct year-to-date average number of AWP, matching the calculation based on source data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test environment contains valid AWP data for the current year.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP records for each month of the current year.",
      "Expected Result": "The system correctly calculates and displays the year-to-date average number of AWP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify calculation of 'Coin medio awp' (Average Coin per AWP)",
      "ID": "TC-140",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow module for AWP data.",
          "Expected Result": "The backend module loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or request the calculation of 'Coin medio awp' for the current reporting period.",
          "Expected Result": "The system processes the request without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data output for 'Coin medio awp'.",
          "Expected Result": "The output contains the correct average coin per AWP, matching the calculation based on source data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test environment contains valid coin and AWP data for the reporting period.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Coin and AWP records for the reporting period.",
      "Expected Result": "The system correctly calculates and displays the average coin per AWP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify correct extraction and display of 'TIPO ESA awp' (AWP ESA Type)",
      "ID": "TC-141",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow module for AWP data.",
          "Expected Result": "The backend module loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or request the extraction of 'TIPO ESA awp' data for the current reporting period.",
          "Expected Result": "The system processes the request without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data output for 'TIPO ESA awp'.",
          "Expected Result": "The output contains the correct ESA type(s) for AWP, matching the source data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test environment contains valid ESA type data for AWP.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP records with ESA type information.",
      "Expected Result": "The system correctly extracts and displays the ESA type(s) for AWP.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify system behavior with missing or incomplete AWP data (Negative Test)",
      "ID": "TC-142",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend data flow module for AWP data.",
          "Expected Result": "The backend module loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Trigger or request the generation of all AWP data flows with missing or incomplete source data (e.g., missing IAG flag, missing coin value).",
          "Expected Result": "The system processes the request and handles missing data gracefully."
        },
        {
          "Step": 3,
          "Step Description": "Review the generated data output and system logs for error messages or warnings.",
          "Expected Result": "The system provides clear error messages or warnings for missing/incomplete data and does not crash."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "AWP Data Flow",
      "Preconditions": "Test environment contains incomplete or missing AWP data records.",
      "Execution Mode": "Manual",
      "Functionality": "AWP Data Flow Generation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "AWP records with missing fields (e.g., null IAG flag, null coin value).",
      "Expected Result": "The system handles missing or incomplete AWP data gracefully, providing clear error messages or warnings without system failure.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.9 DATI COMMA 6"
    },
    {
      "Title": "Verify Data Flow Creation for CGS Value from CERVED",
      "ID": "TC-143",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for CERVED data integration.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for 'CGS valore'.",
          "Expected Result": "System prompts for required configuration or parameters for CGS value data flow."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid configuration parameters for CGS value data flow (e.g., source endpoint, destination, data mapping).",
          "Expected Result": "System accepts the configuration and validates the input."
        },
        {
          "Step": 4,
          "Step Description": "Submit the configuration to create the data flow.",
          "Expected Result": "System processes the request and creates the data flow for CGS value."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the data flow is listed among active data flows and its status is 'active' or 'success'.",
          "Expected Result": "CGS value data flow appears in the list with correct status."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "User has access to backend system with permissions to create data flows. CERVED integration endpoints are available.",
      "Execution Mode": "Manual",
      "Functionality": "CGS Value Data Flow Creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid configuration parameters for CGS value data flow (e.g., endpoint URLs, credentials).",
      "Expected Result": "A new data flow for CGS value is successfully created and listed as active in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Creation for Stato Attività from CERVED",
      "ID": "TC-144",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for CERVED data integration.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for 'Stato attività'.",
          "Expected Result": "System prompts for required configuration or parameters for Stato attività data flow."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid configuration parameters for Stato attività data flow (e.g., source endpoint, destination, data mapping).",
          "Expected Result": "System accepts the configuration and validates the input."
        },
        {
          "Step": 4,
          "Step Description": "Submit the configuration to create the data flow.",
          "Expected Result": "System processes the request and creates the data flow for Stato attività."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the data flow is listed among active data flows and its status is 'active' or 'success'.",
          "Expected Result": "Stato attività data flow appears in the list with correct status."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "User has access to backend system with permissions to create data flows. CERVED integration endpoints are available.",
      "Execution Mode": "Manual",
      "Functionality": "Stato Attività Data Flow Creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid configuration parameters for Stato attività data flow (e.g., endpoint URLs, credentials).",
      "Expected Result": "A new data flow for Stato attività is successfully created and listed as active in the system.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Validate Error Handling for Invalid CGS Value Data Flow Configuration",
      "ID": "TC-145",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for CERVED data integration.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for 'CGS valore'.",
          "Expected Result": "System prompts for required configuration or parameters for CGS value data flow."
        },
        {
          "Step": 3,
          "Step Description": "Enter invalid configuration parameters (e.g., incorrect endpoint URL, missing required fields).",
          "Expected Result": "System displays validation errors or rejects the configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "User has access to backend system with permissions to create data flows. CERVED integration endpoints are available.",
      "Execution Mode": "Manual",
      "Functionality": "CGS Value Data Flow Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid configuration parameters for CGS value data flow.",
      "Expected Result": "System prevents creation of the data flow and displays appropriate error messages for invalid configuration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Validate Error Handling for Invalid Stato Attività Data Flow Configuration",
      "ID": "TC-146",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the backend system responsible for CERVED data integration.",
          "Expected Result": "Backend system is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the process to create a data flow for 'Stato attività'.",
          "Expected Result": "System prompts for required configuration or parameters for Stato attività data flow."
        },
        {
          "Step": 3,
          "Step Description": "Enter invalid configuration parameters (e.g., incorrect endpoint URL, missing required fields).",
          "Expected Result": "System displays validation errors or rejects the configuration."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "TEST",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "User has access to backend system with permissions to create data flows. CERVED integration endpoints are available.",
      "Execution Mode": "Manual",
      "Functionality": "Stato Attività Data Flow Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid configuration parameters for Stato attività data flow.",
      "Expected Result": "System prevents creation of the data flow and displays appropriate error messages for invalid configuration.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Execution and Data Consistency for CGS Value",
      "ID": "TC-147",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a valid data flow for CGS value exists and is active.",
          "Expected Result": "CGS value data flow is present and active."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data flow execution manually or wait for scheduled execution.",
          "Expected Result": "Data flow execution starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data transfer process and verify that data is received at the destination endpoint.",
          "Expected Result": "Data is successfully transferred to the destination."
        },
        {
          "Step": 4,
          "Step Description": "Compare a sample of transferred data with source data to ensure consistency and correctness.",
          "Expected Result": "Transferred data matches source data for CGS value."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "A valid and active CGS value data flow exists. Source and destination endpoints are operational.",
      "Execution Mode": "Manual",
      "Functionality": "CGS Value Data Flow Execution and Consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample CGS value data in source system.",
      "Expected Result": "CGS value data is correctly transferred and consistent between source and destination.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Execution and Data Consistency for Stato Attività",
      "ID": "TC-148",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure a valid data flow for Stato attività exists and is active.",
          "Expected Result": "Stato attività data flow is present and active."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data flow execution manually or wait for scheduled execution.",
          "Expected Result": "Data flow execution starts without errors."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data transfer process and verify that data is received at the destination endpoint.",
          "Expected Result": "Data is successfully transferred to the destination."
        },
        {
          "Step": 4,
          "Step Description": "Compare a sample of transferred data with source data to ensure consistency and correctness.",
          "Expected Result": "Transferred data matches source data for Stato attività."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "TEST",
      "Reference System": "CERVED Data Integration",
      "Preconditions": "A valid and active Stato attività data flow exists. Source and destination endpoints are operational.",
      "Execution Mode": "Manual",
      "Functionality": "Stato Attività Data Flow Execution and Consistency",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Stato attività data in source system.",
      "Expected Result": "Stato attività data is correctly transferred and consistent between source and destination.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.10"
    },
    {
      "Title": "Verify Data Flow Creation for 'ZR SHORT' in Corner",
      "ID": "TC-149",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the management control system as an authorized user.",
          "Expected Result": "User is successfully authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow configuration section for 'Corner'.",
          "Expected Result": "Data flow configuration interface for 'Corner' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of the 'ZR SHORT' data flow in the list.",
          "Expected Result": "'ZR SHORT' data flow is listed under 'Corner'."
        },
        {
          "Step": 4,
          "Step Description": "Select 'ZR SHORT' and view its configuration details.",
          "Expected Result": "Configuration details for 'ZR SHORT' are displayed and match the specification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to the management control system. 'Corner' data flows are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation and verification for 'ZR SHORT' under Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; pre-configured 'Corner' data flows.",
      "Expected Result": "'ZR SHORT' data flow is present, correctly configured, and accessible under 'Corner'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'ZR SHORT' data flow presence and configuration under 'Corner'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Creation for 'EBITDA' in Gaming Hall",
      "ID": "TC-150",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the management control system as an authorized user.",
          "Expected Result": "User is successfully authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow configuration section for 'Gaming Hall'.",
          "Expected Result": "Data flow configuration interface for 'Gaming Hall' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of the 'EBITDA' data flow in the list.",
          "Expected Result": "'EBITDA' data flow is listed under 'Gaming Hall'."
        },
        {
          "Step": 4,
          "Step Description": "Select 'EBITDA' and view its configuration details.",
          "Expected Result": "Configuration details for 'EBITDA' are displayed and match the specification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to the management control system. 'Gaming Hall' data flows are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation and verification for 'EBITDA' under Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; pre-configured 'Gaming Hall' data flows.",
      "Expected Result": "'EBITDA' data flow is present, correctly configured, and accessible under 'Gaming Hall'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'EBITDA' data flow presence and configuration under 'Gaming Hall'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Creation for 'GL EBITDA Online' in Shops",
      "ID": "TC-151",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the management control system as an authorized user.",
          "Expected Result": "User is successfully authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow configuration section for 'Shops'.",
          "Expected Result": "Data flow configuration interface for 'Shops' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of the 'GL EBITDA Online' data flow in the list.",
          "Expected Result": "'GL EBITDA Online' data flow is listed under 'Shops'."
        },
        {
          "Step": 4,
          "Step Description": "Select 'GL EBITDA Online' and view its configuration details.",
          "Expected Result": "Configuration details for 'GL EBITDA Online' are displayed and match the specification."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to the management control system. 'Shops' data flows are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation and verification for 'GL EBITDA Online' under Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; pre-configured 'Shops' data flows.",
      "Expected Result": "'GL EBITDA Online' data flow is present, correctly configured, and accessible under 'Shops'.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only 'GL EBITDA Online' data flow presence and configuration under 'Shops'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Error Handling When Accessing Non-Existent Data Flow in Corner",
      "ID": "TC-152",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the management control system as an authorized user.",
          "Expected Result": "User is successfully authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow configuration section for 'Corner'.",
          "Expected Result": "Data flow configuration interface for 'Corner' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access a data flow named 'INVALID_FLOW' not present in the list.",
          "Expected Result": "System displays an appropriate error message indicating the data flow does not exist."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to the management control system. 'Corner' data flows are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for non-existent data flows in Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; attempt to access 'INVALID_FLOW'.",
      "Expected Result": "System prevents access to non-existent data flows and displays a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error handling for missing data flows in 'Corner'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow List Completeness for Corner",
      "ID": "TC-153",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the management control system as an authorized user.",
          "Expected Result": "User is successfully authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow configuration section for 'Corner'.",
          "Expected Result": "Data flow configuration interface for 'Corner' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Retrieve and list all data flows present under 'Corner'.",
          "Expected Result": "All expected data flows as per RU 4.1.11 are listed: ZR SHORT, Rac Sport, Rac CPS, Rac Ippica, Rac VR, Raccolta Betting, Raccolta AWP, Raccolta GNTN, Tournover tot, Net Rev Sport, Net Rev CPS, Net Rev Ippica, Net rew VR, Net Rev Betting, Net rev AWP, Net Rev GNTN, Product net revenues, Other net Rev Canone PGI/PGS, Other Net Canone My Sisal, Net Revenues tot, Fee Sport, Fee VR, Fee Betting, Fee AWP, Business Contribution, Revenues online, Revenues share online, PT online, Contribution Online, Busines Contribution post Online, Fee Lottery, Proiezione BC anno."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to the management control system. 'Corner' data flows are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Verification of completeness of data flows under Corner",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; expected list of data flows for 'Corner'.",
      "Expected Result": "All data flows required by RU 4.1.11 for 'Corner' are present and correctly listed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers completeness of data flows for 'Corner'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow List Completeness for Gaming Hall",
      "ID": "TC-154",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the management control system as an authorized user.",
          "Expected Result": "User is successfully authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow configuration section for 'Gaming Hall'.",
          "Expected Result": "Data flow configuration interface for 'Gaming Hall' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Retrieve and list all data flows present under 'Gaming Hall'.",
          "Expected Result": "All expected data flows as per RU 4.1.11 are listed: ZR, Raccolta VLT, Raccolta AWP, EBITDA, Ebitda ADJ post Contrib. Online & Affitti, # AWP, # VLT."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to the management control system. 'Gaming Hall' data flows are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Verification of completeness of data flows under Gaming Hall",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; expected list of data flows for 'Gaming Hall'.",
      "Expected Result": "All data flows required by RU 4.1.11 for 'Gaming Hall' are present and correctly listed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers completeness of data flows for 'Gaming Hall'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow List Completeness for Shops",
      "ID": "TC-155",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the management control system as an authorized user.",
          "Expected Result": "User is successfully authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow configuration section for 'Shops'.",
          "Expected Result": "Data flow configuration interface for 'Shops' is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Retrieve and list all data flows present under 'Shops'.",
          "Expected Result": "All expected data flows as per RU 4.1.11 are listed: Zona Rice, TOT Raccolta, GL EBITDA ADJ, GL EBITDA Online, GL EBITDA ADJ Post Online, #AWP Medie, #VLT Medie."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User has valid credentials and access to the management control system. 'Shops' data flows are configured in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Verification of completeness of data flows under Shops",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials; expected list of data flows for 'Shops'.",
      "Expected Result": "All data flows required by RU 4.1.11 for 'Shops' are present and correctly listed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers completeness of data flows for 'Shops'.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Access Permissions for Data Flow Configuration Sections",
      "ID": "TC-156",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the management control system as a user without configuration permissions.",
          "Expected Result": "User is authenticated and dashboard is displayed with limited access."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access the data flow configuration section for 'Corner', 'Gaming Hall', and 'Shops'.",
          "Expected Result": "System denies access and displays an appropriate permission error message for each section."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Management Control Data Flows",
      "Preconditions": "User account exists with restricted permissions (no access to configuration sections).",
      "Execution Mode": "Manual",
      "Functionality": "Access control for data flow configuration sections",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Restricted user credentials.",
      "Expected Result": "Users without configuration permissions cannot access data flow configuration sections and receive clear error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers access control for configuration sections.",
      "_polarion": "RU 4.1.11"
    },
    {
      "Title": "Verify Data Flow Creation for All Required Business Analysis Fields",
      "ID": "TC-157",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation module for Business Analysis data.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Initiate the creation of a new data flow for Business Analysis data.",
          "Expected Result": "System prompts for required data fields."
        },
        {
          "Step": 3,
          "Step Description": "Enter sample values for all required fields: ID RICE + data, Zona RICE, DENO, RAG SOC, comu, COD_FISC, PIVA, Mysisal, NOME AM QX-XXXX, NOME KA QX-XXXX, STATUS, CANALE Q1 FdV, nome AM Q1 2025, NOME KA Q1 2025, CLUSTER_PV, TIPO_PV, codice simp MDM, tipologia commerciale, N° AWP Gestione, N° AWP Solo Providing, TOT N° AWP, N° VLT, GNTN Raccolta media settimanale 2025, TITOL, Cognome Titol, Nome Titol, INDI, PROV, FRAZ, CAP, REGIONE, Telefono, Telefono 2, cell_titol, cell_titol_2, email.",
          "Expected Result": "All fields are accepted and validated for correct format."
        },
        {
          "Step": 4,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "System creates the data flow and confirms successful creation."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to the data flow creation module. MDM data is available for cross-checking.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Business Analysis fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample values for all required fields, including valid and edge-case data.",
      "Expected Result": "A new data flow is created containing all required fields with correct values and formats.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Excludes Fields Already Acquired from MDM",
      "ID": "TC-158",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify fields already acquired from MDM (e.g., COD_FISC, PIVA).",
          "Expected Result": "List of MDM-acquired fields is available."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to create a data flow including both MDM and non-MDM fields.",
          "Expected Result": "System prompts or automatically excludes MDM-acquired fields from the new data flow."
        },
        {
          "Step": 3,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "Data flow is created containing only fields not already acquired from MDM."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "MDM-acquired fields are known and accessible. User has access to data flow creation module.",
      "Execution Mode": "Manual",
      "Functionality": "Exclusion of MDM-acquired fields from new data flows",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "List of MDM-acquired fields and sample data for remaining fields.",
      "Expected Result": "Data flow contains only fields not already acquired from MDM.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Validate Field Format and Data Integrity for Business Analysis Data Flow",
      "ID": "TC-159",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation module.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid formats for key fields (e.g., non-numeric in COD_FISC, invalid email format, text in N° fields).",
          "Expected Result": "System rejects invalid formats and displays appropriate error messages."
        },
        {
          "Step": 3,
          "Step Description": "Enter valid formats for all fields.",
          "Expected Result": "System accepts valid data without errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to data flow creation module.",
      "Execution Mode": "Manual",
      "Functionality": "Field format validation and data integrity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid and valid data samples for all fields (e.g., invalid email, non-numeric values, etc.).",
      "Expected Result": "System enforces correct data formats and ensures data integrity for all fields.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Privacy Compliance for Phone Number Fields",
      "ID": "TC-160",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation module.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a personal phone number in the Telefono, Telefono 2, cell_titol, or cell_titol_2 fields (not belonging to the PoS).",
          "Expected Result": "System detects the personal number and displays a privacy warning or error."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid PoS phone number in the same fields.",
          "Expected Result": "System accepts the PoS phone number without errors."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to data flow creation module. List of valid PoS phone numbers is available for validation.",
      "Execution Mode": "Manual",
      "Functionality": "Privacy compliance for phone number fields",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Personal and PoS phone numbers for test input.",
      "Expected Result": "System enforces that only PoS phone numbers are accepted in the specified fields, ensuring privacy compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Handles Missing Optional Fields Gracefully",
      "ID": "TC-161",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation module.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Leave one or more optional fields (e.g., Telefono 2, cell_titol_2) empty while filling in the rest with valid data.",
          "Expected Result": "System allows submission without requiring optional fields."
        },
        {
          "Step": 3,
          "Step Description": "Submit the data flow creation request.",
          "Expected Result": "Data flow is created successfully with empty optional fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to data flow creation module.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing optional fields in data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data with some optional fields left empty.",
      "Expected Result": "Data flow is created successfully even when optional fields are not provided.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Rejects Submission When Required Fields Are Missing",
      "ID": "TC-162",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow creation module.",
          "Expected Result": "Data flow creation interface is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Leave one or more required fields (e.g., ID RICE, data, COD_FISC) empty while filling in the rest with valid data.",
          "Expected Result": "System prevents submission and displays error messages for missing required fields."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Business Analysis Data Flow",
      "Preconditions": "User has access to data flow creation module.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of required fields in data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data with required fields left empty.",
      "Expected Result": "System rejects data flow creation if required fields are missing, displaying appropriate error messages.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.12"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto PGS (\"REV\") in Back Office Albania",
      "ID": "TC-163",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User successfully logs into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for PGS contracts.",
          "Expected Result": "The data flow management interface for PGS contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto PGS.",
          "Expected Result": "The data flow creation form for PGS is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter 'REV' as the contract type (Tipo Contratto) for PGS.",
          "Expected Result": "'REV' is accepted as the contract type input."
        },
        {
          "Step": 5,
          "Step Description": "Save and activate the new data flow.",
          "Expected Result": "The data flow for Tipo Contratto PGS with value 'REV' is successfully created and activated."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new data flow appears in the list of active data flows.",
          "Expected Result": "The data flow for Tipo Contratto PGS ('REV') is listed among active data flows."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid credentials and access to Back Office Albania. No existing data flow for Tipo Contratto PGS ('REV').",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto PGS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, access to Back Office Albania, no pre-existing 'REV' PGS data flow.",
      "Expected Result": "A data flow for Tipo Contratto PGS with value 'REV' is created, activated, and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto PGI (\"REV\") in Back Office Albania",
      "ID": "TC-164",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User successfully logs into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for PGI contracts.",
          "Expected Result": "The data flow management interface for PGI contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto PGI.",
          "Expected Result": "The data flow creation form for PGI is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter 'REV' as the contract type (Tipo Contratto) for PGI.",
          "Expected Result": "'REV' is accepted as the contract type input."
        },
        {
          "Step": 5,
          "Step Description": "Save and activate the new data flow.",
          "Expected Result": "The data flow for Tipo Contratto PGI with value 'REV' is successfully created and activated."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new data flow appears in the list of active data flows.",
          "Expected Result": "The data flow for Tipo Contratto PGI ('REV') is listed among active data flows."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid credentials and access to Back Office Albania. No existing data flow for Tipo Contratto PGI ('REV').",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto PGI",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, access to Back Office Albania, no pre-existing 'REV' PGI data flow.",
      "Expected Result": "A data flow for Tipo Contratto PGI with value 'REV' is created, activated, and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify Data Flow Creation for Tipo Contratto AWP (\"REV\") in Back Office Albania",
      "ID": "TC-165",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User successfully logs into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for AWP contracts.",
          "Expected Result": "The data flow management interface for AWP contracts is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow for Tipo Contratto AWP.",
          "Expected Result": "The data flow creation form for AWP is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter 'REV' as the contract type (Tipo Contratto) for AWP.",
          "Expected Result": "'REV' is accepted as the contract type input."
        },
        {
          "Step": 5,
          "Step Description": "Save and activate the new data flow.",
          "Expected Result": "The data flow for Tipo Contratto AWP with value 'REV' is successfully created and activated."
        },
        {
          "Step": 6,
          "Step Description": "Verify that the new data flow appears in the list of active data flows.",
          "Expected Result": "The data flow for Tipo Contratto AWP ('REV') is listed among active data flows."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid credentials and access to Back Office Albania. No existing data flow for Tipo Contratto AWP ('REV').",
      "Execution Mode": "Manual",
      "Functionality": "Data flow creation for Tipo Contratto AWP",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, access to Back Office Albania, no pre-existing 'REV' AWP data flow.",
      "Expected Result": "A data flow for Tipo Contratto AWP with value 'REV' is created, activated, and visible in the system.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify System Rejects Invalid Contract Type for Data Flow Creation",
      "ID": "TC-166",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User successfully logs into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section for any contract type (PGS, PGI, or AWP).",
          "Expected Result": "The data flow management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the creation of a new data flow.",
          "Expected Result": "The data flow creation form is presented."
        },
        {
          "Step": 4,
          "Step Description": "Enter an invalid contract type (e.g., 'INVALID') in the contract type field.",
          "Expected Result": "The system displays an error message indicating the contract type is invalid and does not allow saving."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "User has valid credentials and access to Back Office Albania.",
      "Execution Mode": "Manual",
      "Functionality": "Validation of contract type input for data flow creation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, access to Back Office Albania, invalid contract type value (e.g., 'INVALID').",
      "Expected Result": "The system prevents creation of a data flow with an invalid contract type and displays an appropriate error message.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify Data Flow for Tipo Contratto 'REV' is Exported Correctly",
      "ID": "TC-167",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the Back Office Albania system with valid credentials.",
          "Expected Result": "User successfully logs into the Back Office Albania system."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data flow management section and locate an active data flow for Tipo Contratto 'REV' (PGS, PGI, or AWP).",
          "Expected Result": "The data flow for Tipo Contratto 'REV' is visible in the list."
        },
        {
          "Step": 3,
          "Step Description": "Initiate the export function for the selected data flow.",
          "Expected Result": "The system prompts for export confirmation or options."
        },
        {
          "Step": 4,
          "Step Description": "Confirm and complete the export process.",
          "Expected Result": "The data flow is exported successfully."
        },
        {
          "Step": 5,
          "Step Description": "Open the exported file and verify that the contract type is correctly set to 'REV'.",
          "Expected Result": "The exported data contains the correct contract type value 'REV'."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Back Office Albania - Data Flow Management",
      "Preconditions": "At least one active data flow for Tipo Contratto 'REV' exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Data flow export for Tipo Contratto 'REV'",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials, access to Back Office Albania, existing data flow for 'REV'.",
      "Expected Result": "The exported data flow file contains the correct contract type value 'REV'.",
      "Country": "Albania",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.13"
    },
    {
      "Title": "Verify successful creation of credit flow between ZENIT and MST for horse racing bets",
      "ID": "TC-168",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an authorized user.",
          "Expected Result": "User is successfully logged in and has access to horse racing betting functionalities."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a horse racing bet that requires credit management.",
          "Expected Result": "The system prompts for credit validation and initiates a request to MST."
        },
        {
          "Step": 3,
          "Step Description": "Verify that ZENIT sends the credit management request to MST using the new flow.",
          "Expected Result": "A correctly formatted request is sent from ZENIT to MST."
        },
        {
          "Step": 4,
          "Step Description": "Check MST receives and processes the credit management request.",
          "Expected Result": "MST receives the request and processes it according to business rules."
        },
        {
          "Step": 5,
          "Step Description": "Confirm that MST sends a response back to ZENIT with the credit decision.",
          "Expected Result": "MST sends a valid response (approval or rejection) to ZENIT."
        },
        {
          "Step": 6,
          "Step Description": "Verify that ZENIT updates the bet status based on MST's response.",
          "Expected Result": "ZENIT updates the bet status (approved/rejected) and displays the correct information to the user."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration",
      "Preconditions": "ZENIT and MST systems are operational and integrated. Test user has sufficient permissions. Horse racing betting is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Credit management flow for horse racing bets between ZENIT and MST",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, horse racing event data, credit limits.",
      "Expected Result": "The credit management flow between ZENIT and MST is executed successfully, and the bet is processed according to the credit decision.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify error handling when MST is unavailable during credit flow",
      "ID": "TC-169",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an authorized user.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Initiate a horse racing bet that requires credit management.",
          "Expected Result": "ZENIT attempts to send a credit management request to MST."
        },
        {
          "Step": 3,
          "Step Description": "Simulate MST being unavailable (e.g., network failure or MST service down).",
          "Expected Result": "ZENIT does not receive a response from MST within the expected timeframe."
        },
        {
          "Step": 4,
          "Step Description": "Observe how ZENIT handles the lack of response from MST.",
          "Expected Result": "ZENIT displays an appropriate error message to the user and does not process the bet."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration",
      "Preconditions": "ZENIT and MST systems are integrated. MST is intentionally made unavailable for this test. Test user has permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling in credit management flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, horse racing event data.",
      "Expected Result": "ZENIT gracefully handles MST unavailability by informing the user and preventing bet processing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify credit flow for horse racing bets with insufficient credit",
      "ID": "TC-170",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an authorized user with limited credit.",
          "Expected Result": "User is logged in and has access to horse racing betting."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to place a horse racing bet that exceeds the user's available credit.",
          "Expected Result": "ZENIT sends a credit management request to MST."
        },
        {
          "Step": 3,
          "Step Description": "MST evaluates the request and determines that the credit is insufficient.",
          "Expected Result": "MST sends a rejection response to ZENIT."
        },
        {
          "Step": 4,
          "Step Description": "Verify that ZENIT displays an appropriate message to the user and does not process the bet.",
          "Expected Result": "User is informed of insufficient credit and the bet is not placed."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration",
      "Preconditions": "ZENIT and MST systems are operational and integrated. Test user has limited credit.",
      "Execution Mode": "Manual",
      "Functionality": "Credit validation for horse racing bets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials with limited credit, horse racing event data.",
      "Expected Result": "Bets exceeding available credit are rejected and the user is informed accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify credit flow for horse racing bets with sufficient credit",
      "ID": "TC-171",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an authorized user with sufficient credit.",
          "Expected Result": "User is logged in and has access to horse racing betting."
        },
        {
          "Step": 2,
          "Step Description": "Place a horse racing bet within the user's available credit limit.",
          "Expected Result": "ZENIT sends a credit management request to MST."
        },
        {
          "Step": 3,
          "Step Description": "MST evaluates the request and approves the credit.",
          "Expected Result": "MST sends an approval response to ZENIT."
        },
        {
          "Step": 4,
          "Step Description": "Verify that ZENIT processes the bet and updates the user's credit accordingly.",
          "Expected Result": "Bet is placed successfully and the user's credit is updated."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration",
      "Preconditions": "ZENIT and MST systems are operational and integrated. Test user has sufficient credit.",
      "Execution Mode": "Manual",
      "Functionality": "Credit validation for horse racing bets",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials with sufficient credit, horse racing event data.",
      "Expected Result": "Bets within available credit are approved and processed successfully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify audit logging for credit flow transactions between ZENIT and MST",
      "ID": "TC-172",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the ZENIT system as an authorized user.",
          "Expected Result": "User is logged in."
        },
        {
          "Step": 2,
          "Step Description": "Place a horse racing bet that triggers the credit management flow.",
          "Expected Result": "ZENIT initiates a credit management request to MST."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all relevant transaction details are logged in the audit trail (request, response, timestamps, user ID, bet details).",
          "Expected Result": "Audit logs contain complete and accurate information for the transaction."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT-MST Integration",
      "Preconditions": "ZENIT and MST systems are operational and integrated. Audit logging is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Audit logging for credit management flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test user credentials, horse racing event data.",
      "Expected Result": "All credit flow transactions are properly logged for traceability and compliance.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.14 DATI MST"
    },
    {
      "Title": "Verify retrieval of Borderò medio rolling 12 mesi",
      "ID": "TC-173",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow interface for valorizzatore data.",
          "Expected Result": "The interface loads successfully and is ready for input."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò medio rolling 12 mesi' data for a valid valorizzatore entity.",
          "Expected Result": "The system processes the request without errors."
        },
        {
          "Step": 3,
          "Step Description": "Review the returned data for 'Borderò medio rolling 12 mesi'.",
          "Expected Result": "The data returned represents the average Borderò value calculated over the last 12 months for the selected valorizzatore."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with at least 12 months of Borderò data.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò medio rolling 12 mesi",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID with 12+ months of data",
      "Expected Result": "The system returns the correct average Borderò value for the last 12 months.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Borderò medio anno",
      "ID": "TC-174",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò medio anno' data for a valid valorizzatore entity.",
          "Expected Result": "The system accepts and processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Review the returned data for 'Borderò medio anno'.",
          "Expected Result": "The data represents the average Borderò value for the current year for the selected valorizzatore."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with Borderò data for the current year.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò medio anno",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID with current year data",
      "Expected Result": "The system returns the correct average Borderò value for the current year.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Borderò settimanale",
      "ID": "TC-175",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò settimanale' data for a valid valorizzatore entity and a specific week.",
          "Expected Result": "The system processes the request and returns data."
        },
        {
          "Step": 3,
          "Step Description": "Review the returned data for 'Borderò settimanale'.",
          "Expected Result": "The data represents the Borderò value for the specified week for the selected valorizzatore."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with weekly Borderò data.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID and week number with data",
      "Expected Result": "The system returns the correct Borderò value for the specified week.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Numero Borderò settimanale",
      "ID": "TC-176",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Numero Borderò settimanale' for a valid valorizzatore entity and a specific week.",
          "Expected Result": "The system processes the request and returns data."
        },
        {
          "Step": 3,
          "Step Description": "Review the returned data for 'Numero Borderò settimanale'.",
          "Expected Result": "The data represents the correct number of Borderò for the specified week for the selected valorizzatore."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with weekly Borderò data.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Numero Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID and week number with data",
      "Expected Result": "The system returns the correct number of Borderò for the specified week.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of Periodo Contabile del Borderò settimanale",
      "ID": "TC-177",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Periodo Contabile del Borderò settimanale' for a valid valorizzatore entity and a specific week.",
          "Expected Result": "The system processes the request and returns data."
        },
        {
          "Step": 3,
          "Step Description": "Review the returned data for 'Periodo Contabile del Borderò settimanale'.",
          "Expected Result": "The data represents the correct accounting period for the specified week's Borderò for the selected valorizzatore."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with weekly Borderò data including accounting period information.",
      "Execution Mode": "Manual",
      "Functionality": "Data retrieval for Periodo Contabile del Borderò settimanale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID and week number with data",
      "Expected Result": "The system returns the correct accounting period for the specified week's Borderò.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify system behavior when requesting data for valorizzatore with insufficient history (less than 12 months)",
      "ID": "TC-178",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request the 'Borderò medio rolling 12 mesi' for a valorizzatore entity with less than 12 months of data.",
          "Expected Result": "The system processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Review the returned data or error message.",
          "Expected Result": "The system returns an appropriate error message or a null/empty result indicating insufficient data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "Valorizzatore entity exists with less than 12 months of Borderò data.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for insufficient data history",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valorizzatore ID with less than 12 months of data",
      "Expected Result": "The system gracefully handles the request and informs the user of insufficient data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify system behavior when requesting data for non-existent valorizzatore entity",
      "ID": "TC-179",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the valorizzatore data flow interface.",
          "Expected Result": "The interface is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Request any of the supported data (e.g., 'Borderò medio anno') for a non-existent valorizzatore entity ID.",
          "Expected Result": "The system processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Review the returned data or error message.",
          "Expected Result": "The system returns an appropriate error message indicating that the valorizzatore entity does not exist."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Valorizzatore Data Flow",
      "Preconditions": "No valorizzatore entity exists with the provided ID.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for invalid valorizzatore entity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Non-existent valorizzatore ID",
      "Expected Result": "The system gracefully handles the request and informs the user that the valorizzatore entity does not exist.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.15"
    },
    {
      "Title": "Verify retrieval of personal data from Network Distribution source",
      "ID": "TC-180",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow module responsible for retrieving personal data.",
          "Expected Result": "Data flow module is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data retrieval process for Network Distribution data as specified in RU 4.1.5.",
          "Expected Result": "System initiates the data retrieval process from the Network Distribution source."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data flow to ensure all required personal data fields are collected (e.g., name, address, contact details).",
          "Expected Result": "All required personal data fields are retrieved and populated in the system."
        },
        {
          "Step": 4,
          "Step Description": "Validate the accuracy and completeness of the retrieved data against the Network Distribution source records.",
          "Expected Result": "Retrieved data matches the source records in terms of accuracy and completeness."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Personal Data Flow",
      "Preconditions": "System is configured with access to the Network Distribution data source. Test user has necessary permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Personal data retrieval from Network Distribution",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Network Distribution data with known values for personal data fields.",
      "Expected Result": "Personal data from Network Distribution is correctly retrieved, complete, and accurate as per RU 4.1.5.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16, RU 4.1.5"
    },
    {
      "Title": "Verify retrieval of personal data from Business Analysis source",
      "ID": "TC-181",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow module responsible for retrieving personal data.",
          "Expected Result": "Data flow module is accessible and operational."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data retrieval process for Business Analysis data as specified in RU 4.1.12.",
          "Expected Result": "System initiates the data retrieval process from the Business Analysis source."
        },
        {
          "Step": 3,
          "Step Description": "Monitor the data flow to ensure all required personal data fields are collected (e.g., name, address, contact details).",
          "Expected Result": "All required personal data fields are retrieved and populated in the system."
        },
        {
          "Step": 4,
          "Step Description": "Validate the accuracy and completeness of the retrieved data against the Business Analysis source records.",
          "Expected Result": "Retrieved data matches the source records in terms of accuracy and completeness."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Personal Data Flow",
      "Preconditions": "System is configured with access to the Business Analysis data source. Test user has necessary permissions.",
      "Execution Mode": "Manual",
      "Functionality": "Personal data retrieval from Business Analysis",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample Business Analysis data with known values for personal data fields.",
      "Expected Result": "Personal data from Business Analysis is correctly retrieved, complete, and accurate as per RU 4.1.12.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16, RU 4.1.12"
    },
    {
      "Title": "Verify error handling when Network Distribution data source is unavailable",
      "ID": "TC-182",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate unavailability of the Network Distribution data source (e.g., disconnect or disable access).",
          "Expected Result": "Network Distribution data source is not accessible by the system."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to trigger the data retrieval process for Network Distribution data.",
          "Expected Result": "System attempts to connect to the Network Distribution source and fails."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the failure.",
          "Expected Result": "System displays an appropriate error message and logs the failure event."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Personal Data Flow",
      "Preconditions": "System is configured with access to the Network Distribution data source. Mechanism to simulate source unavailability is in place.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for data retrieval",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No data required; simulate source unavailability.",
      "Expected Result": "System gracefully handles the unavailability of the Network Distribution source and provides clear error feedback.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16, RU 4.1.5"
    },
    {
      "Title": "Verify error handling when Business Analysis data source returns incomplete data",
      "ID": "TC-183",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Configure the Business Analysis data source to return incomplete personal data (e.g., missing address or contact details).",
          "Expected Result": "Business Analysis data source returns incomplete data as configured."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data retrieval process for Business Analysis data.",
          "Expected Result": "System retrieves the incomplete data from the source."
        },
        {
          "Step": 3,
          "Step Description": "Observe the system's response to the incomplete data.",
          "Expected Result": "System identifies missing fields and logs a warning or error as per requirements."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Personal Data Flow",
      "Preconditions": "System is configured with access to the Business Analysis data source. Mechanism to simulate incomplete data is in place.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for incomplete data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Business Analysis data with intentionally missing fields.",
      "Expected Result": "System detects incomplete data from Business Analysis source and handles it according to requirements (e.g., logs warning, notifies user).",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16, RU 4.1.12"
    },
    {
      "Title": "Verify data flow logging and traceability for personal data retrieval",
      "ID": "TC-184",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Trigger the data retrieval process for both Network Distribution and Business Analysis sources.",
          "Expected Result": "System initiates data retrieval from both sources."
        },
        {
          "Step": 2,
          "Step Description": "Access the system logs or audit trail for the data flow module.",
          "Expected Result": "Logs or audit trail are accessible."
        },
        {
          "Step": 3,
          "Step Description": "Verify that all data retrieval actions, including timestamps, source, and status, are correctly logged.",
          "Expected Result": "All actions related to data retrieval are logged with complete details for traceability."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Personal Data Flow",
      "Preconditions": "System logging/audit trail is enabled. Data sources are available.",
      "Execution Mode": "Manual",
      "Functionality": "Logging and traceability for data flow",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Sample data retrieval actions from both sources.",
      "Expected Result": "All personal data retrieval actions are logged with sufficient detail for traceability and auditing.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.16"
    },
    {
      "Title": "Verify data flow retrieves terminal type for each PoS",
      "ID": "TC-185",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow endpoint or interface designed to provide terminal information for PoS.",
          "Expected Result": "The system responds with terminal data for each PoS."
        },
        {
          "Step": 2,
          "Step Description": "Review the returned data structure for each PoS entry.",
          "Expected Result": "Each PoS entry contains a field indicating the terminal type (e.g., 'Type: POS-Standard', 'Type: POS-Mobile')."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Terminal Data Management",
      "Preconditions": "At least one PoS with one or more terminals is present in the system. Data flow endpoint is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal type retrieval per PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with various terminal types (e.g., POS-Standard, POS-Mobile, POS-Tablet).",
      "Expected Result": "For each PoS, the data flow returns the correct terminal type information.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify data flow retrieves number of terminals per type for each PoS",
      "ID": "TC-186",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow endpoint or interface designed to provide terminal information for PoS.",
          "Expected Result": "The system responds with terminal data for each PoS."
        },
        {
          "Step": 2,
          "Step Description": "Review the returned data structure for each PoS entry.",
          "Expected Result": "Each PoS entry contains a field indicating the number of terminals for each terminal type (e.g., 'POS-Standard: 3', 'POS-Mobile: 2')."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Terminal Data Management",
      "Preconditions": "At least one PoS with multiple terminal types and quantities is present in the system. Data flow endpoint is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Terminal count per type retrieval per PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with multiple terminal types and varying quantities (e.g., 3 POS-Standard, 2 POS-Mobile).",
      "Expected Result": "For each PoS, the data flow returns the correct number of terminals for each terminal type.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify data flow handles PoS with no terminals",
      "ID": "TC-187",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the data flow endpoint or interface for a PoS with no associated terminals.",
          "Expected Result": "The system responds with terminal data for the PoS."
        },
        {
          "Step": 2,
          "Step Description": "Review the returned data structure for the PoS entry.",
          "Expected Result": "The PoS entry indicates zero terminals or an empty terminal list."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Terminal Data Management",
      "Preconditions": "At least one PoS with no terminals is present in the system. Data flow endpoint is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Handling PoS with no terminals",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record with no associated terminals.",
      "Expected Result": "For PoS with no terminals, the data flow returns zero or an empty list for terminal types and counts.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify data flow handles unknown or invalid terminal types",
      "ID": "TC-188",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert or simulate a PoS with a terminal of an unknown or invalid type in the system.",
          "Expected Result": "The system accepts the PoS with the unknown terminal type."
        },
        {
          "Step": 2,
          "Step Description": "Access the data flow endpoint or interface for the affected PoS.",
          "Expected Result": "The system responds with terminal data for the PoS."
        },
        {
          "Step": 3,
          "Step Description": "Review the returned data structure for the PoS entry.",
          "Expected Result": "The PoS entry includes the unknown terminal type, or flags it as invalid, according to system specification."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Terminal Data Management",
      "Preconditions": "A PoS with an unknown or invalid terminal type exists in the system. Data flow endpoint is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Handling unknown or invalid terminal types",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record with a terminal of an unknown or invalid type (e.g., 'Type: POS-XYZ').",
      "Expected Result": "The data flow returns the unknown terminal type as is, or flags it as invalid, as per system specification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify data flow performance with large number of PoS and terminals",
      "ID": "TC-189",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Populate the system with a large dataset (e.g., 10,000 PoS, each with multiple terminal types and quantities).",
          "Expected Result": "The system contains a large number of PoS and terminals."
        },
        {
          "Step": 2,
          "Step Description": "Access the data flow endpoint or interface to retrieve terminal data for all PoS.",
          "Expected Result": "The system responds with terminal data for all PoS within acceptable performance thresholds (e.g., response time < 2 seconds)."
        }
      ],
      "Test Group": "Terminale",
      "Channel": "Backend",
      "Device": "Terminale",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Terminal Data Management",
      "Preconditions": "A large dataset of PoS and terminals is present in the system. Data flow endpoint is accessible and operational.",
      "Execution Mode": "Manual",
      "Functionality": "Performance of terminal data retrieval",
      "Test Type": "performance",
      "No Regression Test": false,
      "Automation": false,
      "Dataset": "10,000+ PoS records, each with multiple terminal types and quantities.",
      "Expected Result": "The data flow returns terminal type and count information for all PoS within acceptable performance limits.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.1.17"
    },
    {
      "Title": "Verify Dashboard Loads Successfully for Authenticated User",
      "ID": "TC-190",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully authenticated and redirected to the dashboard page."
        },
        {
          "Step": 2,
          "Step Description": "Observe the dashboard page after login.",
          "Expected Result": "Dashboard page loads completely without errors, displaying all expected widgets and data sections."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User account exists and is active. User is not already logged in.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access and Rendering",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials (e.g., user@example.com / Password123)",
      "Expected Result": "Authenticated user is presented with a fully loaded dashboard containing all expected elements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Access is Denied for Unauthenticated User",
      "ID": "TC-191",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to access the dashboard page URL directly without logging in.",
          "Expected Result": "User is redirected to the login page or receives an access denied message."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User is not logged in to the application.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Access Control",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "N/A",
      "Expected Result": "Unauthenticated users cannot access the dashboard and are prompted to log in.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Widgets Display Correct Data",
      "ID": "TC-192",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Review each widget or data section on the dashboard.",
          "Expected Result": "Each widget displays data relevant to the logged-in user, with no missing or incorrect information."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User account exists with associated data to display on the dashboard.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Data Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials with known data profile",
      "Expected Result": "All dashboard widgets display accurate and complete data for the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Dashboard Responsiveness on Different Screen Sizes",
      "ID": "TC-193",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is authenticated and redirected to the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Resize the browser window to various standard resolutions (e.g., 1920x1080, 1366x768, 1024x768, 768x1024).",
          "Expected Result": "Dashboard layout adapts appropriately to each screen size without overlapping or missing elements."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User account exists and is active.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Responsiveness",
      "Test Type": "ux_ui",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials",
      "Expected Result": "Dashboard remains usable and visually consistent across different screen sizes.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Verify Error Handling When Dashboard Data Fails to Load",
      "ID": "TC-194",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a backend service failure or disconnect network before dashboard data loads.",
          "Expected Result": "Dashboard attempts to load data and encounters an error."
        },
        {
          "Step": 2,
          "Step Description": "Observe the error message or fallback behavior displayed on the dashboard.",
          "Expected Result": "User is shown a clear, user-friendly error message indicating data could not be loaded."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Dashboard",
      "Preconditions": "User is logged in. Network or backend service can be manipulated for testing.",
      "Execution Mode": "Manual",
      "Functionality": "Dashboard Error Handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; simulated backend failure",
      "Expected Result": "Dashboard displays an appropriate error message when data cannot be loaded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2"
    },
    {
      "Title": "Successful Login with Multi-Factor Authentication (MFA)",
      "ID": "TC-195",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password for a registered user.",
          "Expected Result": "System prompts for Multi-Factor Authentication (MFA) code."
        },
        {
          "Step": 3,
          "Step Description": "Enter a valid MFA code received via the configured channel (e.g., SMS, email, authenticator app).",
          "Expected Result": "User is successfully logged in and redirected to the home/dashboard page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is registered and has MFA configured. Application is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Login with MFA",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials and valid MFA code.",
      "Expected Result": "User is authenticated and granted access to the system after successful MFA verification.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Unsuccessful Login with Invalid Credentials",
      "ID": "TC-196",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid username and/or password.",
          "Expected Result": "System displays an error message indicating invalid credentials. MFA prompt is not shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "Application is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Login validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid username and/or password.",
      "Expected Result": "User is not authenticated and receives an appropriate error message. No MFA is triggered.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Unsuccessful Login with Invalid MFA Code",
      "ID": "TC-197",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Navigate to the login page of the application.",
          "Expected Result": "Login page is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid username and password.",
          "Expected Result": "System prompts for MFA code."
        },
        {
          "Step": 3,
          "Step Description": "Enter an invalid MFA code.",
          "Expected Result": "System displays an error message indicating invalid MFA code. User is not logged in."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is registered and has MFA configured. Application is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "MFA validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials and invalid MFA code.",
      "Expected Result": "User is not authenticated and receives an error message for invalid MFA code.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Successful Logout from the System",
      "ID": "TC-198",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application as a valid user (with MFA).",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Logout' button/link.",
          "Expected Result": "User is logged out and redirected to the login page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged in to the application.",
      "Execution Mode": "Manual",
      "Functionality": "Logout",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials and valid MFA code.",
      "Expected Result": "User session is terminated and user is redirected to the login page.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Consistent Information Display Across User Profiles",
      "ID": "TC-199",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login as User Profile A (e.g., Admin) with valid credentials and MFA.",
          "Expected Result": "User A is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the information and search screens.",
          "Expected Result": "Information and search screens are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Logout from the application.",
          "Expected Result": "User is logged out."
        },
        {
          "Step": 4,
          "Step Description": "Login as User Profile B (e.g., Standard User) with valid credentials and MFA.",
          "Expected Result": "User B is logged in and dashboard is displayed."
        },
        {
          "Step": 5,
          "Step Description": "Navigate to the same information and search screens as in Step 2.",
          "Expected Result": "Information and search screens are displayed identically to those seen by User A."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Profile Management",
      "Preconditions": "At least two user profiles exist (e.g., Admin and Standard User), both with MFA configured.",
      "Execution Mode": "Manual",
      "Functionality": "Profile-based information display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Credentials for User Profile A and User Profile B, both with valid MFA codes.",
      "Expected Result": "Information and search screens are displayed identically for different user profiles.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Session Termination After Logout (Security Check)",
      "ID": "TC-200",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the application as a valid user (with MFA).",
          "Expected Result": "User is logged in and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Logout' button/link.",
          "Expected Result": "User is logged out and redirected to the login page."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access a protected page using the browser's back button or by entering the URL directly.",
          "Expected Result": "System redirects the user to the login page, preventing access to protected content."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Authentication Module",
      "Preconditions": "User is logged in to the application.",
      "Execution Mode": "Manual",
      "Functionality": "Session management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials and valid MFA code.",
      "Expected Result": "After logout, user cannot access protected pages without re-authenticating.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.1"
    },
    {
      "Title": "Verify Full Access Profile: View All Data",
      "ID": "TC-201",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to each section available for PoS management (e.g., PoS list, details, configurations).",
          "Expected Result": "All data and sections are visible and accessible without restriction."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "User account with FULL ACCESS profile exists and is active. User is authorized via SailPoint.",
      "Execution Mode": "Manual",
      "Functionality": "Profile-based data visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; populated PoS data.",
      "Expected Result": "User with FULL ACCESS profile can view all PoS-related data and sections without restriction.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Edit All Permitted PoS Data",
      "ID": "TC-202",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to PoS management section.",
          "Expected Result": "PoS management interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a PoS record and attempt to edit all editable fields as per current project phase (excluding dispositive modifications).",
          "Expected Result": "All permitted fields are editable and changes can be made."
        },
        {
          "Step": 4,
          "Step Description": "Save the changes.",
          "Expected Result": "Changes are saved successfully and reflected in the PoS record."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "User with FULL ACCESS profile; PoS records exist; dispositive modifications not yet implemented.",
      "Execution Mode": "Manual",
      "Functionality": "Profile-based edit permissions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; sample PoS records.",
      "Expected Result": "User with FULL ACCESS profile can edit all permitted PoS data fields as per current phase.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Dispositive modifications excluded (phase 2).",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Data Extraction Capability",
      "ID": "TC-203",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction section for PoS management.",
          "Expected Result": "Data extraction interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Initiate a full data extraction (e.g., export all PoS data).",
          "Expected Result": "System processes the request and generates the complete data export."
        },
        {
          "Step": 4,
          "Step Description": "Download and review the exported data file.",
          "Expected Result": "Exported file contains all PoS data without omissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Extraction",
      "Preconditions": "User with FULL ACCESS profile; data extraction functionality enabled; PoS data available.",
      "Execution Mode": "Manual",
      "Functionality": "Profile-based data extraction",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; sufficient PoS data for extraction.",
      "Expected Result": "User with FULL ACCESS profile can extract all PoS data without restriction.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile: Mass Upload Functionality",
      "ID": "TC-204",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a user with FULL ACCESS profile.",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the mass upload section for PoS management.",
          "Expected Result": "Mass upload interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Prepare a valid mass upload file with multiple PoS records.",
          "Expected Result": "File is ready for upload."
        },
        {
          "Step": 4,
          "Step Description": "Upload the file and confirm the operation.",
          "Expected Result": "System processes the file and uploads all valid records successfully."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the uploaded records appear in the PoS management section.",
          "Expected Result": "All uploaded records are present and correctly displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Mass Upload",
      "Preconditions": "User with FULL ACCESS profile; mass upload functionality enabled; valid upload template available.",
      "Execution Mode": "Manual",
      "Functionality": "Profile-based mass upload",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User credentials with FULL ACCESS profile; valid mass upload file with multiple PoS records.",
      "Expected Result": "User with FULL ACCESS profile can perform mass uploads of PoS data successfully.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Access Authorization via SailPoint for Full Access Profile",
      "ID": "TC-205",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Attempt to assign FULL ACCESS profile to a user directly within ZENIT.",
          "Expected Result": "System does not allow direct assignment of FULL ACCESS profile within ZENIT."
        },
        {
          "Step": 2,
          "Step Description": "Assign FULL ACCESS profile to a user via SailPoint (simulate or verify integration).",
          "Expected Result": "User is granted FULL ACCESS profile through SailPoint and reflected in ZENIT upon next login."
        },
        {
          "Step": 3,
          "Step Description": "Login to ZENIT as the user with newly assigned FULL ACCESS profile.",
          "Expected Result": "User is authenticated and has FULL ACCESS permissions as expected."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Access Management",
      "Preconditions": "SailPoint integration is active; test user exists; admin access to SailPoint.",
      "Execution Mode": "Manual",
      "Functionality": "Access authorization management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Test user account; SailPoint admin credentials.",
      "Expected Result": "FULL ACCESS profile can only be assigned via SailPoint and not directly in ZENIT; permissions are correctly applied.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify SOX Compliance for Full Access Profile Assignment",
      "ID": "TC-206",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Review the process of assigning FULL ACCESS profile to a user via SailPoint.",
          "Expected Result": "Process follows SOX-compliant procedures (e.g., approval workflow, audit trail)."
        },
        {
          "Step": 2,
          "Step Description": "Check audit logs in SailPoint for the assignment action.",
          "Expected Result": "Audit logs record the assignment action with timestamp, user, and approver details."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to assign FULL ACCESS profile without required approvals in SailPoint.",
          "Expected Result": "Assignment is blocked or flagged as non-compliant."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Access Management",
      "Preconditions": "SailPoint integration is active; SOX compliance rules configured; test user and admin access available.",
      "Execution Mode": "Manual",
      "Functionality": "SOX-compliant access management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Test user account; SailPoint admin credentials; SOX compliance configuration.",
      "Expected Result": "Assignment of FULL ACCESS profile is SOX-compliant, with proper approval workflow and audit trail enforced by SailPoint.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Full Access Profile Cannot Be Assigned by End User in ZENIT",
      "ID": "TC-207",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to ZENIT as a standard user (not admin).",
          "Expected Result": "User is authenticated and dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to user profile or settings section.",
          "Expected Result": "Profile management options are displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to change own profile to FULL ACCESS.",
          "Expected Result": "System does not allow the user to assign or request FULL ACCESS profile directly."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "Standard user account exists; user is not admin; SailPoint integration active.",
      "Execution Mode": "Manual",
      "Functionality": "Profile assignment restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Standard user credentials.",
      "Expected Result": "End users cannot assign themselves the FULL ACCESS profile directly in ZENIT; assignment is restricted to SailPoint.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.2"
    },
    {
      "Title": "Verify Consultatore Profile Data Viewing Limitations",
      "ID": "TC-208",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard/homepage."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation/viewing section.",
          "Expected Result": "Consultatore-specific data viewing interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to view data records that are within the allowed scope for the Consultatore profile.",
          "Expected Result": "Data records within the allowed scope are displayed correctly."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to view data records that should be restricted for the Consultatore profile (e.g., confidential or admin-only data).",
          "Expected Result": "Access to restricted data is denied; an appropriate error or warning message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A valid 'Consultatore' user account exists. The system contains both allowed and restricted data records.",
      "Execution Mode": "Manual",
      "Functionality": "Data consultation with profile-based limitations",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; sample data with varying access levels.",
      "Expected Result": "The Consultatore user can view only the data permitted by their profile, and is prevented from accessing restricted data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Verify Consultatore Profile Data Extraction Limitations",
      "ID": "TC-209",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard/homepage."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction/export section.",
          "Expected Result": "Consultatore-specific data extraction interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to extract/export data records that are within the allowed scope for the Consultatore profile.",
          "Expected Result": "Data extraction is successful for permitted records."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to extract/export data records that should be restricted for the Consultatore profile (e.g., confidential or admin-only data).",
          "Expected Result": "Extraction of restricted data is denied; an appropriate error or warning message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A valid 'Consultatore' user account exists. The system contains both allowed and restricted data records.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction with profile-based limitations",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; sample data with varying access levels.",
      "Expected Result": "The Consultatore user can extract only the data permitted by their profile, and is prevented from extracting restricted data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Verify Error Handling When Consultatore Attempts Unauthorized Data Access",
      "ID": "TC-210",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application as a user with the 'Consultatore' profile.",
          "Expected Result": "User is successfully authenticated and lands on the dashboard/homepage."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to access a data record or extraction function explicitly restricted for the Consultatore profile (e.g., via direct URL or API call).",
          "Expected Result": "System denies access and displays a clear error or warning message indicating insufficient permissions."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "A valid 'Consultatore' user account exists. The system contains restricted data and extraction functions.",
      "Execution Mode": "Manual",
      "Functionality": "Access control and error handling for unauthorized actions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore user credentials; restricted data record identifiers or URLs.",
      "Expected Result": "The system prevents unauthorized access or extraction attempts and provides a clear, user-friendly error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Verify Consultatore Cannot Bypass Data Restrictions via API",
      "ID": "TC-211",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Authenticate to the system's API using Consultatore credentials.",
          "Expected Result": "Authentication is successful and a valid session/token is obtained."
        },
        {
          "Step": 2,
          "Step Description": "Send an API request to retrieve or extract data that is restricted for the Consultatore profile.",
          "Expected Result": "API response indicates access is denied (e.g., HTTP 403 Forbidden or equivalent error code/message)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "User Profile Management",
      "Preconditions": "Consultatore API credentials exist. API endpoints for data retrieval/extraction are available.",
      "Execution Mode": "Manual",
      "Functionality": "API-level enforcement of data access restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Consultatore API credentials; restricted data record IDs.",
      "Expected Result": "The API enforces data access restrictions for the Consultatore profile and does not allow bypassing via direct API calls.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.3"
    },
    {
      "Title": "Operator Profile - Data Consultation with View Limitations",
      "ID": "TC-212",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system as an OPERATORE user.",
          "Expected Result": "Login is successful and the OPERATORE dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data consultation section (e.g., customer records, transaction logs).",
          "Expected Result": "Data consultation interface is displayed with available data."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to view data fields or records that are subject to operator profile limitations.",
          "Expected Result": "Only permitted data fields and records are visible; restricted data is hidden or masked."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to access a data field or record that should be restricted for the OPERATORE profile.",
          "Expected Result": "Access is denied or the field/record is not displayed; an appropriate message or indicator is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "User account with OPERATORE profile exists. System contains data with both permitted and restricted fields for OPERATORE.",
      "Execution Mode": "Manual",
      "Functionality": "Data consultation with profile-based view restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "OPERATORE user credentials; sample data with restricted and unrestricted fields.",
      "Expected Result": "OPERATORE can only view data fields and records permitted by their profile; restricted data is not accessible or visible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data consultation limitations, not modification or extraction.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Operator Profile - Data Extraction with Extraction Limitations",
      "ID": "TC-213",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system as an OPERATORE user.",
          "Expected Result": "Login is successful and the OPERATORE dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the data extraction/export section (e.g., reports, data export tools).",
          "Expected Result": "Data extraction interface is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to extract data that is within the allowed scope for the OPERATORE profile.",
          "Expected Result": "Extraction is successful; only permitted data is included in the exported file."
        },
        {
          "Step": 4,
          "Step Description": "Attempt to extract data that is restricted for the OPERATORE profile.",
          "Expected Result": "Extraction is denied or restricted data is excluded from the export; an appropriate message or indicator is shown."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "User account with OPERATORE profile exists. System contains data with both permitted and restricted fields for OPERATORE.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction with profile-based extraction restrictions",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "OPERATORE user credentials; sample data with restricted and unrestricted fields.",
      "Expected Result": "OPERATORE can only extract data permitted by their profile; restricted data is not included in the export.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only data extraction limitations, not consultation or modification.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Operator Profile - Attempt to Perform Partial Modifications (Phase 1 Limitation)",
      "ID": "TC-214",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the system as an OPERATORE user.",
          "Expected Result": "Login is successful and the OPERATORE dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section for managing credit lines (fidi) or PoS block/unblock operations.",
          "Expected Result": "Management interface for credit lines or PoS block/unblock is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to perform a partial modification (e.g., change a credit line, block/unblock a PoS) as an OPERATORE.",
          "Expected Result": "Modification options are disabled, hidden, or an informative message is displayed indicating that partial modifications are not available in Phase 1."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Backoffice",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Operator Profile Management",
      "Preconditions": "User account with OPERATORE profile exists. System is in Phase 1 (partial modifications not yet implemented).",
      "Execution Mode": "Manual",
      "Functionality": "Restriction of partial modifications in Phase 1",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "OPERATORE user credentials; access to credit line and PoS management modules.",
      "Expected Result": "OPERATORE cannot perform partial modifications in Phase 1; system prevents such actions and informs the user accordingly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only the restriction of partial modifications in Phase 1.",
      "_polarion": "RU 4.2.4"
    },
    {
      "Title": "Verify Search Fields Display After Login",
      "ID": "TC-215",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and redirected to the search screen."
        },
        {
          "Step": 2,
          "Step Description": "Observe the search screen for available input fields.",
          "Expected Result": "The following fields are visible and available for input: ID RICE, ZONA RICE, P.IVA, COD FISC Titolare, RAGIONE SOCIALE, DENOMINAZIONE (Insegna), CLUSTER_PV, CANALE I, CANALE II, COMUNE."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Ricerca",
      "Preconditions": "User has valid credentials and access to ZENIT; system is online.",
      "Execution Mode": "Manual",
      "Functionality": "Search Screen Field Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials",
      "Expected Result": "All required search fields are displayed after login.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Single Field Search Functionality",
      "ID": "TC-216",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application.",
          "Expected Result": "User is logged in and search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid value in the 'ID RICE' field only. Leave all other fields blank.",
          "Expected Result": "'ID RICE' field is populated."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System performs the search and displays results matching the entered 'ID RICE'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Ricerca",
      "Preconditions": "User is logged in; search screen is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Single Field Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid 'ID RICE' value (e.g., 12345)",
      "Expected Result": "System returns results matching the single field input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Multiple Fields Search Functionality",
      "ID": "TC-217",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application.",
          "Expected Result": "User is logged in and search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter valid values in 'ZONA RICE' and 'COMUNE' fields. Leave other fields blank.",
          "Expected Result": "'ZONA RICE' and 'COMUNE' fields are populated."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System performs the search and displays results matching both 'ZONA RICE' and 'COMUNE'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Ricerca",
      "Preconditions": "User is logged in; search screen is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Multiple Fields Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid 'ZONA RICE' (e.g., 'North') and 'COMUNE' (e.g., 'Milan') values",
      "Expected Result": "System returns results matching all entered field values.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Search with No Fields Entered (Negative Test)",
      "ID": "TC-218",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application.",
          "Expected Result": "User is logged in and search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Leave all search fields blank.",
          "Expected Result": "No fields are populated."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System displays an error message or prompt indicating that at least one field must be filled to perform a search."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Ricerca",
      "Preconditions": "User is logged in; search screen is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Search Input Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "No input data required",
      "Expected Result": "System prevents search and prompts user to enter at least one field.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Search for Linked PoS (pos collegati)",
      "ID": "TC-219",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application.",
          "Expected Result": "User is logged in and search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid value in a field that supports linked PoS search (e.g., 'CLUSTER_PV').",
          "Expected Result": "Field is populated."
        },
        {
          "Step": 3,
          "Step Description": "Select the 'pos collegati' search type option.",
          "Expected Result": "'pos collegati' option is selected."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System performs the search and displays results for all PoS linked to the entered criteria."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Ricerca",
      "Preconditions": "User is logged in; search screen is accessible; linked PoS data exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS Search",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid 'CLUSTER_PV' value (e.g., 'ClusterA')",
      "Expected Result": "System returns all linked PoS matching the search criteria.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Access to Report Section from Search Screen",
      "ID": "TC-220",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application.",
          "Expected Result": "User is logged in and search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Locate and click on the 'Report' section link or button.",
          "Expected Result": "User is redirected to the 'Report' section."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Ricerca",
      "Preconditions": "User is logged in; search screen is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Navigation to Report Section",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials",
      "Expected Result": "User can access the 'Report' section from the search screen.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only navigation, not report content or functionality.",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Boundary Value Search for Field Lengths",
      "ID": "TC-221",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application.",
          "Expected Result": "User is logged in and search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter maximum allowed characters in the 'RAGIONE SOCIALE' field.",
          "Expected Result": "Field accepts input up to the maximum allowed length."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System performs the search and displays results or a message if no results are found."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Ricerca",
      "Preconditions": "User is logged in; search screen is accessible; field length limits are known.",
      "Execution Mode": "Manual",
      "Functionality": "Field Length Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "'RAGIONE SOCIALE' field with maximum allowed characters (e.g., 50 characters)",
      "Expected Result": "System accepts input up to the maximum length and performs the search correctly.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only one field for boundary value analysis.",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Invalid Data Entry in Search Fields (Negative Test)",
      "ID": "TC-222",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application.",
          "Expected Result": "User is logged in and search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter invalid data in the 'P.IVA' field (e.g., alphabetic characters instead of numbers).",
          "Expected Result": "Field accepts input."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Search' button.",
          "Expected Result": "System displays an error message indicating invalid input for 'P.IVA'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT Ricerca",
      "Preconditions": "User is logged in; search screen is accessible.",
      "Execution Mode": "Manual",
      "Functionality": "Input Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid 'P.IVA' value (e.g., 'ABC123XYZ')",
      "Expected Result": "System prevents search and displays an appropriate error message for invalid input.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only one field for invalid input.",
      "_polarion": "RU 4.2.5"
    },
    {
      "Title": "Verify All Required Fields Are Displayed in Single Search Result Screen",
      "ID": "TC-223",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search using valid search criteria.",
          "Expected Result": "System navigates to the single search result screen."
        },
        {
          "Step": 2,
          "Step Description": "Observe the fields displayed on the result screen.",
          "Expected Result": "All required fields are present: id rice, zona rice, denominazione, località, canale I, canale II, n° awp totale, n° vlt totale, coin in medio, bc medio rolling 12 mesi, bc medio anno in corso, garanzie presenti, am, ka, scoring cerved, n° insoluti rolling 12 mesi, n° inso anno in corso, red list (si/no), credito (riga unica tot con indicazione n° borderò contabile), blocco sollecito (riga unica), fidi impostati per il PoS, consumo dei fidi, cassa disponibile pdv."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated and has access to the single search functionality. At least one valid record exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Display of all required fields in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one record with all fields populated.",
      "Expected Result": "All required fields are displayed on the single search result screen as per the requirement.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify Data Extraction Functionality from Single Search Result Screen",
      "ID": "TC-224",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search to display the result screen with all required fields populated.",
          "Expected Result": "Single search result screen is displayed with all fields populated."
        },
        {
          "Step": 2,
          "Step Description": "Click on the option/button to extract or export the displayed data.",
          "Expected Result": "System prompts for file format selection or directly downloads the data file."
        },
        {
          "Step": 3,
          "Step Description": "Open the extracted file and verify its contents.",
          "Expected Result": "Extracted file contains all the fields and values as displayed on the result screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated and has access to the single search functionality. At least one valid record exists. Data extraction/export functionality is enabled.",
      "Execution Mode": "Manual",
      "Functionality": "Data extraction from single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one record with all fields populated.",
      "Expected Result": "User can extract all displayed data from the single search result screen and the extracted file matches the displayed data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify Field Value Accuracy in Single Search Result Screen",
      "ID": "TC-225",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert or identify a record in the system with known values for all required fields.",
          "Expected Result": "Record with known values is available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Perform a single search to retrieve the specific record.",
          "Expected Result": "Single search result screen displays the record."
        },
        {
          "Step": 3,
          "Step Description": "Compare each field value displayed on the screen with the expected value from the database or source.",
          "Expected Result": "Each field value matches the expected value from the source data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. Test record with known values exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Field value accuracy in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test record with known values for all fields; valid user credentials.",
      "Expected Result": "All field values displayed match the expected values from the source data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify Handling of Missing or Null Field Values in Single Search Result",
      "ID": "TC-226",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert or identify a record in the system with some fields intentionally left null or empty.",
          "Expected Result": "Record with missing/null values is available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Perform a single search to retrieve the specific record.",
          "Expected Result": "Single search result screen displays the record."
        },
        {
          "Step": 3,
          "Step Description": "Observe how the screen displays fields with missing or null values.",
          "Expected Result": "Fields with missing/null values are displayed as empty, with a placeholder (e.g., '-') or as per UI guidelines, without causing errors or layout issues."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. Test record with some fields set to null or empty exists in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of missing/null field values in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test record with some fields set to null or empty; valid user credentials.",
      "Expected Result": "Fields with missing or null values are handled gracefully and displayed according to UI guidelines.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify Red List Field Displays Correct Yes/No Value",
      "ID": "TC-227",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Insert or identify two records: one with 'red list' set to 'yes' and one with 'red list' set to 'no'.",
          "Expected Result": "Two records with different 'red list' values are available for testing."
        },
        {
          "Step": 2,
          "Step Description": "Perform a single search for the record with 'red list' set to 'yes'.",
          "Expected Result": "Single search result screen displays 'red list' as 'yes'."
        },
        {
          "Step": 3,
          "Step Description": "Perform a single search for the record with 'red list' set to 'no'.",
          "Expected Result": "Single search result screen displays 'red list' as 'no'."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. Two test records with different 'red list' values exist in the system.",
      "Execution Mode": "Manual",
      "Functionality": "Red list field display in single search result",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Two test records: one with 'red list' = 'yes', one with 'red list' = 'no'; valid user credentials.",
      "Expected Result": "'Red list' field displays 'yes' or 'no' correctly according to the record's value.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify Exported Data Format and File Integrity",
      "ID": "TC-228",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a single search and extract the displayed data using the export functionality.",
          "Expected Result": "Data file is downloaded or generated."
        },
        {
          "Step": 2,
          "Step Description": "Open the exported file and verify the file format (e.g., CSV, XLSX, PDF).",
          "Expected Result": "File format matches the expected type and is readable."
        },
        {
          "Step": 3,
          "Step Description": "Check that all required fields are present as columns or sections in the exported file.",
          "Expected Result": "All required fields are present in the exported file."
        },
        {
          "Step": 4,
          "Step Description": "Verify that the data in the exported file matches the data displayed on the result screen.",
          "Expected Result": "All data in the exported file matches the displayed data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Single Search Result Screen",
      "Preconditions": "User is authenticated. Export functionality is enabled. At least one record with all fields populated exists.",
      "Execution Mode": "Manual",
      "Functionality": "Exported data format and integrity",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one record with all fields populated.",
      "Expected Result": "Exported file is in the correct format, contains all required fields, and matches the displayed data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.6"
    },
    {
      "Title": "Verify presence and functionality of 'Export to Excel' button in Phase 1",
      "ID": "TC-229",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the report page where the 'Export to Excel' functionality should be available.",
          "Expected Result": "The report page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Locate the 'Export to Excel' button on the page.",
          "Expected Result": "The 'Export to Excel' button is visible and enabled."
        },
        {
          "Step": 3,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "A download of the report in Excel (.xlsx) format is triggered."
        },
        {
          "Step": 4,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The Excel file opens without errors and contains the expected report data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Reportistica",
      "Preconditions": "User is authenticated and has access to the report page. System is in Phase 1 deployment.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; sample report data available.",
      "Expected Result": "The 'Export to Excel' button is present, functional, and the exported file contains correct report data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify absence of 'Gestione PoS' button in Phase 1",
      "ID": "TC-230",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the report page where management buttons are expected.",
          "Expected Result": "The report page loads successfully."
        },
        {
          "Step": 2,
          "Step Description": "Search for the 'Gestione PoS' button on the page.",
          "Expected Result": "The 'Gestione PoS' button is not present on the page."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Gestione PoS",
      "Preconditions": "User is authenticated and has access to the report page. System is in Phase 1 deployment.",
      "Execution Mode": "Manual",
      "Functionality": "Gestione PoS button visibility",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "The 'Gestione PoS' button is not displayed in Phase 1 as per requirements.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify 'Export to Excel' button is disabled when no report data is available",
      "ID": "TC-231",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the report page with no available data (e.g., apply filters that return no results).",
          "Expected Result": "The report page loads and displays a 'no data' message or empty state."
        },
        {
          "Step": 2,
          "Step Description": "Check the state of the 'Export to Excel' button.",
          "Expected Result": "The 'Export to Excel' button is disabled or not clickable."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Reportistica",
      "Preconditions": "User is authenticated and has access to the report page. No report data is available for the current filters.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel button state management",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; report page with no data scenario.",
      "Expected Result": "The 'Export to Excel' button is disabled or hidden when there is no data to export.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Verify error handling when Excel export fails",
      "ID": "TC-232",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Simulate a backend failure or disconnect the network before clicking the 'Export to Excel' button.",
          "Expected Result": "The report page remains loaded, but the export action cannot complete."
        },
        {
          "Step": 2,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "An error message is displayed to the user indicating the export failed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Reportistica",
      "Preconditions": "User is authenticated and has access to the report page. System is in Phase 1 deployment. Network or backend is unavailable for export action.",
      "Execution Mode": "Manual",
      "Functionality": "Export to Excel error handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": false,
      "Dataset": "Valid user credentials; simulate backend or network failure.",
      "Expected Result": "A clear error message is shown if the export to Excel fails due to backend or network issues.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.7"
    },
    {
      "Title": "Display of Multiple PoS Matching Search Criteria",
      "ID": "TC-233",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application and navigate to the search screen.",
          "Expected Result": "The search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter search criteria that will return multiple PoS (excluding geographic search).",
          "Expected Result": "Search criteria are accepted and ready for execution."
        },
        {
          "Step": 3,
          "Step Description": "Execute the search.",
          "Expected Result": "A list of PoS matching the criteria is displayed in tabular form, including closed PoS, with a minimum set of data for each PoS."
        },
        {
          "Step": 4,
          "Step Description": "Observe the total number of PoS displayed on the screen.",
          "Expected Result": "The total number of PoS matching the search is clearly indicated on the screen."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has access to the search functionality. At least two PoS exist in the system matching the test search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Search and Result Display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least two PoS records in the database matching the search criteria, including at least one closed PoS.",
      "Expected Result": "All PoS matching the search criteria (including closed PoS) are displayed in a table with the total count shown. No data aggregation is performed. Geographic search is excluded.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Excel Export of Displayed PoS Data",
      "ID": "TC-234",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS as per TC-001.",
          "Expected Result": "A table of PoS matching the search criteria is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Export to Excel' option/button.",
          "Expected Result": "The system generates and downloads an Excel file containing the currently displayed PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The Excel file contains all PoS data as displayed in the table, with the minimum data set for each PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has performed a search returning multiple PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Excel Export of PoS Data",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Multiple PoS records present in the system matching the search criteria.",
      "Expected Result": "The Excel file accurately reflects the PoS data displayed in the table, with no missing or extra records.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Selection of a Single PoS from Multiple Results and Access to Riscontro Singolo",
      "ID": "TC-235",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS as per TC-001.",
          "Expected Result": "A table of PoS matching the search criteria is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Select a single PoS from the displayed list (e.g., by clicking on a row or a 'Select' button).",
          "Expected Result": "The selected PoS is highlighted or otherwise indicated as selected."
        },
        {
          "Step": 3,
          "Step Description": "Confirm the selection to enter the Riscontro Singolo view for the selected PoS.",
          "Expected Result": "The system navigates to the Riscontro Singolo screen for the selected PoS."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has performed a search returning multiple PoS.",
      "Execution Mode": "Manual",
      "Functionality": "PoS Selection and Riscontro Singolo Access",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Multiple PoS records present in the system matching the search criteria.",
      "Expected Result": "User can select a single PoS from the list and is redirected to the Riscontro Singolo view for that PoS.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Excel Export from Riscontro Singolo View",
      "ID": "TC-236",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "From the list of multiple PoS, select a single PoS to enter the Riscontro Singolo view as per TC-003.",
          "Expected Result": "Riscontro Singolo view for the selected PoS is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Click on the 'Export to Excel' option/button in the Riscontro Singolo view.",
          "Expected Result": "The system generates and downloads an Excel file containing the data for the selected PoS."
        },
        {
          "Step": 3,
          "Step Description": "Open the downloaded Excel file.",
          "Expected Result": "The Excel file contains the data for the selected PoS as displayed in the Riscontro Singolo view."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has accessed the Riscontro Singolo view for a PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Excel Export from Riscontro Singolo",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one PoS record available for selection and export.",
      "Expected Result": "The Excel file accurately reflects the data for the selected PoS as shown in the Riscontro Singolo view.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Exclusion of Geographic Search in Multiple PoS Scenario",
      "ID": "TC-237",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the ZENIT application and navigate to the search screen.",
          "Expected Result": "The search screen is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to perform a search using geographic criteria (e.g., region, city, address).",
          "Expected Result": "The system does not allow or process geographic search criteria in the multiple PoS scenario."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has access to the search functionality.",
      "Execution Mode": "Manual",
      "Functionality": "Search Criteria Validation",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "System configured to restrict geographic search in this scenario.",
      "Expected Result": "Geographic search is excluded; the system prevents or ignores geographic search criteria in the multiple PoS scenario.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Display of Closed PoS in Multiple PoS Results",
      "ID": "TC-238",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS, including at least one closed PoS.",
          "Expected Result": "A table of PoS matching the search criteria is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Review the list to verify the presence of closed PoS.",
          "Expected Result": "Closed PoS are visible in the results table, clearly indicated as closed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and at least one closed PoS exists matching the search criteria.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Closed PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "At least one closed PoS and one open PoS matching the search criteria.",
      "Expected Result": "Closed PoS are displayed in the results table and are clearly marked as closed.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "No Data Aggregation in Multiple PoS Results",
      "ID": "TC-239",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Perform a search that returns multiple PoS.",
          "Expected Result": "A table of PoS matching the search criteria is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Review the displayed data for any aggregation (e.g., totals, averages, grouped data).",
          "Expected Result": "No aggregation of data is present; each PoS is listed individually with its own data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Search",
      "Preconditions": "User is authenticated and has performed a search returning multiple PoS.",
      "Execution Mode": "Manual",
      "Functionality": "Data Presentation (No Aggregation)",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Multiple PoS records present in the system matching the search criteria.",
      "Expected Result": "No data aggregation is performed; each PoS is shown as a separate entry.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.8"
    },
    {
      "Title": "Verify extraction and display of all PoS data including linked PoS by matching fields",
      "ID": "TC-240",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface (e.g., via ID RICE).",
          "Expected Result": "The interface for PoS information retrieval is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid PoS identifier (ID RICE) for a PoS that has at least one linked PoS based on one of the specified fields (e.g., P.IVA POS).",
          "Expected Result": "The system accepts the input and processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system retrieves and displays all data related to the requested PoS as per RU 4.2.6."
        },
        {
          "Step": 4,
          "Step Description": "Review the section displaying linked PoS.",
          "Expected Result": "The system displays a list of all PoS linked to the requested PoS, indicating the specific field (e.g., P.IVA POS) that generated the association for each linked PoS."
        },
        {
          "Step": 5,
          "Step Description": "Verify that each linked PoS is selectable (e.g., via checkbox or clickable row).",
          "Expected Result": "Each linked PoS is selectable by the user."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "At least one PoS exists in the system with one or more linked PoS based on the specified fields. User has access to the PoS information retrieval interface.",
      "Execution Mode": "Manual",
      "Functionality": "Linked PoS extraction and display",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with known linkages via P.IVA POS or other specified fields.",
      "Expected Result": "All data for the requested PoS is displayed, all linked PoS are shown with the association field indicated, and each linked PoS is selectable.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify correct indication of association field for each linked PoS",
      "ID": "TC-241",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface for PoS information retrieval is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid PoS identifier (ID RICE) for a PoS with multiple linked PoS, each linked by a different field (e.g., one by EMAIL, one by RAGIONE SOCIALE).",
          "Expected Result": "The system accepts the input and processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system retrieves and displays all data related to the requested PoS."
        },
        {
          "Step": 4,
          "Step Description": "Review the list of linked PoS and the indicated association field for each.",
          "Expected Result": "For each linked PoS, the system clearly indicates which field (from the specified list) generated the association."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "PoS records exist with multiple linked PoS, each linked by a different field from the specified list.",
      "Execution Mode": "Manual",
      "Functionality": "Association field indication for linked PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with links via different fields (e.g., EMAIL, RAGIONE SOCIALE).",
      "Expected Result": "Each linked PoS displays the correct association field used for linkage.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify system behavior when no linked PoS are found",
      "ID": "TC-242",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface for PoS information retrieval is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid PoS identifier (ID RICE) for a PoS that has no linked PoS based on the specified fields.",
          "Expected Result": "The system accepts the input and processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system retrieves and displays all data related to the requested PoS."
        },
        {
          "Step": 4,
          "Step Description": "Review the section for linked PoS.",
          "Expected Result": "The system indicates that no linked PoS are found (e.g., displays a message such as 'No linked PoS found')."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "At least one PoS exists in the system with no linked PoS based on the specified fields.",
      "Execution Mode": "Manual",
      "Functionality": "Handling of PoS with no linked PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record with no linkages via any of the specified fields.",
      "Expected Result": "System displays all data for the requested PoS and indicates that no linked PoS are found.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify selection functionality for each linked PoS",
      "ID": "TC-243",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface for PoS information retrieval is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter a valid PoS identifier (ID RICE) for a PoS with multiple linked PoS.",
          "Expected Result": "The system accepts the input and processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system retrieves and displays all data related to the requested PoS, including the list of linked PoS."
        },
        {
          "Step": 4,
          "Step Description": "Select one or more linked PoS from the displayed list.",
          "Expected Result": "The system allows the user to select one or more linked PoS (e.g., via checkbox or row selection)."
        },
        {
          "Step": 5,
          "Step Description": "Verify that the selection is visually indicated and can be used for further actions (if applicable).",
          "Expected Result": "Selected linked PoS are visually indicated as selected and can be used for subsequent operations."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "PoS records exist with multiple linked PoS. User has access to the PoS information retrieval interface.",
      "Execution Mode": "Manual",
      "Functionality": "Selection of linked PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS records with multiple linked PoS.",
      "Expected Result": "User can select one or more linked PoS from the list, and selection is clearly indicated.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify system behavior with invalid PoS identifier input",
      "ID": "TC-244",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Access the PoS information request interface.",
          "Expected Result": "The interface for PoS information retrieval is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Enter an invalid or non-existent PoS identifier (ID RICE).",
          "Expected Result": "The system accepts the input and processes the request."
        },
        {
          "Step": 3,
          "Step Description": "Submit the request to retrieve PoS information.",
          "Expected Result": "The system displays an appropriate error message indicating that the PoS was not found and does not display any PoS or linked PoS data."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Low",
      "Test Stage": "UAT",
      "Reference System": "PoS Management",
      "Preconditions": "No PoS exists in the system with the entered identifier.",
      "Execution Mode": "Manual",
      "Functionality": "Error handling for invalid PoS identifier",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Invalid or non-existent PoS identifier.",
      "Expected Result": "System displays an error message for invalid PoS identifier and does not show any PoS or linked PoS data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.2.9"
    },
    {
      "Title": "Verify presence and functionality of 'Export to Excel' button for PoS report in ZENIT (Phase 1)",
      "ID": "TC-245",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in and lands on the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the section related to PoS reports as per the application menu.",
          "Expected Result": "PoS reports section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Check for the presence of the 'Export to Excel' button within the PoS reports section.",
          "Expected Result": "'Export to Excel' button is visible and enabled."
        },
        {
          "Step": 4,
          "Step Description": "Click the 'Export to Excel' button.",
          "Expected Result": "System generates and downloads the PoS report in Excel (.xlsx) format immediately."
        },
        {
          "Step": 5,
          "Step Description": "Open the downloaded Excel file and verify its content structure (e.g., headers, data rows).",
          "Expected Result": "Excel file opens successfully and contains the expected PoS report data."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Report Extraction",
      "Preconditions": "User has valid credentials and access to ZENIT; at least one PoS report is available for extraction.",
      "Execution Mode": "Manual",
      "Functionality": "PoS report extraction to Excel",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; at least one PoS report present in the system.",
      "Expected Result": "The 'Export to Excel' button is present, functional, and generates a correct Excel file with PoS report data.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers only Phase 1 functionality (Excel export).",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify absence of other report and PoS management buttons in Phase 1",
      "ID": "TC-246",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS reports section.",
          "Expected Result": "PoS reports section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Inspect the interface for any buttons related to additional report extraction formats or PoS management (other than 'Export to Excel').",
          "Expected Result": "No buttons for other report formats or PoS management are present in Phase 1."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Report Extraction",
      "Preconditions": "User has valid credentials and access to ZENIT.",
      "Execution Mode": "Manual",
      "Functionality": "UI compliance with Phase 1 scope",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials.",
      "Expected Result": "Only the 'Export to Excel' button is present; no other report or PoS management buttons are visible in Phase 1.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Ensures Phase 1 scope limitation is respected.",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify error handling when no PoS report data is available for export",
      "ID": "TC-247",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Login to the ZENIT application with valid credentials.",
          "Expected Result": "User is successfully logged in."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the PoS reports section where no report data is available (simulate or ensure empty dataset).",
          "Expected Result": "PoS reports section is displayed, but no data is present."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to click the 'Export to Excel' button.",
          "Expected Result": "System displays an appropriate message indicating that there is no data to export, and no file is generated."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Desktop",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "ZENIT - PoS Report Extraction",
      "Preconditions": "User has valid credentials; PoS reports dataset is empty or filtered to return no results.",
      "Execution Mode": "Manual",
      "Functionality": "PoS report export error handling",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials; PoS reports dataset empty.",
      "Expected Result": "System prevents export and informs the user when no data is available for export.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "Covers error scenario for export functionality.",
      "_polarion": "RU 4.2.10"
    },
    {
      "Title": "Verify Access to Data History Section",
      "ID": "TC-248",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with valid user credentials.",
          "Expected Result": "User is successfully logged in and navigated to the main dashboard."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' (Data History) section from the main menu or dashboard.",
          "Expected Result": "The 'Storico Dati' section is displayed to the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User account exists and is active. User has access rights to view data history.",
      "Execution Mode": "Manual",
      "Functionality": "Access to Data History",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Valid user credentials with data history available.",
      "Expected Result": "User is able to access the 'Storico Dati' section without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Display of Data History Records",
      "ID": "TC-249",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with a user account that has historical data.",
          "Expected Result": "User is logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the list of historical data records displayed.",
          "Expected Result": "All available historical data records for the user are displayed in a list or table format."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User account with historical data exists.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Data History Records",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with at least one historical data record.",
      "Expected Result": "Historical data records are correctly displayed to the user.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Data History Section When No Records Exist",
      "ID": "TC-250",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with a user account that has no historical data.",
          "Expected Result": "User is logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Observe the message or display when no historical data is present.",
          "Expected Result": "A clear message is shown indicating that no historical data is available for the user."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User account with no historical data exists.",
      "Execution Mode": "Manual",
      "Functionality": "Display of Empty Data History",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with no historical data records.",
      "Expected Result": "User is informed that no historical data is available.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Data History Pagination and Navigation",
      "ID": "TC-251",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with a user account that has more historical data records than can be displayed on a single page (e.g., more than 20 records).",
          "Expected Result": "User is logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed with the first page of records."
        },
        {
          "Step": 3,
          "Step Description": "Use the pagination controls to navigate to the next page of records.",
          "Expected Result": "The next set of historical data records is displayed."
        },
        {
          "Step": 4,
          "Step Description": "Navigate back to the previous page using the pagination controls.",
          "Expected Result": "The previous set of historical data records is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User account with more than one page of historical data records exists.",
      "Execution Mode": "Manual",
      "Functionality": "Pagination in Data History",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with more than 20 historical data records.",
      "Expected Result": "User can navigate through multiple pages of historical data records without errors.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Data History Filtering by Date Range",
      "ID": "TC-252",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with a user account that has historical data spanning multiple dates.",
          "Expected Result": "User is logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Navigate to the 'Storico Dati' section.",
          "Expected Result": "The 'Storico Dati' section is displayed."
        },
        {
          "Step": 3,
          "Step Description": "Select a specific date range using the filter controls.",
          "Expected Result": "Date range filter is applied."
        },
        {
          "Step": 4,
          "Step Description": "Observe the displayed historical data records.",
          "Expected Result": "Only records within the selected date range are displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User account with historical data across multiple dates exists.",
      "Execution Mode": "Manual",
      "Functionality": "Filtering Data History by Date",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account with historical data from different dates.",
      "Expected Result": "Historical data records are filtered correctly according to the selected date range.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Unauthorized Access to Data History Section",
      "ID": "TC-253",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Log in to the application with a user account that does not have permission to access the 'Storico Dati' section.",
          "Expected Result": "User is logged in and main dashboard is displayed."
        },
        {
          "Step": 2,
          "Step Description": "Attempt to navigate to the 'Storico Dati' section.",
          "Expected Result": "Access is denied and an appropriate error message is displayed."
        }
      ],
      "Test Group": "Desktop",
      "Channel": "Web",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Storico Dati Module",
      "Preconditions": "User account without permission to access data history exists.",
      "Execution Mode": "Manual",
      "Functionality": "Access Control for Data History",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "User account without access rights to data history.",
      "Expected Result": "User is prevented from accessing the 'Storico Dati' section and receives a clear error message.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "4.3"
    },
    {
      "Title": "Verify Daily Data Snapshot Archiving at 00:00",
      "ID": "TC-254",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Ensure the system clock is set to 23:59 on a day with active data transactions.",
          "Expected Result": "System is ready to transition to the next day."
        },
        {
          "Step": 2,
          "Step Description": "Wait until the system time reaches 00:00.",
          "Expected Result": "System triggers the daily snapshot process."
        },
        {
          "Step": 3,
          "Step Description": "Check the archive for a new snapshot corresponding to the previous day.",
          "Expected Result": "A new data snapshot for the previous day is present in the archive."
        },
        {
          "Step": 4,
          "Step Description": "Compare the archived snapshot with the data present at 23:59 of the previous day.",
          "Expected Result": "Archived snapshot accurately reflects the data state as of 23:59 of the previous day."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "System is live and operational. Data transactions have occurred during the day. Archiving schedule is configured as per requirements.",
      "Execution Mode": "Manual",
      "Functionality": "Daily data snapshot archiving",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Test data for PoS and transactions present in the system for the day.",
      "Expected Result": "System creates and stores a daily snapshot of all required data at 00:00, accurately reflecting the previous day's state.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Retention and Deletion for PoS Without Pending Issues After Contract Termination",
      "ID": "TC-255",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with no pending issues or disputes and an expired contract.",
          "Expected Result": "PoS with expired contract and no pending issues is identified."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data deletion process for the identified PoS.",
          "Expected Result": "System initiates the deletion process for the PoS data."
        },
        {
          "Step": 3,
          "Step Description": "Check the archive for the presence of the PoS data after deletion.",
          "Expected Result": "PoS data is no longer present in the archive."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "PoS exists in the system with no pending issues or disputes. Contract for PoS has expired. Data archiving is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data retention and deletion post-contract",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record with expired contract and no pending issues.",
      "Expected Result": "System deletes data for PoS with expired contracts and no pending issues, ensuring data is no longer accessible.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Retention for PoS With Pending Issues After Contract Termination",
      "ID": "TC-256",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify a PoS with pending issues or disputes and an expired contract.",
          "Expected Result": "PoS with expired contract and pending issues is identified."
        },
        {
          "Step": 2,
          "Step Description": "Trigger the data deletion process for the identified PoS.",
          "Expected Result": "System evaluates the retention policy for PoS with pending issues."
        },
        {
          "Step": 3,
          "Step Description": "Check the archive for the presence of the PoS data after attempted deletion.",
          "Expected Result": "PoS data is retained in the archive as per the 10-year retention policy."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "PoS exists in the system with pending issues or disputes. Contract for PoS has expired. Data archiving is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Data retention for PoS with pending issues",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "PoS record with expired contract and pending issues.",
      "Expected Result": "System retains data for PoS with pending issues for 10 years from the last accounting movement, as required.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Accessibility for Future Queries on Archived Data",
      "ID": "TC-257",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Archive data for multiple PoS and products over several days.",
          "Expected Result": "Archived data is available for multiple PoS and products."
        },
        {
          "Step": 2,
          "Step Description": "Perform a query to retrieve data for a specific PoS and product on a particular day of the week.",
          "Expected Result": "System returns the correct archived data for the specified PoS, product, and day."
        },
        {
          "Step": 3,
          "Step Description": "Perform a query to retrieve the number of unpaid items (insoluti) for a PoS on a specific day.",
          "Expected Result": "System returns the correct count of unpaid items for the specified PoS and day."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "Archived data exists for multiple PoS and products over several days. Query interface is available.",
      "Execution Mode": "Manual",
      "Functionality": "Data accessibility for future queries",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Archived data for multiple PoS, products, and days; query parameters for PoS, product, and date.",
      "Expected Result": "System allows querying of archived data by PoS, product, and date, returning accurate results for each query.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Archiving Frequency as Defined in 'ZENIT - elenco dati' Excel File",
      "ID": "TC-258",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Open the 'ZENIT - elenco dati' Excel file and identify data fields and their required archiving frequency.",
          "Expected Result": "List of data fields and their archiving frequencies is available."
        },
        {
          "Step": 2,
          "Step Description": "Monitor the archiving process for each data field over a defined period.",
          "Expected Result": "Archiving process is executed as per the defined frequency for each data field."
        },
        {
          "Step": 3,
          "Step Description": "Compare the archived data with the expected frequency from the Excel file.",
          "Expected Result": "Archived data matches the frequency specified in the Excel file for each field."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "'ZENIT - elenco dati' Excel file is available and up to date. Data archiving process is operational.",
      "Execution Mode": "Manual",
      "Functionality": "Archiving frequency compliance",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "'ZENIT - elenco dati' Excel file; system data for archiving.",
      "Expected Result": "System archives each data field at the frequency specified in the 'ZENIT - elenco dati' Excel file.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Verify Data Visibility Restrictions for Archived Data Based on User Profile",
      "ID": "TC-259",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Identify archived data for PoS with pending issues and expired contracts.",
          "Expected Result": "Archived data for PoS with pending issues is available."
        },
        {
          "Step": 2,
          "Step Description": "Log in as a user with restricted profile access.",
          "Expected Result": "User is authenticated with restricted profile."
        },
        {
          "Step": 3,
          "Step Description": "Attempt to access archived data for the identified PoS.",
          "Expected Result": "System restricts access to certain data fields as per profile permissions."
        },
        {
          "Step": 4,
          "Step Description": "Log in as a user with full access profile.",
          "Expected Result": "User is authenticated with full access profile."
        },
        {
          "Step": 5,
          "Step Description": "Attempt to access the same archived data for the identified PoS.",
          "Expected Result": "System allows access to all permitted data fields for the full access profile."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Data Archiving Module",
      "Preconditions": "Archived data for PoS with pending issues exists. User profiles with different access levels are configured.",
      "Execution Mode": "Manual",
      "Functionality": "Data visibility restrictions by profile",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Archived data for PoS with pending issues; user accounts with different profiles.",
      "Expected Result": "System restricts or allows access to archived data based on user profile permissions as defined.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.1"
    },
    {
      "Title": "Importazione manuale file PoS fuori rete con dati completi e validi",
      "ID": "TC-260",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con tutti i campi richiesti (ID RICE, ZONA RICE, DENOMINAZIONE, RAGIONE SOCIALE, INDIRIZZO, COMUNE, P.IVA, COD. FISCALE, IMPORTO CREDITO, STATUS, PASSAGGIO A PERDITA) valorizzati con dati validi per almeno un record.",
          "Expected Result": "Il file è pronto per l'importazione e rispetta il formato richiesto."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit come utente autorizzato all'importazione dati.",
          "Expected Result": "Accesso al sistema Zenit effettuato con successo."
        },
        {
          "Step": 3,
          "Step Description": "Navigare alla funzionalità di importazione dati PoS fuori rete.",
          "Expected Result": "La schermata di importazione è visualizzata."
        },
        {
          "Step": 4,
          "Step Description": "Caricare il file preparato e avviare l'importazione.",
          "Expected Result": "Il sistema accetta il file e avvia il processo di importazione."
        },
        {
          "Step": 5,
          "Step Description": "Verificare che il sistema confermi l'importazione avvenuta senza errori.",
          "Expected Result": "Messaggio di conferma importazione completata con successo."
        },
        {
          "Step": 6,
          "Step Description": "Verificare che i dati importati siano correttamente visualizzati e corrispondano a quelli presenti nel file.",
          "Expected Result": "Tutti i dati dei PoS importati sono corretti e completi nel sistema Zenit."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Importazione dati PoS fuori rete",
      "Preconditions": "Utente con permessi di importazione; file di importazione conforme e disponibile.",
      "Execution Mode": "Manual",
      "Functionality": "Importazione dati PoS fuori rete da file manuale",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con dati validi per tutti i campi richiesti.",
      "Expected Result": "Il sistema importa correttamente tutti i dati dei PoS fuori rete dal file manuale senza errori.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Gestione errore importazione file PoS con campi obbligatori mancanti",
      "ID": "TC-261",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con almeno un record in cui uno o più campi obbligatori (es. ID RICE, IMPORTO CREDITO) sono vuoti o mancanti.",
          "Expected Result": "Il file contiene dati incompleti."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit come utente autorizzato.",
          "Expected Result": "Accesso effettuato con successo."
        },
        {
          "Step": 3,
          "Step Description": "Navigare alla funzionalità di importazione dati PoS fuori rete.",
          "Expected Result": "La schermata di importazione è visualizzata."
        },
        {
          "Step": 4,
          "Step Description": "Caricare il file preparato e avviare l'importazione.",
          "Expected Result": "Il sistema rileva la presenza di campi obbligatori mancanti."
        },
        {
          "Step": 5,
          "Step Description": "Verificare che il sistema blocchi l'importazione e mostri un messaggio di errore dettagliato.",
          "Expected Result": "Messaggio di errore che indica i campi mancanti e nessun dato viene importato."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "High",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Importazione dati PoS fuori rete",
      "Preconditions": "Utente con permessi di importazione; file di importazione con campi obbligatori mancanti.",
      "Execution Mode": "Manual",
      "Functionality": "Validazione campi obbligatori in importazione dati PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con almeno un campo obbligatorio mancante.",
      "Expected Result": "Il sistema blocca l'importazione e segnala chiaramente i campi mancanti.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Modifica dati PoS importati dopo caricamento manuale",
      "ID": "TC-262",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Importare un file valido di PoS fuori rete seguendo la procedura standard.",
          "Expected Result": "I dati vengono importati correttamente."
        },
        {
          "Step": 2,
          "Step Description": "Accedere alla sezione di gestione/modifica dei dati PoS importati.",
          "Expected Result": "La lista dei PoS importati è visualizzata."
        },
        {
          "Step": 3,
          "Step Description": "Selezionare un record e modificare uno o più campi (es. STATUS, IMPORTO CREDITO).",
          "Expected Result": "I campi selezionati sono editabili."
        },
        {
          "Step": 4,
          "Step Description": "Salvare le modifiche effettuate.",
          "Expected Result": "Il sistema conferma il salvataggio delle modifiche."
        },
        {
          "Step": 5,
          "Step Description": "Verificare che le modifiche siano correttamente salvate e visualizzate.",
          "Expected Result": "I dati aggiornati sono correttamente visualizzati nel sistema Zenit."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Gestione dati PoS fuori rete",
      "Preconditions": "Almeno un record PoS fuori rete importato correttamente.",
      "Execution Mode": "Manual",
      "Functionality": "Modifica dati PoS fuori rete importati",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "Record PoS importato da file manuale.",
      "Expected Result": "Le modifiche ai dati PoS importati sono salvate e visualizzate correttamente.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Importazione file PoS con valori non validi nei campi numerici o booleani",
      "ID": "TC-263",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con almeno un record in cui il campo IMPORTO CREDITO contiene un valore non numerico e/o il campo PASSAGGIO A PERDITA contiene un valore diverso da 'si' o 'no'.",
          "Expected Result": "Il file contiene valori non validi nei campi specificati."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit come utente autorizzato.",
          "Expected Result": "Accesso effettuato con successo."
        },
        {
          "Step": 3,
          "Step Description": "Navigare alla funzionalità di importazione dati PoS fuori rete.",
          "Expected Result": "La schermata di importazione è visualizzata."
        },
        {
          "Step": 4,
          "Step Description": "Caricare il file preparato e avviare l'importazione.",
          "Expected Result": "Il sistema rileva i valori non validi nei campi numerici o booleani."
        },
        {
          "Step": 5,
          "Step Description": "Verificare che il sistema blocchi l'importazione e mostri un messaggio di errore specifico.",
          "Expected Result": "Messaggio di errore che indica i valori non validi e nessun dato viene importato."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Importazione dati PoS fuori rete",
      "Preconditions": "Utente con permessi di importazione; file di importazione con valori non validi nei campi numerici/booleani.",
      "Execution Mode": "Manual",
      "Functionality": "Validazione valori campi numerici/booleani in importazione dati PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con valori non numerici in IMPORTO CREDITO e/o valori diversi da 'si/no' in PASSAGGIO A PERDITA.",
      "Expected Result": "Il sistema blocca l'importazione e segnala chiaramente i valori non validi nei campi.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    },
    {
      "Title": "Importazione file PoS con record duplicati (stesso ID RICE)",
      "ID": "TC-264",
      "Steps": [
        {
          "Step": 1,
          "Step Description": "Preparare un file di importazione con almeno due record aventi lo stesso valore di ID RICE.",
          "Expected Result": "Il file contiene record duplicati per ID RICE."
        },
        {
          "Step": 2,
          "Step Description": "Accedere al sistema Zenit come utente autorizzato.",
          "Expected Result": "Accesso effettuato con successo."
        },
        {
          "Step": 3,
          "Step Description": "Navigare alla funzionalità di importazione dati PoS fuori rete.",
          "Expected Result": "La schermata di importazione è visualizzata."
        },
        {
          "Step": 4,
          "Step Description": "Caricare il file preparato e avviare l'importazione.",
          "Expected Result": "Il sistema rileva la presenza di record duplicati."
        },
        {
          "Step": 5,
          "Step Description": "Verificare che il sistema blocchi l'importazione o gestisca i duplicati secondo le specifiche (es. importazione solo del primo record, segnalazione di errore, ecc.).",
          "Expected Result": "Il sistema segnala la presenza di duplicati e si comporta secondo le specifiche (blocco o importazione parziale)."
        }
      ],
      "Test Group": "Backend",
      "Channel": "Backend",
      "Device": "Computer",
      "Priority": "Medium",
      "Test Stage": "UAT",
      "Reference System": "Zenit - Importazione dati PoS fuori rete",
      "Preconditions": "Utente con permessi di importazione; file di importazione con record duplicati.",
      "Execution Mode": "Manual",
      "Functionality": "Gestione duplicati in importazione dati PoS",
      "Test Type": "functional",
      "No Regression Test": true,
      "Automation": true,
      "Dataset": "File CSV/XLSX con almeno due record con stesso ID RICE.",
      "Expected Result": "Il sistema segnala e gestisce correttamente i record duplicati in fase di importazione.",
      "Country": "Italy",
      "Type": "Test Case",
      "Partial Coverage Description": "",
      "_polarion": "RU 4.3.2"
    }
  ],
  "total_count": 264
}